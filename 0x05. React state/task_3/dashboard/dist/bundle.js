/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={272:(e,t,n)=>{"use strict";var r=n(723),o=[],a=[],l=r.makeRequestCallFromTimer((function(){if(a.length)throw a.shift()}));function i(e){var t;(t=o.length?o.pop():new u).task=e,r(t)}function u(){this.task=null}e.exports=i,u.prototype.call=function(){try{this.task.call()}catch(e){i.onerror?i.onerror(e):(a.push(e),l())}finally{this.task=null,o[o.length]=this}}},723:(e,t,n)=>{"use strict";function r(e){a.length||o(),a[a.length]=e}e.exports=r;var o,a=[],l=0;function i(){for(;l<a.length;){var e=l;if(l+=1,a[e].call(),l>1024){for(var t=0,n=a.length-l;t<n;t++)a[t]=a[t+l];a.length-=l,l=0}}a.length=0,l=0}var u,c,s,f=void 0!==n.g?n.g:self,d=f.MutationObserver||f.WebKitMutationObserver;function p(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"==typeof d?(u=1,c=new d(i),s=document.createTextNode(""),c.observe(s,{characterData:!0}),o=function(){u=-u,s.data=u}):o=p(i),r.requestFlush=o,r.makeRequestCallFromTimer=p},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function o(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,a){for(var l,i,u=o(e),c=1;c<arguments.length;c++){for(var s in l=Object(arguments[c]))n.call(l,s)&&(u[s]=l[s]);if(t){i=t(l);for(var f=0;f<i.length;f++)r.call(l,i[f])&&(u[i[f]]=l[i[f]])}}return u}},703:(e,t,n)=>{"use strict";var r=n(414);function o(){}function a(){}a.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,a,l){if(l!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:a,resetWarningCache:o};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),o=n(418),a=n(840);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));var i=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function y(e,t,n,r,o,a,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a,this.removeEmptyString=l}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new y(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new y(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new y(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new y(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new y(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new y(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new y(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new y(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new y(e,5,!1,e.toLowerCase(),null,!1,!1)}));var v=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var o=g.hasOwnProperty(t)?g[t]:null;(null!==o?0===o.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(v,b);g[t]=new y(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(v,b);g[t]=new y(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(v,b);g[t]=new y(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new y(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new y("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new y(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,S=60103,E=60106,x=60107,_=60108,C=60114,O=60109,P=60110,N=60112,T=60113,R=60120,z=60115,M=60116,L=60121,j=60128,D=60129,I=60130,F=60131;if("function"==typeof Symbol&&Symbol.for){var A=Symbol.for;S=A("react.element"),E=A("react.portal"),x=A("react.fragment"),_=A("react.strict_mode"),C=A("react.profiler"),O=A("react.provider"),P=A("react.context"),N=A("react.forward_ref"),T=A("react.suspense"),R=A("react.suspense_list"),z=A("react.memo"),M=A("react.lazy"),L=A("react.block"),A("react.scope"),j=A("react.opaque.id"),D=A("react.debug_trace_mode"),I=A("react.offscreen"),F=A("react.legacy_hidden")}var W,B="function"==typeof Symbol&&Symbol.iterator;function U(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=B&&e[B]||e["@@iterator"])?e:null}function H(e){if(void 0===W)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);W=t&&t[1]||""}return"\n"+W+e}var V=!1;function $(e,t){if(!e||V)return"";V=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var o=e.stack.split("\n"),a=r.stack.split("\n"),l=o.length-1,i=a.length-1;1<=l&&0<=i&&o[l]!==a[i];)i--;for(;1<=l&&0<=i;l--,i--)if(o[l]!==a[i]){if(1!==l||1!==i)do{if(l--,0>--i||o[l]!==a[i])return"\n"+o[l].replace(" at new "," at ")}while(1<=l&&0<=i);break}}}finally{V=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?H(e):""}function Q(e){switch(e.tag){case 5:return H(e.type);case 16:return H("Lazy");case 13:return H("Suspense");case 19:return H("SuspenseList");case 0:case 2:case 15:return $(e.type,!1);case 11:return $(e.type.render,!1);case 22:return $(e.type._render,!1);case 1:return $(e.type,!0);default:return""}}function q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case E:return"Portal";case C:return"Profiler";case _:return"StrictMode";case T:return"Suspense";case R:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case P:return(e.displayName||"Context")+".Consumer";case O:return(e._context.displayName||"Context")+".Provider";case N:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case z:return q(e.type);case L:return q(e._render);case M:t=e._payload,e=e._init;try{return q(e(t))}catch(e){}}return null}function K(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function G(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var t=G(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=G(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=K(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=K(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?oe(e,t.type,n):t.hasOwnProperty("defaultValue")&&oe(e,t.type,K(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function oe(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ae(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function le(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+K(n),t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:K(n)}}function ce(e,t){var n=K(t.value),r=K(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ye=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ge(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ve={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ve.hasOwnProperty(e)&&ve[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(ve).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ve[t]=ve[e]}))}));var Se=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ee(e,t){if(t){if(Se[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Oe=null,Pe=null;function Ne(e){if(e=Jr(e)){if("function"!=typeof Ce)throw Error(l(280));var t=e.stateNode;t&&(t=to(t),Ce(e.stateNode,e.type,t))}}function Te(e){Oe?Pe?Pe.push(e):Pe=[e]:Oe=e}function Re(){if(Oe){var e=Oe,t=Pe;if(Pe=Oe=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function ze(e,t){return e(t)}function Me(e,t,n,r,o){return e(t,n,r,o)}function Le(){}var je=ze,De=!1,Ie=!1;function Fe(){null===Oe&&null===Pe||(Le(),Re())}function Ae(e,t){var n=e.stateNode;if(null===n)return null;var r=to(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var We=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){We=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(me){We=!1}function Ue(e,t,n,r,o,a,l,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var He=!1,Ve=null,$e=!1,Qe=null,qe={onError:function(e){He=!0,Ve=e}};function Ke(e,t,n,r,o,a,l,i,u){He=!1,Ve=null,Ue.apply(qe,arguments)}function Ge(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ye(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Xe(e){if(Ge(e)!==e)throw Error(l(188))}function Ze(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ge(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var o=n.return;if(null===o)break;var a=o.alternate;if(null===a){if(null!==(r=o.return)){n=r;continue}break}if(o.child===a.child){for(a=o.child;a;){if(a===n)return Xe(o),e;if(a===r)return Xe(o),t;a=a.sibling}throw Error(l(188))}if(n.return!==r.return)n=o,r=a;else{for(var i=!1,u=o.child;u;){if(u===n){i=!0,n=o,r=a;break}if(u===r){i=!0,r=o,n=a;break}u=u.sibling}if(!i){for(u=a.child;u;){if(u===n){i=!0,n=a,r=o;break}if(u===r){i=!0,r=a,n=o;break}u=u.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Je(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,ot=!1,at=[],lt=null,it=null,ut=null,ct=new Map,st=new Map,ft=[],dt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,o){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:o,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":lt=null;break;case"dragenter":case"dragleave":it=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function mt(e,t,n,r,o,a){return null===e||e.nativeEvent!==a?(e=pt(t,n,r,o,a),null!==t&&null!==(t=Jr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==o&&-1===t.indexOf(o)&&t.push(o),e)}function yt(e){var t=Zr(e.target);if(null!==t){var n=Ge(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ye(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){a.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function gt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Jr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function vt(e,t,n){gt(e)&&n.delete(t)}function bt(){for(ot=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=Jr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Zt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==lt&&gt(lt)&&(lt=null),null!==it&&gt(it)&&(it=null),null!==ut&&gt(ut)&&(ut=null),ct.forEach(vt),st.forEach(vt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,ot||(ot=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,bt)))}function kt(e){function t(t){return wt(t,e)}if(0<at.length){wt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==lt&&wt(lt,e),null!==it&&wt(it,e),null!==ut&&wt(ut,e),ct.forEach(t),st.forEach(t),n=0;n<ft.length;n++)(r=ft[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ft.length&&null===(n=ft[0]).blockedOn;)yt(n),null===n.blockedOn&&ft.shift()}function St(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Et={animationend:St("Animation","AnimationEnd"),animationiteration:St("Animation","AnimationIteration"),animationstart:St("Animation","AnimationStart"),transitionend:St("Transition","TransitionEnd")},xt={},_t={};function Ct(e){if(xt[e])return xt[e];if(!Et[e])return e;var t,n=Et[e];for(t in n)if(n.hasOwnProperty(t)&&t in _t)return xt[e]=n[t];return e}f&&(_t=document.createElement("div").style,"AnimationEvent"in window||(delete Et.animationend.animation,delete Et.animationiteration.animation,delete Et.animationstart.animation),"TransitionEvent"in window||delete Et.transitionend.transition);var Ot=Ct("animationend"),Pt=Ct("animationiteration"),Nt=Ct("animationstart"),Tt=Ct("transitionend"),Rt=new Map,zt=new Map,Mt=["abort","abort",Ot,"animationEnd",Pt,"animationIteration",Nt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Tt,"transitionEnd","waiting","waiting"];function Lt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],o=e[n+1];o="on"+(o[0].toUpperCase()+o.slice(1)),zt.set(r,t),Rt.set(r,o),c(o,[r])}}(0,a.unstable_now)();var jt=8;function Dt(e){if(0!=(1&e))return jt=15,1;if(0!=(2&e))return jt=14,2;if(0!=(4&e))return jt=13,4;var t=24&e;return 0!==t?(jt=12,t):0!=(32&e)?(jt=11,32):0!=(t=192&e)?(jt=10,t):0!=(256&e)?(jt=9,256):0!=(t=3584&e)?(jt=8,t):0!=(4096&e)?(jt=7,4096):0!=(t=4186112&e)?(jt=6,t):0!=(t=62914560&e)?(jt=5,t):67108864&e?(jt=4,67108864):0!=(134217728&e)?(jt=3,134217728):0!=(t=805306368&e)?(jt=2,t):0!=(1073741824&e)?(jt=1,1073741824):(jt=8,e)}function It(e,t){var n=e.pendingLanes;if(0===n)return jt=0;var r=0,o=0,a=e.expiredLanes,l=e.suspendedLanes,i=e.pingedLanes;if(0!==a)r=a,o=jt=15;else if(0!=(a=134217727&n)){var u=a&~l;0!==u?(r=Dt(u),o=jt):0!=(i&=a)&&(r=Dt(i),o=jt)}else 0!=(a=n&~l)?(r=Dt(a),o=jt):0!==i&&(r=Dt(i),o=jt);if(0===r)return 0;if(r=n&((0>(r=31-Ht(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&l)){if(Dt(t),o<=jt)return t;jt=o}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)o=1<<(n=31-Ht(t)),r|=e[n],t&=~o;return r}function Ft(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function At(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Wt(24&~t))?At(10,t):e;case 10:return 0===(e=Wt(192&~t))?At(8,t):e;case 8:return 0===(e=Wt(3584&~t))&&0===(e=Wt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Wt(805306368&~t))&&(t=268435456),t}throw Error(l(358,e))}function Wt(e){return e&-e}function Bt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ut(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Ht(t)]=n}var Ht=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Vt(e)/$t|0)|0},Vt=Math.log,$t=Math.LN2,Qt=a.unstable_UserBlockingPriority,qt=a.unstable_runWithPriority,Kt=!0;function Gt(e,t,n,r){De||Le();var o=Xt,a=De;De=!0;try{Me(o,e,t,n,r)}finally{(De=a)||Fe()}}function Yt(e,t,n,r){qt(Qt,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){var o;if(Kt)if((o=0==(4&t))&&0<at.length&&-1<dt.indexOf(e))e=pt(null,e,t,n,r),at.push(e);else{var a=Zt(e,t,n,r);if(null===a)o&&ht(e,r);else{if(o){if(-1<dt.indexOf(e))return e=pt(a,e,t,n,r),void at.push(e);if(function(e,t,n,r,o){switch(t){case"focusin":return lt=mt(lt,e,t,n,r,o),!0;case"dragenter":return it=mt(it,e,t,n,r,o),!0;case"mouseover":return ut=mt(ut,e,t,n,r,o),!0;case"pointerover":var a=o.pointerId;return ct.set(a,mt(ct.get(a)||null,e,t,n,r,o)),!0;case"gotpointercapture":return a=o.pointerId,st.set(a,mt(st.get(a)||null,e,t,n,r,o)),!0}return!1}(a,e,t,n,r))return;ht(e,r)}Rr(e,t,r,null,n)}}}function Zt(e,t,n,r){var o=_e(r);if(null!==(o=Zr(o))){var a=Ge(o);if(null===a)o=null;else{var l=a.tag;if(13===l){if(null!==(o=Ye(a)))return o;o=null}else if(3===l){if(a.stateNode.hydrate)return 3===a.tag?a.stateNode.containerInfo:null;o=null}else a!==o&&(o=null)}}return Rr(e,t,r,o,n),null}var Jt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,o="value"in Jt?Jt.value:Jt.textContent,a=o.length;for(e=0;e<r&&n[e]===o[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===o[a-t];t++);return tn=o.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function on(){return!0}function an(){return!1}function ln(e){function t(t,n,r,o,a){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=o,this.target=a,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(o):o[l]);return this.isDefaultPrevented=(null!=o.defaultPrevented?o.defaultPrevented:!1===o.returnValue)?on:an,this.isPropagationStopped=an,this}return o(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=on)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=on)},persist:function(){},isPersistent:on}),t}var un,cn,sn,fn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},dn=ln(fn),pn=o({},fn,{view:0,detail:0}),hn=ln(pn),mn=o({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(un=e.screenX-sn.screenX,cn=e.screenY-sn.screenY):cn=un=0,sn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:cn}}),yn=ln(mn),gn=ln(o({},mn,{dataTransfer:0})),vn=ln(o({},pn,{relatedTarget:0})),bn=ln(o({},fn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=ln(o({},fn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),kn=ln(o({},fn,{data:0})),Sn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},En={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function _n(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function Cn(){return _n}var On=ln(o({},pn,{key:function(e){if(e.key){var t=Sn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?En[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Pn=ln(o({},mn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Nn=ln(o({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Tn=ln(o({},fn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=ln(o({},mn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),zn=[9,13,27,32],Mn=f&&"CompositionEvent"in window,Ln=null;f&&"documentMode"in document&&(Ln=document.documentMode);var jn=f&&"TextEvent"in window&&!Ln,Dn=f&&(!Mn||Ln&&8<Ln&&11>=Ln),In=String.fromCharCode(32),Fn=!1;function An(e,t){switch(e){case"keyup":return-1!==zn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Bn=!1,Un={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Un[e.type]:"textarea"===t}function Vn(e,t,n,r){Te(r),0<(t=Mr(t,"onChange")).length&&(n=new dn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var $n=null,Qn=null;function qn(e){_r(e,0)}function Kn(e){if(X(eo(e)))return e}function Gn(e,t){if("change"===e)return t}var Yn=!1;if(f){var Xn;if(f){var Zn="oninput"in document;if(!Zn){var Jn=document.createElement("div");Jn.setAttribute("oninput","return;"),Zn="function"==typeof Jn.oninput}Xn=Zn}else Xn=!1;Yn=Xn&&(!document.documentMode||9<document.documentMode)}function er(){$n&&($n.detachEvent("onpropertychange",tr),Qn=$n=null)}function tr(e){if("value"===e.propertyName&&Kn(Qn)){var t=[];if(Vn(t,Qn,e,_e(e)),e=qn,De)e(t);else{De=!0;try{ze(e,t)}finally{De=!1,Fe()}}}}function nr(e,t,n){"focusin"===e?(er(),Qn=n,($n=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Qn)}function or(e,t){if("click"===e)return Kn(t)}function ar(e,t){if("input"===e||"change"===e)return Kn(t)}var lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},ir=Object.prototype.hasOwnProperty;function ur(e,t){if(lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!ir.call(t,n[r])||!lr(e[n[r]],t[n[r]]))return!1;return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function sr(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hr=f&&"documentMode"in document&&11>=document.documentMode,mr=null,yr=null,gr=null,vr=!1;function br(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vr||null==mr||mr!==Z(r)||(r="selectionStart"in(r=mr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},gr&&ur(gr,r)||(gr=r,0<(r=Mr(yr,"onSelect")).length&&(t=new dn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=mr)))}Lt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Lt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Lt(Mt,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),kr=0;kr<wr.length;kr++)zt.set(wr[kr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Sr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Er=new Set("cancel close invalid load scroll toggle".split(" ").concat(Sr));function xr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,o,a,i,u,c){if(Ke.apply(this,arguments),He){if(!He)throw Error(l(198));var s=Ve;He=!1,Ve=null,$e||($e=!0,Qe=s)}}(r,t,void 0,e),e.currentTarget=null}function _r(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],o=r.event;r=r.listeners;e:{var a=void 0;if(t)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==a&&o.isPropagationStopped())break e;xr(o,i,c),a=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,c=i.currentTarget,i=i.listener,u!==a&&o.isPropagationStopped())break e;xr(o,i,c),a=u}}}if($e)throw e=Qe,$e=!1,Qe=null,e}function Cr(e,t){var n=no(t),r=e+"__bubble";n.has(r)||(Tr(t,e,2,!1),n.add(r))}var Or="_reactListening"+Math.random().toString(36).slice(2);function Pr(e){e[Or]||(e[Or]=!0,i.forEach((function(t){Er.has(t)||Nr(t,!1,e,null),Nr(t,!0,e,null)})))}function Nr(e,t,n,r){var o=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,a=n;if("selectionchange"===e&&9!==n.nodeType&&(a=n.ownerDocument),null!==r&&!t&&Er.has(e)){if("scroll"!==e)return;o|=2,a=r}var l=no(a),i=e+"__"+(t?"capture":"bubble");l.has(i)||(t&&(o|=4),Tr(a,e,o,t),l.add(i))}function Tr(e,t,n,r){var o=zt.get(t);switch(void 0===o?2:o){case 0:o=Gt;break;case 1:o=Yt;break;default:o=Xt}n=o.bind(null,t,n,e),o=void 0,!We||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(o=!0),r?void 0!==o?e.addEventListener(t,n,{capture:!0,passive:o}):e.addEventListener(t,n,!0):void 0!==o?e.addEventListener(t,n,{passive:o}):e.addEventListener(t,n,!1)}function Rr(e,t,n,r,o){var a=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===o||8===i.nodeType&&i.parentNode===o)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===o||8===u.nodeType&&u.parentNode===o))return;l=l.return}for(;null!==i;){if(null===(l=Zr(i)))return;if(5===(u=l.tag)||6===u){r=a=l;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(Ie)return e();Ie=!0;try{je(e,t,n)}finally{Ie=!1,Fe()}}((function(){var r=a,o=_e(n),l=[];e:{var i=Rt.get(e);if(void 0!==i){var u=dn,c=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=On;break;case"focusin":c="focus",u=vn;break;case"focusout":c="blur",u=vn;break;case"beforeblur":case"afterblur":u=vn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=yn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=gn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Nn;break;case Ot:case Pt:case Nt:u=bn;break;case Tt:u=Tn;break;case"scroll":u=hn;break;case"wheel":u=Rn;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Pn}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Ae(h,d))&&s.push(zr(h,m,p))),f)break;h=h.return}0<s.length&&(i=new u(i,c,null,n,o),l.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!Zr(c)&&!c[Yr])&&(u||i)&&(i=o.window===o?o:(i=o.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Zr(c):null)&&(c!==(f=Ge(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=yn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=Pn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:eo(u),p=null==c?i:eo(c),(i=new s(m,h+"leave",u,n,o)).target=f,i.relatedTarget=p,m=null,Zr(o)===r&&((s=new s(d,h+"enter",c,n,o)).target=p,s.relatedTarget=f,m=s),f=m,u&&c)e:{for(d=c,h=0,p=s=u;p;p=Lr(p))h++;for(p=0,m=d;m;m=Lr(m))p++;for(;0<h-p;)s=Lr(s),h--;for(;0<p-h;)d=Lr(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=Lr(s),d=Lr(d)}s=null}else s=null;null!==u&&jr(l,i,u,s,!1),null!==c&&null!==f&&jr(l,f,c,s,!0)}if("select"===(u=(i=r?eo(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var y=Gn;else if(Hn(i))if(Yn)y=ar;else{y=rr;var g=nr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(y=or);switch(y&&(y=y(e,r))?Vn(l,y,n,o):(g&&g(e,i,r),"focusout"===e&&(g=i._wrapperState)&&g.controlled&&"number"===i.type&&oe(i,"number",i.value)),g=r?eo(r):window,e){case"focusin":(Hn(g)||"true"===g.contentEditable)&&(mr=g,yr=r,gr=null);break;case"focusout":gr=yr=mr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,br(l,n,o);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":br(l,n,o)}var v;if(Mn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Bn?An(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Dn&&"ko"!==n.locale&&(Bn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Bn&&(v=nn()):(en="value"in(Jt=o)?Jt.value:Jt.textContent,Bn=!0)),0<(g=Mr(r,b)).length&&(b=new kn(b,e,null,n,o),l.push({event:b,listeners:g}),(v||null!==(v=Wn(n)))&&(b.data=v))),(v=jn?function(e,t){switch(e){case"compositionend":return Wn(t);case"keypress":return 32!==t.which?null:(Fn=!0,In);case"textInput":return(e=t.data)===In&&Fn?null:e;default:return null}}(e,n):function(e,t){if(Bn)return"compositionend"===e||!Mn&&An(e,t)?(e=nn(),tn=en=Jt=null,Bn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Dn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Mr(r,"onBeforeInput")).length&&(o=new kn("onBeforeInput","beforeinput",null,n,o),l.push({event:o,listeners:r}),o.data=v)}_r(l,t)}))}function zr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Mr(e,t){for(var n=t+"Capture",r=[];null!==e;){var o=e,a=o.stateNode;5===o.tag&&null!==a&&(o=a,null!=(a=Ae(e,n))&&r.unshift(zr(e,a,o)),null!=(a=Ae(e,t))&&r.push(zr(e,a,o))),e=e.return}return r}function Lr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function jr(e,t,n,r,o){for(var a=t._reactName,l=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,o?null!=(u=Ae(n,a))&&l.unshift(zr(n,u,i)):o||null!=(u=Ae(n,a))&&l.push(zr(n,u,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}function Dr(){}var Ir=null,Fr=null;function Ar(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Wr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Br="function"==typeof setTimeout?setTimeout:void 0,Ur="function"==typeof clearTimeout?clearTimeout:void 0;function Hr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Vr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function $r(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Qr=0,qr=Math.random().toString(36).slice(2),Kr="__reactFiber$"+qr,Gr="__reactProps$"+qr,Yr="__reactContainer$"+qr,Xr="__reactEvents$"+qr;function Zr(e){var t=e[Kr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Yr]||n[Kr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=$r(e);null!==e;){if(n=e[Kr])return n;e=$r(e)}return t}n=(e=n).parentNode}return null}function Jr(e){return!(e=e[Kr]||e[Yr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function eo(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function to(e){return e[Gr]||null}function no(e){var t=e[Xr];return void 0===t&&(t=e[Xr]=new Set),t}var ro=[],oo=-1;function ao(e){return{current:e}}function lo(e){0>oo||(e.current=ro[oo],ro[oo]=null,oo--)}function io(e,t){oo++,ro[oo]=e.current,e.current=t}var uo={},co=ao(uo),so=ao(!1),fo=uo;function po(e,t){var n=e.type.contextTypes;if(!n)return uo;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,a={};for(o in n)a[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function ho(e){return null!=e.childContextTypes}function mo(){lo(so),lo(co)}function yo(e,t,n){if(co.current!==uo)throw Error(l(168));io(co,t),io(so,n)}function go(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in e))throw Error(l(108,q(t)||"Unknown",a));return o({},n,r)}function vo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||uo,fo=co.current,io(co,e),io(so,so.current),!0}function bo(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=go(e,t,fo),r.__reactInternalMemoizedMergedChildContext=e,lo(so),lo(co),io(co,e)):lo(so),io(so,n)}var wo=null,ko=null,So=a.unstable_runWithPriority,Eo=a.unstable_scheduleCallback,xo=a.unstable_cancelCallback,_o=a.unstable_shouldYield,Co=a.unstable_requestPaint,Oo=a.unstable_now,Po=a.unstable_getCurrentPriorityLevel,No=a.unstable_ImmediatePriority,To=a.unstable_UserBlockingPriority,Ro=a.unstable_NormalPriority,zo=a.unstable_LowPriority,Mo=a.unstable_IdlePriority,Lo={},jo=void 0!==Co?Co:function(){},Do=null,Io=null,Fo=!1,Ao=Oo(),Wo=1e4>Ao?Oo:function(){return Oo()-Ao};function Bo(){switch(Po()){case No:return 99;case To:return 98;case Ro:return 97;case zo:return 96;case Mo:return 95;default:throw Error(l(332))}}function Uo(e){switch(e){case 99:return No;case 98:return To;case 97:return Ro;case 96:return zo;case 95:return Mo;default:throw Error(l(332))}}function Ho(e,t){return e=Uo(e),So(e,t)}function Vo(e,t,n){return e=Uo(e),Eo(e,t,n)}function $o(){if(null!==Io){var e=Io;Io=null,xo(e)}Qo()}function Qo(){if(!Fo&&null!==Do){Fo=!0;var e=0;try{var t=Do;Ho(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Do=null}catch(t){throw null!==Do&&(Do=Do.slice(e+1)),Eo(No,$o),t}finally{Fo=!1}}}var qo=k.ReactCurrentBatchConfig;function Ko(e,t){if(e&&e.defaultProps){for(var n in t=o({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Go=ao(null),Yo=null,Xo=null,Zo=null;function Jo(){Zo=Xo=Yo=null}function ea(e){var t=Go.current;lo(Go),e.type._context._currentValue=t}function ta(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function na(e,t){Yo=e,Zo=Xo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Ml=!0),e.firstContext=null)}function ra(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Xo){if(null===Yo)throw Error(l(308));Xo=t,Yo.dependencies={lanes:0,firstContext:t,responders:null}}else Xo=Xo.next=t;return e._currentValue}var oa=!1;function aa(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function la(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function ia(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function ua(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ca(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var o=null,a=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===a?o=a=l:a=a.next=l,n=n.next}while(null!==n);null===a?o=a=t:a=a.next=t}else o=a=t;return n={baseState:r.baseState,firstBaseUpdate:o,lastBaseUpdate:a,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function sa(e,t,n,r){var a=e.updateQueue;oa=!1;var l=a.firstBaseUpdate,i=a.lastBaseUpdate,u=a.shared.pending;if(null!==u){a.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?l=s:i.next=s,i=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==l){for(d=a.baseState,i=0,f=s=c=null;;){u=l.lane;var p=l.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,m=l;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=o({},d,u);break e;case 2:oa=!0}}null!==l.callback&&(e.flags|=32,null===(u=a.effects)?a.effects=[l]:u.push(l))}else p={eventTime:p,lane:u,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,i|=u;if(null===(l=l.next)){if(null===(u=a.shared.pending))break;l=u.next,u.next=null,a.lastBaseUpdate=u,a.shared.pending=null}}null===f&&(c=d),a.baseState=c,a.firstBaseUpdate=s,a.lastBaseUpdate=f,ji|=i,e.lanes=i,e.memoizedState=d}}function fa(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],o=r.callback;if(null!==o){if(r.callback=null,r=n,"function"!=typeof o)throw Error(l(191,o));o.call(r)}}}var da=(new r.Component).refs;function pa(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:o({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ha={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=lu(),o=iu(e),a=ia(r,o);a.payload=t,null!=n&&(a.callback=n),ua(e,a),uu(e,o,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=lu(),o=iu(e),a=ia(r,o);a.tag=1,a.payload=t,null!=n&&(a.callback=n),ua(e,a),uu(e,o,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=lu(),r=iu(e),o=ia(n,r);o.tag=2,null!=t&&(o.callback=t),ua(e,o),uu(e,r,n)}};function ma(e,t,n,r,o,a,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,l):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(o,a))}function ya(e,t,n){var r=!1,o=uo,a=t.contextType;return"object"==typeof a&&null!==a?a=ra(a):(o=ho(t)?fo:co.current,a=(r=null!=(r=t.contextTypes))?po(e,o):uo),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ha,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=a),t}function ga(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ha.enqueueReplaceState(t,t.state,null)}function va(e,t,n,r){var o=e.stateNode;o.props=n,o.state=e.memoizedState,o.refs=da,aa(e);var a=t.contextType;"object"==typeof a&&null!==a?o.context=ra(a):(a=ho(t)?fo:co.current,o.context=po(e,a)),sa(e,n,o,r),o.state=e.memoizedState,"function"==typeof(a=t.getDerivedStateFromProps)&&(pa(e,t,a,n),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&ha.enqueueReplaceState(o,o.state,null),sa(e,n,o,r),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.flags|=4)}var ba=Array.isArray;function wa(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs;t===da&&(t=r.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function ka(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Sa(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=Wu(e,t)).index=0,e.sibling=null,e}function a(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Vu(n,e.mode,r)).return=e,t):((t=o(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=o(t,n.props)).ref=wa(e,t,n),r.return=e,r):((r=Bu(n.type,n.key,n.props,null,e.mode,r)).ref=wa(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=$u(n,e.mode,r)).return=e,t):((t=o(t,n.children||[])).return=e,t)}function f(e,t,n,r,a){return null===t||7!==t.tag?((t=Uu(n,e.mode,r,a)).return=e,t):((t=o(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Vu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case S:return(n=Bu(t.type,t.key,t.props,null,e.mode,n)).ref=wa(e,null,t),n.return=e,n;case E:return(t=$u(t,e.mode,n)).return=e,t}if(ba(t)||U(t))return(t=Uu(t,e.mode,n,null)).return=e,t;ka(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case S:return n.key===o?n.type===x?f(e,t,n.props.children,r,o):c(e,t,n,r):null;case E:return n.key===o?s(e,t,n,r):null}if(ba(n)||U(n))return null!==o?null:f(e,t,n,r,null);ka(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case S:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,o,r.key):c(t,e,r,o);case E:return s(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(ba(r)||U(r))return f(t,e=e.get(n)||null,r,o,null);ka(t,r)}return null}function m(o,l,i,u){for(var c=null,s=null,f=l,m=l=0,y=null;null!==f&&m<i.length;m++){f.index>m?(y=f,f=null):y=f.sibling;var g=p(o,f,i[m],u);if(null===g){null===f&&(f=y);break}e&&f&&null===g.alternate&&t(o,f),l=a(g,l,m),null===s?c=g:s.sibling=g,s=g,f=y}if(m===i.length)return n(o,f),c;if(null===f){for(;m<i.length;m++)null!==(f=d(o,i[m],u))&&(l=a(f,l,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(o,f);m<i.length;m++)null!==(y=h(f,o,m,i[m],u))&&(e&&null!==y.alternate&&f.delete(null===y.key?m:y.key),l=a(y,l,m),null===s?c=y:s.sibling=y,s=y);return e&&f.forEach((function(e){return t(o,e)})),c}function y(o,i,u,c){var s=U(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,m=i,y=i=0,g=null,v=u.next();null!==m&&!v.done;y++,v=u.next()){m.index>y?(g=m,m=null):g=m.sibling;var b=p(o,m,v.value,c);if(null===b){null===m&&(m=g);break}e&&m&&null===b.alternate&&t(o,m),i=a(b,i,y),null===f?s=b:f.sibling=b,f=b,m=g}if(v.done)return n(o,m),s;if(null===m){for(;!v.done;y++,v=u.next())null!==(v=d(o,v.value,c))&&(i=a(v,i,y),null===f?s=v:f.sibling=v,f=v);return s}for(m=r(o,m);!v.done;y++,v=u.next())null!==(v=h(m,o,y,v.value,c))&&(e&&null!==v.alternate&&m.delete(null===v.key?y:v.key),i=a(v,i,y),null===f?s=v:f.sibling=v,f=v);return e&&m.forEach((function(e){return t(o,e)})),s}return function(e,r,a,u){var c="object"==typeof a&&null!==a&&a.type===x&&null===a.key;c&&(a=a.props.children);var s="object"==typeof a&&null!==a;if(s)switch(a.$$typeof){case S:e:{for(s=a.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(a.type===x){n(e,c.sibling),(r=o(c,a.props.children)).return=e,e=r;break e}break;default:if(c.elementType===a.type){n(e,c.sibling),(r=o(c,a.props)).ref=wa(e,c,a),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}a.type===x?((r=Uu(a.props.children,e.mode,u,a.key)).return=e,e=r):((u=Bu(a.type,a.key,a.props,null,e.mode,u)).ref=wa(e,r,a),u.return=e,e=u)}return i(e);case E:e:{for(c=a.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===a.containerInfo&&r.stateNode.implementation===a.implementation){n(e,r.sibling),(r=o(r,a.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=$u(a,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof a||"number"==typeof a)return a=""+a,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,a)).return=e,e=r):(n(e,r),(r=Vu(a,e.mode,u)).return=e,e=r),i(e);if(ba(a))return m(e,r,a,u);if(U(a))return y(e,r,a,u);if(s&&ka(e,a),void 0===a&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(l(152,q(e.type)||"Component"))}return n(e,r)}}var Ea=Sa(!0),xa=Sa(!1),_a={},Ca=ao(_a),Oa=ao(_a),Pa=ao(_a);function Na(e){if(e===_a)throw Error(l(174));return e}function Ta(e,t){switch(io(Pa,t),io(Oa,e),io(Ca,_a),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}lo(Ca),io(Ca,t)}function Ra(){lo(Ca),lo(Oa),lo(Pa)}function za(e){Na(Pa.current);var t=Na(Ca.current),n=pe(t,e.type);t!==n&&(io(Oa,e),io(Ca,n))}function Ma(e){Oa.current===e&&(lo(Ca),lo(Oa))}var La=ao(0);function ja(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Da=null,Ia=null,Fa=!1;function Aa(e,t){var n=Fu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Wa(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ba(e){if(Fa){var t=Ia;if(t){var n=t;if(!Wa(e,t)){if(!(t=Vr(n.nextSibling))||!Wa(e,t))return e.flags=-1025&e.flags|2,Fa=!1,void(Da=e);Aa(Da,n)}Da=e,Ia=Vr(t.firstChild)}else e.flags=-1025&e.flags|2,Fa=!1,Da=e}}function Ua(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Da=e}function Ha(e){if(e!==Da)return!1;if(!Fa)return Ua(e),Fa=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Wr(t,e.memoizedProps))for(t=Ia;t;)Aa(e,t),t=Vr(t.nextSibling);if(Ua(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ia=Vr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ia=null}}else Ia=Da?Vr(e.stateNode.nextSibling):null;return!0}function Va(){Ia=Da=null,Fa=!1}var $a=[];function Qa(){for(var e=0;e<$a.length;e++)$a[e]._workInProgressVersionPrimary=null;$a.length=0}var qa=k.ReactCurrentDispatcher,Ka=k.ReactCurrentBatchConfig,Ga=0,Ya=null,Xa=null,Za=null,Ja=!1,el=!1;function tl(){throw Error(l(321))}function nl(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!lr(e[n],t[n]))return!1;return!0}function rl(e,t,n,r,o,a){if(Ga=a,Ya=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,qa.current=null===e||null===e.memoizedState?Nl:Tl,e=n(r,o),el){a=0;do{if(el=!1,!(25>a))throw Error(l(301));a+=1,Za=Xa=null,t.updateQueue=null,qa.current=Rl,e=n(r,o)}while(el)}if(qa.current=Pl,t=null!==Xa&&null!==Xa.next,Ga=0,Za=Xa=Ya=null,Ja=!1,t)throw Error(l(300));return e}function ol(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Za?Ya.memoizedState=Za=e:Za=Za.next=e,Za}function al(){if(null===Xa){var e=Ya.alternate;e=null!==e?e.memoizedState:null}else e=Xa.next;var t=null===Za?Ya.memoizedState:Za.next;if(null!==t)Za=t,Xa=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Xa=e).memoizedState,baseState:Xa.baseState,baseQueue:Xa.baseQueue,queue:Xa.queue,next:null},null===Za?Ya.memoizedState=Za=e:Za=Za.next=e}return Za}function ll(e,t){return"function"==typeof t?t(e):t}function il(e){var t=al(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Xa,o=r.baseQueue,a=n.pending;if(null!==a){if(null!==o){var i=o.next;o.next=a.next,a.next=i}r.baseQueue=o=a,n.pending=null}if(null!==o){o=o.next,r=r.baseState;var u=i=a=null,c=o;do{var s=c.lane;if((Ga&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(i=u=f,a=r):u=u.next=f,Ya.lanes|=s,ji|=s}c=c.next}while(null!==c&&c!==o);null===u?a=r:u.next=i,lr(r,t.memoizedState)||(Ml=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function ul(e){var t=al(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,o=n.pending,a=t.memoizedState;if(null!==o){n.pending=null;var i=o=o.next;do{a=e(a,i.action),i=i.next}while(i!==o);lr(a,t.memoizedState)||(Ml=!0),t.memoizedState=a,null===t.baseQueue&&(t.baseState=a),n.lastRenderedState=a}return[a,r]}function cl(e,t,n){var r=t._getVersion;r=r(t._source);var o=t._workInProgressVersionPrimary;if(null!==o?e=o===r:(e=e.mutableReadLanes,(e=(Ga&e)===e)&&(t._workInProgressVersionPrimary=r,$a.push(t))),e)return n(t._source);throw $a.push(t),Error(l(350))}function sl(e,t,n,r){var o=Oi;if(null===o)throw Error(l(349));var a=t._getVersion,i=a(t._source),u=qa.current,c=u.useState((function(){return cl(o,t,n)})),s=c[1],f=c[0];c=Za;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var y=Ya;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=a(t._source);if(!lr(i,e)){e=n(t._source),lr(f,e)||(s(e),e=iu(y),o.mutableReadLanes|=e&o.pendingLanes),e=o.mutableReadLanes,o.entangledLanes|=e;for(var r=o.entanglements,l=e;0<l;){var u=31-Ht(l),c=1<<u;r[u]|=e,l&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=iu(y);o.mutableReadLanes|=r&o.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),lr(h,n)&&lr(m,t)&&lr(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ll,lastRenderedState:f}).dispatch=s=Ol.bind(null,Ya,e),c.queue=e,c.baseQueue=null,f=cl(o,t,n),c.memoizedState=c.baseState=f),f}function fl(e,t,n){return sl(al(),e,t,n)}function dl(e){var t=ol();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ll,lastRenderedState:e}).dispatch=Ol.bind(null,Ya,e),[t.memoizedState,e]}function pl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Ya.updateQueue)?(t={lastEffect:null},Ya.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function hl(e){return e={current:e},ol().memoizedState=e}function ml(){return al().memoizedState}function yl(e,t,n,r){var o=ol();Ya.flags|=e,o.memoizedState=pl(1|t,n,void 0,void 0===r?null:r)}function gl(e,t,n,r){var o=al();r=void 0===r?null:r;var a=void 0;if(null!==Xa){var l=Xa.memoizedState;if(a=l.destroy,null!==r&&nl(r,l.deps))return void pl(t,n,a,r)}Ya.flags|=e,o.memoizedState=pl(1|t,n,a,r)}function vl(e,t){return yl(516,4,e,t)}function bl(e,t){return gl(516,4,e,t)}function wl(e,t){return gl(4,2,e,t)}function kl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Sl(e,t,n){return n=null!=n?n.concat([e]):null,gl(4,2,kl.bind(null,t,e),n)}function El(){}function xl(e,t){var n=al();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&nl(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function _l(e,t){var n=al();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&nl(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Cl(e,t){var n=Bo();Ho(98>n?98:n,(function(){e(!0)})),Ho(97<n?97:n,(function(){var n=Ka.transition;Ka.transition=1;try{e(!1),t()}finally{Ka.transition=n}}))}function Ol(e,t,n){var r=lu(),o=iu(e),a={lane:o,action:n,eagerReducer:null,eagerState:null,next:null},l=t.pending;if(null===l?a.next=a:(a.next=l.next,l.next=a),t.pending=a,l=e.alternate,e===Ya||null!==l&&l===Ya)el=Ja=!0;else{if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=l(i,n);if(a.eagerReducer=l,a.eagerState=u,lr(u,i))return}catch(e){}uu(e,o,r)}}var Pl={readContext:ra,useCallback:tl,useContext:tl,useEffect:tl,useImperativeHandle:tl,useLayoutEffect:tl,useMemo:tl,useReducer:tl,useRef:tl,useState:tl,useDebugValue:tl,useDeferredValue:tl,useTransition:tl,useMutableSource:tl,useOpaqueIdentifier:tl,unstable_isNewReconciler:!1},Nl={readContext:ra,useCallback:function(e,t){return ol().memoizedState=[e,void 0===t?null:t],e},useContext:ra,useEffect:vl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,yl(4,2,kl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return yl(4,2,e,t)},useMemo:function(e,t){var n=ol();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ol();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ol.bind(null,Ya,e),[r.memoizedState,e]},useRef:hl,useState:dl,useDebugValue:El,useDeferredValue:function(e){var t=dl(e),n=t[0],r=t[1];return vl((function(){var t=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=t}}),[e]),n},useTransition:function(){var e=dl(!1),t=e[0];return hl(e=Cl.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ol();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},sl(r,e,t,n)},useOpaqueIdentifier:function(){if(Fa){var e=!1,t=function(e){return{$$typeof:j,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Qr++).toString(36))),Error(l(355))})),n=dl(t)[1];return 0==(2&Ya.mode)&&(Ya.flags|=516,pl(5,(function(){n("r:"+(Qr++).toString(36))}),void 0,null)),t}return dl(t="r:"+(Qr++).toString(36)),t},unstable_isNewReconciler:!1},Tl={readContext:ra,useCallback:xl,useContext:ra,useEffect:bl,useImperativeHandle:Sl,useLayoutEffect:wl,useMemo:_l,useReducer:il,useRef:ml,useState:function(){return il(ll)},useDebugValue:El,useDeferredValue:function(e){var t=il(ll),n=t[0],r=t[1];return bl((function(){var t=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=t}}),[e]),n},useTransition:function(){var e=il(ll)[0];return[ml().current,e]},useMutableSource:fl,useOpaqueIdentifier:function(){return il(ll)[0]},unstable_isNewReconciler:!1},Rl={readContext:ra,useCallback:xl,useContext:ra,useEffect:bl,useImperativeHandle:Sl,useLayoutEffect:wl,useMemo:_l,useReducer:ul,useRef:ml,useState:function(){return ul(ll)},useDebugValue:El,useDeferredValue:function(e){var t=ul(ll),n=t[0],r=t[1];return bl((function(){var t=Ka.transition;Ka.transition=1;try{r(e)}finally{Ka.transition=t}}),[e]),n},useTransition:function(){var e=ul(ll)[0];return[ml().current,e]},useMutableSource:fl,useOpaqueIdentifier:function(){return ul(ll)[0]},unstable_isNewReconciler:!1},zl=k.ReactCurrentOwner,Ml=!1;function Ll(e,t,n,r){t.child=null===e?xa(t,null,n,r):Ea(t,e.child,n,r)}function jl(e,t,n,r,o){n=n.render;var a=t.ref;return na(t,o),r=rl(e,t,n,r,a,o),null===e||Ml?(t.flags|=1,Ll(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Jl(e,t,o))}function Dl(e,t,n,r,o,a){if(null===e){var l=n.type;return"function"!=typeof l||Au(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Bu(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Il(e,t,l,r,o,a))}return l=e.child,0==(o&a)&&(o=l.memoizedProps,(n=null!==(n=n.compare)?n:ur)(o,r)&&e.ref===t.ref)?Jl(e,t,a):(t.flags|=1,(e=Wu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Il(e,t,n,r,o,a){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if(Ml=!1,0==(a&o))return t.lanes=e.lanes,Jl(e,t,a);0!=(16384&e.flags)&&(Ml=!0)}return Wl(e,t,n,r,a)}function Fl(e,t,n){var r=t.pendingProps,o=r.children,a=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},yu(0,n);else{if(0==(1073741824&n))return e=null!==a?a.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},yu(0,e),null;t.memoizedState={baseLanes:0},yu(0,null!==a?a.baseLanes:n)}else null!==a?(r=a.baseLanes|n,t.memoizedState=null):r=n,yu(0,r);return Ll(e,t,o,n),t.child}function Al(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Wl(e,t,n,r,o){var a=ho(n)?fo:co.current;return a=po(t,a),na(t,o),n=rl(e,t,n,r,a,o),null===e||Ml?(t.flags|=1,Ll(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~o,Jl(e,t,o))}function Bl(e,t,n,r,o){if(ho(n)){var a=!0;vo(t)}else a=!1;if(na(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),ya(t,n,r),va(t,n,r,o),r=!0;else if(null===e){var l=t.stateNode,i=t.memoizedProps;l.props=i;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?ra(c):po(t,c=ho(n)?fo:co.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==c)&&ga(t,l,r,c),oa=!1;var d=t.memoizedState;l.state=d,sa(t,r,l,o),u=t.memoizedState,i!==r||d!==u||so.current||oa?("function"==typeof s&&(pa(t,n,s,r),u=t.memoizedState),(i=oa||ma(t,n,i,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4)):("function"==typeof l.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=i):("function"==typeof l.componentDidMount&&(t.flags|=4),r=!1)}else{l=t.stateNode,la(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:Ko(t.type,i),l.props=c,f=t.pendingProps,d=l.context,u="object"==typeof(u=n.contextType)&&null!==u?ra(u):po(t,u=ho(n)?fo:co.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==u)&&ga(t,l,r,u),oa=!1,d=t.memoizedState,l.state=d,sa(t,r,l,o);var h=t.memoizedState;i!==f||d!==h||so.current||oa?("function"==typeof p&&(pa(t,n,p,r),h=t.memoizedState),(c=oa||ma(t,n,c,r,d,h,u))?(s||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),l.props=r,l.state=h,l.context=u,r=c):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Ul(e,t,n,r,a,o)}function Ul(e,t,n,r,o,a){Al(e,t);var l=0!=(64&t.flags);if(!r&&!l)return o&&bo(t,n,!1),Jl(e,t,a);r=t.stateNode,zl.current=t;var i=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=Ea(t,e.child,null,a),t.child=Ea(t,null,i,a)):Ll(e,t,i,a),t.memoizedState=r.state,o&&bo(t,n,!0),t.child}function Hl(e){var t=e.stateNode;t.pendingContext?yo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&yo(0,t.context,!1),Ta(e,t.containerInfo)}var Vl,$l,Ql,ql={dehydrated:null,retryLane:0};function Kl(e,t,n){var r,o=t.pendingProps,a=La.current,l=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&a)),r?(l=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(a|=1),io(La,1&a),null===e?(void 0!==o.fallback&&Ba(t),e=o.children,a=o.fallback,l?(e=Gl(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=ql,e):"number"==typeof o.unstable_expectedLoadTime?(e=Gl(t,e,a,n),t.child.memoizedState={baseLanes:n},t.memoizedState=ql,t.lanes=33554432,e):((n=Hu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,l?(o=function(e,t,n,r,o){var a=t.mode,l=e.child;e=l.sibling;var i={mode:"hidden",children:n};return 0==(2&a)&&t.child!==l?((n=t.child).childLanes=0,n.pendingProps=i,null!==(l=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=l,l.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Wu(l,i),null!==e?r=Wu(e,r):(r=Uu(r,a,o,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,o.children,o.fallback,n),l=t.child,a=e.child.memoizedState,l.memoizedState=null===a?{baseLanes:n}:{baseLanes:a.baseLanes|n},l.childLanes=e.childLanes&~n,t.memoizedState=ql,o):(n=function(e,t,n,r){var o=e.child;return e=o.sibling,n=Wu(o,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,o.children,n),t.memoizedState=null,n))}function Gl(e,t,n,r){var o=e.mode,a=e.child;return t={mode:"hidden",children:t},0==(2&o)&&null!==a?(a.childLanes=0,a.pendingProps=t):a=Hu(t,o,0,null),n=Uu(n,o,r,null),a.return=e,n.return=e,a.sibling=n,e.child=a,n}function Yl(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),ta(e.return,t)}function Xl(e,t,n,r,o,a){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:o,lastEffect:a}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=o,l.lastEffect=a)}function Zl(e,t,n){var r=t.pendingProps,o=r.revealOrder,a=r.tail;if(Ll(e,t,r.children,n),0!=(2&(r=La.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yl(e,n);else if(19===e.tag)Yl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(io(La,r),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(n=t.child,o=null;null!==n;)null!==(e=n.alternate)&&null===ja(e)&&(o=n),n=n.sibling;null===(n=o)?(o=t.child,t.child=null):(o=n.sibling,n.sibling=null),Xl(t,!1,o,n,a,t.lastEffect);break;case"backwards":for(n=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===ja(e)){t.child=o;break}e=o.sibling,o.sibling=n,n=o,o=e}Xl(t,!0,n,null,a,t.lastEffect);break;case"together":Xl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Jl(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),ji|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Wu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Wu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function ei(e,t){if(!Fa)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ti(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return ho(t.type)&&mo(),null;case 3:return Ra(),lo(so),lo(co),Qa(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Ha(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Ma(t);var a=Na(Pa.current);if(n=t.type,null!==e&&null!=t.stateNode)$l(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=Na(Ca.current),Ha(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Kr]=t,r[Gr]=i,n){case"dialog":Cr("cancel",r),Cr("close",r);break;case"iframe":case"object":case"embed":Cr("load",r);break;case"video":case"audio":for(e=0;e<Sr.length;e++)Cr(Sr[e],r);break;case"source":Cr("error",r);break;case"img":case"image":case"link":Cr("error",r),Cr("load",r);break;case"details":Cr("toggle",r);break;case"input":ee(r,i),Cr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Cr("invalid",r);break;case"textarea":ue(r,i),Cr("invalid",r)}for(var c in Ee(n,i),e=null,i)i.hasOwnProperty(c)&&(a=i[c],"children"===c?"string"==typeof a?r.textContent!==a&&(e=["children",a]):"number"==typeof a&&r.textContent!==""+a&&(e=["children",""+a]):u.hasOwnProperty(c)&&null!=a&&"onScroll"===c&&Cr("scroll",r));switch(n){case"input":Y(r),re(r,i,!0);break;case"textarea":Y(r),se(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Dr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===a.nodeType?a:a.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Kr]=t,e[Gr]=r,Vl(e,t),t.stateNode=e,c=xe(n,r),n){case"dialog":Cr("cancel",e),Cr("close",e),a=r;break;case"iframe":case"object":case"embed":Cr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Sr.length;a++)Cr(Sr[a],e);a=r;break;case"source":Cr("error",e),a=r;break;case"img":case"image":case"link":Cr("error",e),Cr("load",e),a=r;break;case"details":Cr("toggle",e),a=r;break;case"input":ee(e,r),a=J(e,r),Cr("invalid",e);break;case"option":a=ae(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=o({},r,{value:void 0}),Cr("invalid",e);break;case"textarea":ue(e,r),a=ie(e,r),Cr("invalid",e);break;default:a=r}Ee(n,a);var s=a;for(i in s)if(s.hasOwnProperty(i)){var f=s[i];"style"===i?ke(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ye(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ge(e,f):"number"==typeof f&&ge(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Cr("scroll",e):null!=f&&w(e,i,f,c))}switch(n){case"input":Y(e),re(e,r,!1);break;case"textarea":Y(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+K(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?le(e,!!r.multiple,i,!1):null!=r.defaultValue&&le(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Dr)}Ar(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Ql(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=Na(Pa.current),Na(Ca.current),Ha(t)?(r=t.stateNode,n=t.memoizedProps,r[Kr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Kr]=t,t.stateNode=r)}return null;case 13:return lo(La),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Ha(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&La.current)?0===zi&&(zi=3):(0!==zi&&3!==zi||(zi=4),null===Oi||0==(134217727&ji)&&0==(134217727&Di)||du(Oi,Ni))),(r||n)&&(t.flags|=4),null);case 4:return Ra(),null===e&&Pr(t.stateNode.containerInfo),null;case 10:return ea(t),null;case 17:return ho(t.type)&&mo(),null;case 19:if(lo(La),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(c=r.rendering))if(i)ei(r,!1);else{if(0!==zi||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=ja(e))){for(t.flags|=64,ei(r,!1),null!==(i=c.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(c=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,e=c.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return io(La,1&La.current|2),t.child}e=e.sibling}null!==r.tail&&Wo()>Wi&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=ja(c))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ei(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!Fa)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Wo()-r.renderingStartTime>Wi&&1073741824!==n&&(t.flags|=64,i=!0,ei(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Wo(),n.sibling=null,t=La.current,io(La,i?1&t|2:1&t),n):null;case 23:case 24:return gu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(l(156,t.tag))}function ni(e){switch(e.tag){case 1:ho(e.type)&&mo();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ra(),lo(so),lo(co),Qa(),0!=(64&(t=e.flags)))throw Error(l(285));return e.flags=-4097&t|64,e;case 5:return Ma(e),null;case 13:return lo(La),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return lo(La),null;case 4:return Ra(),null;case 10:return ea(e),null;case 23:case 24:return gu(),null;default:return null}}function ri(e,t){try{var n="",r=t;do{n+=Q(r),r=r.return}while(r);var o=n}catch(e){o="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:o}}function oi(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Vl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},$l=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Na(Ca.current);var l,i=null;switch(n){case"input":a=J(e,a),r=J(e,r),i=[];break;case"option":a=ae(e,a),r=ae(e,r),i=[];break;case"select":a=o({},a,{value:void 0}),r=o({},r,{value:void 0}),i=[];break;case"textarea":a=ie(e,a),r=ie(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Dr)}for(f in Ee(n,r),n=null,a)if(!r.hasOwnProperty(f)&&a.hasOwnProperty(f)&&null!=a[f])if("style"===f){var c=a[f];for(l in c)c.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=a?a[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(n||(n={}),n[l]=s[l])}else n||(i||(i=[]),i.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Cr("scroll",e),i||c===s||(i=[])):"object"==typeof s&&null!==s&&s.$$typeof===j?s.toString():(i=i||[]).push(f,s))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},Ql=function(e,t,n,r){n!==r&&(t.flags|=4)};var ai="function"==typeof WeakMap?WeakMap:Map;function li(e,t,n){(n=ia(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Vi||(Vi=!0,$i=r),oi(0,t)},n}function ii(e,t,n){(n=ia(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var o=t.value;n.payload=function(){return oi(0,t),r(o)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Qi?Qi=new Set([this]):Qi.add(this),oi(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ui="function"==typeof WeakSet?WeakSet:Set;function ci(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Lu(e,t)}else t.current=null}function si(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ko(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Hr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(l(163))}function fi(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var o=e;r=o.next,0!=(4&(o=o.tag))&&0!=(1&o)&&(Ru(n,e),Tu(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ko(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&fa(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fa(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Ar(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&kt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(l(163))}function di(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var o=n.memoizedProps.style;o=null!=o&&o.hasOwnProperty("display")?o.display:null,r.style.display=we("display",o)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pi(e,t){if(ko&&"function"==typeof ko.onCommitFiberUnmount)try{ko.onCommitFiberUnmount(wo,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,o=r.destroy;if(r=r.tag,void 0!==o)if(0!=(4&r))Ru(t,n);else{r=t;try{o()}catch(e){Lu(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ci(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Lu(t,e)}break;case 5:ci(t);break;case 4:bi(e,t)}}function hi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function mi(e){return 5===e.tag||3===e.tag||4===e.tag}function yi(e){e:{for(var t=e.return;null!==t;){if(mi(t))break e;t=t.return}throw Error(l(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.flags&&(ge(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||mi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?gi(e,n,t):vi(e,n,t)}function gi(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Dr));else if(4!==r&&null!==(e=e.child))for(gi(e,t,n),e=e.sibling;null!==e;)gi(e,t,n),e=e.sibling}function vi(e,t,n){var r=e.tag,o=5===r||6===r;if(o)e=o?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(vi(e,t,n),e=e.sibling;null!==e;)vi(e,t,n),e=e.sibling}function bi(e,t){for(var n,r,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(l(160));switch(n=a.stateNode,a.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var i=e,u=o,c=u;;)if(pi(i,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(i=n,u=o.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){n=o.stateNode.containerInfo,r=!0,o.child.return=o,o=o.child;continue}}else if(pi(e,o),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function wi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var o=null!==e?e.memoizedProps:r;e=t.type;var a=t.updateQueue;if(t.updateQueue=null,null!==a){for(n[Gr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),xe(e,o),t=xe(e,r),o=0;o<a.length;o+=2){var i=a[o],u=a[o+1];"style"===i?ke(n,u):"dangerouslySetInnerHTML"===i?ye(n,u):"children"===i?ge(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(a=r.value)?le(n,!!r.multiple,a,!1):e!==!!r.multiple&&(null!=r.defaultValue?le(n,!!r.multiple,r.defaultValue,!0):le(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,kt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Ai=Wo(),di(t.child,!0)),void ki(t);case 19:return void ki(t);case 17:return;case 23:case 24:return void di(t,null!==t.memoizedState)}throw Error(l(163))}function ki(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ui),t.forEach((function(t){var r=Du.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function Si(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Ei=Math.ceil,xi=k.ReactCurrentDispatcher,_i=k.ReactCurrentOwner,Ci=0,Oi=null,Pi=null,Ni=0,Ti=0,Ri=ao(0),zi=0,Mi=null,Li=0,ji=0,Di=0,Ii=0,Fi=null,Ai=0,Wi=1/0;function Bi(){Wi=Wo()+500}var Ui,Hi=null,Vi=!1,$i=null,Qi=null,qi=!1,Ki=null,Gi=90,Yi=[],Xi=[],Zi=null,Ji=0,eu=null,tu=-1,nu=0,ru=0,ou=null,au=!1;function lu(){return 0!=(48&Ci)?Wo():-1!==tu?tu:tu=Wo()}function iu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Bo()?1:2;if(0===nu&&(nu=Li),0!==qo.transition){0!==ru&&(ru=null!==Fi?Fi.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Bo(),e=At(0!=(4&Ci)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Ji)throw Ji=0,eu=null,Error(l(185));if(null===(e=cu(e,t)))return null;Ut(e,t,n),e===Oi&&(Di|=t,4===zi&&du(e,Ni));var r=Bo();1===t?0!=(8&Ci)&&0==(48&Ci)?pu(e):(su(e,n),0===Ci&&(Bi(),$o())):(0==(4&Ci)||98!==r&&99!==r||(null===Zi?Zi=new Set([e]):Zi.add(e)),su(e,n)),Fi=e}function cu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function su(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,o=e.pingedLanes,a=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Ht(i),c=1<<u,s=a[u];if(-1===s){if(0==(c&r)||0!=(c&o)){s=t,Dt(c);var f=jt;a[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);i&=~c}if(r=It(e,e===Oi?Ni:0),t=jt,0===r)null!==n&&(n!==Lo&&xo(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Lo&&xo(n)}15===t?(n=pu.bind(null,e),null===Do?(Do=[n],Io=Eo(No,Qo)):Do.push(n),n=Lo):n=14===t?Vo(99,pu.bind(null,e)):Vo(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(l(358,e))}}(t),fu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function fu(e){if(tu=-1,ru=nu=0,0!=(48&Ci))throw Error(l(327));var t=e.callbackNode;if(Nu()&&e.callbackNode!==t)return null;var n=It(e,e===Oi?Ni:0);if(0===n)return null;var r=n,o=Ci;Ci|=16;var a=wu();for(Oi===e&&Ni===r||(Bi(),vu(e,r));;)try{Eu();break}catch(t){bu(e,t)}if(Jo(),xi.current=a,Ci=o,null!==Pi?r=0:(Oi=null,Ni=0,r=zi),0!=(Li&Di))vu(e,0);else if(0!==r){if(2===r&&(Ci|=64,e.hydrate&&(e.hydrate=!1,Hr(e.containerInfo)),0!==(n=Ft(e))&&(r=ku(e,n))),1===r)throw t=Mi,vu(e,0),du(e,n),su(e,Wo()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(l(345));case 2:Cu(e);break;case 3:if(du(e,n),(62914560&n)===n&&10<(r=Ai+500-Wo())){if(0!==It(e,0))break;if(((o=e.suspendedLanes)&n)!==n){lu(),e.pingedLanes|=e.suspendedLanes&o;break}e.timeoutHandle=Br(Cu.bind(null,e),r);break}Cu(e);break;case 4:if(du(e,n),(4186112&n)===n)break;for(r=e.eventTimes,o=-1;0<n;){var i=31-Ht(n);a=1<<i,(i=r[i])>o&&(o=i),n&=~a}if(n=o,10<(n=(120>(n=Wo()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Ei(n/1960))-n)){e.timeoutHandle=Br(Cu.bind(null,e),n);break}Cu(e);break;case 5:Cu(e);break;default:throw Error(l(329))}}return su(e,Wo()),e.callbackNode===t?fu.bind(null,e):null}function du(e,t){for(t&=~Ii,t&=~Di,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ht(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&Ci))throw Error(l(327));if(Nu(),e===Oi&&0!=(e.expiredLanes&Ni)){var t=Ni,n=ku(e,t);0!=(Li&Di)&&(n=ku(e,t=It(e,t)))}else n=ku(e,t=It(e,0));if(0!==e.tag&&2===n&&(Ci|=64,e.hydrate&&(e.hydrate=!1,Hr(e.containerInfo)),0!==(t=Ft(e))&&(n=ku(e,t))),1===n)throw n=Mi,vu(e,0),du(e,t),su(e,Wo()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Cu(e),su(e,Wo()),null}function hu(e,t){var n=Ci;Ci|=1;try{return e(t)}finally{0===(Ci=n)&&(Bi(),$o())}}function mu(e,t){var n=Ci;Ci&=-2,Ci|=8;try{return e(t)}finally{0===(Ci=n)&&(Bi(),$o())}}function yu(e,t){io(Ri,Ti),Ti|=t,Li|=t}function gu(){Ti=Ri.current,lo(Ri)}function vu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Ur(n)),null!==Pi)for(n=Pi.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&mo();break;case 3:Ra(),lo(so),lo(co),Qa();break;case 5:Ma(r);break;case 4:Ra();break;case 13:case 19:lo(La);break;case 10:ea(r);break;case 23:case 24:gu()}n=n.return}Oi=e,Pi=Wu(e.current,null),Ni=Ti=Li=t,zi=0,Mi=null,Ii=Di=ji=0}function bu(e,t){for(;;){var n=Pi;try{if(Jo(),qa.current=Pl,Ja){for(var r=Ya.memoizedState;null!==r;){var o=r.queue;null!==o&&(o.pending=null),r=r.next}Ja=!1}if(Ga=0,Za=Xa=Ya=null,el=!1,_i.current=null,null===n||null===n.return){zi=1,Mi=t,Pi=null;break}e:{var a=e,l=n.return,i=n,u=t;if(t=Ni,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&i.mode)){var s=i.alternate;s?(i.updateQueue=s.updateQueue,i.memoizedState=s.memoizedState,i.lanes=s.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&La.current),d=l;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var y=d.updateQueue;if(null===y){var g=new Set;g.add(c),d.updateQueue=g}else y.add(c);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var v=ia(-1,1);v.tag=2,ua(i,v)}i.lanes|=1;break e}u=void 0,i=t;var b=a.pingCache;if(null===b?(b=a.pingCache=new ai,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(i)){u.add(i);var w=ju.bind(null,a,c,i);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==zi&&(zi=2),u=ri(u,i),d=l;do{switch(d.tag){case 3:a=u,d.flags|=4096,t&=-t,d.lanes|=t,ca(d,li(0,a,t));break e;case 1:a=u;var k=d.type,S=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==S&&"function"==typeof S.componentDidCatch&&(null===Qi||!Qi.has(S)))){d.flags|=4096,t&=-t,d.lanes|=t,ca(d,ii(d,a,t));break e}}d=d.return}while(null!==d)}_u(n)}catch(e){t=e,Pi===n&&null!==n&&(Pi=n=n.return);continue}break}}function wu(){var e=xi.current;return xi.current=Pl,null===e?Pl:e}function ku(e,t){var n=Ci;Ci|=16;var r=wu();for(Oi===e&&Ni===t||vu(e,t);;)try{Su();break}catch(t){bu(e,t)}if(Jo(),Ci=n,xi.current=r,null!==Pi)throw Error(l(261));return Oi=null,Ni=0,zi}function Su(){for(;null!==Pi;)xu(Pi)}function Eu(){for(;null!==Pi&&!_o();)xu(Pi)}function xu(e){var t=Ui(e.alternate,e,Ti);e.memoizedProps=e.pendingProps,null===t?_u(e):Pi=t,_i.current=null}function _u(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ti(n,t,Ti)))return void(Pi=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Ti)||0==(4&n.mode)){for(var r=0,o=n.child;null!==o;)r|=o.lanes|o.childLanes,o=o.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ni(t)))return n.flags&=2047,void(Pi=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Pi=t);Pi=t=e}while(null!==t);0===zi&&(zi=5)}function Cu(e){var t=Bo();return Ho(99,Ou.bind(null,e,t)),null}function Ou(e,t){do{Nu()}while(null!==Ki);if(0!=(48&Ci))throw Error(l(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null;var r=n.lanes|n.childLanes,o=r,a=e.pendingLanes&~o;e.pendingLanes=o,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=o,e.mutableReadLanes&=o,e.entangledLanes&=o,o=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<a;){var c=31-Ht(a),s=1<<c;o[c]=0,i[c]=-1,u[c]=-1,a&=~s}if(null!==Zi&&0==(24&r)&&Zi.has(e)&&Zi.delete(e),e===Oi&&(Pi=Oi=null,Ni=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(o=Ci,Ci|=32,_i.current=null,Ir=Kt,pr(i=dr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,a=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,y=i,g=null;t:for(;;){for(var v;y!==u||0!==a&&3!==y.nodeType||(d=f+a),y!==c||0!==s&&3!==y.nodeType||(p=f+s),3===y.nodeType&&(f+=y.nodeValue.length),null!==(v=y.firstChild);)g=y,y=v;for(;;){if(y===i)break t;if(g===u&&++h===a&&(d=f),g===c&&++m===s&&(p=f),null!==(v=y.nextSibling))break;g=(y=g).parentNode}y=v}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;Fr={focusedElem:i,selectionRange:u},Kt=!1,ou=null,au=!1,Hi=r;do{try{Pu()}catch(e){if(null===Hi)throw Error(l(330));Lu(Hi,e),Hi=Hi.nextEffect}}while(null!==Hi);ou=null,Hi=r;do{try{for(i=e;null!==Hi;){var b=Hi.flags;if(16&b&&ge(Hi.stateNode,""),128&b){var w=Hi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:yi(Hi),Hi.flags&=-3;break;case 6:yi(Hi),Hi.flags&=-3,wi(Hi.alternate,Hi);break;case 1024:Hi.flags&=-1025;break;case 1028:Hi.flags&=-1025,wi(Hi.alternate,Hi);break;case 4:wi(Hi.alternate,Hi);break;case 8:bi(i,u=Hi);var S=u.alternate;hi(u),null!==S&&hi(S)}Hi=Hi.nextEffect}}catch(e){if(null===Hi)throw Error(l(330));Lu(Hi,e),Hi=Hi.nextEffect}}while(null!==Hi);if(k=Fr,w=dr(),b=k.focusedElem,i=k.selectionRange,w!==b&&b&&b.ownerDocument&&fr(b.ownerDocument.documentElement,b)){null!==i&&pr(b)&&(w=i.start,void 0===(k=i.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,S=Math.min(i.start,u),i=void 0===i.end?S:Math.min(i.end,u),!k.extend&&S>i&&(u=i,i=S,S=u),u=sr(b,S),a=sr(b,i),u&&a&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==a.node||k.focusOffset!==a.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),S>i?(k.addRange(w),k.extend(a.node,a.offset)):(w.setEnd(a.node,a.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Kt=!!Ir,Fr=Ir=null,e.current=n,Hi=r;do{try{for(b=e;null!==Hi;){var E=Hi.flags;if(36&E&&fi(b,Hi.alternate,Hi),128&E){w=void 0;var x=Hi.ref;if(null!==x){var _=Hi.stateNode;switch(Hi.tag){case 5:w=_;break;default:w=_}"function"==typeof x?x(w):x.current=w}}Hi=Hi.nextEffect}}catch(e){if(null===Hi)throw Error(l(330));Lu(Hi,e),Hi=Hi.nextEffect}}while(null!==Hi);Hi=null,jo(),Ci=o}else e.current=n;if(qi)qi=!1,Ki=e,Gi=t;else for(Hi=r;null!==Hi;)t=Hi.nextEffect,Hi.nextEffect=null,8&Hi.flags&&((E=Hi).sibling=null,E.stateNode=null),Hi=t;if(0===(r=e.pendingLanes)&&(Qi=null),1===r?e===eu?Ji++:(Ji=0,eu=e):Ji=0,n=n.stateNode,ko&&"function"==typeof ko.onCommitFiberRoot)try{ko.onCommitFiberRoot(wo,n,void 0,64==(64&n.current.flags))}catch(e){}if(su(e,Wo()),Vi)throw Vi=!1,e=$i,$i=null,e;return 0!=(8&Ci)||$o(),null}function Pu(){for(;null!==Hi;){var e=Hi.alternate;au||null===ou||(0!=(8&Hi.flags)?Je(Hi,ou)&&(au=!0):13===Hi.tag&&Si(e,Hi)&&Je(Hi,ou)&&(au=!0));var t=Hi.flags;0!=(256&t)&&si(e,Hi),0==(512&t)||qi||(qi=!0,Vo(97,(function(){return Nu(),null}))),Hi=Hi.nextEffect}}function Nu(){if(90!==Gi){var e=97<Gi?97:Gi;return Gi=90,Ho(e,zu)}return!1}function Tu(e,t){Yi.push(t,e),qi||(qi=!0,Vo(97,(function(){return Nu(),null})))}function Ru(e,t){Xi.push(t,e),qi||(qi=!0,Vo(97,(function(){return Nu(),null})))}function zu(){if(null===Ki)return!1;var e=Ki;if(Ki=null,0!=(48&Ci))throw Error(l(331));var t=Ci;Ci|=32;var n=Xi;Xi=[];for(var r=0;r<n.length;r+=2){var o=n[r],a=n[r+1],i=o.destroy;if(o.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===a)throw Error(l(330));Lu(a,e)}}for(n=Yi,Yi=[],r=0;r<n.length;r+=2){o=n[r],a=n[r+1];try{var u=o.create;o.destroy=u()}catch(e){if(null===a)throw Error(l(330));Lu(a,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ci=t,$o(),!0}function Mu(e,t,n){ua(e,t=li(0,t=ri(n,t),1)),t=lu(),null!==(e=cu(e,1))&&(Ut(e,1,t),su(e,t))}function Lu(e,t){if(3===e.tag)Mu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Mu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Qi||!Qi.has(r))){var o=ii(n,e=ri(t,e),1);if(ua(n,o),o=lu(),null!==(n=cu(n,1)))Ut(n,1,o),su(n,o);else if("function"==typeof r.componentDidCatch&&(null===Qi||!Qi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function ju(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=lu(),e.pingedLanes|=e.suspendedLanes&n,Oi===e&&(Ni&n)===n&&(4===zi||3===zi&&(62914560&Ni)===Ni&&500>Wo()-Ai?vu(e,0):Ii|=n),su(e,t)}function Du(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Bo()?1:2:(0===nu&&(nu=Li),0===(t=Wt(62914560&~nu))&&(t=4194304))),n=lu(),null!==(e=cu(e,t))&&(Ut(e,t,n),su(e,n))}function Iu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Fu(e,t,n,r){return new Iu(e,t,n,r)}function Au(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Wu(e,t){var n=e.alternate;return null===n?((n=Fu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Bu(e,t,n,r,o,a){var i=2;if(r=e,"function"==typeof e)Au(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Uu(n.children,o,a,t);case D:i=8,o|=16;break;case _:i=8,o|=1;break;case C:return(e=Fu(12,n,t,8|o)).elementType=C,e.type=C,e.lanes=a,e;case T:return(e=Fu(13,n,t,o)).type=T,e.elementType=T,e.lanes=a,e;case R:return(e=Fu(19,n,t,o)).elementType=R,e.lanes=a,e;case I:return Hu(n,o,a,t);case F:return(e=Fu(24,n,t,o)).elementType=F,e.lanes=a,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case O:i=10;break e;case P:i=9;break e;case N:i=11;break e;case z:i=14;break e;case M:i=16,r=null;break e;case L:i=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Fu(i,n,t,o)).elementType=e,t.type=r,t.lanes=a,t}function Uu(e,t,n,r){return(e=Fu(7,e,r,t)).lanes=n,e}function Hu(e,t,n,r){return(e=Fu(23,e,r,t)).elementType=I,e.lanes=n,e}function Vu(e,t,n){return(e=Fu(6,e,null,t)).lanes=n,e}function $u(e,t,n){return(t=Fu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Qu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Bt(0),this.expirationTimes=Bt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Bt(0),this.mutableSourceEagerHydrationData=null}function qu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ku(e,t,n,r){var o=t.current,a=lu(),i=iu(o);e:if(n){t:{if(Ge(n=n._reactInternals)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(ho(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(ho(c)){n=go(n,c,u);break e}}n=u}else n=uo;return null===t.context?t.context=n:t.pendingContext=n,(t=ia(a,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),ua(o,t),uu(o,i,a),i}function Gu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Yu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Xu(e,t){Yu(e,t),(e=e.alternate)&&Yu(e,t)}function Zu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Qu(e,t,null!=n&&!0===n.hydrate),t=Fu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,aa(t),e[Yr]=n.current,Pr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var o=(t=r[e])._getVersion;o=o(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,o]:n.mutableSourceEagerHydrationData.push(t,o)}this._internalRoot=n}function Ju(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function ec(e,t,n,r,o){var a=n._reactRootContainer;if(a){var l=a._internalRoot;if("function"==typeof o){var i=o;o=function(){var e=Gu(l);i.call(e)}}Ku(t,l,e,o)}else{if(a=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Zu(e,0,t?{hydrate:!0}:void 0)}(n,r),l=a._internalRoot,"function"==typeof o){var u=o;o=function(){var e=Gu(l);u.call(e)}}mu((function(){Ku(t,l,e,o)}))}return Gu(l)}function tc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ju(t))throw Error(l(200));return qu(e,t,null,n)}Ui=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||so.current)Ml=!0;else{if(0==(n&r)){switch(Ml=!1,t.tag){case 3:Hl(t),Va();break;case 5:za(t);break;case 1:ho(t.type)&&vo(t);break;case 4:Ta(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var o=t.type._context;io(Go,o._currentValue),o._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Kl(e,t,n):(io(La,1&La.current),null!==(t=Jl(e,t,n))?t.sibling:null);io(La,1&La.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Zl(e,t,n);t.flags|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null,o.lastEffect=null),io(La,La.current),r)break;return null;case 23:case 24:return t.lanes=0,Fl(e,t,n)}return Jl(e,t,n)}Ml=0!=(16384&e.flags)}else Ml=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=po(t,co.current),na(t,n),o=rl(null,t,r,e,o,n),t.flags|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,ho(r)){var a=!0;vo(t)}else a=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,aa(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&pa(t,r,i,e),o.updater=ha,t.stateNode=o,o._reactInternals=t,va(t,r,e,n),t=Ul(null,t,r,!0,a,n)}else t.tag=0,Ll(null,t,o,n),t=t.child;return t;case 16:o=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,o=(a=o._init)(o._payload),t.type=o,a=t.tag=function(e){if("function"==typeof e)return Au(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===z)return 14}return 2}(o),e=Ko(o,e),a){case 0:t=Wl(null,t,o,e,n);break e;case 1:t=Bl(null,t,o,e,n);break e;case 11:t=jl(null,t,o,e,n);break e;case 14:t=Dl(null,t,o,Ko(o.type,e),r,n);break e}throw Error(l(306,o,""))}return t;case 0:return r=t.type,o=t.pendingProps,Wl(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 1:return r=t.type,o=t.pendingProps,Bl(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 3:if(Hl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,la(e,t),sa(t,r,null,n),(r=t.memoizedState.element)===o)Va(),t=Jl(e,t,n);else{if((a=(o=t.stateNode).hydrate)&&(Ia=Vr(t.stateNode.containerInfo.firstChild),Da=t,a=Fa=!0),a){if(null!=(e=o.mutableSourceEagerHydrationData))for(o=0;o<e.length;o+=2)(a=e[o])._workInProgressVersionPrimary=e[o+1],$a.push(a);for(n=xa(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Ll(e,t,r,n),Va();t=t.child}return t;case 5:return za(t),null===e&&Ba(t),r=t.type,o=t.pendingProps,a=null!==e?e.memoizedProps:null,i=o.children,Wr(r,o)?i=null:null!==a&&Wr(r,a)&&(t.flags|=16),Al(e,t),Ll(e,t,i,n),t.child;case 6:return null===e&&Ba(t),null;case 13:return Kl(e,t,n);case 4:return Ta(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Ea(t,null,r,n):Ll(e,t,r,n),t.child;case 11:return r=t.type,o=t.pendingProps,jl(e,t,r,o=t.elementType===r?o:Ko(r,o),n);case 7:return Ll(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ll(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,o=t.pendingProps,i=t.memoizedProps,a=o.value;var u=t.type._context;if(io(Go,u._currentValue),u._currentValue=a,null!==i)if(u=i.value,0==(a=lr(u,a)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,a):1073741823))){if(i.children===o.children&&!so.current){t=Jl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){i=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&a)){1===u.tag&&((s=ia(-1,n&-n)).tag=2,ua(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),ta(u.return,n),c.lanes|=n;break}s=s.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}Ll(e,t,o.children,n),t=t.child}return t;case 9:return o=t.type,r=(a=t.pendingProps).children,na(t,n),r=r(o=ra(o,a.unstable_observedBits)),t.flags|=1,Ll(e,t,r,n),t.child;case 14:return a=Ko(o=t.type,t.pendingProps),Dl(e,t,o,a=Ko(o.type,a),r,n);case 15:return Il(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,o=t.pendingProps,o=t.elementType===r?o:Ko(r,o),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ho(r)?(e=!0,vo(t)):e=!1,na(t,n),ya(t,r,o),va(t,r,o,n),Ul(null,t,r,!0,e,n);case 19:return Zl(e,t,n);case 23:case 24:return Fl(e,t,n)}throw Error(l(156,t.tag))},Zu.prototype.render=function(e){Ku(e,this._internalRoot,null,null)},Zu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ku(null,e,null,(function(){t[Yr]=null}))},et=function(e){13===e.tag&&(uu(e,4,lu()),Xu(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,lu()),Xu(e,67108864))},nt=function(e){if(13===e.tag){var t=lu(),n=iu(e);uu(e,n,t),Xu(e,n)}},rt=function(e,t){return t()},Ce=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=to(r);if(!o)throw Error(l(90));X(r),ne(r,o)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&le(e,!!n.multiple,t,!1)}},ze=hu,Me=function(e,t,n,r,o){var a=Ci;Ci|=4;try{return Ho(98,e.bind(null,t,n,r,o))}finally{0===(Ci=a)&&(Bi(),$o())}},Le=function(){0==(49&Ci)&&(function(){if(null!==Zi){var e=Zi;Zi=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,su(e,Wo())}))}$o()}(),Nu())},je=function(e,t){var n=Ci;Ci|=2;try{return e(t)}finally{0===(Ci=n)&&(Bi(),$o())}};var nc={Events:[Jr,eo,to,Te,Re,Nu,{current:!1}]},rc={findFiberByHostInstance:Zr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},oc={bundleType:rc.bundleType,version:rc.version,rendererPackageName:rc.rendererPackageName,rendererConfig:rc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ze(e))?null:e.stateNode},findFiberByHostInstance:rc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ac=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ac.isDisabled&&ac.supportsFiber)try{wo=ac.inject(oc),ko=ac}catch(me){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=nc,t.createPortal=tc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw Error(l(268,Object.keys(e)))}return null===(e=Ze(t))?null:e.stateNode},t.flushSync=function(e,t){var n=Ci;if(0!=(48&n))return e(t);Ci|=1;try{if(e)return Ho(99,e.bind(null,t))}finally{Ci=n,$o()}},t.hydrate=function(e,t,n){if(!Ju(t))throw Error(l(200));return ec(null,e,t,!0,n)},t.render=function(e,t,n){if(!Ju(t))throw Error(l(200));return ec(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Ju(e))throw Error(l(40));return!!e._reactRootContainer&&(mu((function(){ec(null,null,e,!1,(function(){e._reactRootContainer=null,e[Yr]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return tc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Ju(n))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return ec(e,t,n,!1,r)},t.version="17.0.1"},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},408:(e,t,n)=>{"use strict";var r=n(418),o=60103,a=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var l=60109,i=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;o=f("react.element"),a=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),l=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function y(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function g(){}function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},g.prototype=y.prototype;var b=v.prototype=new g;b.constructor=v,r(b,y.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function E(e,t,n){var r,a={},l=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)k.call(t,r)&&!S.hasOwnProperty(r)&&(a[r]=t[r]);var u=arguments.length-2;if(1===u)a.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];a.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===a[r]&&(a[r]=u[r]);return{$$typeof:o,type:e,key:l,ref:i,props:a,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var _=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function O(e,t,n,r,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case o:case a:u=!0}}if(u)return l=l(u=e),e=""===r?"."+C(u,0):r,Array.isArray(l)?(n="",null!=e&&(n=e.replace(_,"$&/")+"/"),O(l,t,n,"",(function(e){return e}))):null!=l&&(x(l)&&(l=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,n+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(_,"$&/")+"/")+e)),t.push(l)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+C(i=e[c],c);u+=O(i,t,n,s,l)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(i=e.next()).done;)u+=O(i=i.value,t,n,s=r+C(i,c++),l);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function P(e,t,n){if(null==e)return e;var r=[],o=0;return O(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function N(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var T={current:null};function R(){var e=T.current;if(null===e)throw Error(p(321));return e}var z={ReactCurrentDispatcher:T,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:P,forEach:function(e,t,n){P(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return P(e,(function(){t++})),t},toArray:function(e){return P(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error(p(143));return e}},t.Component=y,t.PureComponent=v,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=z,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var a=r({},e.props),l=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!S.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];a.children=c}return{$$typeof:o,type:e.type,key:l,ref:i,props:a,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=E,t.createFactory=function(e){var t=E.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:N}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return R().useCallback(e,t)},t.useContext=function(e,t){return R().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return R().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return R().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return R().useLayoutEffect(e,t)},t.useMemo=function(e,t){return R().useMemo(e,t)},t.useReducer=function(e,t,n){return R().useReducer(e,t,n)},t.useRef=function(e){return R().useRef(e)},t.useState=function(e){return R().useState(e)},t.version="17.0.1"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,o,a;if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},o=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,y=null,g=-1,v=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):v=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();b=e+v;try{y(!0,e)?k.postMessage(null):(m=!1,y=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){y=e,m||(m=!0,k.postMessage(null))},r=function(e,n){g=d((function(){e(t.unstable_now())}),n)},o=function(){p(g),g=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,o=e[r];if(!(void 0!==o&&0<_(o,t)))break e;e[r]=t,e[n]=o,n=r}}function E(e){return void 0===(e=e[0])?null:e}function x(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,l=e[a],i=a+1,u=e[i];if(void 0!==l&&0>_(l,n))void 0!==u&&0>_(u,l)?(e[r]=u,e[i]=n,r=i):(e[r]=l,e[a]=n,r=a);else{if(!(void 0!==u&&0>_(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function _(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var C=[],O=[],P=1,N=null,T=3,R=!1,z=!1,M=!1;function L(e){for(var t=E(O);null!==t;){if(null===t.callback)x(O);else{if(!(t.startTime<=e))break;x(O),t.sortIndex=t.expirationTime,S(C,t)}t=E(O)}}function j(e){if(M=!1,L(e),!z)if(null!==E(C))z=!0,n(D);else{var t=E(O);null!==t&&r(j,t.startTime-e)}}function D(e,n){z=!1,M&&(M=!1,o()),R=!0;var a=T;try{for(L(n),N=E(C);null!==N&&(!(N.expirationTime>n)||e&&!t.unstable_shouldYield());){var l=N.callback;if("function"==typeof l){N.callback=null,T=N.priorityLevel;var i=l(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?N.callback=i:N===E(C)&&x(C),L(n)}else x(C);N=E(C)}if(null!==N)var u=!0;else{var c=E(O);null!==c&&r(j,c.startTime-n),u=!1}return u}finally{N=null,T=a,R=!1}}var I=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){z||R||(z=!0,n(D))},t.unstable_getCurrentPriorityLevel=function(){return T},t.unstable_getFirstCallbackNode=function(){return E(C)},t.unstable_next=function(e){switch(T){case 1:case 2:case 3:var t=3;break;default:t=T}var n=T;T=t;try{return e()}finally{T=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=I,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=T;T=e;try{return t()}finally{T=n}},t.unstable_scheduleCallback=function(e,a,l){var i=t.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?i+l:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:P++,callback:a,priorityLevel:e,startTime:l,expirationTime:u=l+u,sortIndex:-1},l>i?(e.sortIndex=l,S(O,e),null===E(C)&&e===E(O)&&(M?o():M=!0,r(j,l-i))):(e.sortIndex=u,S(C,e),z||R||(z=!0,n(D))),e},t.unstable_wrapCallback=function(e){var t=T;return function(){var n=T;T=t;try{return e.apply(this,arguments)}finally{T=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)},887:e=>{"use strict";e.exports=function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}}},t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{"use strict";var e=n(294),t=n(935);const r=n.p+"24bab5d633e36ca8d17edc63164cf934.jpg";var o=n(887),a=n.n(o),l=n(272),i=n.n(l);function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){c(e,t,n[t])}))}return e}function f(e){return function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var d=/([A-Z])/g,p=function(e){return"-".concat(e.toLowerCase())},h={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},m=["Webkit","ms","Moz","O"];Object.keys(h).forEach((function(e){m.forEach((function(t){h[function(e,t){return e+t.charAt(0).toUpperCase()+t.substring(1)}(t,e)]=h[e]}))}));var y=function(e,t){return"number"==typeof t?h[e]?""+t:t+"px":""+t},g=function(e,t){return b(y(e,t))},v=function(e,t){return a()(e).toString(36)},b=function(e){return"!"===e[e.length-10]&&" !important"===e.slice(-11)?e:"".concat(e," !important")},w="undefined"!=typeof Map,k=function(){function e(){this.elements={},this.keyOrder=[]}var t=e.prototype;return t.forEach=function(e){for(var t=0;t<this.keyOrder.length;t++)e(this.elements[this.keyOrder[t]],this.keyOrder[t])},t.set=function(t,n,r){if(this.elements.hasOwnProperty(t)){if(r){var o=this.keyOrder.indexOf(t);this.keyOrder.splice(o,1),this.keyOrder.push(t)}}else this.keyOrder.push(t);if(null!=n){if(w&&n instanceof Map||n instanceof e){var a=this.elements.hasOwnProperty(t)?this.elements[t]:new e;return n.forEach((function(e,t){a.set(t,e,r)})),void(this.elements[t]=a)}if(Array.isArray(n)||"object"!==u(n))this.elements[t]=n;else{for(var l=this.elements.hasOwnProperty(t)?this.elements[t]:new e,i=Object.keys(n),c=0;c<i.length;c+=1)l.set(i[c],n[i[c]],r);this.elements[t]=l}}else this.elements[t]=n},t.get=function(e){return this.elements[e]},t.has=function(e){return this.elements.hasOwnProperty(e)},t.addStyleType=function(t){var n=this;if(w&&t instanceof Map||t instanceof e)t.forEach((function(e,t){n.set(t,e,!0)}));else for(var r=Object.keys(t),o=0;o<r.length;o++)this.set(r[o],t[r[o]],!0)},e}();function S(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function E(e,t){return e(t={exports:{}},t.exports),t.exports}var x=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e.charAt(0).toUpperCase()+e.slice(1)}}));S(x);var _=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n){if(e.hasOwnProperty(t)){for(var o={},a=e[t],l=(0,r.default)(t),i=Object.keys(n),u=0;u<i.length;u++){var c=i[u];if(c===t)for(var s=0;s<a.length;s++)o[a[s]+l]=n[t];o[c]=n[c]}return o}return n};var n,r=(n=x)&&n.__esModule?n:{default:n}}));S(_);var C=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,n,r,o){for(var a=0,l=e.length;a<l;++a){var i=e[a](t,n,r,o);if(i)return i}}}));S(C);var O=E((function(e,t){function n(e,t){-1===e.indexOf(t)&&e.push(t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(Array.isArray(t))for(var r=0,o=t.length;r<o;++r)n(e,t[r]);else n(e,t)}}));S(O);var P=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return e instanceof Object&&!Array.isArray(e)}}));S(P);var N=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=e.prefixMap,l=e.plugins;return function e(i){for(var u in i){var c=i[u];if((0,a.default)(c))i[u]=e(c);else if(Array.isArray(c)){for(var s=[],f=0,d=c.length;f<d;++f){var p=(0,r.default)(l,u,c[f],i,t);(0,o.default)(s,p||c[f])}s.length>0&&(i[u]=s)}else{var h=(0,r.default)(l,u,c,i,t);h&&(i[u]=h),i=(0,n.default)(t,u,i)}}return i}};var n=l(_),r=l(C),o=l(O),a=l(P);function l(e){return e&&e.__esModule?e:{default:e}}}))),T=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&"text"===t)return["-webkit-text","text"]}}))),R=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return"string"==typeof e&&n.test(e)};var n=/-webkit-|-moz-|-ms-/;e.exports=t.default}));S(R);var z=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("calc(")>-1)return o.map((function(e){return t.replace(/calc\(/g,e+"calc(")}))};var n,r=(n=R)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""]}))),M=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("cross-fade(")>-1)return o.map((function(e){return t.replace(/cross-fade\(/g,e+"cross-fade(")}))};var n,r=(n=R)&&n.__esModule?n:{default:n},o=["-webkit-",""]}))),L=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("cursor"===e&&r.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0}}))),j=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("filter(")>-1)return o.map((function(e){return t.replace(/filter\(/g,e+"filter(")}))};var n,r=(n=R)&&n.__esModule?n:{default:n},o=["-webkit-",""]}))),D=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("display"===e&&n.hasOwnProperty(t))return n[t]};var n={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]}}))),I=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,l){if(Object.prototype.hasOwnProperty.call(r,e)&&(l[r[e]]=n[t]||t),"flex"===e){if(Object.prototype.hasOwnProperty.call(o,t))return void(l.msFlex=o[t]);if(a.test(t))return void(l.msFlex=t+" 1 0%");var i=t.split(/\s/);switch(i.length){case 1:return void(l.msFlex="1 1 "+t);case 2:return void(a.test(i[1])?l.msFlex=i[0]+" "+i[1]+" 0%":l.msFlex=i[0]+" 1 "+i[1]);default:l.msFlex=t}}};var n={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},r={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"},o={auto:"1 1 auto",inherit:"inherit",initial:"0 1 auto",none:"0 0 auto",unset:"unset"},a=/^\d+(\.\d+)?$/}))),F=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,o){"flexDirection"===e&&"string"==typeof t&&(t.indexOf("column")>-1?o.WebkitBoxOrient="vertical":o.WebkitBoxOrient="horizontal",t.indexOf("reverse")>-1?o.WebkitBoxDirection="reverse":o.WebkitBoxDirection="normal"),r.hasOwnProperty(e)&&(o[r[e]]=n[t]||t)};var n={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},r={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines",flexGrow:"WebkitBoxFlex"}}))),A=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&a.test(t))return o.map((function(e){return t.replace(a,(function(t){return e+t}))}))};var n,r=(n=R)&&n.__esModule?n:{default:n},o=["-webkit-","-moz-",""],a=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/gi}))),W=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var n=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,o=!1,a=void 0;try{for(var l,i=e[Symbol.iterator]();!(r=(l=i.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{!r&&i.return&&i.return()}finally{if(o)throw a}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};function r(e){return"number"==typeof e&&!isNaN(e)}t.default=function(e,t,n){if("display"===e&&t in a)return a[t];e in l&&(0,l[e])(t,n)};var o=["center","end","start","stretch"],a={"inline-grid":["-ms-inline-grid","inline-grid"],grid:["-ms-grid","grid"]},l={alignSelf:function(e,t){o.indexOf(e)>-1&&(t.msGridRowAlign=e)},gridColumn:function(e,t){if(r(e))t.msGridColumn=e;else{var o=e.split("/").map((function(e){return+e})),a=n(o,2),i=a[0],u=a[1];l.gridColumnStart(i,t),l.gridColumnEnd(u,t)}},gridColumnEnd:function(e,t){var n=t.msGridColumn;r(e)&&r(n)&&(t.msGridColumnSpan=e-n)},gridColumnStart:function(e,t){r(e)&&(t.msGridColumn=e)},gridRow:function(e,t){if(r(e))t.msGridRow=e;else{var o=e.split("/").map((function(e){return+e})),a=n(o,2),i=a[0],u=a[1];l.gridRowStart(i,t),l.gridRowEnd(u,t)}},gridRowEnd:function(e,t){var n=t.msGridRow;r(e)&&r(n)&&(t.msGridRowSpan=e-n)},gridRowStart:function(e,t){r(e)&&(t.msGridRow=e)},gridTemplateColumns:function(e,t){t.msGridColumns=e},gridTemplateRows:function(e,t){t.msGridRows=e},justifySelf:function(e,t){o.indexOf(e)>-1&&(t.msGridColumnAlign=e)}}}))),B=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("string"==typeof t&&!(0,r.default)(t)&&t.indexOf("image-set(")>-1)return o.map((function(e){return t.replace(/image-set\(/g,e+"image-set(")}))};var n,r=(n=R)&&n.__esModule?n:{default:n},o=["-webkit-",""]}))),U=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,r){if(Object.prototype.hasOwnProperty.call(n,e))for(var o=n[e],a=0,l=o.length;a<l;++a)r[o[a]]=t};var n={marginBlockStart:["WebkitMarginBefore"],marginBlockEnd:["WebkitMarginAfter"],marginInlineStart:["WebkitMarginStart","MozMarginStart"],marginInlineEnd:["WebkitMarginEnd","MozMarginEnd"],paddingBlockStart:["WebkitPaddingBefore"],paddingBlockEnd:["WebkitPaddingAfter"],paddingInlineStart:["WebkitPaddingStart","MozPaddingStart"],paddingInlineEnd:["WebkitPaddingEnd","MozPaddingEnd"],borderBlockStart:["WebkitBorderBefore"],borderBlockStartColor:["WebkitBorderBeforeColor"],borderBlockStartStyle:["WebkitBorderBeforeStyle"],borderBlockStartWidth:["WebkitBorderBeforeWidth"],borderBlockEnd:["WebkitBorderAfter"],borderBlockEndColor:["WebkitBorderAfterColor"],borderBlockEndStyle:["WebkitBorderAfterStyle"],borderBlockEndWidth:["WebkitBorderAfterWidth"],borderInlineStart:["WebkitBorderStart","MozBorderStart"],borderInlineStartColor:["WebkitBorderStartColor","MozBorderStartColor"],borderInlineStartStyle:["WebkitBorderStartStyle","MozBorderStartStyle"],borderInlineStartWidth:["WebkitBorderStartWidth","MozBorderStartWidth"],borderInlineEnd:["WebkitBorderEnd","MozBorderEnd"],borderInlineEndColor:["WebkitBorderEndColor","MozBorderEndColor"],borderInlineEndStyle:["WebkitBorderEndStyle","MozBorderEndStyle"],borderInlineEndWidth:["WebkitBorderEndWidth","MozBorderEndWidth"]}}))),H=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if("position"===e&&"sticky"===t)return["-webkit-sticky","sticky"]}}))),V=S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t){if(r.hasOwnProperty(e)&&o.hasOwnProperty(t))return n.map((function(e){return e+t}))};var n=["-webkit-","-moz-",""],r={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},o={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0}}))),$=/[A-Z]/g,Q=/^ms-/,q={};function K(e){return"-"+e.toLowerCase()}var G,Y=(G=Object.freeze({default:function(e){if(q.hasOwnProperty(e))return q[e];var t=e.replace($,K);return q[e]=Q.test(t)?"-"+t:t}}))&&G.default||G,X=E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){return(0,r.default)(e)};var n,r=(n=Y)&&n.__esModule?n:{default:n};e.exports=t.default}));S(X);var Z=["Webkit"],J=["Moz"],ee=["ms"],te=["Webkit","Moz"],ne=["Webkit","ms"],re=["Webkit","Moz","ms"],oe=N({plugins:[T,z,M,L,j,D,I,F,A,W,B,U,H,V,S(E((function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e,t,a,u){if("string"==typeof t&&l.hasOwnProperty(e)){var c=function(e,t){if((0,r.default)(e))return e;for(var o=e.split(/,(?![^()]*(?:\([^()]*\))?\))/g),a=0,l=o.length;a<l;++a){var u=o[a],c=[u];for(var s in t){var f=(0,n.default)(s);if(u.indexOf(f)>-1&&"order"!==f)for(var d=t[s],p=0,h=d.length;p<h;++p)c.unshift(u.replace(f,i[d[p]]+f))}o[a]=c.join(",")}return o.join(",")}(t,u),s=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-moz-|-ms-/.test(e)})).join(",");if(e.indexOf("Webkit")>-1)return s;var f=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter((function(e){return!/-webkit-|-ms-/.test(e)})).join(",");return e.indexOf("Moz")>-1?f:(a["Webkit"+(0,o.default)(e)]=s,a["Moz"+(0,o.default)(e)]=f,c)}};var n=a(X),r=a(R),o=a(x);function a(e){return e&&e.__esModule?e:{default:e}}var l={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},i={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"}})))],prefixMap:{transform:ne,transformOrigin:ne,transformOriginX:ne,transformOriginY:ne,backfaceVisibility:Z,perspective:Z,perspectiveOrigin:Z,transformStyle:Z,transformOriginZ:Z,animation:Z,animationDelay:Z,animationDirection:Z,animationFillMode:Z,animationDuration:Z,animationIterationCount:Z,animationName:Z,animationPlayState:Z,animationTimingFunction:Z,appearance:te,userSelect:re,fontKerning:Z,textEmphasisPosition:Z,textEmphasis:Z,textEmphasisStyle:Z,textEmphasisColor:Z,boxDecorationBreak:Z,clipPath:Z,maskImage:Z,maskMode:Z,maskRepeat:Z,maskPosition:Z,maskClip:Z,maskOrigin:Z,maskSize:Z,maskComposite:Z,mask:Z,maskBorderSource:Z,maskBorderMode:Z,maskBorderSlice:Z,maskBorderWidth:Z,maskBorderOutset:Z,maskBorderRepeat:Z,maskBorder:Z,maskType:Z,textDecorationStyle:te,textDecorationSkip:te,textDecorationLine:te,textDecorationColor:te,filter:Z,fontFeatureSettings:te,breakAfter:re,breakBefore:re,breakInside:re,columnCount:te,columnFill:te,columnGap:te,columnRule:te,columnRuleColor:te,columnRuleStyle:te,columnRuleWidth:te,columns:te,columnSpan:te,columnWidth:te,writingMode:ne,flex:ne,flexBasis:Z,flexDirection:ne,flexGrow:Z,flexFlow:ne,flexShrink:Z,flexWrap:ne,alignContent:Z,alignItems:Z,alignSelf:Z,justifyContent:Z,order:Z,transitionDelay:Z,transitionDuration:Z,transitionProperty:Z,transitionTimingFunction:Z,backdropFilter:Z,scrollSnapType:ne,scrollSnapPointsX:ne,scrollSnapPointsY:ne,scrollSnapDestination:ne,scrollSnapCoordinate:ne,shapeImageThreshold:Z,shapeImageMargin:Z,shapeImageOutside:Z,hyphens:re,flowInto:ne,flowFrom:ne,regionFragment:ne,textOrientation:Z,boxSizing:J,textAlignLast:J,tabSize:J,wrapFlow:ee,wrapThrough:ee,wrapMargin:ee,touchAction:ee,textSizeAdjust:ne,borderImage:Z,borderImageOutset:Z,borderImageRepeat:Z,borderImageSlice:Z,borderImageSource:Z,borderImageWidth:Z}}),ae=[function(e,t,n){return":"!==e[0]?null:n(t+e)},function(e,t,n){if("@"!==e[0])return null;var r=n(t);return["".concat(e,"{").concat(r.join(""),"}")]}],le=function e(t,n,r,o,a){for(var l=new k,i=0;i<n.length;i++)l.addStyleType(n[i]);var u=new k,c=[];l.forEach((function(n,l){r.some((function(i){var u=i(l,t,(function(t){return e(t,[n],r,o,a)}));if(null!=u)return Array.isArray(u)?c.push.apply(c,f(u)):(console.warn("WARNING: Selector handlers should return an array of rules.Returning a string containing multiple rules is deprecated.",i),c.push("@media all {".concat(u,"}"))),!0}))||u.set(l,n,!0)}));var s=ce(t,u,o,a,r);return s&&c.unshift(s),c},ie=function(e,t,n){return"".concat((r=e,o=r.replace(d,p),"m"===o[0]&&"s"===o[1]&&"-"===o[2]?"-".concat(o):o),":").concat(n(e,t),";");var r,o},ue=function(e,t){return e[t]=!0,e},ce=function(e,t,n,r,o){!function(e,t,n){if(t)for(var r=Object.keys(t),o=0;o<r.length;o++){var a=r[o];e.has(a)&&e.set(a,t[a](e.get(a),n),!1)}}(t,n,o);var a=Object.keys(t.elements).reduce(ue,Object.create(null)),l=oe(t.elements),i=Object.keys(l);if(i.length!==t.keyOrder.length)for(var u=0;u<i.length;u++)if(!a[i[u]]){var c;if((c="W"===i[u][0]?i[u][6].toLowerCase()+i[u].slice(7):"o"===i[u][1]?i[u][3].toLowerCase()+i[u].slice(4):i[u][2].toLowerCase()+i[u].slice(3))&&a[c]){var s=t.keyOrder.indexOf(c);t.keyOrder.splice(s,0,i[u])}else t.keyOrder.unshift(i[u])}for(var f=!1===r?y:g,d=[],p=0;p<t.keyOrder.length;p++){var h=t.keyOrder[p],m=l[h];if(Array.isArray(m))for(var v=0;v<m.length;v++)d.push(ie(h,m[v],f));else d.push(ie(h,m,f))}return d.length?"".concat(e,"{").concat(d.join(""),"}"):""},se=null,fe={fontFamily:function e(t){if(Array.isArray(t)){var n={};return t.forEach((function(t){n[e(t)]=!0})),Object.keys(n).join(",")}return"object"===u(t)?(ye(t.src,"@font-face",[t],!1),'"'.concat(t.fontFamily,'"')):t},animationName:function e(t,n){if(Array.isArray(t))return t.map((function(t){return e(t,n)})).join(",");if("object"===u(t)){var r="keyframe_".concat((a=t,v(JSON.stringify(a)))),o="@keyframes ".concat(r,"{");return t instanceof k?t.forEach((function(e,t){o+=le(t,[e],n,fe,!1).join("")})):Object.keys(t).forEach((function(e){o+=le(e,[t[e]],n,fe,!1).join("")})),me(r,[o+="}"]),r}return t;var a}},de={},pe=[],he=!1,me=function(e,t){var n;if(!de[e]){if(!he){if("undefined"==typeof document)throw new Error("Cannot automatically buffer without a document");he=!0,i()(we)}(n=pe).push.apply(n,f(t)),de[e]=!0}},ye=function(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(!de[e]){var a=le(t,n,o,fe,r);me(e,a)}},ge=function(){pe=[],de={},he=!1,se=null},ve=function(e){delete de[e]},be=function(){he=!1;var e=pe;return pe=[],e},we=function(){var e=be();e.length>0&&function(e){if(null==se&&null==(se=document.querySelector("style[data-aphrodite]"))){var t=document.head||document.getElementsByTagName("head")[0];(se=document.createElement("style")).type="text/css",se.setAttribute("data-aphrodite",""),t.appendChild(se)}var n=se.styleSheet||se.sheet;if(n.insertRule){var r=n.cssRules.length;e.forEach((function(e){try{n.insertRule(e,r),r+=1}catch(e){}}))}else se.innerText=(se.innerText||"")+e.join("")}(e)},ke=function(e){e.forEach((function(e){de[e]=!0}))},Se=function e(t,n,r,o){for(var a=0;a<t.length;a+=1)if(t[a])if(Array.isArray(t[a]))o+=e(t[a],n,r,o);else{if(!("_definition"in(l=t[a])&&"_name"in l&&"_len"in l))throw new Error("Invalid Style Definition: Styles should be defined using the StyleSheet.create method.");n.push(t[a]._name),r.push(t[a]._definition),o+=t[a]._len}var l;return o},Ee=function(e,t,n){var r,o=[],a=[],l=Se(t,o,a,0);return 0===o.length?"":(r=1===o.length?"_".concat(o[0]):"_".concat(v(o.join())).concat((l%36).toString(36)),ye(r,".".concat(r),a,e,n),r)},xe=function(e,t){return"".concat(t,"_").concat(v(e))},_e=v,Ce={create:function(e){for(var t={},n=Object.keys(e),r=0;r<n.length;r+=1){var o=n[r],a=e[o],l=JSON.stringify(a);t[o]={_len:l.length,_name:_e(l,o),_definition:a}}return t},rehydrate:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];ke(e)}},Oe="undefined"!=typeof window?null:{renderStatic:function(e){return ge(),function(){if(he)throw new Error("Cannot buffer while already buffering");he=!0}(),{html:e(),css:{content:be().join(""),renderedClassNames:Object.keys(de)}}}},Pe=function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:ae;return{StyleSheet:s({},Ce,{extend:function(r){var o=r.map((function(e){return e.selectorHandler})).filter((function(e){return e}));return e(t,n.concat(o))}}),StyleSheetServer:Oe,StyleSheetTestUtils:null,minify:function(e){_e=e?v:xe},css:function(){for(var e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return Ee(t,r,n)},flushToStyleTag:we,injectAndGetClassName:Ee,defaultSelectorHandlers:ae,reset:ge,resetInjectedStyle:ve}}(!0),Ne=Pe.StyleSheet,Te=(Pe.StyleSheetServer,Pe.StyleSheetTestUtils,Pe.css),Re=(Pe.minify,Pe.flushToStyleTag,Pe.injectAndGetClassName,Pe.defaultSelectorHandlers,Pe.reset,Pe.resetInjectedStyle,{email:"",password:"",isLoggedIn:!1}),ze=e.createContext({user:Re,logOut:function(){}});function Me(e){return(Me="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Le(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function je(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function De(e,t){return(De=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Ie(e,t){return!t||"object"!==Me(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Fe(e){return(Fe=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Ae=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&De(e,t)}(u,t);var n,o,a,l,i=(a=u,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Fe(a);if(l){var n=Fe(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Ie(this,e)});function u(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,e)}return n=u,(o=[{key:"render",value:function(){var t=this.context,n=t.user,o=t.logOut;return e.createElement("header",{className:Te(Be.header)},e.createElement("img",{className:Te(Be.logo),src:r,alt:"logo"}),e.createElement("h1",{className:Te(Be.title)},"School dashboard"),n.isLoggedIn&&e.createElement("p",{id:"logoutSection",className:Te(Be.logoutSection)},"Welcome ",e.createElement("b",null,"".concat(n.email," ")),e.createElement("span",{onClick:o,className:Te(Be.logoutSectionSpan)},"(logout)")))}}])&&je(n.prototype,o),u}(e.Component),We="@media screen and (max-width: 900px)",Be=Ne.create({header:{display:"flex",color:"#e0344a",alignItems:"center",borderBottom:"thick solid #e0344a",width:"100%",position:"fixed"},logo:Le({width:"144px"},We,{width:"240px"}),title:Le({margin:0},We,{fontSize:"40px"}),logoutSection:{color:"black",position:"absolute",right:0,paddingRight:"20px",alignSelf:"flex-end"},logoutSectionSpan:{fontStyle:"italic",cursor:"pointer"}});Ae.contextType=ze;const Ue=Ae;function He(e){return(He="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ve(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function $e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Qe(e,t){return(Qe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function qe(e,t){return!t||"object"!==He(t)&&"function"!=typeof t?Ke(e):t}function Ke(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function Ge(e){return(Ge=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Ye=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Qe(e,t)}(i,t);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Ge(o);if(a){var n=Ge(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return qe(this,e)});function i(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(t=l.call(this,e)).state={email:"",password:"",enableSubmit:!1},t.handleLoginSubmit=t.handleLoginSubmit.bind(Ke(t)),t.handleChangeEmail=t.handleChangeEmail.bind(Ke(t)),t.handleChangePassword=t.handleChangePassword.bind(Ke(t)),t}return n=i,(r=[{key:"handleLoginSubmit",value:function(e){e.preventDefault();var t=this.state,n=t.email,r=t.password;this.props.logIn(n,r)}},{key:"handleChangeEmail",value:function(e){var t=e.target.value,n=this.state.password;""!==t&&""!==n?this.setState({enableSubmit:!0}):this.setState({enableSubmit:!1}),this.setState({email:e.target.value})}},{key:"handleChangePassword",value:function(e){var t=e.target.value;""!==this.state.email&&""!==t?this.setState({enableSubmit:!0}):this.setState({enableSubmit:!1}),this.setState({password:e.target.value})}},{key:"render",value:function(){return e.createElement("main",{role:"main",className:Te(Ze.login)},e.createElement("p",null,"Login to access the full dashboard"),e.createElement("form",{action:"",onSubmit:this.handleLoginSubmit},e.createElement("label",{htmlFor:"email"},"Email:"),e.createElement("input",{type:"email",id:"email",name:"email",className:Te(Ze.inp),value:this.state.email,onChange:this.handleChangeEmail}),e.createElement("label",{htmlFor:"password"},"Password:"),e.createElement("input",{type:"password",id:"password",name:"password",className:Te(Ze.inp),value:this.state.password,onChange:this.handleChangePassword}),e.createElement("button",{type:"submit",className:Te(Ze.btn),disabled:!this.state.enableSubmit},"OK")))}}])&&$e(n.prototype,r),i}(e.Component),Xe="@media screen and (max-width: 900px)",Ze=Ne.create({login:Ve({padding:"16px 24px"},Xe,{width:"90%",padding:0}),inp:Ve({margin:"4px"},Xe,{display:"block",border:"none",margin:0}),btn:Ve({margin:"4px",cursor:"pointer"},Xe,{width:"32px",display:"block",margin:0})});const Je=Ye,et=function(){return e.createElement("footer",null,e.createElement("p",null,"Copyright ",(new Date).getFullYear()," - ","Holberton School"))},tt=n.p+"7ca727dcb0b4181eda258bd5b186978a.png";var nt=n(697),rt=n.n(nt);function ot(e){return(ot="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function at(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function lt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function it(e,t){return(it=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function ut(e,t){return!t||"object"!==ot(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function ct(e){return(ct=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var st=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&it(e,t)}(i,t);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ct(o);if(a){var n=ct(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return ut(this,e)});function i(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),l.call(this,e)}return n=i,(r=[{key:"render",value:function(){var t=this.props,n=t.type,r=t.html,o=t.value,a=t.markAsRead,l=t.id,i=Te("urgent"===n?pt.urgent:pt.default);return o?e.createElement("li",{className:i,"data-notification-type":n,onClick:function(){return a(l)}},o):e.createElement("li",{className:i,"data-notification-type":n,dangerouslySetInnerHTML:r,onClick:function(){return a(l)}})}}])&&lt(n.prototype,r),i}(e.PureComponent);st.defaultProps={type:"default",html:{},value:"",markAsRead:function(){},id:NaN},st.propTypes={type:rt().string,html:rt().shape({__html:rt().string}),value:rt().string,markAsRead:rt().func,id:rt().number};var ft="@media screen and (max-width: 900px)",dt={fontSize:"20px",padding:"10px 8px",borderBottom:"1px solid black",listStyle:"none"},pt=Ne.create({default:at({color:"blue"},ft,dt),urgent:at({color:"red"},ft,dt)});const ht=st,mt=rt().shape({id:rt().number.isRequired,html:rt().shape({__html:rt().string}),type:rt().string.isRequired,value:rt().string});function yt(e){return(yt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function gt(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function vt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function bt(e,t){return(bt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function wt(e,t){return!t||"object"!==yt(t)&&"function"!=typeof t?kt(e):t}function kt(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function St(e){return(St=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Et=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&bt(e,t)}(i,t);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=St(o);if(a){var n=St(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return wt(this,e)});function i(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(t=l.call(this,e)).markAsRead=t.markAsRead.bind(kt(t)),t}return n=i,(r=[{key:"markAsRead",value:function(e){console.log("Notification ".concat(e," has been marked as read"))}},{key:"shouldComponentUpdate",value:function(e){return e.listNotifications.length>this.props.listNotifications.length||e.displayDrawer!==this.props.displayDrawer}},{key:"render",value:function(){var t=this,n=this.props,r=n.displayDrawer,o=n.listNotifications,a=n.handleDisplayDrawer,l=n.handleHideDrawer,i=Te(r?_t.showOff:_t.showOn);return e.createElement(e.Fragment,null,e.createElement("div",{className:Te(_t.menuItem),onClick:a,id:"menuItem"},e.createElement("p",{className:i},"Your notifications")),r&&e.createElement("div",{className:Te(_t.notifications)},e.createElement("p",null,"Here is the list of notifications"),e.createElement("ul",null,0===o.length&&e.createElement(ht,{value:"No new notification for now"}),o.map((function(n){return e.createElement(ht,{key:n.id,type:n.type,value:n.value,html:n.html,markAsRead:t.markAsRead})}))),e.createElement("button",{type:"button","aria-label":"Close",onClick:l,id:"close",style:{display:"inline-block",position:"absolute",top:"56px",right:"16px",background:0,border:0,outline:"none",cursor:"pointer",zIndex:1}},e.createElement("img",{src:tt,alt:"",style:{width:"8px",height:"8px"}}))))}}])&&vt(n.prototype,r),i}(e.Component);Et.defaultProps={displayDrawer:!1,listNotifications:[],handleDisplayDrawer:function(){},handleHideDrawer:function(){}},Et.propTypes={displayDrawer:rt().bool,listNotifications:rt().arrayOf(mt),handleDisplayDrawer:rt().func,handleHideDrawer:rt().func};var xt="@media screen and (max-width: 900px)",_t=Ne.create({notifications:gt({fontSize:"20px",border:"thin dotted #e0344a",padding:"4px 16px",float:"right",animationName:[{"0%":{border:"3px dashed cyan"},"100%":{border:"3px dashed #e0344a"}}],animationDuration:"0.8s",animationIterationCount:1,animationFillMode:"forwards"},xt,{width:"90%",border:"none",backgroundColor:"white"}),menuItem:{textAlign:"right",marginRight:"16px",":hover":{cursor:"pointer",animationName:[{from:{opacity:.5},to:{opacity:1}},{"0%":{transform:"translateY(0)"},"50%":{transform:"translateY(-5px)"},"75%":{transform:"translateY(5px)"},"100%":{transform:"translateY(0)"}}],animationDuration:"1s, 0.5s",animationIterationCount:3}},showOff:gt({marginRight:"8px"},xt,{display:"none"}),showOn:{marginRight:"8px"}});const Ct=Et;var Ot=function(t){var n=t.isHeader,r=t.textFirstCell,o=t.textSecondCell,a=void 0,l=void 0;return!0===n&&(a={backgroundColor:"#deb5b545"},l=null===o?e.createElement("th",{colSpan:"2"},r):e.createElement(e.Fragment,null,e.createElement("th",{className:Te(Pt.th)},r),e.createElement("th",{className:Te(Pt.th)},o))),!1===n&&(a={backgroundColor:"#f5f5f5ab"},l=e.createElement(e.Fragment,null,e.createElement("td",null,r),e.createElement("td",null,o))),e.createElement("tr",{style:a},l)};Ot.defaultProps={isHeader:!1,textSecondCell:null},Ot.propTypes={isHeader:rt().bool,textFirstCell:rt().string.isRequired,textSecondCell:rt().oneOfType([rt().string,rt().number])};var Pt=Ne.create({th:{textAlign:"left",borderTop:"1px solid gray",borderBottom:"1px solid gray"}});const Nt=Ot,Tt=rt().shape({id:rt().number,name:rt().string,credit:rt().number});var Rt=function(t){var n=t.listCourses;return e.createElement("table",{className:Te(zt.courseList)},e.createElement("thead",null,e.createElement(Nt,{textFirstCell:"Available courses",isHeader:!0}),e.createElement(Nt,{textFirstCell:"Course name",textSecondCell:"Credit",isHeader:!0})),e.createElement("tbody",null,0===n.length&&e.createElement(Nt,{textFirstCell:"No course available yet",isHeader:!1}),n.map((function(t){return e.createElement(Nt,{key:t.id,textFirstCell:t.name,textSecondCell:t.credit,isHeader:!1})}))))};Rt.defaultProps={listCourses:[]},Rt.propTypes={listCourses:rt().arrayOf(Tt)};var zt=Ne.create({courseList:{width:"95%",margin:"auto",border:"1px solid gray",borderCollapse:"collapse"}});const Mt=Rt;function Lt(e){return(Lt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function jt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Dt(e,t){return(Dt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function It(e,t){return!t||"object"!==Lt(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Ft(e){return(Ft=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var At=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Dt(e,t)}(i,t);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Ft(o);if(a){var n=Ft(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return It(this,e)});function i(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),l.call(this,e)}return n=i,(r=[{key:"render",value:function(){var t=this.props,n=t.children,r=t.title;return e.createElement("div",{className:Te(Ht.bodySection)},e.createElement("h2",{className:Te(Ht.heading)},r),n)}}])&&jt(n.prototype,r),i}(e.Component);At.defaultProps={title:""},At.propTypes={title:rt().string};var Wt,Bt,Ut,Ht=Ne.create({bodySection:(Wt={width:"100%",marginTop:"160px",display:"flex",flexWrap:"wrap",padding:"32px"},Bt="@media screen and (max-width: 900px)",Ut={margin:"240px 0 -240px",padding:"16px"},Bt in Wt?Object.defineProperty(Wt,Bt,{value:Ut,enumerable:!0,configurable:!0,writable:!0}):Wt[Bt]=Ut,Wt),heading:{width:"100%"}});const Vt=At;function $t(e){return($t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Qt(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function qt(e,t){return(qt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Kt(e,t){return!t||"object"!==$t(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Gt(e){return(Gt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Yt=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&qt(e,t)}(i,t);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Gt(o);if(a){var n=Gt(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Kt(this,e)});function i(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),l.call(this,e)}return n=i,(r=[{key:"render",value:function(){return e.createElement("div",{className:Te(Xt.bodySectionWithMargin)},e.createElement(Vt,this.props))}}])&&Qt(n.prototype,r),i}(e.Component);Yt.defaultProps={title:""},Yt.propTypes={title:rt().string};var Xt=Ne.create({boySectionWithMargin:{width:"100%"}});const Zt=Yt;function Jt(e){return(Jt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function en(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function tn(e,t){return(tn=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function nn(e,t){return!t||"object"!==Jt(t)&&"function"!=typeof t?rn(e):t}function rn(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function on(e){return(on=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var an=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&tn(e,t)}(i,t);var n,r,o,a,l=(o=i,a=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=on(o);if(a){var n=on(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return nn(this,e)});function i(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(t=l.call(this,e)).handleLogout=t.handleLogout.bind(rn(t)),t.handleDisplayDrawer=t.handleDisplayDrawer.bind(rn(t)),t.handleHideDrawer=t.handleHideDrawer.bind(rn(t)),t.logIn=t.logIn.bind(rn(t)),t.logOut=t.logOut.bind(rn(t)),t.state={displayDrawer:!1,user:Re,logOut:t.logOut},t}return n=i,(r=[{key:"componentDidMount",value:function(){window.addEventListener("keydown",this.handleLogout)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.handleLogout)}},{key:"handleLogout",value:function(e){e.ctrlKey&&"h"===e.key&&(e.preventDefault(),alert("Logging you out"),this.props.logOut())}},{key:"handleDisplayDrawer",value:function(){this.setState({displayDrawer:!0})}},{key:"handleHideDrawer",value:function(){this.setState({displayDrawer:!1})}},{key:"logIn",value:function(e,t){this.setState({user:{email:e,password:t,isLoggedIn:!0}})}},{key:"logOut",value:function(){this.setState({user:Re})}},{key:"render",value:function(){var t=this.state,n=(t.user,t.user.isLoggedIn),r=(t.logOut,t.displayDrawer);return e.createElement(e.Fragment,null,e.createElement(Ct,{listNotifications:[{id:1,type:"default",value:"New course available"},{id:2,type:"urgent",value:"New resume available"},{id:3,type:"urgent",html:{__html:"<strong>Urgent requirement</strong> - complete by EOD"}}],displayDrawer:r,handleDisplayDrawer:this.handleDisplayDrawer,handleHideDrawer:this.handleHideDrawer}),e.createElement(Ue,null),n?e.createElement(Zt,{title:"Course list"},e.createElement(Mt,{listCourses:[{id:1,name:"ES6",credit:60},{id:2,name:"Webpack",credit:20},{id:3,name:"React",credit:40}]})):e.createElement(Zt,{title:"Log in to continue"},e.createElement(Je,null)),e.createElement(Vt,{title:"News from the School"},e.createElement("p",{className:Te(ln.p)},"Lorem ipsum dolor sit amet consectetur adipisicing elit. Iusto, ullam? Quisquam eos temporibus, voluptate error, sunt consectetur ducimus eaque dolorum sit excepturi doloribus officiis reprehenderit distinctio dignissimos adipisci a aspernatur.")),e.createElement("div",{className:Te(ln.footer)},e.createElement(et,null)))}}])&&en(n.prototype,r),i}(e.Component);an.defaultProps={},an.propTypes={};var ln=Ne.create({footer:{width:"100%",position:"fixed",bottom:0,textAlign:"center",fontStyle:"italic",borderTop:"thick solid #e0344a"},p:{marginTop:0}});const un=an;t.render(e.createElement(e.StrictMode,null,e.createElement(un,null)),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvYXNhcC9icm93c2VyLWFzYXAuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL2FzYXAvYnJvd3Nlci1yYXcuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL29iamVjdC1hc3NpZ24vaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2luZGV4LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmVhY3QtZG9tL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvc2NoZWR1bGVyL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9pbmRleC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvc3RyaW5nLWhhc2gvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2Rhc2hib2FyZC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvYXNzZXRzL2hvbGJlcnRvbi1sb2dvLmpwZyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9ub2RlX21vZHVsZXMvYXBocm9kaXRlL2VzL2NodW5rLWZlYmNlNDZiLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL25vZGVfbW9kdWxlcy9hcGhyb2RpdGUvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0FwcC9BcHBDb250ZXh0LmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9IZWFkZXIvSGVhZGVyLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Mb2dpbi9Mb2dpbi5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvRm9vdGVyL0Zvb3Rlci5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvdXRpbHMvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL2Fzc2V0cy9jbG9zZS1pY29uLnBuZyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25JdGVtLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Ob3RpZmljYXRpb25zL05vdGlmaWNhdGlvbkl0ZW1TaGFwZS5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvTm90aWZpY2F0aW9ucy9Ob3RpZmljYXRpb25zLmpzIiwid2VicGFjazovL2Rhc2hib2FyZC8uL3NyYy9Db3Vyc2VMaXN0L0NvdXJzZUxpc3RSb3cuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0NvdXJzZUxpc3QvQ291cnNlU2hhcGUuanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0NvdXJzZUxpc3QvQ291cnNlTGlzdC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQm9keVNlY3Rpb24vQm9keVNlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vZGFzaGJvYXJkLy4vc3JjL0JvZHlTZWN0aW9uL0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbS5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvQXBwL0FwcC5qcyIsIndlYnBhY2s6Ly9kYXNoYm9hcmQvLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsicmF3QXNhcCIsImZyZWVUYXNrcyIsInBlbmRpbmdFcnJvcnMiLCJyZXF1ZXN0RXJyb3JUaHJvdyIsIm1ha2VSZXF1ZXN0Q2FsbEZyb21UaW1lciIsImxlbmd0aCIsInNoaWZ0IiwiYXNhcCIsInRhc2siLCJyYXdUYXNrIiwicG9wIiwiUmF3VGFzayIsInRoaXMiLCJtb2R1bGUiLCJleHBvcnRzIiwicHJvdG90eXBlIiwiY2FsbCIsImVycm9yIiwib25lcnJvciIsInB1c2giLCJxdWV1ZSIsInJlcXVlc3RGbHVzaCIsImluZGV4IiwiZmx1c2giLCJjdXJyZW50SW5kZXgiLCJzY2FuIiwibmV3TGVuZ3RoIiwidG9nZ2xlIiwib2JzZXJ2ZXIiLCJub2RlIiwic2NvcGUiLCJnIiwic2VsZiIsIkJyb3dzZXJNdXRhdGlvbk9ic2VydmVyIiwiTXV0YXRpb25PYnNlcnZlciIsIldlYktpdE11dGF0aW9uT2JzZXJ2ZXIiLCJjYWxsYmFjayIsInRpbWVvdXRIYW5kbGUiLCJzZXRUaW1lb3V0IiwiaGFuZGxlVGltZXIiLCJpbnRlcnZhbEhhbmRsZSIsInNldEludGVydmFsIiwiY2xlYXJUaW1lb3V0IiwiY2xlYXJJbnRlcnZhbCIsImRvY3VtZW50IiwiY3JlYXRlVGV4dE5vZGUiLCJvYnNlcnZlIiwiY2hhcmFjdGVyRGF0YSIsImRhdGEiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCJPYmplY3QiLCJoYXNPd25Qcm9wZXJ0eSIsInByb3BJc0VudW1lcmFibGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsInRvT2JqZWN0IiwidmFsIiwiVHlwZUVycm9yIiwiYXNzaWduIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJpIiwiZnJvbUNoYXJDb2RlIiwibWFwIiwibiIsImpvaW4iLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsImtleXMiLCJlcnIiLCJzaG91bGRVc2VOYXRpdmUiLCJ0YXJnZXQiLCJzb3VyY2UiLCJmcm9tIiwic3ltYm9scyIsInRvIiwicyIsImFyZ3VtZW50cyIsImtleSIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwiZW1wdHlGdW5jdGlvbiIsImVtcHR5RnVuY3Rpb25XaXRoUmVzZXQiLCJyZXNldFdhcm5pbmdDYWNoZSIsInNoaW0iLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsImxvY2F0aW9uIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiRXJyb3IiLCJuYW1lIiwiZ2V0U2hpbSIsImlzUmVxdWlyZWQiLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsImZ1bmMiLCJudW1iZXIiLCJvYmplY3QiLCJzdHJpbmciLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiZWxlbWVudCIsImVsZW1lbnRUeXBlIiwiaW5zdGFuY2VPZiIsIm9iamVjdE9mIiwib25lT2YiLCJvbmVPZlR5cGUiLCJzaGFwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJhYSIsIm0iLCJyIiwieSIsImEiLCJiIiwiYyIsImVuY29kZVVSSUNvbXBvbmVudCIsImJhIiwiU2V0IiwiY2EiLCJkYSIsImVhIiwiYWRkIiwiZmEiLCJ3aW5kb3ciLCJjcmVhdGVFbGVtZW50IiwiaGEiLCJpYSIsImphIiwia2EiLCJCIiwiZCIsImUiLCJmIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInR5cGUiLCJzYW5pdGl6ZVVSTCIsInJlbW92ZUVtcHR5U3RyaW5nIiwiRCIsInRvTG93ZXJDYXNlIiwib2EiLCJwYSIsInRvVXBwZXJDYXNlIiwicWEiLCJzbGljZSIsIm1hIiwiaXNOYU4iLCJuYSIsInRlc3QiLCJsYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwicmVwbGFjZSIsInhsaW5rSHJlZiIsInJhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJzYSIsInRhIiwidWEiLCJ3YSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiU3ltYm9sIiwiZm9yIiwiRSIsIk1hIiwiS2EiLCJpdGVyYXRvciIsIkxhIiwiTmEiLCJzdGFjayIsInRyaW0iLCJtYXRjaCIsIk9hIiwiUGEiLCJwcmVwYXJlU3RhY2tUcmFjZSIsImRlZmluZVByb3BlcnR5Iiwic2V0IiwiUmVmbGVjdCIsImNvbnN0cnVjdCIsImsiLCJoIiwiZGlzcGxheU5hbWUiLCJRYSIsInRhZyIsInJlbmRlciIsIl9yZW5kZXIiLCJSYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiY29uc3RydWN0b3IiLCJnZXQiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsIlVhIiwiV2EiLCJjaGVja2VkIiwidmFsdWUiLCJYYSIsImFjdGl2ZUVsZW1lbnQiLCJib2R5IiwiWWEiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIlphIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIiRhIiwiYWIiLCJiYiIsImNiIiwib3duZXJEb2N1bWVudCIsImViIiwiY2hpbGRyZW4iLCJDaGlsZHJlbiIsImRiIiwiZmIiLCJvcHRpb25zIiwic2VsZWN0ZWQiLCJkZWZhdWx0U2VsZWN0ZWQiLCJkaXNhYmxlZCIsImdiIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJoYiIsIkFycmF5IiwiaXNBcnJheSIsImliIiwiamIiLCJ0ZXh0Q29udGVudCIsImtiIiwibGIiLCJtYiIsIm5iIiwib2IiLCJuYW1lc3BhY2VVUkkiLCJpbm5lckhUTUwiLCJ2YWx1ZU9mIiwidG9TdHJpbmciLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJwYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwicWIiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInJiIiwic2IiLCJ0YiIsInN0eWxlIiwiaW5kZXhPZiIsInNldFByb3BlcnR5IiwiY2hhckF0Iiwic3Vic3RyaW5nIiwidWIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ2YiIsIndiIiwiaXMiLCJ4YiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJ5YiIsInpiIiwiQWIiLCJCYiIsIkNiIiwic3RhdGVOb2RlIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJPYiIsIlBiIiwiUWIiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlJiIiwibCIsImFwcGx5Iiwib25FcnJvciIsIlNiIiwiVGIiLCJVYiIsIlZiIiwiV2IiLCJYYiIsIlpiIiwiYWx0ZXJuYXRlIiwicmV0dXJuIiwiZmxhZ3MiLCIkYiIsIm1lbW9pemVkU3RhdGUiLCJkZWh5ZHJhdGVkIiwiYWMiLCJjYyIsImNoaWxkIiwic2libGluZyIsImN1cnJlbnQiLCJiYyIsImRjIiwiZWMiLCJmYyIsImdjIiwiaGMiLCJpYyIsImpjIiwia2MiLCJsYyIsIm1jIiwibmMiLCJNYXAiLCJvYyIsInBjIiwicWMiLCJyYyIsImJsb2NrZWRPbiIsImRvbUV2ZW50TmFtZSIsImV2ZW50U3lzdGVtRmxhZ3MiLCJuYXRpdmVFdmVudCIsInRhcmdldENvbnRhaW5lcnMiLCJzYyIsImRlbGV0ZSIsInBvaW50ZXJJZCIsInRjIiwidmMiLCJ3YyIsImxhbmVQcmlvcml0eSIsInVuc3RhYmxlX3J1bldpdGhQcmlvcml0eSIsInByaW9yaXR5IiwiaHlkcmF0ZSIsImNvbnRhaW5lckluZm8iLCJ4YyIsInljIiwiemMiLCJBYyIsIkJjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiQ2MiLCJEYyIsIkVjIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiRmMiLCJHYyIsIkhjIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIkljIiwiSmMiLCJLYyIsIkxjIiwiTWMiLCJOYyIsIk9jIiwiUGMiLCJRYyIsInVuc3RhYmxlX25vdyIsIkYiLCJSYyIsIlVjIiwicGVuZGluZ0xhbmVzIiwiZXhwaXJlZExhbmVzIiwic3VzcGVuZGVkTGFuZXMiLCJwaW5nZWRMYW5lcyIsIlZjIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwiV2MiLCJYYyIsIlljIiwiWmMiLCIkYyIsImV2ZW50VGltZXMiLCJNYXRoIiwiY2x6MzIiLCJiZCIsImNkIiwibG9nIiwiTE4yIiwiZGQiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVkIiwiZmQiLCJnZCIsImhkIiwiaWQiLCJiaW5kIiwidWMiLCJqZCIsImtkIiwibGQiLCJtZCIsIm5kIiwib2QiLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJwZCIsInFkIiwicmQiLCJfcmVhY3ROYW1lIiwiX3RhcmdldEluc3QiLCJjdXJyZW50VGFyZ2V0IiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJpc1BlcnNpc3RlbnQiLCJ3ZCIsInhkIiwieWQiLCJzZCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIkRhdGUiLCJub3ciLCJpc1RydXN0ZWQiLCJ0ZCIsInVkIiwidmlldyIsImRldGFpbCIsInZkIiwiQWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsImN0cmxLZXkiLCJzaGlmdEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJnZXRNb2RpZmllclN0YXRlIiwiemQiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiQmQiLCJEZCIsImRhdGFUcmFuc2ZlciIsIkZkIiwiSGQiLCJhbmltYXRpb25OYW1lIiwiZWxhcHNlZFRpbWUiLCJwc2V1ZG9FbGVtZW50IiwiSmQiLCJjbGlwYm9hcmREYXRhIiwiTGQiLCJNZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJOZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlJkIiwiY29kZSIsInJlcGVhdCIsImxvY2FsZSIsIndoaWNoIiwiVGQiLCJ3aWR0aCIsImhlaWdodCIsInByZXNzdXJlIiwidGFuZ2VudGlhbFByZXNzdXJlIiwidGlsdFgiLCJ0aWx0WSIsInR3aXN0IiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJWZCIsInRvdWNoZXMiLCJ0YXJnZXRUb3VjaGVzIiwiY2hhbmdlZFRvdWNoZXMiLCJYZCIsIlpkIiwiZGVsdGFYIiwid2hlZWxEZWx0YVgiLCJkZWx0YVkiLCJ3aGVlbERlbHRhWSIsIndoZWVsRGVsdGEiLCJkZWx0YVoiLCJkZWx0YU1vZGUiLCIkZCIsImFlIiwiYmUiLCJkb2N1bWVudE1vZGUiLCJjZSIsImRlIiwiZWUiLCJmZSIsImdlIiwiaGUiLCJpZSIsImxlIiwiY29sb3IiLCJkYXRlIiwiZGF0ZXRpbWUiLCJlbWFpbCIsIm1vbnRoIiwicGFzc3dvcmQiLCJyYW5nZSIsInNlYXJjaCIsInRlbCIsInRleHQiLCJ0aW1lIiwidXJsIiwid2VlayIsIm1lIiwibmUiLCJvZSIsImV2ZW50IiwibGlzdGVuZXJzIiwicGUiLCJxZSIsInJlIiwic2UiLCJ0ZSIsInVlIiwidmUiLCJ3ZSIsInhlIiwieWUiLCJ6ZSIsIm9uaW5wdXQiLCJBZSIsImRldGFjaEV2ZW50IiwiQmUiLCJDZSIsImF0dGFjaEV2ZW50IiwiRGUiLCJFZSIsIkZlIiwiSGUiLCJJZSIsIkplIiwiS2UiLCJMZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiT2UiLCJjb250ZW50RWRpdGFibGUiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJWZSIsIldlIiwiWGUiLCJZZSIsImNvbmNhdCIsIlplIiwiWWIiLCJpbnN0YW5jZSIsImxpc3RlbmVyIiwiRyIsIiRlIiwiaGFzIiwiYWYiLCJiZiIsInJhbmRvbSIsImNmIiwiZGYiLCJjYXB0dXJlIiwicGFzc2l2ZSIsIk5iIiwieCIsInciLCJ6IiwidSIsInEiLCJ0IiwidiIsImVmIiwiZmYiLCJwYXJlbnRXaW5kb3ciLCJnZiIsImhmIiwiSiIsIksiLCJRIiwiTCIsImplIiwiY2hhciIsImtlIiwidW5zaGlmdCIsImpmIiwia2YiLCJsZiIsIm1mIiwiYXV0b0ZvY3VzIiwibmYiLCJfX2h0bWwiLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwicHJldmlvdXNTaWJsaW5nIiwidGYiLCJ2ZiIsIndmIiwieGYiLCJ5ZiIsInpmIiwiQWYiLCJCZiIsIkgiLCJJIiwiQ2YiLCJNIiwiTiIsIkRmIiwiRWYiLCJjb250ZXh0VHlwZXMiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJGZiIsImNoaWxkQ29udGV4dFR5cGVzIiwiR2YiLCJIZiIsIklmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiSmYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiUWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlJmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiU2YiLCJUZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiVWYiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlZmIiwiV2YiLCJYZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiWWYiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJPIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImxnIiwiZGVmYXVsdFByb3BzIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwiX2N1cnJlbnRWYWx1ZSIsInNnIiwiY2hpbGRMYW5lcyIsInRnIiwiZGVwZW5kZW5jaWVzIiwiZmlyc3RDb250ZXh0IiwibGFuZXMiLCJ1ZyIsInZnIiwiY29udGV4dCIsIm9ic2VydmVkQml0cyIsIm5leHQiLCJyZXNwb25kZXJzIiwid2ciLCJ4ZyIsInVwZGF0ZVF1ZXVlIiwiYmFzZVN0YXRlIiwiZmlyc3RCYXNlVXBkYXRlIiwibGFzdEJhc2VVcGRhdGUiLCJzaGFyZWQiLCJwZW5kaW5nIiwiZWZmZWN0cyIsInlnIiwiemciLCJldmVudFRpbWUiLCJsYW5lIiwicGF5bG9hZCIsIkFnIiwiQmciLCJDZyIsIkEiLCJwIiwiQyIsIkRnIiwiRWciLCJGZyIsIkNvbXBvbmVudCIsInJlZnMiLCJHZyIsIktnIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxzIiwiZW5xdWV1ZVNldFN0YXRlIiwiSGciLCJJZyIsIkpnIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVGb3JjZVVwZGF0ZSIsIkxnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiaXNQdXJlUmVhY3RDb21wb25lbnQiLCJNZyIsImNvbnRleHRUeXBlIiwic3RhdGUiLCJ1cGRhdGVyIiwiTmciLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJPZyIsImdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyIsImdldFNuYXBzaG90QmVmb3JlVXBkYXRlIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudFdpbGxNb3VudCIsImNvbXBvbmVudERpZE1vdW50IiwiUGciLCJRZyIsInJlZiIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJSZyIsIlNnIiwibGFzdEVmZmVjdCIsIm5leHRFZmZlY3QiLCJmaXJzdEVmZmVjdCIsIlRnIiwiVWciLCJtb2RlIiwiVmciLCJpbXBsZW1lbnRhdGlvbiIsIldnIiwiWGciLCJkb25lIiwiWWciLCJaZyIsIiRnIiwiYWgiLCJiaCIsImNoIiwiZGgiLCJlaCIsImRvY3VtZW50RWxlbWVudCIsInRhZ05hbWUiLCJmaCIsImdoIiwiaGgiLCJQIiwiaWgiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJqaCIsImtoIiwibGgiLCJtaCIsIm5oIiwib2giLCJwZW5kaW5nUHJvcHMiLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJfd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeSIsInZoIiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIndoIiwieGgiLCJSIiwiUyIsIlQiLCJ5aCIsInpoIiwiQWgiLCJCaCIsIkNoIiwiRGgiLCJFaCIsIkZoIiwiR2giLCJIaCIsImJhc2VRdWV1ZSIsIkloIiwiSmgiLCJLaCIsImxhc3RSZW5kZXJlZFJlZHVjZXIiLCJhY3Rpb24iLCJlYWdlclJlZHVjZXIiLCJlYWdlclN0YXRlIiwibGFzdFJlbmRlcmVkU3RhdGUiLCJkaXNwYXRjaCIsIkxoIiwiTWgiLCJfZ2V0VmVyc2lvbiIsIl9zb3VyY2UiLCJtdXRhYmxlUmVhZExhbmVzIiwiTmgiLCJVIiwidXNlU3RhdGUiLCJnZXRTbmFwc2hvdCIsInN1YnNjcmliZSIsInVzZUVmZmVjdCIsInNldFNuYXBzaG90IiwiT2giLCJQaCIsIlFoIiwiUmgiLCJjcmVhdGUiLCJkZXN0cm95IiwiZGVwcyIsIlNoIiwiVGgiLCJVaCIsIlZoIiwiV2giLCJYaCIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImRpIiwicmVhZENvbnRleHQiLCJ1c2VDYWxsYmFjayIsInVzZUNvbnRleHQiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwidXNlTGF5b3V0RWZmZWN0IiwidXNlTWVtbyIsInVzZVJlZHVjZXIiLCJ1c2VSZWYiLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlRGVmZXJyZWRWYWx1ZSIsInVzZVRyYW5zaXRpb24iLCJ1c2VNdXRhYmxlU291cmNlIiwidXNlT3BhcXVlSWRlbnRpZmllciIsInVuc3RhYmxlX2lzTmV3UmVjb25jaWxlciIsInVmIiwiZWkiLCJSZWFjdEN1cnJlbnRPd25lciIsImZpIiwiZ2kiLCJoaSIsImlpIiwiamkiLCJjb21wYXJlIiwia2kiLCJsaSIsIm1pIiwiYmFzZUxhbmVzIiwibmkiLCJvaSIsInBpIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJjb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50RGlkVXBkYXRlIiwicWkiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJyaSIsInBlbmRpbmdDb250ZXh0IiwiQmkiLCJEaSIsIkVpIiwic2kiLCJyZXRyeUxhbmUiLCJ0aSIsImZhbGxiYWNrIiwidW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2siLCJ1aSIsInVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUiLCJ2aSIsIndpIiwieGkiLCJ5aSIsInppIiwiaXNCYWNrd2FyZHMiLCJyZW5kZXJpbmciLCJyZW5kZXJpbmdTdGFydFRpbWUiLCJsYXN0IiwidGFpbCIsInRhaWxNb2RlIiwiQWkiLCJGaSIsIkdpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uQ2xpY2siLCJvbmNsaWNrIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnROUyIsIlYiLCJIaSIsIklpIiwiVyIsIkppIiwiS2kiLCJMaSIsIk1pIiwibWVzc2FnZSIsIk5pIiwiY29uc29sZSIsIk9pIiwiV2Vha01hcCIsIlBpIiwiUWkiLCJSaSIsIlNpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJUaSIsImNvbXBvbmVudFN0YWNrIiwiVWkiLCJXZWFrU2V0IiwiVmkiLCJXaSIsIlhpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJZaSIsIlppIiwiJGkiLCJmb2N1cyIsImFqIiwiZGlzcGxheSIsImJqIiwib25Db21taXRGaWJlclVubW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImNqIiwiZGoiLCJlaiIsImZqIiwiZ2oiLCJoaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJpaiIsImpqIiwia2oiLCJsaiIsInRoZW4iLCJtaiIsIm5qIiwiY2VpbCIsIm9qIiwicGoiLCJYIiwiWSIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIkluZmluaXR5Iiwid2oiLCJjayIsIloiLCJ4aiIsInlqIiwiemoiLCJBaiIsIkJqIiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiSWoiLCJKaiIsIlNjIiwiS2oiLCJMaiIsIk1qIiwiY2FsbGJhY2tOb2RlIiwiZXhwaXJhdGlvblRpbWVzIiwiY2FsbGJhY2tQcmlvcml0eSIsIlRjIiwiTmoiLCJPaiIsIlBqIiwiUWoiLCJSaiIsIlNqIiwiVGoiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZExhbmVzIiwiVWoiLCJXaiIsIlhqIiwicGluZ0NhY2hlIiwiWWoiLCJaaiIsInZhIiwiYWsiLCJiayIsImRrIiwicmFuZ2VDb3VudCIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJlayIsIm1pbiIsImV4dGVuZCIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwib25Db21taXRGaWJlclJvb3QiLCJmayIsImdrIiwiaWsiLCJpc1JlYWN0Q29tcG9uZW50IiwicGVuZGluZ0NoaWxkcmVuIiwiamsiLCJtdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhIiwia2siLCJsayIsIm1rIiwibmsiLCJvayIsInFrIiwiaHlkcmF0aW9uT3B0aW9ucyIsIm11dGFibGVTb3VyY2VzIiwiX2ludGVybmFsUm9vdCIsInJrIiwidGsiLCJoYXNBdHRyaWJ1dGUiLCJzayIsInVrIiwiaGsiLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJ1bnN0YWJsZV9vYnNlcnZlZEJpdHMiLCJ1bm1vdW50IiwicXVlcnlTZWxlY3RvckFsbCIsIkpTT04iLCJzdHJpbmdpZnkiLCJmb3JtIiwiVmoiLCJ2ayIsIkV2ZW50cyIsIndrIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwidmVyc2lvbiIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJ4ayIsInJlbmRlcmVyQ29uZmlnIiwib3ZlcnJpZGVIb29rU3RhdGUiLCJvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGgiLCJvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGgiLCJvdmVycmlkZVByb3BzIiwib3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGgiLCJvdmVycmlkZVByb3BzUmVuYW1lUGF0aCIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fIiwieWsiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsImluamVjdCIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwiZmx1c2hTeW5jIiwidW5tb3VudENvbXBvbmVudEF0Tm9kZSIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJjaGVja0RDRSIsIkZyYWdtZW50IiwiU3RyaWN0TW9kZSIsIlByb2ZpbGVyIiwiU3VzcGVuc2UiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImRlZmF1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwibWVtbyIsInBlcmZvcm1hbmNlIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJzdHIiLCJoYXNoIiwiY2hhckNvZGVBdCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsIm8iLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJvYmoiLCJwcm9wIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJfdHlwZW9mIiwiX2RlZmluZVByb3BlcnR5Iiwid3JpdGFibGUiLCJfb2JqZWN0U3ByZWFkIiwib3duS2V5cyIsImZpbHRlciIsInN5bSIsIl90b0NvbnN1bWFibGVBcnJheSIsImFyciIsImFycjIiLCJfYXJyYXlXaXRob3V0SG9sZXMiLCJpdGVyIiwiX2l0ZXJhYmxlVG9BcnJheSIsIl9ub25JdGVyYWJsZVNwcmVhZCIsIlVQUEVSQ0FTRV9SRSIsIlVQUEVSQ0FTRV9SRV9UT19LRUJBQiIsImlzVW5pdGxlc3NOdW1iZXIiLCJwcmVmaXhlcyIsInByZWZpeCIsInByZWZpeEtleSIsInN0cmluZ2lmeVZhbHVlIiwic3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUiLCJpbXBvcnRhbnRpZnkiLCJoYXNoU3RyaW5nIiwiTUFQX0VYSVNUUyIsIk9yZGVyZWRFbGVtZW50cyIsImVsZW1lbnRzIiwia2V5T3JkZXIiLCJfcHJvdG8iLCJzaG91bGRSZW9yZGVyIiwic3BsaWNlIiwibmVzdGVkIiwiX25lc3RlZCIsImFkZFN0eWxlVHlwZSIsInN0eWxlVHlwZSIsIl90aGlzIiwidW53cmFwRXhwb3J0cyIsImNyZWF0ZUNvbW1vbmpzTW9kdWxlIiwiZm4iLCJjYXBpdGFsaXplU3RyaW5nXzEiLCJwcmVmaXhQcm9wZXJ0eV8xIiwicHJlZml4UHJvcGVydGllcyIsInByb3BlcnR5IiwibmV3U3R5bGUiLCJyZXF1aXJlZFByZWZpeGVzIiwiY2FwaXRhbGl6ZWRQcm9wZXJ0eSIsIl9jYXBpdGFsaXplU3RyaW5nMiIsInN0eWxlUHJvcGVydHkiLCJqIiwicHJlZml4VmFsdWVfMSIsInBsdWdpbnMiLCJtZXRhRGF0YSIsImxlbiIsInByb2Nlc3NlZFZhbHVlIiwiYWRkTmV3VmFsdWVzT25seV8xIiwiYWRkSWZOZXciLCJsaXN0IiwidmFsdWVzIiwiaXNPYmplY3RfMSIsImNyZWF0ZVByZWZpeGVyIiwiX3JlZiIsInByZWZpeE1hcCIsIl9pc09iamVjdDIiLCJjb21iaW5lZFZhbHVlIiwiX3ByZWZpeFZhbHVlMiIsIl9hZGROZXdWYWx1ZXNPbmx5MiIsIl9wcm9jZXNzZWRWYWx1ZSIsIl9wcmVmaXhQcm9wZXJ0eTIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiYmFja2dyb3VuZENsaXAiLCJpc1ByZWZpeGVkVmFsdWVfMSIsInJlZ2V4IiwiY2FsYyIsIl9pc1ByZWZpeGVkVmFsdWUyIiwiY3Jvc3NGYWRlIiwiY3Vyc29yIiwiZ3JhYiIsImdyYWJiaW5nIiwiZmxleGJveElFIiwiYWx0ZXJuYXRpdmVQcm9wcyIsImFsdGVybmF0aXZlVmFsdWVzIiwiZmxleFNob3J0aGFuZE1hcHBpbmdzIiwibXNGbGV4IiwiZmxleFZhbHVlcyIsImFsaWduQ29udGVudCIsImFsaWduU2VsZiIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsImZsZXhCYXNpcyIsImF1dG8iLCJpbmhlcml0IiwiaW5pdGlhbCIsIm5vbmUiLCJ1bnNldCIsImZsZXhib3hPbGQiLCJXZWJraXRCb3hPcmllbnQiLCJXZWJraXRCb3hEaXJlY3Rpb24iLCJ3cmFwIiwiZmxleFdyYXAiLCJncmFkaWVudCIsImdyYWQiLCJncmlkIiwiX3NsaWNlZFRvQXJyYXkiLCJfYXJyIiwiX24iLCJfZCIsIl9lIiwidW5kZWZpbmVkIiwiX3MiLCJfaSIsInNsaWNlSXRlcmF0b3IiLCJpc1NpbXBsZVBvc2l0aW9uVmFsdWUiLCJkaXNwbGF5VmFsdWVzIiwicHJvcGVydHlDb252ZXJ0ZXJzIiwicHJvcGVydHlDb252ZXJ0ZXIiLCJhbGlnbm1lbnRWYWx1ZXMiLCJtc0dyaWRSb3dBbGlnbiIsIm1zR3JpZENvbHVtbiIsIl92YWx1ZSRzcGxpdCRtYXAiLCJwb3NpdGlvbiIsIl92YWx1ZSRzcGxpdCRtYXAyIiwibXNHcmlkQ29sdW1uU3BhbiIsIm1zR3JpZFJvdyIsIl92YWx1ZSRzcGxpdCRtYXAzIiwiX3ZhbHVlJHNwbGl0JG1hcDQiLCJtc0dyaWRSb3dTcGFuIiwiZ3JpZFRlbXBsYXRlQ29sdW1ucyIsIm1zR3JpZENvbHVtbnMiLCJncmlkVGVtcGxhdGVSb3dzIiwibXNHcmlkUm93cyIsImp1c3RpZnlTZWxmIiwibXNHcmlkQ29sdW1uQWxpZ24iLCJpbWFnZVNldCIsImxvZ2ljYWwiLCJhbHRlcm5hdGl2ZVByb3BMaXN0IiwibWFyZ2luQmxvY2tTdGFydCIsIm1hcmdpbkJsb2NrRW5kIiwibWFyZ2luSW5saW5lU3RhcnQiLCJtYXJnaW5JbmxpbmVFbmQiLCJwYWRkaW5nQmxvY2tTdGFydCIsInBhZGRpbmdCbG9ja0VuZCIsInBhZGRpbmdJbmxpbmVTdGFydCIsInBhZGRpbmdJbmxpbmVFbmQiLCJib3JkZXJCbG9ja1N0YXJ0IiwiYm9yZGVyQmxvY2tTdGFydENvbG9yIiwiYm9yZGVyQmxvY2tTdGFydFN0eWxlIiwiYm9yZGVyQmxvY2tTdGFydFdpZHRoIiwiYm9yZGVyQmxvY2tFbmQiLCJib3JkZXJCbG9ja0VuZENvbG9yIiwiYm9yZGVyQmxvY2tFbmRTdHlsZSIsImJvcmRlckJsb2NrRW5kV2lkdGgiLCJib3JkZXJJbmxpbmVTdGFydCIsImJvcmRlcklubGluZVN0YXJ0Q29sb3IiLCJib3JkZXJJbmxpbmVTdGFydFN0eWxlIiwiYm9yZGVySW5saW5lU3RhcnRXaWR0aCIsImJvcmRlcklubGluZUVuZCIsImJvcmRlcklubGluZUVuZENvbG9yIiwiYm9yZGVySW5saW5lRW5kU3R5bGUiLCJib3JkZXJJbmxpbmVFbmRXaWR0aCIsInNpemluZyIsInByb3BlcnRpZXMiLCJtYXhIZWlnaHQiLCJtYXhXaWR0aCIsImNvbHVtbldpZHRoIiwibWluV2lkdGgiLCJtaW5IZWlnaHQiLCJ1cHBlcmNhc2VQYXR0ZXJuIiwibXNQYXR0ZXJuIiwiY2FjaGUiLCJ0b0h5cGhlbkxvd2VyIiwiX2h5cGhlbmF0ZVN0eWxlTmFtZSIsImZyZWV6ZSIsImhOYW1lIiwiaHlwaGVuYXRlUHJvcGVydHlfMSIsIl9oeXBoZW5hdGVTdHlsZU5hbWUyIiwibXMiLCJ3bSIsIndtcyIsIndtbXMiLCJwcmVmaXhBbGwiLCJwcm9wZXJ0eVByZWZpeE1hcCIsIm91dHB1dFZhbHVlIiwibXVsdGlwbGVWYWx1ZXMiLCJzaW5nbGVWYWx1ZSIsImRhc2hDYXNlUHJvcGVydHkiLCJfaHlwaGVuYXRlUHJvcGVydHkyIiwicExlbiIsInByZWZpeE1hcHBpbmciLCJwcmVmaXhWYWx1ZSIsIndlYmtpdE91dHB1dCIsIm1vek91dHB1dCIsInRyYW5zaXRpb25Qcm9wZXJ0eSIsIldlYmtpdFRyYW5zaXRpb24iLCJXZWJraXRUcmFuc2l0aW9uUHJvcGVydHkiLCJNb3pUcmFuc2l0aW9uIiwiTW96VHJhbnNpdGlvblByb3BlcnR5IiwiV2Via2l0IiwiTW96IiwiZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMiLCJzZWxlY3RvciIsImJhc2VTZWxlY3RvciIsImdlbmVyYXRlU3VidHJlZVN0eWxlcyIsImdlbmVyYXRlZCIsImdlbmVyYXRlQ1NTIiwic3R5bGVUeXBlcyIsInNlbGVjdG9ySGFuZGxlcnMiLCJzdHJpbmdIYW5kbGVycyIsInVzZUltcG9ydGFudCIsIm1lcmdlZCIsInBsYWluRGVjbGFyYXRpb25zIiwiZ2VuZXJhdGVkU3R5bGVzIiwic29tZSIsImhhbmRsZXIiLCJyZXN1bHQiLCJuZXdTZWxlY3RvciIsIndhcm4iLCJnZW5lcmF0ZWRSdWxlc2V0IiwiZ2VuZXJhdGVDU1NSdWxlc2V0IiwidHJhbnNmb3JtUnVsZSIsInRyYW5zZm9ybVZhbHVlIiwiYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyIiwiYWNjIiwiZGVjbGFyYXRpb25zIiwic3RyaW5nSGFuZGxlcktleXMiLCJydW5TdHJpbmdIYW5kbGVycyIsIm9yaWdpbmFsRWxlbWVudHMiLCJyZWR1Y2UiLCJwcmVmaXhlZEVsZW1lbnRzIiwiZWxlbWVudE5hbWVzIiwib3JpZ2luYWxTdHlsZSIsIm9yaWdpbmFsSW5kZXgiLCJydWxlcyIsInN0eWxlVGFnIiwiZm9udEZhbWlseSIsIm5hbWVNYXAiLCJpbmplY3RTdHlsZU9uY2UiLCJmaW5hbFZhbCIsInZhbFZhbCIsInZhbEtleSIsImluamVjdEdlbmVyYXRlZENTU09uY2UiLCJhbHJlYWR5SW5qZWN0ZWQiLCJpbmplY3Rpb25CdWZmZXIiLCJpc0J1ZmZlcmluZyIsImdlbmVyYXRlZENTUyIsIl9pbmplY3Rpb25CdWZmZXIiLCJmbHVzaFRvU3R5bGVUYWciLCJkZWZpbml0aW9ucyIsInJlc2V0SW5qZWN0ZWRTdHlsZSIsImZsdXNoVG9BcnJheSIsInJldCIsImNzc1J1bGVzIiwicXVlcnlTZWxlY3RvciIsImhlYWQiLCJzaGVldCIsInN0eWxlU2hlZXQiLCJpbnNlcnRSdWxlIiwibnVtUnVsZXMiLCJydWxlIiwiaW5uZXJUZXh0IiwiaW5qZWN0U3R5bGVUYWciLCJhZGRSZW5kZXJlZENsYXNzTmFtZXMiLCJjbGFzc05hbWVzIiwiY2xhc3NOYW1lIiwicHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMiLCJzdHlsZURlZmluaXRpb25zIiwiY2xhc3NOYW1lQml0cyIsImRlZmluaXRpb25CaXRzIiwiZGVmIiwiX25hbWUiLCJfZGVmaW5pdGlvbiIsIl9sZW4iLCJpbmplY3RBbmRHZXRDbGFzc05hbWUiLCJ1bm1pbmlmaWVkSGFzaEZuIiwiaGFzaEZuIiwiU3R5bGVTaGVldCIsInNoZWV0RGVmaW5pdGlvbiIsIm1hcHBlZFNoZWV0RGVmaW5pdGlvbiIsInN0cmluZ1ZhbCIsInJlaHlkcmF0ZSIsInJlbmRlcmVkQ2xhc3NOYW1lcyIsIlN0eWxlU2hlZXRTZXJ2ZXIiLCJyZW5kZXJTdGF0aWMiLCJyZW5kZXJGdW5jIiwic3RhcnRCdWZmZXJpbmciLCJodG1sIiwiY3NzIiwiY29udGVudCIsIkFwaHJvZGl0ZSIsIm1ha2VFeHBvcnRzIiwiZXh0ZW5zaW9ucyIsImV4dGVuc2lvblNlbGVjdG9ySGFuZGxlcnMiLCJleHRlbnNpb24iLCJzZWxlY3RvckhhbmRsZXIiLCJTdHlsZVNoZWV0VGVzdFV0aWxzIiwibWluaWZ5Iiwic2hvdWxkTWluaWZ5IiwiX2tleSIsInJlc2V0IiwidXNlciIsImlzTG9nZ2VkSW4iLCJBcHBDb250ZXh0IiwiUmVhY3QiLCJsb2dPdXQiLCJIZWFkZXIiLCJzdHlsZXMiLCJoZWFkZXIiLCJsb2dvIiwiYWx0IiwidGl0bGUiLCJsb2dvdXRTZWN0aW9uIiwibG9nb3V0U2VjdGlvblNwYW4iLCJzY3JlZW5TaXplIiwiYm9yZGVyQm90dG9tIiwibWFyZ2luIiwiZm9udFNpemUiLCJyaWdodCIsInBhZGRpbmdSaWdodCIsImZvbnRTdHlsZSIsIkxvZ2luIiwiZW5hYmxlU3VibWl0IiwiaGFuZGxlTG9naW5TdWJtaXQiLCJoYW5kbGVDaGFuZ2VFbWFpbCIsImhhbmRsZUNoYW5nZVBhc3N3b3JkIiwibG9nSW4iLCJyb2xlIiwibG9naW4iLCJvblN1Ym1pdCIsImh0bWxGb3IiLCJpbnAiLCJvbkNoYW5nZSIsImJ0biIsInBhZGRpbmciLCJib3JkZXIiLCJnZXRGdWxsWWVhciIsIk5vdGlmaWNhdGlvbkl0ZW0iLCJtYXJrQXNSZWFkIiwidXJnZW50IiwiZGF0YS1ub3RpZmljYXRpb24tdHlwZSIsIk5hTiIsInByb3BUeXBlcyIsIm9uU21hbGwiLCJsaXN0U3R5bGUiLCJOb3RpZmljYXRpb25zIiwibmV4dFByb3BzIiwibGlzdE5vdGlmaWNhdGlvbnMiLCJkaXNwbGF5RHJhd2VyIiwiaGFuZGxlRGlzcGxheURyYXdlciIsImhhbmRsZUhpZGVEcmF3ZXIiLCJzaG93Iiwic2hvd09mZiIsInNob3dPbiIsIm1lbnVJdGVtIiwibm90aWZpY2F0aW9ucyIsIm5vdGlmaWNhdGlvbiIsImFyaWEtbGFiZWwiLCJiYWNrZ3JvdW5kIiwib3V0bGluZSIsImNsb3NlX2ljb24iLCJOb3RpZmljYXRpb25JdGVtU2hhcGUiLCJmbG9hdCIsImFuaW1hdGlvbkR1cmF0aW9uIiwiYW5pbWF0aW9uRmlsbE1vZGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJ0ZXh0QWxpZ24iLCJtYXJnaW5SaWdodCIsInRyYW5zZm9ybSIsIkNvdXJzZUxpc3RSb3ciLCJpc0hlYWRlciIsInRleHRGaXJzdENlbGwiLCJ0ZXh0U2Vjb25kQ2VsbCIsImJnQ29sb3IiLCJjb2xTcGFuIiwiYm9yZGVyVG9wIiwiY3JlZGl0IiwiQ291cnNlTGlzdCIsImxpc3RDb3Vyc2VzIiwiY291cnNlTGlzdCIsImNvdXJzZSIsIkNvdXJzZVNoYXBlIiwiYm9yZGVyQ29sbGFwc2UiLCJCb2R5U2VjdGlvbiIsImJvZHlTZWN0aW9uIiwiaGVhZGluZyIsIm1hcmdpblRvcCIsIkJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSIsImJvZHlTZWN0aW9uV2l0aE1hcmdpbiIsImJveVNlY3Rpb25XaXRoTWFyZ2luIiwiQXBwIiwiaGFuZGxlTG9nb3V0IiwiYWxlcnQiLCJmb290ZXIiLCJib3R0b20iLCJSZWFjdERPTSIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiO3dDQUdBLElBQUlBLEVBQVUsRUFBUSxLQUVsQkMsRUFBWSxHQUdaQyxFQUFnQixHQUNoQkMsRUFBb0JILEVBQVFJLDBCQUVoQyxXQUNJLEdBQUlGLEVBQWNHLE9BQ2QsTUFBTUgsRUFBY0ksV0FhNUIsU0FBU0MsRUFBS0MsR0FDVixJQUFJQyxHQUVBQSxFQURBUixFQUFVSSxPQUNBSixFQUFVUyxNQUVWLElBQUlDLEdBRVZILEtBQU9BLEVBQ2ZSLEVBQVFTLEdBS1osU0FBU0UsSUFDTEMsS0FBS0osS0FBTyxLQWZoQkssRUFBT0MsUUFBVVAsRUFvQmpCSSxFQUFRSSxVQUFVQyxLQUFPLFdBQ3JCLElBQ0lKLEtBQUtKLEtBQUtRLE9BQ1osTUFBT0MsR0FDRFYsRUFBS1csUUFJTFgsRUFBS1csUUFBUUQsSUFLYmYsRUFBY2lCLEtBQUtGLEdBQ25CZCxLQUVOLFFBQ0VTLEtBQUtKLEtBQU8sS0FDWlAsRUFBVUEsRUFBVUksUUFBVU8sUSwyQkNsRHRDLFNBQVNaLEVBQVFRLEdBQ1JZLEVBQU1mLFFBQ1BnQixJQUlKRCxFQUFNQSxFQUFNZixRQUFVRyxFQVAxQkssRUFBT0MsUUFBVWQsRUFVakIsSUFPSXFCLEVBUEFELEVBQVEsR0FXUkUsRUFBUSxFQVlaLFNBQVNDLElBQ0wsS0FBT0QsRUFBUUYsRUFBTWYsUUFBUSxDQUN6QixJQUFJbUIsRUFBZUYsRUFVbkIsR0FQQUEsR0FBZ0IsRUFDaEJGLEVBQU1JLEdBQWNSLE9BTWhCTSxFQXBCRyxLQW9CZSxDQUdsQixJQUFLLElBQUlHLEVBQU8sRUFBR0MsRUFBWU4sRUFBTWYsT0FBU2lCLEVBQU9HLEVBQU9DLEVBQVdELElBQ25FTCxFQUFNSyxHQUFRTCxFQUFNSyxFQUFPSCxHQUUvQkYsRUFBTWYsUUFBVWlCLEVBQ2hCQSxFQUFRLEdBR2hCRixFQUFNZixPQUFTLEVBQ2ZpQixFQUFRLEVBY1osSUEwRFFLLEVBQ0FDLEVBQ0FDLEVBNURKQyxPQUEwQixJQUFYLEVBQUFDLEVBQXlCLEVBQUFBLEVBQVNDLEtBQ2pEQyxFQUEwQkgsRUFBTUksa0JBQW9CSixFQUFNSyx1QkEyRzlELFNBQVMvQixFQUF5QmdDLEdBQzlCLE9BQU8sV0FLSCxJQUFJQyxFQUFnQkMsV0FBV0MsRUFBYSxHQUl4Q0MsRUFBaUJDLFlBQVlGLEVBQWEsSUFFOUMsU0FBU0EsSUFHTEcsYUFBYUwsR0FDYk0sY0FBY0gsR0FDZEosTUEvRzJCLG1CQUE1QkgsR0E0Q0hOLEVBQVMsRUFDVEMsRUFBVyxJQUFJSyxFQTVDZ0NWLEdBNkMvQ00sRUFBT2UsU0FBU0MsZUFBZSxJQUNuQ2pCLEVBQVNrQixRQUFRakIsRUFBTSxDQUFDa0IsZUFBZSxJQTlDdkMxQixFQStDTyxXQUNITSxHQUFVQSxFQUNWRSxFQUFLbUIsS0FBT3JCLElBbkJoQk4sRUFBZWpCLEVBQXlCbUIsR0FRNUN2QixFQUFRcUIsYUFBZUEsRUFnRnZCckIsRUFBUUkseUJBQTJCQSxHLHFCQy9NbkMsSUFBSTZDLEVBQXdCQyxPQUFPRCxzQkFDL0JFLEVBQWlCRCxPQUFPbkMsVUFBVW9DLGVBQ2xDQyxFQUFtQkYsT0FBT25DLFVBQVVzQyxxQkFFeEMsU0FBU0MsRUFBU0MsR0FDakIsR0FBSUEsUUFDSCxNQUFNLElBQUlDLFVBQVUseURBR3JCLE9BQU9OLE9BQU9LLEdBK0NmMUMsRUFBT0MsUUE1Q1AsV0FDQyxJQUNDLElBQUtvQyxPQUFPTyxPQUNYLE9BQU8sRUFNUixJQUFJQyxFQUFRLElBQUlDLE9BQU8sT0FFdkIsR0FEQUQsRUFBTSxHQUFLLEtBQ2tDLE1BQXpDUixPQUFPVSxvQkFBb0JGLEdBQU8sR0FDckMsT0FBTyxFQUtSLElBREEsSUFBSUcsRUFBUSxHQUNIQyxFQUFJLEVBQUdBLEVBQUksR0FBSUEsSUFDdkJELEVBQU0sSUFBTUYsT0FBT0ksYUFBYUQsSUFBTUEsRUFLdkMsR0FBd0IsZUFIWFosT0FBT1Usb0JBQW9CQyxHQUFPRyxLQUFJLFNBQVVDLEdBQzVELE9BQU9KLEVBQU1JLE1BRUhDLEtBQUssSUFDZixPQUFPLEVBSVIsSUFBSUMsRUFBUSxHQUlaLE1BSEEsdUJBQXVCQyxNQUFNLElBQUlDLFNBQVEsU0FBVUMsR0FDbERILEVBQU1HLEdBQVVBLEtBR2YseUJBREVwQixPQUFPcUIsS0FBS3JCLE9BQU9PLE9BQU8sR0FBSVUsSUFBUUQsS0FBSyxJQU05QyxNQUFPTSxHQUVSLE9BQU8sR0FJUUMsR0FBb0J2QixPQUFPTyxPQUFTLFNBQVVpQixFQUFRQyxHQUt0RSxJQUpBLElBQUlDLEVBRUFDLEVBREFDLEVBQUt4QixFQUFTb0IsR0FHVEssRUFBSSxFQUFHQSxFQUFJQyxVQUFVM0UsT0FBUTBFLElBQUssQ0FHMUMsSUFBSyxJQUFJRSxLQUZUTCxFQUFPMUIsT0FBTzhCLFVBQVVELElBR25CNUIsRUFBZW5DLEtBQUs0RCxFQUFNSyxLQUM3QkgsRUFBR0csR0FBT0wsRUFBS0ssSUFJakIsR0FBSWhDLEVBQXVCLENBQzFCNEIsRUFBVTVCLEVBQXNCMkIsR0FDaEMsSUFBSyxJQUFJZCxFQUFJLEVBQUdBLEVBQUllLEVBQVF4RSxPQUFReUQsSUFDL0JWLEVBQWlCcEMsS0FBSzRELEVBQU1DLEVBQVFmLE1BQ3ZDZ0IsRUFBR0QsRUFBUWYsSUFBTWMsRUFBS0MsRUFBUWYsTUFNbEMsT0FBT2dCLEksMkJDL0VSLElBQUlJLEVBQXVCLEVBQVEsS0FFbkMsU0FBU0MsS0FDVCxTQUFTQyxLQUNUQSxFQUF1QkMsa0JBQW9CRixFQUUzQ3RFLEVBQU9DLFFBQVUsV0FDZixTQUFTd0UsRUFBS0MsRUFBT0MsRUFBVUMsRUFBZUMsRUFBVUMsRUFBY0MsR0FDcEUsR0FBSUEsSUFBV1YsRUFBZixDQUlBLElBQUlWLEVBQU0sSUFBSXFCLE1BQ1osbUxBS0YsTUFEQXJCLEVBQUlzQixLQUFPLHNCQUNMdEIsR0FHUixTQUFTdUIsSUFDUCxPQUFPVCxFQUZUQSxFQUFLVSxXQUFhVixFQU1sQixJQUFJVyxFQUFpQixDQUNuQkMsTUFBT1osRUFDUGEsS0FBTWIsRUFDTmMsS0FBTWQsRUFDTmUsT0FBUWYsRUFDUmdCLE9BQVFoQixFQUNSaUIsT0FBUWpCLEVBQ1JrQixPQUFRbEIsRUFFUm1CLElBQUtuQixFQUNMb0IsUUFBU1gsRUFDVFksUUFBU3JCLEVBQ1RzQixZQUFhdEIsRUFDYnVCLFdBQVlkLEVBQ1psRSxLQUFNeUQsRUFDTndCLFNBQVVmLEVBQ1ZnQixNQUFPaEIsRUFDUGlCLFVBQVdqQixFQUNYa0IsTUFBT2xCLEVBQ1BtQixNQUFPbkIsRUFFUG9CLGVBQWdCL0IsRUFDaEJDLGtCQUFtQkYsR0FLckIsT0FGQWMsRUFBZW1CLFVBQVluQixFQUVwQkEsSSxjQzdDUHBGLEVBQU9DLFFBQVUsRUFBUSxJQUFSLEkscUJDTm5CRCxFQUFPQyxRQUZvQixnRCwyQkNFZCxJQUFJdUcsRUFBRyxFQUFRLEtBQVNDLEVBQUUsRUFBUSxLQUFpQkMsRUFBRSxFQUFRLEtBQWEsU0FBU0MsRUFBRUMsR0FBRyxJQUFJLElBQUlDLEVBQUUseURBQXlERCxFQUFFRSxFQUFFLEVBQUVBLEVBQUUzQyxVQUFVM0UsT0FBT3NILElBQUlELEdBQUcsV0FBV0UsbUJBQW1CNUMsVUFBVTJDLElBQUksTUFBTSx5QkFBeUJGLEVBQUUsV0FBV0MsRUFBRSxpSEFBaUgsSUFBSUwsRUFBRyxNQUFNeEIsTUFBTTJCLEVBQUUsTUFBTSxJQUFJSyxFQUFHLElBQUlDLElBQUlDLEVBQUcsR0FBRyxTQUFTQyxFQUFHUCxFQUFFQyxHQUFHTyxFQUFHUixFQUFFQyxHQUFHTyxFQUFHUixFQUFFLFVBQVVDLEdBQzNlLFNBQVNPLEVBQUdSLEVBQUVDLEdBQVcsSUFBUkssRUFBR04sR0FBR0MsRUFBTUQsRUFBRSxFQUFFQSxFQUFFQyxFQUFFckgsT0FBT29ILElBQUlJLEVBQUdLLElBQUlSLEVBQUVELElBQ3pELElBQUlVLElBQUssb0JBQXFCQyxhQUFRLElBQXFCQSxPQUFPeEYsZUFBVSxJQUFxQndGLE9BQU94RixTQUFTeUYsZUFBZUMsRUFBRyw4VkFBOFZDLEVBQUdyRixPQUFPbkMsVUFBVW9DLGVBQ3JmcUYsRUFBRyxHQUFHQyxFQUFHLEdBQytNLFNBQVNDLEVBQUVqQixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsRUFBRUMsRUFBRTlHLEdBQUduQixLQUFLa0ksZ0JBQWdCLElBQUlwQixHQUFHLElBQUlBLEdBQUcsSUFBSUEsRUFBRTlHLEtBQUttSSxjQUFjSixFQUFFL0gsS0FBS29JLG1CQUFtQkosRUFBRWhJLEtBQUtxSSxnQkFBZ0J0QixFQUFFL0csS0FBS3NJLGFBQWF6QixFQUFFN0csS0FBS3VJLEtBQUt6QixFQUFFOUcsS0FBS3dJLFlBQVlQLEVBQUVqSSxLQUFLeUksa0JBQWtCdEgsRUFBRSxJQUFJdUgsRUFBRSxHQUNuYix1SUFBdUlsRixNQUFNLEtBQUtDLFNBQVEsU0FBU29ELEdBQUc2QixFQUFFN0IsR0FBRyxJQUFJaUIsRUFBRWpCLEVBQUUsR0FBRSxFQUFHQSxFQUFFLE1BQUssR0FBRyxNQUFNLENBQUMsQ0FBQyxnQkFBZ0Isa0JBQWtCLENBQUMsWUFBWSxTQUFTLENBQUMsVUFBVSxPQUFPLENBQUMsWUFBWSxlQUFlcEQsU0FBUSxTQUFTb0QsR0FBRyxJQUFJQyxFQUFFRCxFQUFFLEdBQUc2QixFQUFFNUIsR0FBRyxJQUFJZ0IsRUFBRWhCLEVBQUUsR0FBRSxFQUFHRCxFQUFFLEdBQUcsTUFBSyxHQUFHLE1BQU0sQ0FBQyxrQkFBa0IsWUFBWSxhQUFhLFNBQVNwRCxTQUFRLFNBQVNvRCxHQUFHNkIsRUFBRTdCLEdBQUcsSUFBSWlCLEVBQUVqQixFQUFFLEdBQUUsRUFBR0EsRUFBRThCLGNBQWMsTUFBSyxHQUFHLE1BQ3ZlLENBQUMsY0FBYyw0QkFBNEIsWUFBWSxpQkFBaUJsRixTQUFRLFNBQVNvRCxHQUFHNkIsRUFBRTdCLEdBQUcsSUFBSWlCLEVBQUVqQixFQUFFLEdBQUUsRUFBR0EsRUFBRSxNQUFLLEdBQUcsTUFBTSw4T0FBOE9yRCxNQUFNLEtBQUtDLFNBQVEsU0FBU29ELEdBQUc2QixFQUFFN0IsR0FBRyxJQUFJaUIsRUFBRWpCLEVBQUUsR0FBRSxFQUFHQSxFQUFFOEIsY0FBYyxNQUFLLEdBQUcsTUFDcmIsQ0FBQyxVQUFVLFdBQVcsUUFBUSxZQUFZbEYsU0FBUSxTQUFTb0QsR0FBRzZCLEVBQUU3QixHQUFHLElBQUlpQixFQUFFakIsRUFBRSxHQUFFLEVBQUdBLEVBQUUsTUFBSyxHQUFHLE1BQU0sQ0FBQyxVQUFVLFlBQVlwRCxTQUFRLFNBQVNvRCxHQUFHNkIsRUFBRTdCLEdBQUcsSUFBSWlCLEVBQUVqQixFQUFFLEdBQUUsRUFBR0EsRUFBRSxNQUFLLEdBQUcsTUFBTSxDQUFDLE9BQU8sT0FBTyxPQUFPLFFBQVFwRCxTQUFRLFNBQVNvRCxHQUFHNkIsRUFBRTdCLEdBQUcsSUFBSWlCLEVBQUVqQixFQUFFLEdBQUUsRUFBR0EsRUFBRSxNQUFLLEdBQUcsTUFBTSxDQUFDLFVBQVUsU0FBU3BELFNBQVEsU0FBU29ELEdBQUc2QixFQUFFN0IsR0FBRyxJQUFJaUIsRUFBRWpCLEVBQUUsR0FBRSxFQUFHQSxFQUFFOEIsY0FBYyxNQUFLLEdBQUcsTUFBTSxJQUFJQyxFQUFHLGdCQUFnQixTQUFTQyxFQUFHaEMsR0FBRyxPQUFPQSxFQUFFLEdBQUdpQyxjQUkzWSxTQUFTQyxFQUFHbEMsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUcsSUFBSUMsRUFBRVUsRUFBRW5HLGVBQWV1RSxHQUFHNEIsRUFBRTVCLEdBQUcsTUFBVyxPQUFPa0IsRUFBRSxJQUFJQSxFQUFFTyxNQUFLUixHQUFPLEVBQUVqQixFQUFFckgsU0FBUyxNQUFNcUgsRUFBRSxJQUFJLE1BQU1BLEVBQUUsTUFBSSxNQUFNQSxFQUFFLElBQUksTUFBTUEsRUFBRSxPQVBuSixTQUFZRCxFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxHQUFHLE1BQU9qQixHQURnRyxTQUFZRCxFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxHQUFHLE9BQU9oQixHQUFHLElBQUlBLEVBQUV3QixLQUFLLE9BQU0sRUFBRyxjQUFjekIsR0FBRyxJQUFLLFdBQVcsSUFBSyxTQUFTLE9BQU0sRUFBRyxJQUFLLFVBQVUsT0FBR2lCLElBQWMsT0FBT2hCLEdBQVNBLEVBQUVtQixnQkFBbUQsV0FBbkNyQixFQUFFQSxFQUFFOEIsY0FBY0ssTUFBTSxFQUFFLEtBQXNCLFVBQVVuQyxHQUFFLFFBQVEsT0FBTSxHQUMvVG9DLENBQUdwQyxFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxPQUFNLEVBQUcsR0FBR0EsRUFBRSxPQUFNLEVBQUcsR0FBRyxPQUFPaEIsRUFBRSxPQUFPQSxFQUFFd0IsTUFBTSxLQUFLLEVBQUUsT0FBT3pCLEVBQUUsS0FBSyxFQUFFLE9BQU0sSUFBS0EsRUFBRSxLQUFLLEVBQUUsT0FBT29DLE1BQU1wQyxHQUFHLEtBQUssRUFBRSxPQUFPb0MsTUFBTXBDLElBQUksRUFBRUEsRUFBRSxPQUFNLEVBT3JEcUMsQ0FBR3JDLEVBQUVDLEVBQUVpQixFQUFFRCxLQUFLaEIsRUFBRSxNQUFNZ0IsR0FBRyxPQUFPQyxFQVJwTCxTQUFZbkIsR0FBRyxRQUFHYyxFQUFHdkgsS0FBS3lILEVBQUdoQixLQUFlYyxFQUFHdkgsS0FBS3dILEVBQUdmLEtBQWVhLEVBQUcwQixLQUFLdkMsR0FBVWdCLEVBQUdoQixJQUFHLEdBQUdlLEVBQUdmLElBQUcsR0FBUyxJQVFzRXdDLENBQUd2QyxLQUFLLE9BQU9DLEVBQUVGLEVBQUV5QyxnQkFBZ0J4QyxHQUFHRCxFQUFFMEMsYUFBYXpDLEVBQUUsR0FBR0MsSUFBSWlCLEVBQUVLLGdCQUFnQnhCLEVBQUVtQixFQUFFTSxjQUFjLE9BQU92QixFQUFFLElBQUlpQixFQUFFTyxNQUFRLEdBQUd4QixHQUFHRCxFQUFFa0IsRUFBRUcsY0FBY0osRUFBRUMsRUFBRUksbUJBQW1CLE9BQU9yQixFQUFFRixFQUFFeUMsZ0JBQWdCeEMsSUFBYUMsRUFBRSxLQUFYaUIsRUFBRUEsRUFBRU8sT0FBYyxJQUFJUCxJQUFHLElBQUtqQixFQUFFLEdBQUcsR0FBR0EsRUFBRWdCLEVBQUVsQixFQUFFMkMsZUFBZXpCLEVBQUVqQixFQUFFQyxHQUFHRixFQUFFMEMsYUFBYXpDLEVBQUVDLE1BSDVkLDBqQ0FBMGpDdkQsTUFBTSxLQUFLQyxTQUFRLFNBQVNvRCxHQUFHLElBQUlDLEVBQUVELEVBQUU0QyxRQUFRYixFQUN6bUNDLEdBQUlILEVBQUU1QixHQUFHLElBQUlnQixFQUFFaEIsRUFBRSxHQUFFLEVBQUdELEVBQUUsTUFBSyxHQUFHLE1BQU0sMkVBQTJFckQsTUFBTSxLQUFLQyxTQUFRLFNBQVNvRCxHQUFHLElBQUlDLEVBQUVELEVBQUU0QyxRQUFRYixFQUFHQyxHQUFJSCxFQUFFNUIsR0FBRyxJQUFJZ0IsRUFBRWhCLEVBQUUsR0FBRSxFQUFHRCxFQUFFLGdDQUErQixHQUFHLE1BQU0sQ0FBQyxXQUFXLFdBQVcsYUFBYXBELFNBQVEsU0FBU29ELEdBQUcsSUFBSUMsRUFBRUQsRUFBRTRDLFFBQVFiLEVBQUdDLEdBQUlILEVBQUU1QixHQUFHLElBQUlnQixFQUFFaEIsRUFBRSxHQUFFLEVBQUdELEVBQUUsd0NBQXVDLEdBQUcsTUFBTSxDQUFDLFdBQVcsZUFBZXBELFNBQVEsU0FBU29ELEdBQUc2QixFQUFFN0IsR0FBRyxJQUFJaUIsRUFBRWpCLEVBQUUsR0FBRSxFQUFHQSxFQUFFOEIsY0FBYyxNQUFLLEdBQUcsTUFDL2NELEVBQUVnQixVQUFVLElBQUk1QixFQUFFLFlBQVksR0FBRSxFQUFHLGFBQWEsZ0NBQStCLEdBQUcsR0FBSSxDQUFDLE1BQU0sT0FBTyxTQUFTLGNBQWNyRSxTQUFRLFNBQVNvRCxHQUFHNkIsRUFBRTdCLEdBQUcsSUFBSWlCLEVBQUVqQixFQUFFLEdBQUUsRUFBR0EsRUFBRThCLGNBQWMsTUFBSyxHQUFHLE1BRXpMLElBQUlnQixFQUFHbEQsRUFBR21ELG1EQUFtREMsRUFBRyxNQUFNQyxFQUFHLE1BQU1DLEVBQUcsTUFBTUMsRUFBRyxNQUFNQyxFQUFHLE1BQU1DLEVBQUcsTUFBTUMsRUFBRyxNQUFNQyxFQUFHLE1BQU1DLEVBQUcsTUFBTUMsRUFBRyxNQUFNQyxFQUFHLE1BQU1DLEVBQUcsTUFBTUMsRUFBRyxNQUFNQyxFQUFHLE1BQU1DLEVBQUcsTUFBTUMsRUFBRyxNQUFNQyxFQUFHLE1BQ2hOLEdBQUcsbUJBQW9CQyxRQUFRQSxPQUFPQyxJQUFJLENBQUMsSUFBSUMsRUFBRUYsT0FBT0MsSUFBSWxCLEVBQUdtQixFQUFFLGlCQUFpQmxCLEVBQUdrQixFQUFFLGdCQUFnQmpCLEVBQUdpQixFQUFFLGtCQUFrQmhCLEVBQUdnQixFQUFFLHFCQUFxQmYsRUFBR2UsRUFBRSxrQkFBa0JkLEVBQUdjLEVBQUUsa0JBQWtCYixFQUFHYSxFQUFFLGlCQUFpQlosRUFBR1ksRUFBRSxxQkFBcUJYLEVBQUdXLEVBQUUsa0JBQWtCVixFQUFHVSxFQUFFLHVCQUF1QlQsRUFBR1MsRUFBRSxjQUFjUixFQUFHUSxFQUFFLGNBQWNQLEVBQUdPLEVBQUUsZUFBZUEsRUFBRSxlQUFlTixFQUFHTSxFQUFFLG1CQUFtQkwsRUFBR0ssRUFBRSwwQkFBMEJKLEVBQUdJLEVBQUUsbUJBQW1CSCxFQUFHRyxFQUFFLHVCQUN4YyxJQUFtTEMsRUFBL0tDLEVBQUcsbUJBQW9CSixRQUFRQSxPQUFPSyxTQUFTLFNBQVNDLEVBQUd2RSxHQUFHLE9BQUcsT0FBT0EsR0FBRyxpQkFBa0JBLEVBQVMsS0FBd0MsbUJBQW5DQSxFQUFFcUUsR0FBSXJFLEVBQUVxRSxJQUFLckUsRUFBRSxlQUEwQ0EsRUFBRSxLQUFZLFNBQVN3RSxFQUFHeEUsR0FBRyxRQUFHLElBQVNvRSxFQUFHLElBQUksTUFBTWhHLFFBQVMsTUFBTThCLEdBQUcsSUFBSUQsRUFBRUMsRUFBRXVFLE1BQU1DLE9BQU9DLE1BQU0sZ0JBQWdCUCxFQUFHbkUsR0FBR0EsRUFBRSxJQUFJLEdBQUcsTUFBTSxLQUFLbUUsRUFBR3BFLEVBQUUsSUFBSTRFLEdBQUcsRUFDalUsU0FBU0MsRUFBRzdFLEVBQUVDLEdBQUcsSUFBSUQsR0FBRzRFLEVBQUcsTUFBTSxHQUFHQSxHQUFHLEVBQUcsSUFBSTFFLEVBQUU5QixNQUFNMEcsa0JBQWtCMUcsTUFBTTBHLHVCQUFrQixFQUFPLElBQUksR0FBRzdFLEVBQUUsR0FBR0EsRUFBRSxXQUFXLE1BQU03QixTQUFVM0MsT0FBT3NKLGVBQWU5RSxFQUFFM0csVUFBVSxRQUFRLENBQUMwTCxJQUFJLFdBQVcsTUFBTTVHLFdBQVksaUJBQWtCNkcsU0FBU0EsUUFBUUMsVUFBVSxDQUFDLElBQUlELFFBQVFDLFVBQVVqRixFQUFFLElBQUksTUFBTWtGLEdBQUcsSUFBSWpFLEVBQUVpRSxFQUFFRixRQUFRQyxVQUFVbEYsRUFBRSxHQUFHQyxPQUFPLENBQUMsSUFBSUEsRUFBRTFHLE9BQU8sTUFBTTRMLEdBQUdqRSxFQUFFaUUsRUFBRW5GLEVBQUV6RyxLQUFLMEcsRUFBRTNHLGVBQWUsQ0FBQyxJQUFJLE1BQU04RSxRQUFTLE1BQU0rRyxHQUFHakUsRUFBRWlFLEVBQUVuRixLQUFLLE1BQU1tRixHQUFHLEdBQUdBLEdBQUdqRSxHQUFHLGlCQUFrQmlFLEVBQUVWLE1BQU0sQ0FBQyxJQUFJLElBQUl0RCxFQUFFZ0UsRUFBRVYsTUFBTTlILE1BQU0sTUFDbmZ5RSxFQUFFRixFQUFFdUQsTUFBTTlILE1BQU0sTUFBTXJDLEVBQUU2RyxFQUFFdkksT0FBTyxFQUFFd00sRUFBRWhFLEVBQUV4SSxPQUFPLEVBQUUsR0FBRzBCLEdBQUcsR0FBRzhLLEdBQUdqRSxFQUFFN0csS0FBSzhHLEVBQUVnRSxJQUFJQSxJQUFJLEtBQUssR0FBRzlLLEdBQUcsR0FBRzhLLEVBQUU5SyxJQUFJOEssSUFBSSxHQUFHakUsRUFBRTdHLEtBQUs4RyxFQUFFZ0UsR0FBRyxDQUFDLEdBQUcsSUFBSTlLLEdBQUcsSUFBSThLLEVBQUcsTUFBTTlLLElBQVEsSUFBSjhLLEdBQVNqRSxFQUFFN0csS0FBSzhHLEVBQUVnRSxHQUFHLE1BQU0sS0FBS2pFLEVBQUU3RyxHQUFHc0ksUUFBUSxXQUFXLGNBQWMsR0FBR3RJLEdBQUcsR0FBRzhLLEdBQUcsUUFBUSxRQUFRUixHQUFHLEVBQUd4RyxNQUFNMEcsa0JBQWtCNUUsRUFBRSxPQUFPRixFQUFFQSxFQUFFQSxFQUFFcUYsYUFBYXJGLEVBQUUzQixLQUFLLElBQUltRyxFQUFHeEUsR0FBRyxHQUM3VCxTQUFTc0YsRUFBR3RGLEdBQUcsT0FBT0EsRUFBRXVGLEtBQUssS0FBSyxFQUFFLE9BQU9mLEVBQUd4RSxFQUFFMEIsTUFBTSxLQUFLLEdBQUcsT0FBTzhDLEVBQUcsUUFBUSxLQUFLLEdBQUcsT0FBT0EsRUFBRyxZQUFZLEtBQUssR0FBRyxPQUFPQSxFQUFHLGdCQUFnQixLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxPQUFTSyxFQUFHN0UsRUFBRTBCLE1BQUssR0FBTSxLQUFLLEdBQUcsT0FBU21ELEVBQUc3RSxFQUFFMEIsS0FBSzhELFFBQU8sR0FBTSxLQUFLLEdBQUcsT0FBU1gsRUFBRzdFLEVBQUUwQixLQUFLK0QsU0FBUSxHQUFNLEtBQUssRUFBRSxPQUFTWixFQUFHN0UsRUFBRTBCLE1BQUssR0FBTSxRQUFRLE1BQU0sSUFDOVQsU0FBU2dFLEVBQUcxRixHQUFHLEdBQUcsTUFBTUEsRUFBRSxPQUFPLEtBQUssR0FBRyxtQkFBb0JBLEVBQUUsT0FBT0EsRUFBRXFGLGFBQWFyRixFQUFFM0IsTUFBTSxLQUFLLEdBQUcsaUJBQWtCMkIsRUFBRSxPQUFPQSxFQUFFLE9BQU9BLEdBQUcsS0FBS2tELEVBQUcsTUFBTSxXQUFXLEtBQUtELEVBQUcsTUFBTSxTQUFTLEtBQUtHLEVBQUcsTUFBTSxXQUFXLEtBQUtELEVBQUcsTUFBTSxhQUFhLEtBQUtLLEVBQUcsTUFBTSxXQUFXLEtBQUtDLEVBQUcsTUFBTSxlQUFlLEdBQUcsaUJBQWtCekQsRUFBRSxPQUFPQSxFQUFFMkYsVUFBVSxLQUFLckMsRUFBRyxPQUFPdEQsRUFBRXFGLGFBQWEsV0FBVyxZQUFZLEtBQUtoQyxFQUFHLE9BQU9yRCxFQUFFNEYsU0FBU1AsYUFBYSxXQUFXLFlBQVksS0FBSzlCLEVBQUcsSUFBSXRELEVBQUVELEVBQUV3RixPQUNuZCxPQUQwZHZGLEVBQUVBLEVBQUVvRixhQUFhcEYsRUFBRTVCLE1BQU0sR0FDNWUyQixFQUFFcUYsY0FBYyxLQUFLcEYsRUFBRSxjQUFjQSxFQUFFLElBQUksY0FBYyxLQUFLeUQsRUFBRyxPQUFPZ0MsRUFBRzFGLEVBQUUwQixNQUFNLEtBQUtrQyxFQUFHLE9BQU84QixFQUFHMUYsRUFBRXlGLFNBQVMsS0FBSzlCLEVBQUcxRCxFQUFFRCxFQUFFNkYsU0FBUzdGLEVBQUVBLEVBQUU4RixNQUFNLElBQUksT0FBT0osRUFBRzFGLEVBQUVDLElBQUksTUFBTUMsS0FBSyxPQUFPLEtBQUssU0FBUzZGLEVBQUcvRixHQUFHLGNBQWNBLEdBQUcsSUFBSyxVQUFVLElBQUssU0FBUyxJQUFLLFNBQVMsSUFBSyxTQUFTLElBQUssWUFBWSxPQUFPQSxFQUFFLFFBQVEsTUFBTSxJQUFJLFNBQVNnRyxFQUFHaEcsR0FBRyxJQUFJQyxFQUFFRCxFQUFFMEIsS0FBSyxPQUFPMUIsRUFBRUEsRUFBRWlHLFdBQVcsVUFBVWpHLEVBQUU4QixnQkFBZ0IsYUFBYTdCLEdBQUcsVUFBVUEsR0FFMVosU0FBU2lHLEVBQUdsRyxHQUFHQSxFQUFFbUcsZ0JBQWdCbkcsRUFBRW1HLGNBRHZELFNBQVluRyxHQUFHLElBQUlDLEVBQUUrRixFQUFHaEcsR0FBRyxVQUFVLFFBQVFFLEVBQUV6RSxPQUFPMksseUJBQXlCcEcsRUFBRXFHLFlBQVkvTSxVQUFVMkcsR0FBR2lCLEVBQUUsR0FBR2xCLEVBQUVDLEdBQUcsSUFBSUQsRUFBRXRFLGVBQWV1RSxTQUFJLElBQXFCQyxHQUFHLG1CQUFvQkEsRUFBRW9HLEtBQUssbUJBQW9CcEcsRUFBRThFLElBQUksQ0FBQyxJQUFJN0QsRUFBRWpCLEVBQUVvRyxJQUFJbEYsRUFBRWxCLEVBQUU4RSxJQUFpTCxPQUE3S3ZKLE9BQU9zSixlQUFlL0UsRUFBRUMsRUFBRSxDQUFDc0csY0FBYSxFQUFHRCxJQUFJLFdBQVcsT0FBT25GLEVBQUU1SCxLQUFLSixPQUFPNkwsSUFBSSxTQUFTaEYsR0FBR2tCLEVBQUUsR0FBR2xCLEVBQUVvQixFQUFFN0gsS0FBS0osS0FBSzZHLE1BQU12RSxPQUFPc0osZUFBZS9FLEVBQUVDLEVBQUUsQ0FBQ3VHLFdBQVd0RyxFQUFFc0csYUFBbUIsQ0FBQ0MsU0FBUyxXQUFXLE9BQU92RixHQUFHd0YsU0FBUyxTQUFTMUcsR0FBR2tCLEVBQUUsR0FBR2xCLEdBQUcyRyxhQUFhLFdBQVczRyxFQUFFbUcsY0FDeGYsWUFBWW5HLEVBQUVDLE1BQXVEMkcsQ0FBRzVHLElBQUksU0FBUzZHLEVBQUc3RyxHQUFHLElBQUlBLEVBQUUsT0FBTSxFQUFHLElBQUlDLEVBQUVELEVBQUVtRyxjQUFjLElBQUlsRyxFQUFFLE9BQU0sRUFBRyxJQUFJQyxFQUFFRCxFQUFFd0csV0FBZXZGLEVBQUUsR0FBcUQsT0FBbERsQixJQUFJa0IsRUFBRThFLEVBQUdoRyxHQUFHQSxFQUFFOEcsUUFBUSxPQUFPLFFBQVE5RyxFQUFFK0csUUFBTy9HLEVBQUVrQixLQUFhaEIsSUFBR0QsRUFBRXlHLFNBQVMxRyxJQUFHLEdBQU8sU0FBU2dILEVBQUdoSCxHQUF3RCxRQUFHLEtBQXhEQSxFQUFFQSxJQUFJLG9CQUFxQjdFLFNBQVNBLGNBQVMsSUFBa0MsT0FBTyxLQUFLLElBQUksT0FBTzZFLEVBQUVpSCxlQUFlakgsRUFBRWtILEtBQUssTUFBTWpILEdBQUcsT0FBT0QsRUFBRWtILE1BQy9aLFNBQVNDLEVBQUduSCxFQUFFQyxHQUFHLElBQUlDLEVBQUVELEVBQUU2RyxRQUFRLE9BQU9qSCxFQUFFLEdBQUdJLEVBQUUsQ0FBQ21ILG9CQUFlLEVBQU9DLGtCQUFhLEVBQU9OLFdBQU0sRUFBT0QsUUFBUSxNQUFNNUcsRUFBRUEsRUFBRUYsRUFBRXNILGNBQWNDLGlCQUFpQixTQUFTQyxHQUFHeEgsRUFBRUMsR0FBRyxJQUFJQyxFQUFFLE1BQU1ELEVBQUVvSCxhQUFhLEdBQUdwSCxFQUFFb0gsYUFBYW5HLEVBQUUsTUFBTWpCLEVBQUU2RyxRQUFRN0csRUFBRTZHLFFBQVE3RyxFQUFFbUgsZUFBZWxILEVBQUU2RixFQUFHLE1BQU05RixFQUFFOEcsTUFBTTlHLEVBQUU4RyxNQUFNN0csR0FBR0YsRUFBRXNILGNBQWMsQ0FBQ0MsZUFBZXJHLEVBQUV1RyxhQUFhdkgsRUFBRXdILFdBQVcsYUFBYXpILEVBQUV5QixNQUFNLFVBQVV6QixFQUFFeUIsS0FBSyxNQUFNekIsRUFBRTZHLFFBQVEsTUFBTTdHLEVBQUU4RyxPQUFPLFNBQVNZLEdBQUczSCxFQUFFQyxHQUFlLE9BQVpBLEVBQUVBLEVBQUU2RyxVQUFpQjVFLEVBQUdsQyxFQUFFLFVBQVVDLEdBQUUsR0FDM2QsU0FBUzJILEdBQUc1SCxFQUFFQyxHQUFHMEgsR0FBRzNILEVBQUVDLEdBQUcsSUFBSUMsRUFBRTZGLEVBQUc5RixFQUFFOEcsT0FBTzdGLEVBQUVqQixFQUFFeUIsS0FBSyxHQUFHLE1BQU14QixFQUFLLFdBQVdnQixHQUFNLElBQUloQixHQUFHLEtBQUtGLEVBQUUrRyxPQUFPL0csRUFBRStHLE9BQU83RyxLQUFFRixFQUFFK0csTUFBTSxHQUFHN0csR0FBT0YsRUFBRStHLFFBQVEsR0FBRzdHLElBQUlGLEVBQUUrRyxNQUFNLEdBQUc3RyxRQUFRLEdBQUcsV0FBV2dCLEdBQUcsVUFBVUEsRUFBOEIsWUFBM0JsQixFQUFFeUMsZ0JBQWdCLFNBQWdCeEMsRUFBRXZFLGVBQWUsU0FBU21NLEdBQUc3SCxFQUFFQyxFQUFFeUIsS0FBS3hCLEdBQUdELEVBQUV2RSxlQUFlLGlCQUFpQm1NLEdBQUc3SCxFQUFFQyxFQUFFeUIsS0FBS3FFLEVBQUc5RixFQUFFb0gsZUFBZSxNQUFNcEgsRUFBRTZHLFNBQVMsTUFBTTdHLEVBQUVtSCxpQkFBaUJwSCxFQUFFb0gsaUJBQWlCbkgsRUFBRW1ILGdCQUNuWixTQUFTVSxHQUFHOUgsRUFBRUMsRUFBRUMsR0FBRyxHQUFHRCxFQUFFdkUsZUFBZSxVQUFVdUUsRUFBRXZFLGVBQWUsZ0JBQWdCLENBQUMsSUFBSXdGLEVBQUVqQixFQUFFeUIsS0FBSyxLQUFLLFdBQVdSLEdBQUcsVUFBVUEsUUFBRyxJQUFTakIsRUFBRThHLE9BQU8sT0FBTzlHLEVBQUU4RyxPQUFPLE9BQU85RyxFQUFFLEdBQUdELEVBQUVzSCxjQUFjRyxhQUFhdkgsR0FBR0QsSUFBSUQsRUFBRStHLFFBQVEvRyxFQUFFK0csTUFBTTlHLEdBQUdELEVBQUVxSCxhQUFhcEgsRUFBVyxNQUFUQyxFQUFFRixFQUFFM0IsUUFBYzJCLEVBQUUzQixLQUFLLElBQUkyQixFQUFFb0gsaUJBQWlCcEgsRUFBRXNILGNBQWNDLGVBQWUsS0FBS3JILElBQUlGLEVBQUUzQixLQUFLNkIsR0FDdlYsU0FBUzJILEdBQUc3SCxFQUFFQyxFQUFFQyxHQUFNLFdBQVdELEdBQUcrRyxFQUFHaEgsRUFBRStILGlCQUFpQi9ILElBQUUsTUFBTUUsRUFBRUYsRUFBRXFILGFBQWEsR0FBR3JILEVBQUVzSCxjQUFjRyxhQUFhekgsRUFBRXFILGVBQWUsR0FBR25ILElBQUlGLEVBQUVxSCxhQUFhLEdBQUduSCxJQUF3RixTQUFTOEgsR0FBR2hJLEVBQUVDLEdBQTZELE9BQTFERCxFQUFFSCxFQUFFLENBQUNvSSxjQUFTLEdBQVFoSSxJQUFNQSxFQUFsSSxTQUFZRCxHQUFHLElBQUlDLEVBQUUsR0FBdUQsT0FBcERMLEVBQUdzSSxTQUFTdEwsUUFBUW9ELEdBQUUsU0FBU0EsR0FBRyxNQUFNQSxJQUFJQyxHQUFHRCxNQUFZQyxFQUFpRGtJLENBQUdsSSxFQUFFZ0ksYUFBVWpJLEVBQUVpSSxTQUFTaEksR0FBU0QsRUFDdlUsU0FBU29JLEdBQUdwSSxFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBZSxHQUFabEIsRUFBRUEsRUFBRXFJLFFBQVdwSSxFQUFFLENBQUNBLEVBQUUsR0FBRyxJQUFJLElBQUlrQixFQUFFLEVBQUVBLEVBQUVqQixFQUFFdEgsT0FBT3VJLElBQUlsQixFQUFFLElBQUlDLEVBQUVpQixLQUFJLEVBQUcsSUFBSWpCLEVBQUUsRUFBRUEsRUFBRUYsRUFBRXBILE9BQU9zSCxJQUFJaUIsRUFBRWxCLEVBQUV2RSxlQUFlLElBQUlzRSxFQUFFRSxHQUFHNkcsT0FBTy9HLEVBQUVFLEdBQUdvSSxXQUFXbkgsSUFBSW5CLEVBQUVFLEdBQUdvSSxTQUFTbkgsR0FBR0EsR0FBR0QsSUFBSWxCLEVBQUVFLEdBQUdxSSxpQkFBZ0IsT0FBUSxDQUFtQixJQUFsQnJJLEVBQUUsR0FBRzZGLEVBQUc3RixHQUFHRCxFQUFFLEtBQVNrQixFQUFFLEVBQUVBLEVBQUVuQixFQUFFcEgsT0FBT3VJLElBQUksQ0FBQyxHQUFHbkIsRUFBRW1CLEdBQUc0RixRQUFRN0csRUFBaUQsT0FBOUNGLEVBQUVtQixHQUFHbUgsVUFBUyxPQUFHcEgsSUFBSWxCLEVBQUVtQixHQUFHb0gsaUJBQWdCLElBQVcsT0FBT3RJLEdBQUdELEVBQUVtQixHQUFHcUgsV0FBV3ZJLEVBQUVELEVBQUVtQixJQUFJLE9BQU9sQixJQUFJQSxFQUFFcUksVUFBUyxJQUNwWSxTQUFTRyxHQUFHekksRUFBRUMsR0FBRyxHQUFHLE1BQU1BLEVBQUV5SSx3QkFBd0IsTUFBTXRLLE1BQU0yQixFQUFFLEtBQUssT0FBT0YsRUFBRSxHQUFHSSxFQUFFLENBQUM4RyxXQUFNLEVBQU9NLGtCQUFhLEVBQU9ZLFNBQVMsR0FBR2pJLEVBQUVzSCxjQUFjRyxlQUFlLFNBQVNrQixHQUFHM0ksRUFBRUMsR0FBRyxJQUFJQyxFQUFFRCxFQUFFOEcsTUFBTSxHQUFHLE1BQU03RyxFQUFFLENBQStCLEdBQTlCQSxFQUFFRCxFQUFFZ0ksU0FBU2hJLEVBQUVBLEVBQUVvSCxhQUFnQixNQUFNbkgsRUFBRSxDQUFDLEdBQUcsTUFBTUQsRUFBRSxNQUFNN0IsTUFBTTJCLEVBQUUsS0FBSyxHQUFHNkksTUFBTUMsUUFBUTNJLEdBQUcsQ0FBQyxLQUFLLEdBQUdBLEVBQUV0SCxRQUFRLE1BQU13RixNQUFNMkIsRUFBRSxLQUFLRyxFQUFFQSxFQUFFLEdBQUdELEVBQUVDLEVBQUUsTUFBTUQsSUFBSUEsRUFBRSxJQUFJQyxFQUFFRCxFQUFFRCxFQUFFc0gsY0FBYyxDQUFDRyxhQUFhMUIsRUFBRzdGLElBQy9ZLFNBQVM0SSxHQUFHOUksRUFBRUMsR0FBRyxJQUFJQyxFQUFFNkYsRUFBRzlGLEVBQUU4RyxPQUFPN0YsRUFBRTZFLEVBQUc5RixFQUFFb0gsY0FBYyxNQUFNbkgsS0FBSUEsRUFBRSxHQUFHQSxLQUFNRixFQUFFK0csUUFBUS9HLEVBQUUrRyxNQUFNN0csR0FBRyxNQUFNRCxFQUFFb0gsY0FBY3JILEVBQUVxSCxlQUFlbkgsSUFBSUYsRUFBRXFILGFBQWFuSCxJQUFJLE1BQU1nQixJQUFJbEIsRUFBRXFILGFBQWEsR0FBR25HLEdBQUcsU0FBUzZILEdBQUcvSSxHQUFHLElBQUlDLEVBQUVELEVBQUVnSixZQUFZL0ksSUFBSUQsRUFBRXNILGNBQWNHLGNBQWMsS0FBS3hILEdBQUcsT0FBT0EsSUFBSUQsRUFBRStHLE1BQU05RyxHQUFHLElBQUlnSixHQUFTLCtCQUMvUyxTQUFTQyxHQUFHbEosR0FBRyxPQUFPQSxHQUFHLElBQUssTUFBTSxNQUFNLDZCQUE2QixJQUFLLE9BQU8sTUFBTSxxQ0FBcUMsUUFBUSxNQUFNLGdDQUFnQyxTQUFTbUosR0FBR25KLEVBQUVDLEdBQUcsT0FBTyxNQUFNRCxHQUFHLGlDQUFpQ0EsRUFBRWtKLEdBQUdqSixHQUFHLCtCQUErQkQsR0FBRyxrQkFBa0JDLEVBQUUsK0JBQStCRCxFQUMzVSxJQUFJb0osR0FBZXBKLEdBQVpxSixJQUFZckosR0FBc0osU0FBU0EsRUFBRUMsR0FBRyxHQUZ1TSwrQkFFcE1ELEVBQUVzSixjQUF1QixjQUFjdEosRUFBRUEsRUFBRXVKLFVBQVV0SixNQUFNLENBQTJGLEtBQTFGbUosR0FBR0EsSUFBSWpPLFNBQVN5RixjQUFjLFFBQVUySSxVQUFVLFFBQVF0SixFQUFFdUosVUFBVUMsV0FBVyxTQUFheEosRUFBRW1KLEdBQUdNLFdBQVcxSixFQUFFMEosWUFBWTFKLEVBQUUySixZQUFZM0osRUFBRTBKLFlBQVksS0FBS3pKLEVBQUV5SixZQUFZMUosRUFBRTRKLFlBQVkzSixFQUFFeUosY0FBclosb0JBQXFCRyxPQUFPQSxNQUFNQyx3QkFBd0IsU0FBUzdKLEVBQUVDLEVBQUVnQixFQUFFQyxHQUFHMEksTUFBTUMseUJBQXdCLFdBQVcsT0FBTzlKLEdBQUVDLEVBQUVDLE9BQVVGLElBQ3RLLFNBQVMrSixHQUFHL0osRUFBRUMsR0FBRyxHQUFHQSxFQUFFLENBQUMsSUFBSUMsRUFBRUYsRUFBRTBKLFdBQVcsR0FBR3hKLEdBQUdBLElBQUlGLEVBQUVnSyxXQUFXLElBQUk5SixFQUFFK0osU0FBd0IsWUFBZC9KLEVBQUVnSyxVQUFVakssR0FBVUQsRUFBRWdKLFlBQVkvSSxFQUNySCxJQUFJa0ssR0FBRyxDQUFDQyx5QkFBd0IsRUFBR0MsbUJBQWtCLEVBQUdDLGtCQUFpQixFQUFHQyxrQkFBaUIsRUFBR0MsU0FBUSxFQUFHQyxjQUFhLEVBQUdDLGlCQUFnQixFQUFHQyxhQUFZLEVBQUdDLFNBQVEsRUFBR0MsTUFBSyxFQUFHQyxVQUFTLEVBQUdDLGNBQWEsRUFBR0MsWUFBVyxFQUFHQyxjQUFhLEVBQUdDLFdBQVUsRUFBR0MsVUFBUyxFQUFHQyxTQUFRLEVBQUdDLFlBQVcsRUFBR0MsYUFBWSxFQUFHQyxjQUFhLEVBQUdDLFlBQVcsRUFBR0MsZUFBYyxFQUFHQyxnQkFBZSxFQUFHQyxpQkFBZ0IsRUFBR0MsWUFBVyxFQUFHQyxXQUFVLEVBQUdDLFlBQVcsRUFBR0MsU0FBUSxFQUFHQyxPQUFNLEVBQUdDLFNBQVEsRUFBR0MsU0FBUSxFQUFHQyxRQUFPLEVBQUdDLFFBQU8sRUFBR0MsTUFBSyxFQUFHQyxhQUFZLEVBQzFmQyxjQUFhLEVBQUdDLGFBQVksRUFBR0MsaUJBQWdCLEVBQUdDLGtCQUFpQixFQUFHQyxrQkFBaUIsRUFBR0MsZUFBYyxFQUFHQyxhQUFZLEdBQUlDLEdBQUcsQ0FBQyxTQUFTLEtBQUssTUFBTSxLQUE2SCxTQUFTQyxHQUFHL00sRUFBRUMsRUFBRUMsR0FBRyxPQUFPLE1BQU1ELEdBQUcsa0JBQW1CQSxHQUFHLEtBQUtBLEVBQUUsR0FBR0MsR0FBRyxpQkFBa0JELEdBQUcsSUFBSUEsR0FBR2tLLEdBQUd6TyxlQUFlc0UsSUFBSW1LLEdBQUduSyxJQUFJLEdBQUdDLEdBQUd5RSxPQUFPekUsRUFBRSxLQUM5WixTQUFTK00sR0FBR2hOLEVBQUVDLEdBQWEsSUFBSSxJQUFJQyxLQUFsQkYsRUFBRUEsRUFBRWlOLE1BQW1CaE4sRUFBRSxHQUFHQSxFQUFFdkUsZUFBZXdFLEdBQUcsQ0FBQyxJQUFJZ0IsRUFBRSxJQUFJaEIsRUFBRWdOLFFBQVEsTUFBTS9MLEVBQUU0TCxHQUFHN00sRUFBRUQsRUFBRUMsR0FBR2dCLEdBQUcsVUFBVWhCLElBQUlBLEVBQUUsWUFBWWdCLEVBQUVsQixFQUFFbU4sWUFBWWpOLEVBQUVpQixHQUFHbkIsRUFBRUUsR0FBR2lCLEdBRFQxRixPQUFPcUIsS0FBS3FOLElBQUl2TixTQUFRLFNBQVNvRCxHQUFHOE0sR0FBR2xRLFNBQVEsU0FBU3FELEdBQUdBLEVBQUVBLEVBQUVELEVBQUVvTixPQUFPLEdBQUduTCxjQUFjakMsRUFBRXFOLFVBQVUsR0FBR2xELEdBQUdsSyxHQUFHa0ssR0FBR25LLFNBQ3JHLElBQUlzTixHQUFHek4sRUFBRSxDQUFDME4sVUFBUyxHQUFJLENBQUNDLE1BQUssRUFBR0MsTUFBSyxFQUFHQyxJQUFHLEVBQUdDLEtBQUksRUFBR0MsT0FBTSxFQUFHQyxJQUFHLEVBQUdDLEtBQUksRUFBR0MsT0FBTSxFQUFHQyxRQUFPLEVBQUdDLE1BQUssRUFBR0MsTUFBSyxFQUFHQyxPQUFNLEVBQUdqUixRQUFPLEVBQUdrUixPQUFNLEVBQUdDLEtBQUksSUFDbFQsU0FBU0MsR0FBR3RPLEVBQUVDLEdBQUcsR0FBR0EsRUFBRSxDQUFDLEdBQUdxTixHQUFHdE4sS0FBSyxNQUFNQyxFQUFFZ0ksVUFBVSxNQUFNaEksRUFBRXlJLHlCQUF5QixNQUFNdEssTUFBTTJCLEVBQUUsSUFBSUMsSUFBSSxHQUFHLE1BQU1DLEVBQUV5SSx3QkFBd0IsQ0FBQyxHQUFHLE1BQU16SSxFQUFFZ0ksU0FBUyxNQUFNN0osTUFBTTJCLEVBQUUsS0FBSyxHQUFLLGlCQUFrQkUsRUFBRXlJLDJCQUF5QixXQUFXekksRUFBRXlJLHlCQUF5QixNQUFNdEssTUFBTTJCLEVBQUUsS0FBTSxHQUFHLE1BQU1FLEVBQUVnTixPQUFPLGlCQUFrQmhOLEVBQUVnTixNQUFNLE1BQU03TyxNQUFNMkIsRUFBRSxNQUM1VixTQUFTd08sR0FBR3ZPLEVBQUVDLEdBQUcsSUFBSSxJQUFJRCxFQUFFa04sUUFBUSxLQUFLLE1BQU0saUJBQWtCak4sRUFBRXVPLEdBQUcsT0FBT3hPLEdBQUcsSUFBSyxpQkFBaUIsSUFBSyxnQkFBZ0IsSUFBSyxZQUFZLElBQUssZ0JBQWdCLElBQUssZ0JBQWdCLElBQUssbUJBQW1CLElBQUssaUJBQWlCLElBQUssZ0JBQWdCLE9BQU0sRUFBRyxRQUFRLE9BQU0sR0FBSSxTQUFTeU8sR0FBR3pPLEdBQTZGLE9BQTFGQSxFQUFFQSxFQUFFL0MsUUFBUStDLEVBQUUwTyxZQUFZL04sUUFBU2dPLDBCQUEwQjNPLEVBQUVBLEVBQUUyTyx5QkFBZ0MsSUFBSTNPLEVBQUVpSyxTQUFTakssRUFBRTRPLFdBQVc1TyxFQUFFLElBQUk2TyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUN4YixTQUFTQyxHQUFHaFAsR0FBRyxHQUFHQSxFQUFFaVAsR0FBR2pQLEdBQUcsQ0FBQyxHQUFHLG1CQUFvQjZPLEdBQUcsTUFBTXpRLE1BQU0yQixFQUFFLE1BQU0sSUFBSUUsRUFBRUQsRUFBRWtQLFVBQVVqUCxJQUFJQSxFQUFFa1AsR0FBR2xQLEdBQUc0TyxHQUFHN08sRUFBRWtQLFVBQVVsUCxFQUFFMEIsS0FBS3pCLEtBQUssU0FBU21QLEdBQUdwUCxHQUFHOE8sR0FBR0MsR0FBR0EsR0FBR3JWLEtBQUtzRyxHQUFHK08sR0FBRyxDQUFDL08sR0FBRzhPLEdBQUc5TyxFQUFFLFNBQVNxUCxLQUFLLEdBQUdQLEdBQUcsQ0FBQyxJQUFJOU8sRUFBRThPLEdBQUc3TyxFQUFFOE8sR0FBb0IsR0FBakJBLEdBQUdELEdBQUcsS0FBS0UsR0FBR2hQLEdBQU1DLEVBQUUsSUFBSUQsRUFBRSxFQUFFQSxFQUFFQyxFQUFFckgsT0FBT29ILElBQUlnUCxHQUFHL08sRUFBRUQsS0FBSyxTQUFTc1AsR0FBR3RQLEVBQUVDLEdBQUcsT0FBT0QsRUFBRUMsR0FBRyxTQUFTc1AsR0FBR3ZQLEVBQUVDLEVBQUVDLEVBQUVnQixFQUFFQyxHQUFHLE9BQU9uQixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsR0FBRyxTQUFTcU8sTUFBTSxJQUFJQyxHQUFHSCxHQUFHSSxJQUFHLEVBQUdDLElBQUcsRUFBRyxTQUFTQyxLQUFRLE9BQU9kLElBQUksT0FBT0MsS0FBR1MsS0FBS0gsTUFFOVosU0FBU1EsR0FBRzdQLEVBQUVDLEdBQUcsSUFBSUMsRUFBRUYsRUFBRWtQLFVBQVUsR0FBRyxPQUFPaFAsRUFBRSxPQUFPLEtBQUssSUFBSWdCLEVBQUVpTyxHQUFHalAsR0FBRyxHQUFHLE9BQU9nQixFQUFFLE9BQU8sS0FBS2hCLEVBQUVnQixFQUFFakIsR0FBR0QsRUFBRSxPQUFPQyxHQUFHLElBQUssVUFBVSxJQUFLLGlCQUFpQixJQUFLLGdCQUFnQixJQUFLLHVCQUF1QixJQUFLLGNBQWMsSUFBSyxxQkFBcUIsSUFBSyxjQUFjLElBQUsscUJBQXFCLElBQUssWUFBWSxJQUFLLG1CQUFtQixJQUFLLGdCQUFnQmlCLEdBQUdBLEVBQUVzSCxZQUFxQnRILElBQUksWUFBYmxCLEVBQUVBLEVBQUUwQixPQUF1QixVQUFVMUIsR0FBRyxXQUFXQSxHQUFHLGFBQWFBLElBQUlBLEdBQUdrQixFQUFFLE1BQU1sQixFQUFFLFFBQVFBLEdBQUUsRUFBRyxHQUFHQSxFQUFFLE9BQU8sS0FBSyxHQUFHRSxHQUFHLG1CQUNsZUEsRUFBRSxNQUFNOUIsTUFBTTJCLEVBQUUsSUFBSUUsU0FBU0MsSUFBSSxPQUFPQSxFQUFFLElBQUk0UCxJQUFHLEVBQUcsR0FBR3BQLEVBQUcsSUFBSSxJQUFJcVAsR0FBRyxHQUFHdFUsT0FBT3NKLGVBQWVnTCxHQUFHLFVBQVUsQ0FBQ3pKLElBQUksV0FBV3dKLElBQUcsS0FBTW5QLE9BQU9xUCxpQkFBaUIsT0FBT0QsR0FBR0EsSUFBSXBQLE9BQU9zUCxvQkFBb0IsT0FBT0YsR0FBR0EsSUFBSSxNQUFNL1AsSUFBRzhQLElBQUcsRUFBRyxTQUFTSSxHQUFHbFEsRUFBRUMsRUFBRUMsRUFBRWdCLEVBQUVDLEVBQUVDLEVBQUU5RyxFQUFFOEssRUFBRUQsR0FBRyxJQUFJZ0wsRUFBRXZILE1BQU10UCxVQUFVNkksTUFBTTVJLEtBQUtnRSxVQUFVLEdBQUcsSUFBSTBDLEVBQUVtUSxNQUFNbFEsRUFBRWlRLEdBQUcsTUFBTTNULEdBQUdyRCxLQUFLa1gsUUFBUTdULElBQUksSUFBSThULElBQUcsRUFBR0MsR0FBRyxLQUFLQyxJQUFHLEVBQUdDLEdBQUcsS0FBS0MsR0FBRyxDQUFDTCxRQUFRLFNBQVNyUSxHQUFHc1EsSUFBRyxFQUFHQyxHQUFHdlEsSUFBSSxTQUFTMlEsR0FBRzNRLEVBQUVDLEVBQUVDLEVBQUVnQixFQUFFQyxFQUFFQyxFQUFFOUcsRUFBRThLLEVBQUVELEdBQUdtTCxJQUFHLEVBQUdDLEdBQUcsS0FBS0wsR0FBR0UsTUFBTU0sR0FBR25ULFdBQ3ZWLFNBQVNxVCxHQUFHNVEsR0FBRyxJQUFJQyxFQUFFRCxFQUFFRSxFQUFFRixFQUFFLEdBQUdBLEVBQUU2USxVQUFVLEtBQUs1USxFQUFFNlEsUUFBUTdRLEVBQUVBLEVBQUU2USxXQUFXLENBQUM5USxFQUFFQyxFQUFFLEdBQU8sSUFBYSxNQUFqQkEsRUFBRUQsR0FBUytRLFNBQWM3USxFQUFFRCxFQUFFNlEsUUFBUTlRLEVBQUVDLEVBQUU2USxhQUFhOVEsR0FBRyxPQUFPLElBQUlDLEVBQUVzRixJQUFJckYsRUFBRSxLQUFLLFNBQVM4USxHQUFHaFIsR0FBRyxHQUFHLEtBQUtBLEVBQUV1RixJQUFJLENBQUMsSUFBSXRGLEVBQUVELEVBQUVpUixjQUFzRSxHQUF4RCxPQUFPaFIsR0FBa0IsUUFBZEQsRUFBRUEsRUFBRTZRLGFBQXFCNVEsRUFBRUQsRUFBRWlSLGVBQW1CLE9BQU9oUixFQUFFLE9BQU9BLEVBQUVpUixXQUFXLE9BQU8sS0FBSyxTQUFTQyxHQUFHblIsR0FBRyxHQUFHNFEsR0FBRzVRLEtBQUtBLEVBQUUsTUFBTTVCLE1BQU0yQixFQUFFLE1BRXBTLFNBQVNxUixHQUFHcFIsR0FBVyxLQUFSQSxFQUR0TixTQUFZQSxHQUFHLElBQUlDLEVBQUVELEVBQUU2USxVQUFVLElBQUk1USxFQUFFLENBQVMsR0FBRyxRQUFYQSxFQUFFMlEsR0FBRzVRLElBQWUsTUFBTTVCLE1BQU0yQixFQUFFLE1BQU0sT0FBT0UsSUFBSUQsRUFBRSxLQUFLQSxFQUFFLElBQUksSUFBSUUsRUFBRUYsRUFBRWtCLEVBQUVqQixJQUFJLENBQUMsSUFBSWtCLEVBQUVqQixFQUFFNFEsT0FBTyxHQUFHLE9BQU8zUCxFQUFFLE1BQU0sSUFBSUMsRUFBRUQsRUFBRTBQLFVBQVUsR0FBRyxPQUFPelAsRUFBRSxDQUFZLEdBQUcsUUFBZEYsRUFBRUMsRUFBRTJQLFFBQW1CLENBQUM1USxFQUFFZ0IsRUFBRSxTQUFTLE1BQU0sR0FBR0MsRUFBRWtRLFFBQVFqUSxFQUFFaVEsTUFBTSxDQUFDLElBQUlqUSxFQUFFRCxFQUFFa1EsTUFBTWpRLEdBQUcsQ0FBQyxHQUFHQSxJQUFJbEIsRUFBRSxPQUFPaVIsR0FBR2hRLEdBQUduQixFQUFFLEdBQUdvQixJQUFJRixFQUFFLE9BQU9pUSxHQUFHaFEsR0FBR2xCLEVBQUVtQixFQUFFQSxFQUFFa1EsUUFBUSxNQUFNbFQsTUFBTTJCLEVBQUUsTUFBTyxHQUFHRyxFQUFFNFEsU0FBUzVQLEVBQUU0UCxPQUFPNVEsRUFBRWlCLEVBQUVELEVBQUVFLE1BQU0sQ0FBQyxJQUFJLElBQUk5RyxHQUFFLEVBQUc4SyxFQUFFakUsRUFBRWtRLE1BQU1qTSxHQUFHLENBQUMsR0FBR0EsSUFBSWxGLEVBQUUsQ0FBQzVGLEdBQUUsRUFBRzRGLEVBQUVpQixFQUFFRCxFQUFFRSxFQUFFLE1BQU0sR0FBR2dFLElBQUlsRSxFQUFFLENBQUM1RyxHQUFFLEVBQUc0RyxFQUFFQyxFQUFFakIsRUFBRWtCLEVBQUUsTUFBTWdFLEVBQUVBLEVBQUVrTSxRQUFRLElBQUloWCxFQUFFLENBQUMsSUFBSThLLEVBQUVoRSxFQUFFaVEsTUFBTWpNLEdBQUcsQ0FBQyxHQUFHQSxJQUM1ZmxGLEVBQUUsQ0FBQzVGLEdBQUUsRUFBRzRGLEVBQUVrQixFQUFFRixFQUFFQyxFQUFFLE1BQU0sR0FBR2lFLElBQUlsRSxFQUFFLENBQUM1RyxHQUFFLEVBQUc0RyxFQUFFRSxFQUFFbEIsRUFBRWlCLEVBQUUsTUFBTWlFLEVBQUVBLEVBQUVrTSxRQUFRLElBQUloWCxFQUFFLE1BQU04RCxNQUFNMkIsRUFBRSxPQUFRLEdBQUdHLEVBQUUyUSxZQUFZM1AsRUFBRSxNQUFNOUMsTUFBTTJCLEVBQUUsTUFBTyxHQUFHLElBQUlHLEVBQUVxRixJQUFJLE1BQU1uSCxNQUFNMkIsRUFBRSxNQUFNLE9BQU9HLEVBQUVnUCxVQUFVcUMsVUFBVXJSLEVBQUVGLEVBQUVDLEVBQW1CdVIsQ0FBR3hSLElBQVMsT0FBTyxLQUFLLElBQUksSUFBSUMsRUFBRUQsSUFBSSxDQUFDLEdBQUcsSUFBSUMsRUFBRXNGLEtBQUssSUFBSXRGLEVBQUVzRixJQUFJLE9BQU90RixFQUFFLEdBQUdBLEVBQUVvUixNQUFNcFIsRUFBRW9SLE1BQU1QLE9BQU83USxFQUFFQSxFQUFFQSxFQUFFb1IsVUFBVSxDQUFDLEdBQUdwUixJQUFJRCxFQUFFLE1BQU0sTUFBTUMsRUFBRXFSLFNBQVMsQ0FBQyxJQUFJclIsRUFBRTZRLFFBQVE3USxFQUFFNlEsU0FBUzlRLEVBQUUsT0FBTyxLQUFLQyxFQUFFQSxFQUFFNlEsT0FBTzdRLEVBQUVxUixRQUFRUixPQUFPN1EsRUFBRTZRLE9BQU83USxFQUFFQSxFQUFFcVIsU0FBUyxPQUFPLEtBQzVjLFNBQVNHLEdBQUd6UixFQUFFQyxHQUFHLElBQUksSUFBSUMsRUFBRUYsRUFBRTZRLFVBQVUsT0FBTzVRLEdBQUcsQ0FBQyxHQUFHQSxJQUFJRCxHQUFHQyxJQUFJQyxFQUFFLE9BQU0sRUFBR0QsRUFBRUEsRUFBRTZRLE9BQU8sT0FBTSxFQUFHLElBQUlZLEdBQUdDLEdBQUdDLEdBQUdDLEdBQUdDLElBQUcsRUFBR0MsR0FBRyxHQUFHQyxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLElBQUlDLElBQUlDLEdBQUcsSUFBSUQsSUFBSUUsR0FBRyxHQUFHQyxHQUFHLDZQQUE2UDVWLE1BQU0sS0FDcmIsU0FBUzZWLEdBQUd4UyxFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsR0FBRyxNQUFNLENBQUNzUixVQUFVelMsRUFBRTBTLGFBQWF6UyxFQUFFMFMsaUJBQW1CLEdBQUZ6UyxFQUFLMFMsWUFBWXpSLEVBQUUwUixpQkFBaUIsQ0FBQzNSLElBQUksU0FBUzRSLEdBQUc5UyxFQUFFQyxHQUFHLE9BQU9ELEdBQUcsSUFBSyxVQUFVLElBQUssV0FBV2dTLEdBQUcsS0FBSyxNQUFNLElBQUssWUFBWSxJQUFLLFlBQVlDLEdBQUcsS0FBSyxNQUFNLElBQUssWUFBWSxJQUFLLFdBQVdDLEdBQUcsS0FBSyxNQUFNLElBQUssY0FBYyxJQUFLLGFBQWFDLEdBQUdZLE9BQU85UyxFQUFFK1MsV0FBVyxNQUFNLElBQUssb0JBQW9CLElBQUsscUJBQXFCWCxHQUFHVSxPQUFPOVMsRUFBRStTLFlBQzNaLFNBQVNDLEdBQUdqVCxFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsRUFBRUMsR0FBRyxPQUFHLE9BQU9wQixHQUFHQSxFQUFFNFMsY0FBY3hSLEdBQVNwQixFQUFFd1MsR0FBR3ZTLEVBQUVDLEVBQUVnQixFQUFFQyxFQUFFQyxHQUFHLE9BQU9uQixHQUFZLFFBQVJBLEVBQUVnUCxHQUFHaFAsS0FBYTBSLEdBQUcxUixHQUFJRCxJQUFFQSxFQUFFMlMsa0JBQWtCelIsRUFBRWpCLEVBQUVELEVBQUU2UyxpQkFBaUIsT0FBTzFSLElBQUksSUFBSWxCLEVBQUVpTixRQUFRL0wsSUFBSWxCLEVBQUV2RyxLQUFLeUgsR0FBVW5CLEdBRTlNLFNBQVNrVCxHQUFHbFQsR0FBRyxJQUFJQyxFQUFFa1QsR0FBR25ULEVBQUUvQyxRQUFRLEdBQUcsT0FBT2dELEVBQUUsQ0FBQyxJQUFJQyxFQUFFMFEsR0FBRzNRLEdBQUcsR0FBRyxPQUFPQyxFQUFFLEdBQVcsTUFBUkQsRUFBRUMsRUFBRXFGLE1BQVksR0FBVyxRQUFSdEYsRUFBRStRLEdBQUc5USxJQUFtSCxPQUF0R0YsRUFBRXlTLFVBQVV4UyxPQUFFNFIsR0FBRzdSLEVBQUVvVCxjQUFhLFdBQVd0VCxFQUFFdVQseUJBQXlCclQsRUFBRXNULFVBQVMsV0FBVzFCLEdBQUcxUixjQUFvQixHQUFHLElBQUlELEdBQUdDLEVBQUVnUCxVQUFVcUUsUUFBOEQsWUFBckR2VCxFQUFFeVMsVUFBVSxJQUFJdlMsRUFBRXFGLElBQUlyRixFQUFFZ1AsVUFBVXNFLGNBQWMsTUFBYXhULEVBQUV5UyxVQUFVLEtBQzFVLFNBQVNnQixHQUFHelQsR0FBRyxHQUFHLE9BQU9BLEVBQUV5UyxVQUFVLE9BQU0sRUFBRyxJQUFJLElBQUl4UyxFQUFFRCxFQUFFNlMsaUJBQWlCLEVBQUU1UyxFQUFFckgsUUFBUSxDQUFDLElBQUlzSCxFQUFFd1QsR0FBRzFULEVBQUUwUyxhQUFhMVMsRUFBRTJTLGlCQUFpQjFTLEVBQUUsR0FBR0QsRUFBRTRTLGFBQWEsR0FBRyxPQUFPMVMsRUFBRSxPQUFlLFFBQVJELEVBQUVnUCxHQUFHL08sS0FBYXlSLEdBQUcxUixHQUFHRCxFQUFFeVMsVUFBVXZTLEdBQUUsRUFBR0QsRUFBRXBILFFBQVEsT0FBTSxFQUFHLFNBQVM4YSxHQUFHM1QsRUFBRUMsRUFBRUMsR0FBR3VULEdBQUd6VCxJQUFJRSxFQUFFNlMsT0FBTzlTLEdBQ3pRLFNBQVMyVCxLQUFLLElBQUk5QixJQUFHLEVBQUcsRUFBRUMsR0FBR25aLFFBQVEsQ0FBQyxJQUFJb0gsRUFBRStSLEdBQUcsR0FBRyxHQUFHLE9BQU8vUixFQUFFeVMsVUFBVSxDQUFtQixRQUFsQnpTLEVBQUVpUCxHQUFHalAsRUFBRXlTLGFBQXFCZixHQUFHMVIsR0FBRyxNQUFNLElBQUksSUFBSUMsRUFBRUQsRUFBRTZTLGlCQUFpQixFQUFFNVMsRUFBRXJILFFBQVEsQ0FBQyxJQUFJc0gsRUFBRXdULEdBQUcxVCxFQUFFMFMsYUFBYTFTLEVBQUUyUyxpQkFBaUIxUyxFQUFFLEdBQUdELEVBQUU0UyxhQUFhLEdBQUcsT0FBTzFTLEVBQUUsQ0FBQ0YsRUFBRXlTLFVBQVV2UyxFQUFFLE1BQU1ELEVBQUVwSCxRQUFRLE9BQU9tSCxFQUFFeVMsV0FBV1YsR0FBR2xaLFFBQVEsT0FBT21aLElBQUl5QixHQUFHekIsTUFBTUEsR0FBRyxNQUFNLE9BQU9DLElBQUl3QixHQUFHeEIsTUFBTUEsR0FBRyxNQUFNLE9BQU9DLElBQUl1QixHQUFHdkIsTUFBTUEsR0FBRyxNQUFNQyxHQUFHdlYsUUFBUStXLElBQUl0QixHQUFHelYsUUFBUStXLElBQ3JaLFNBQVNFLEdBQUc3VCxFQUFFQyxHQUFHRCxFQUFFeVMsWUFBWXhTLElBQUlELEVBQUV5UyxVQUFVLEtBQUtYLEtBQUtBLElBQUcsRUFBR2hTLEVBQUVnVSwwQkFBMEJoVSxFQUFFaVUsd0JBQXdCSCxNQUNySCxTQUFTSSxHQUFHaFUsR0FBRyxTQUFTQyxFQUFFQSxHQUFHLE9BQU80VCxHQUFHNVQsRUFBRUQsR0FBRyxHQUFHLEVBQUUrUixHQUFHblosT0FBTyxDQUFDaWIsR0FBRzlCLEdBQUcsR0FBRy9SLEdBQUcsSUFBSSxJQUFJRSxFQUFFLEVBQUVBLEVBQUU2UixHQUFHblosT0FBT3NILElBQUksQ0FBQyxJQUFJZ0IsRUFBRTZRLEdBQUc3UixHQUFHZ0IsRUFBRXVSLFlBQVl6UyxJQUFJa0IsRUFBRXVSLFVBQVUsT0FBK0YsSUFBeEYsT0FBT1QsSUFBSTZCLEdBQUc3QixHQUFHaFMsR0FBRyxPQUFPaVMsSUFBSTRCLEdBQUc1QixHQUFHalMsR0FBRyxPQUFPa1MsSUFBSTJCLEdBQUczQixHQUFHbFMsR0FBR21TLEdBQUd2VixRQUFRcUQsR0FBR29TLEdBQUd6VixRQUFRcUQsR0FBT0MsRUFBRSxFQUFFQSxFQUFFb1MsR0FBRzFaLE9BQU9zSCxLQUFJZ0IsRUFBRW9SLEdBQUdwUyxJQUFLdVMsWUFBWXpTLElBQUlrQixFQUFFdVIsVUFBVSxNQUFNLEtBQUssRUFBRUgsR0FBRzFaLFFBQWlCLFFBQVJzSCxFQUFFb1MsR0FBRyxJQUFZRyxXQUFZUyxHQUFHaFQsR0FBRyxPQUFPQSxFQUFFdVMsV0FBV0gsR0FBR3paLFFBQy9YLFNBQVNvYixHQUFHalUsRUFBRUMsR0FBRyxJQUFJQyxFQUFFLEdBQWtGLE9BQS9FQSxFQUFFRixFQUFFOEIsZUFBZTdCLEVBQUU2QixjQUFjNUIsRUFBRSxTQUFTRixHQUFHLFNBQVNDLEVBQUVDLEVBQUUsTUFBTUYsR0FBRyxNQUFNQyxFQUFTQyxFQUFFLElBQUlnVSxHQUFHLENBQUNDLGFBQWFGLEdBQUcsWUFBWSxnQkFBZ0JHLG1CQUFtQkgsR0FBRyxZQUFZLHNCQUFzQkksZUFBZUosR0FBRyxZQUFZLGtCQUFrQkssY0FBY0wsR0FBRyxhQUFhLGtCQUFrQk0sR0FBRyxHQUFHQyxHQUFHLEdBQ25GLFNBQVNDLEdBQUd6VSxHQUFHLEdBQUd1VSxHQUFHdlUsR0FBRyxPQUFPdVUsR0FBR3ZVLEdBQUcsSUFBSWtVLEdBQUdsVSxHQUFHLE9BQU9BLEVBQUUsSUFBWUUsRUFBUkQsRUFBRWlVLEdBQUdsVSxHQUFLLElBQUlFLEtBQUtELEVBQUUsR0FBR0EsRUFBRXZFLGVBQWV3RSxJQUFJQSxLQUFLc1UsR0FBRyxPQUFPRCxHQUFHdlUsR0FBR0MsRUFBRUMsR0FBRyxPQUFPRixFQUE5WFUsSUFBSzhULEdBQUdyWixTQUFTeUYsY0FBYyxPQUFPcU0sTUFBTSxtQkFBbUJ0TSxnQkFBZ0J1VCxHQUFHQyxhQUFhTyxpQkFBaUJSLEdBQUdFLG1CQUFtQk0saUJBQWlCUixHQUFHRyxlQUFlSyxXQUFXLG9CQUFvQi9ULGVBQWV1VCxHQUFHSSxjQUFjSyxZQUN4TyxJQUFJQyxHQUFHSCxHQUFHLGdCQUFnQkksR0FBR0osR0FBRyxzQkFBc0JLLEdBQUdMLEdBQUcsa0JBQWtCTSxHQUFHTixHQUFHLGlCQUFpQk8sR0FBRyxJQUFJNUMsSUFBSTZDLEdBQUcsSUFBSTdDLElBQUk4QyxHQUFHLENBQUMsUUFBUSxRQUFRTixHQUFHLGVBQWVDLEdBQUcscUJBQXFCQyxHQUFHLGlCQUFpQixVQUFVLFVBQVUsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLFVBQVUsVUFBVSxZQUFZLFlBQVksUUFBUSxRQUFRLFFBQVEsUUFBUSxvQkFBb0Isb0JBQW9CLE9BQU8sT0FBTyxhQUFhLGFBQWEsaUJBQWlCLGlCQUFpQixZQUFZLFlBQy9lLHFCQUFxQixxQkFBcUIsVUFBVSxVQUFVLFdBQVcsV0FBVyxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxhQUFhLGFBQWFDLEdBQUcsZ0JBQWdCLFVBQVUsV0FBVyxTQUFTSSxHQUFHblYsRUFBRUMsR0FBRyxJQUFJLElBQUlDLEVBQUUsRUFBRUEsRUFBRUYsRUFBRXBILE9BQU9zSCxHQUFHLEVBQUUsQ0FBQyxJQUFJZ0IsRUFBRWxCLEVBQUVFLEdBQUdpQixFQUFFbkIsRUFBRUUsRUFBRSxHQUFHaUIsRUFBRSxNQUFNQSxFQUFFLEdBQUdjLGNBQWNkLEVBQUVnQixNQUFNLElBQUk4UyxHQUFHalEsSUFBSTlELEVBQUVqQixHQUFHK1UsR0FBR2hRLElBQUk5RCxFQUFFQyxHQUFHWixFQUFHWSxFQUFFLENBQUNELE1BQTJCa1UsRUFBZnRWLEVBQUV1VixnQkFBa0IsSUFBSUMsR0FBRSxFQUMvWCxTQUFTQyxHQUFHdlYsR0FBRyxHQUFHLElBQUssRUFBRUEsR0FBRyxPQUFPc1YsR0FBRSxHQUFHLEVBQUUsR0FBRyxJQUFLLEVBQUV0VixHQUFHLE9BQU9zVixHQUFFLEdBQUcsRUFBRSxHQUFHLElBQUssRUFBRXRWLEdBQUcsT0FBT3NWLEdBQUUsR0FBRyxFQUFFLElBQUlyVixFQUFFLEdBQUdELEVBQUUsT0FBRyxJQUFJQyxHQUFTcVYsR0FBRSxHQUFHclYsR0FBSyxJQUFPLEdBQUZELElBQWFzVixHQUFFLEdBQUcsSUFBYyxJQUFYclYsRUFBRSxJQUFJRCxJQUFrQnNWLEdBQUUsR0FBR3JWLEdBQUssSUFBTyxJQUFGRCxJQUFjc1YsR0FBRSxFQUFFLEtBQWdCLElBQVpyVixFQUFFLEtBQUtELElBQWtCc1YsR0FBRSxFQUFFclYsR0FBSyxJQUFPLEtBQUZELElBQWVzVixHQUFFLEVBQUUsTUFBb0IsSUFBZnJWLEVBQUUsUUFBUUQsSUFBa0JzVixHQUFFLEVBQUVyVixHQUFrQixJQUFoQkEsRUFBRSxTQUFTRCxJQUFrQnNWLEdBQUUsRUFBRXJWLEdBQU8sU0FBRkQsR0FBa0JzVixHQUFFLEVBQUUsVUFBWSxJQUFPLFVBQUZ0VixJQUFvQnNWLEdBQUUsRUFBRSxXQUEyQixJQUFqQnJWLEVBQUUsVUFBVUQsSUFBa0JzVixHQUFFLEVBQUVyVixHQUFLLElBQUssV0FBV0QsSUFBVXNWLEdBQUUsRUFBRSxhQUNqZkEsR0FBRSxFQUFTdFYsR0FDWCxTQUFTd1YsR0FBR3hWLEVBQUVDLEdBQUcsSUFBSUMsRUFBRUYsRUFBRXlWLGFBQWEsR0FBRyxJQUFJdlYsRUFBRSxPQUFPb1YsR0FBRSxFQUFFLElBQUlwVSxFQUFFLEVBQUVDLEVBQUUsRUFBRUMsRUFBRXBCLEVBQUUwVixhQUFhcGIsRUFBRTBGLEVBQUUyVixlQUFldlEsRUFBRXBGLEVBQUU0VixZQUFZLEdBQUcsSUFBSXhVLEVBQUVGLEVBQUVFLEVBQUVELEVBQUVtVSxHQUFFLFFBQVEsR0FBaUIsSUFBZGxVLEVBQUksVUFBRmxCLEdBQWtCLENBQUMsSUFBSWlGLEVBQUUvRCxHQUFHOUcsRUFBRSxJQUFJNkssR0FBR2pFLEVBQUVxVSxHQUFHcFEsR0FBR2hFLEVBQUVtVSxJQUFTLElBQUxsUSxHQUFHaEUsS0FBVUYsRUFBRXFVLEdBQUduUSxHQUFHakUsRUFBRW1VLFNBQWdCLElBQVBsVSxFQUFFbEIsR0FBRzVGLElBQVM0RyxFQUFFcVUsR0FBR25VLEdBQUdELEVBQUVtVSxJQUFHLElBQUlsUSxJQUFJbEUsRUFBRXFVLEdBQUduUSxHQUFHakUsRUFBRW1VLElBQUcsR0FBRyxJQUFJcFUsRUFBRSxPQUFPLEVBQXFDLEdBQXhCQSxFQUFFaEIsSUFBSSxHQUFqQmdCLEVBQUUsR0FBRzJVLEdBQUczVSxJQUFhLEVBQUUsR0FBR0EsSUFBSSxHQUFHLEVBQUssSUFBSWpCLEdBQUdBLElBQUlpQixHQUFHLElBQUtqQixFQUFFM0YsR0FBRyxDQUFPLEdBQU5pYixHQUFHdFYsR0FBTWtCLEdBQUdtVSxHQUFFLE9BQU9yVixFQUFFcVYsR0FBRW5VLEVBQXFCLEdBQUcsS0FBdEJsQixFQUFFRCxFQUFFOFYsZ0JBQXdCLElBQUk5VixFQUFFQSxFQUFFK1YsY0FBYzlWLEdBQUdpQixFQUFFLEVBQUVqQixHQUFja0IsRUFBRSxJQUFiakIsRUFBRSxHQUFHMlYsR0FBRzVWLElBQVVpQixHQUFHbEIsRUFBRUUsR0FBR0QsSUFBSWtCLEVBQUUsT0FBT0QsRUFDMWUsU0FBUzhVLEdBQUdoVyxHQUFnQyxPQUFPLElBQXBDQSxHQUFrQixXQUFoQkEsRUFBRXlWLGNBQXNDelYsRUFBSSxXQUFGQSxFQUFhLFdBQVcsRUFBRSxTQUFTaVcsR0FBR2pXLEVBQUVDLEdBQUcsT0FBT0QsR0FBRyxLQUFLLEdBQUcsT0FBTyxFQUFFLEtBQUssR0FBRyxPQUFPLEVBQUUsS0FBSyxHQUFHLE9BQW1CLEtBQVpBLEVBQUVrVyxHQUFHLElBQUlqVyxJQUFTZ1csR0FBRyxHQUFHaFcsR0FBR0QsRUFBRSxLQUFLLEdBQUcsT0FBb0IsS0FBYkEsRUFBRWtXLEdBQUcsS0FBS2pXLElBQVNnVyxHQUFHLEVBQUVoVyxHQUFHRCxFQUFFLEtBQUssRUFBRSxPQUFxQixLQUFkQSxFQUFFa1csR0FBRyxNQUFNalcsS0FBNEIsS0FBakJELEVBQUVrVyxHQUFHLFNBQVNqVyxNQUFXRCxFQUFFLEtBQU1BLEVBQUUsS0FBSyxFQUFFLE9BQTBCLEtBQW5CQyxFQUFFaVcsR0FBRyxXQUFXalcsTUFBV0EsRUFBRSxXQUFXQSxFQUFFLE1BQU03QixNQUFNMkIsRUFBRSxJQUFJQyxJQUFLLFNBQVNrVyxHQUFHbFcsR0FBRyxPQUFPQSxHQUFHQSxFQUFFLFNBQVNtVyxHQUFHblcsR0FBRyxJQUFJLElBQUlDLEVBQUUsR0FBR0MsRUFBRSxFQUFFLEdBQUdBLEVBQUVBLElBQUlELEVBQUV2RyxLQUFLc0csR0FBRyxPQUFPQyxFQUNyZCxTQUFTbVcsR0FBR3BXLEVBQUVDLEVBQUVDLEdBQUdGLEVBQUV5VixjQUFjeFYsRUFBRSxJQUFJaUIsRUFBRWpCLEVBQUUsRUFBRUQsRUFBRTJWLGdCQUFnQnpVLEVBQUVsQixFQUFFNFYsYUFBYTFVLEdBQUVsQixFQUFFQSxFQUFFcVcsWUFBV3BXLEVBQUUsR0FBRzRWLEdBQUc1VixJQUFRQyxFQUFFLElBQUkyVixHQUFHUyxLQUFLQyxNQUFNRCxLQUFLQyxNQUFpQyxTQUFZdlcsR0FBRyxPQUFPLElBQUlBLEVBQUUsR0FBRyxJQUFJd1csR0FBR3hXLEdBQUd5VyxHQUFHLEdBQUcsR0FBdkVELEdBQUdGLEtBQUtJLElBQUlELEdBQUdILEtBQUtLLElBQXlEQyxHQUFHOVcsRUFBRStXLDhCQUE4QkMsR0FBR2hYLEVBQUV1VCx5QkFBeUIwRCxJQUFHLEVBQUcsU0FBU0MsR0FBR2hYLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFHd08sSUFBSUYsS0FBSyxJQUFJck8sRUFBRThWLEdBQUc3VixFQUFFc08sR0FBR0EsSUFBRyxFQUFHLElBQUlILEdBQUdwTyxFQUFFbkIsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUcsU0FBU3dPLEdBQUd0TyxJQUFJd08sTUFBTSxTQUFTc0gsR0FBR2xYLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFHNFYsR0FBR0YsR0FBR0ssR0FBR0UsS0FBSyxLQUFLblgsRUFBRUMsRUFBRUMsRUFBRWdCLElBQ2piLFNBQVMrVixHQUFHalgsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQVUsSUFBSUMsRUFBWCxHQUFHNFYsR0FBVSxJQUFJNVYsRUFBRSxJQUFPLEVBQUZsQixLQUFPLEVBQUU4UixHQUFHblosU0FBUyxFQUFFMlosR0FBR3JGLFFBQVFsTixHQUFHQSxFQUFFd1MsR0FBRyxLQUFLeFMsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUc2USxHQUFHclksS0FBS3NHLE9BQU8sQ0FBQyxJQUFJb0IsRUFBRXNTLEdBQUcxVCxFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxHQUFHLE9BQU9FLEVBQUVELEdBQUcyUixHQUFHOVMsRUFBRWtCLE9BQU8sQ0FBQyxHQUFHQyxFQUFFLENBQUMsSUFBSSxFQUFFb1IsR0FBR3JGLFFBQVFsTixHQUErQixPQUEzQkEsRUFBRXdTLEdBQUdwUixFQUFFcEIsRUFBRUMsRUFBRUMsRUFBRWdCLFFBQUc2USxHQUFHclksS0FBS3NHLEdBQVUsR0FmaE8sU0FBWUEsRUFBRUMsRUFBRUMsRUFBRWdCLEVBQUVDLEdBQUcsT0FBT2xCLEdBQUcsSUFBSyxVQUFVLE9BQU8rUixHQUFHaUIsR0FBR2pCLEdBQUdoUyxFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsSUFBRyxFQUFHLElBQUssWUFBWSxPQUFPOFEsR0FBR2dCLEdBQUdoQixHQUFHalMsRUFBRUMsRUFBRUMsRUFBRWdCLEVBQUVDLElBQUcsRUFBRyxJQUFLLFlBQVksT0FBTytRLEdBQUdlLEdBQUdmLEdBQUdsUyxFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsSUFBRyxFQUFHLElBQUssY0FBYyxJQUFJQyxFQUFFRCxFQUFFNlIsVUFBa0QsT0FBeENiLEdBQUduTixJQUFJNUQsRUFBRTZSLEdBQUdkLEdBQUc3TCxJQUFJbEYsSUFBSSxLQUFLcEIsRUFBRUMsRUFBRUMsRUFBRWdCLEVBQUVDLEtBQVUsRUFBRyxJQUFLLG9CQUFvQixPQUFPQyxFQUFFRCxFQUFFNlIsVUFBVVgsR0FBR3JOLElBQUk1RCxFQUFFNlIsR0FBR1osR0FBRy9MLElBQUlsRixJQUFJLEtBQUtwQixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsS0FBSSxFQUFHLE9BQU0sRUFlOUhpVyxDQUFHaFcsRUFBRXBCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFHLE9BQU80UixHQUFHOVMsRUFBRWtCLEdBQUdtVyxHQUFHclgsRUFBRUMsRUFBRWlCLEVBQUUsS0FBS2hCLEtBQzlRLFNBQVN3VCxHQUFHMVQsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUcsSUFBSUMsRUFBRXNOLEdBQUd2TixHQUFXLEdBQUcsUUFBWEMsRUFBRWdTLEdBQUdoUyxJQUFlLENBQUMsSUFBSUMsRUFBRXdQLEdBQUd6UCxHQUFHLEdBQUcsT0FBT0MsRUFBRUQsRUFBRSxTQUFTLENBQUMsSUFBSTdHLEVBQUU4RyxFQUFFbUUsSUFBSSxHQUFHLEtBQUtqTCxFQUFFLENBQVMsR0FBRyxRQUFYNkcsRUFBRTZQLEdBQUc1UCxJQUFlLE9BQU9ELEVBQUVBLEVBQUUsVUFBVSxHQUFHLElBQUk3RyxFQUFFLENBQUMsR0FBRzhHLEVBQUU4TixVQUFVcUUsUUFBUSxPQUFPLElBQUluUyxFQUFFbUUsSUFBSW5FLEVBQUU4TixVQUFVc0UsY0FBYyxLQUFLclMsRUFBRSxVQUFVQyxJQUFJRCxJQUFJQSxFQUFFLE9BQXFCLE9BQWRrVyxHQUFHclgsRUFBRUMsRUFBRWlCLEVBQUVDLEVBQUVqQixHQUFVLEtBQUssSUFBSW9YLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQ3pULFNBQVNDLEtBQUssR0FBR0QsR0FBRyxPQUFPQSxHQUFHLElBQUl4WCxFQUFrQmtCLEVBQWhCakIsRUFBRXNYLEdBQUdyWCxFQUFFRCxFQUFFckgsT0FBU3VJLEVBQUUsVUFBVW1XLEdBQUdBLEdBQUd2USxNQUFNdVEsR0FBR3RPLFlBQVk1SCxFQUFFRCxFQUFFdkksT0FBTyxJQUFJb0gsRUFBRSxFQUFFQSxFQUFFRSxHQUFHRCxFQUFFRCxLQUFLbUIsRUFBRW5CLEdBQUdBLEtBQUssSUFBSTFGLEVBQUU0RixFQUFFRixFQUFFLElBQUlrQixFQUFFLEVBQUVBLEdBQUc1RyxHQUFHMkYsRUFBRUMsRUFBRWdCLEtBQUtDLEVBQUVDLEVBQUVGLEdBQUdBLEtBQUssT0FBT3NXLEdBQUdyVyxFQUFFZ0IsTUFBTW5DLEVBQUUsRUFBRWtCLEVBQUUsRUFBRUEsT0FBRSxHQUFRLFNBQVN3VyxHQUFHMVgsR0FBRyxJQUFJQyxFQUFFRCxFQUFFMlgsUUFBK0UsTUFBdkUsYUFBYTNYLEVBQWdCLEtBQWJBLEVBQUVBLEVBQUU0WCxXQUFnQixLQUFLM1gsSUFBSUQsRUFBRSxJQUFLQSxFQUFFQyxFQUFFLEtBQUtELElBQUlBLEVBQUUsSUFBVyxJQUFJQSxHQUFHLEtBQUtBLEVBQUVBLEVBQUUsRUFBRSxTQUFTNlgsS0FBSyxPQUFNLEVBQUcsU0FBU0MsS0FBSyxPQUFNLEVBQ2pZLFNBQVNDLEdBQUcvWCxHQUFHLFNBQVNDLEVBQUVBLEVBQUVpQixFQUFFQyxFQUFFQyxFQUFFOUcsR0FBNkcsSUFBSSxJQUFJNEYsS0FBbEgvRyxLQUFLNmUsV0FBVy9YLEVBQUU5RyxLQUFLOGUsWUFBWTlXLEVBQUVoSSxLQUFLdUksS0FBS1IsRUFBRS9ILEtBQUt5WixZQUFZeFIsRUFBRWpJLEtBQUs4RCxPQUFPM0MsRUFBRW5CLEtBQUsrZSxjQUFjLEtBQWtCbFksRUFBRUEsRUFBRXRFLGVBQWV3RSxLQUFLRCxFQUFFRCxFQUFFRSxHQUFHL0csS0FBSytHLEdBQUdELEVBQUVBLEVBQUVtQixHQUFHQSxFQUFFbEIsSUFBZ0ksT0FBNUgvRyxLQUFLZ2Ysb0JBQW9CLE1BQU0vVyxFQUFFZ1gsaUJBQWlCaFgsRUFBRWdYLGtCQUFpQixJQUFLaFgsRUFBRWlYLGFBQWFSLEdBQUdDLEdBQUczZSxLQUFLbWYscUJBQXFCUixHQUFVM2UsS0FDMUUsT0FEK0UwRyxFQUFFSSxFQUFFM0csVUFBVSxDQUFDaWYsZUFBZSxXQUFXcGYsS0FBS2lmLGtCQUFpQixFQUFHLElBQUlwWSxFQUFFN0csS0FBS3laLFlBQVk1UyxJQUFJQSxFQUFFdVksZUFBZXZZLEVBQUV1WSxpQkFBaUIsa0JBQW1CdlksRUFBRXFZLGNBQzdlclksRUFBRXFZLGFBQVksR0FBSWxmLEtBQUtnZixtQkFBbUJOLEtBQUtXLGdCQUFnQixXQUFXLElBQUl4WSxFQUFFN0csS0FBS3laLFlBQVk1UyxJQUFJQSxFQUFFd1ksZ0JBQWdCeFksRUFBRXdZLGtCQUFrQixrQkFBbUJ4WSxFQUFFeVksZUFBZXpZLEVBQUV5WSxjQUFhLEdBQUl0ZixLQUFLbWYscUJBQXFCVCxLQUFLYSxRQUFRLGFBQWFDLGFBQWFkLEtBQVk1WCxFQUNoUixJQUFvTDJZLEdBQUdDLEdBQUdDLEdBQXRMQyxHQUFHLENBQUNDLFdBQVcsRUFBRUMsUUFBUSxFQUFFQyxXQUFXLEVBQUVDLFVBQVUsU0FBU25aLEdBQUcsT0FBT0EsRUFBRW1aLFdBQVdDLEtBQUtDLE9BQU9qQixpQkFBaUIsRUFBRWtCLFVBQVUsR0FBR0MsR0FBR3hCLEdBQUdnQixJQUFJUyxHQUFHM1osRUFBRSxHQUFHa1osR0FBRyxDQUFDVSxLQUFLLEVBQUVDLE9BQU8sSUFBSUMsR0FBRzVCLEdBQUd5QixJQUFhSSxHQUFHL1osRUFBRSxHQUFHMlosR0FBRyxDQUFDSyxRQUFRLEVBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLFNBQVMsRUFBRUMsT0FBTyxFQUFFQyxRQUFRLEVBQUVDLGlCQUFpQkMsR0FBR0MsT0FBTyxFQUFFQyxRQUFRLEVBQUVDLGNBQWMsU0FBUzNhLEdBQUcsWUFBTyxJQUFTQSxFQUFFMmEsY0FBYzNhLEVBQUU0YSxjQUFjNWEsRUFBRTBPLFdBQVcxTyxFQUFFNmEsVUFBVTdhLEVBQUU0YSxZQUFZNWEsRUFBRTJhLGVBQWVHLFVBQVUsU0FBUzlhLEdBQUcsTUFBRyxjQUMzZUEsRUFBU0EsRUFBRThhLFdBQVU5YSxJQUFJOFksS0FBS0EsSUFBSSxjQUFjOVksRUFBRTBCLE1BQU1rWCxHQUFHNVksRUFBRTZaLFFBQVFmLEdBQUdlLFFBQVFoQixHQUFHN1ksRUFBRThaLFFBQVFoQixHQUFHZ0IsU0FBU2pCLEdBQUdELEdBQUcsRUFBRUUsR0FBRzlZLEdBQVU0WSxLQUFJbUMsVUFBVSxTQUFTL2EsR0FBRyxNQUFNLGNBQWNBLEVBQUVBLEVBQUUrYSxVQUFVbEMsTUFBTW1DLEdBQUdqRCxHQUFHNkIsSUFBaUNxQixHQUFHbEQsR0FBN0JsWSxFQUFFLEdBQUcrWixHQUFHLENBQUNzQixhQUFhLEtBQTRDQyxHQUFHcEQsR0FBOUJsWSxFQUFFLEdBQUcyWixHQUFHLENBQUNtQixjQUFjLEtBQTBFUyxHQUFHckQsR0FBNURsWSxFQUFFLEdBQUdrWixHQUFHLENBQUNzQyxjQUFjLEVBQUVDLFlBQVksRUFBRUMsY0FBYyxLQUFzSEMsR0FBR3pELEdBQXhHbFksRUFBRSxHQUFHa1osR0FBRyxDQUFDMEMsY0FBYyxTQUFTemIsR0FBRyxNQUFNLGtCQUFrQkEsRUFBRUEsRUFBRXliLGNBQWM5YSxPQUFPOGEsa0JBQWdEQyxHQUFHM0QsR0FBckJsWSxFQUFFLEdBQUdrWixHQUFHLENBQUN4ZCxLQUFLLEtBQWNvZ0IsR0FBRyxDQUFDQyxJQUFJLFNBQ3hmQyxTQUFTLElBQUlDLEtBQUssWUFBWUMsR0FBRyxVQUFVQyxNQUFNLGFBQWFDLEtBQUssWUFBWUMsSUFBSSxTQUFTQyxJQUFJLEtBQUtDLEtBQUssY0FBY0MsS0FBSyxjQUFjQyxPQUFPLGFBQWFDLGdCQUFnQixnQkFBZ0JDLEdBQUcsQ0FBQ0MsRUFBRSxZQUFZQyxFQUFFLE1BQU1DLEdBQUcsUUFBUUMsR0FBRyxRQUFRQyxHQUFHLFFBQVFDLEdBQUcsVUFBVUMsR0FBRyxNQUFNQyxHQUFHLFFBQVFDLEdBQUcsV0FBV0MsR0FBRyxTQUFTQyxHQUFHLElBQUlDLEdBQUcsU0FBU0MsR0FBRyxXQUFXQyxHQUFHLE1BQU1DLEdBQUcsT0FBT0MsR0FBRyxZQUFZQyxHQUFHLFVBQVVDLEdBQUcsYUFBYUMsR0FBRyxZQUFZQyxHQUFHLFNBQVNDLEdBQUcsU0FBU0MsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksS0FBS0MsSUFBSSxLQUN0ZkMsSUFBSSxLQUFLQyxJQUFJLEtBQUtDLElBQUksTUFBTUMsSUFBSSxNQUFNQyxJQUFJLE1BQU1DLElBQUksVUFBVUMsSUFBSSxhQUFhQyxJQUFJLFFBQVFDLEdBQUcsQ0FBQ0MsSUFBSSxTQUFTQyxRQUFRLFVBQVVDLEtBQUssVUFBVUMsTUFBTSxZQUFZLFNBQVNDLEdBQUdsZixHQUFHLElBQUlDLEVBQUU5RyxLQUFLeVosWUFBWSxPQUFPM1MsRUFBRXNhLGlCQUFpQnRhLEVBQUVzYSxpQkFBaUJ2YSxNQUFJQSxFQUFFNmUsR0FBRzdlLE9BQU1DLEVBQUVELEdBQU0sU0FBU3dhLEtBQUssT0FBTzBFLEdBQzlSLElBQ2lFQyxHQUFHcEgsR0FEN0RsWSxFQUFFLEdBQUcyWixHQUFHLENBQUNoYyxJQUFJLFNBQVN3QyxHQUFHLEdBQUdBLEVBQUV4QyxJQUFJLENBQUMsSUFBSXlDLEVBQUUwYixHQUFHM2IsRUFBRXhDLE1BQU13QyxFQUFFeEMsSUFBSSxHQUFHLGlCQUFpQnlDLEVBQUUsT0FBT0EsRUFBRSxNQUFNLGFBQWFELEVBQUUwQixLQUFjLE1BQVIxQixFQUFFMFgsR0FBRzFYLElBQVUsUUFBUTlELE9BQU9JLGFBQWEwRCxHQUFJLFlBQVlBLEVBQUUwQixNQUFNLFVBQVUxQixFQUFFMEIsS0FBSzhhLEdBQUd4YyxFQUFFMlgsVUFBVSxlQUFlLElBQUl5SCxLQUFLLEVBQUVuaEIsU0FBUyxFQUFFa2MsUUFBUSxFQUFFQyxTQUFTLEVBQUVDLE9BQU8sRUFBRUMsUUFBUSxFQUFFK0UsT0FBTyxFQUFFQyxPQUFPLEVBQUUvRSxpQkFBaUJDLEdBQUc1QyxTQUFTLFNBQVM1WCxHQUFHLE1BQU0sYUFBYUEsRUFBRTBCLEtBQUtnVyxHQUFHMVgsR0FBRyxHQUFHMlgsUUFBUSxTQUFTM1gsR0FBRyxNQUFNLFlBQVlBLEVBQUUwQixNQUFNLFVBQVUxQixFQUFFMEIsS0FBSzFCLEVBQUUyWCxRQUFRLEdBQUc0SCxNQUFNLFNBQVN2ZixHQUFHLE1BQU0sYUFDN2VBLEVBQUUwQixLQUFLZ1csR0FBRzFYLEdBQUcsWUFBWUEsRUFBRTBCLE1BQU0sVUFBVTFCLEVBQUUwQixLQUFLMUIsRUFBRTJYLFFBQVEsTUFBNEk2SCxHQUFHekgsR0FBN0hsWSxFQUFFLEdBQUcrWixHQUFHLENBQUM1RyxVQUFVLEVBQUV5TSxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsU0FBUyxFQUFFQyxtQkFBbUIsRUFBRUMsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsWUFBWSxFQUFFQyxVQUFVLEtBQW1JQyxHQUFHbkksR0FBckhsWSxFQUFFLEdBQUcyWixHQUFHLENBQUMyRyxRQUFRLEVBQUVDLGNBQWMsRUFBRUMsZUFBZSxFQUFFaEcsT0FBTyxFQUFFQyxRQUFRLEVBQUVILFFBQVEsRUFBRUMsU0FBUyxFQUFFRyxpQkFBaUJDLE1BQTBFOEYsR0FBR3ZJLEdBQTNEbFksRUFBRSxHQUFHa1osR0FBRyxDQUFDdFgsYUFBYSxFQUFFNlosWUFBWSxFQUFFQyxjQUFjLEtBQy9QZ0YsR0FBR3hJLEdBRDZRbFksRUFBRSxHQUFHK1osR0FBRyxDQUFDNEcsT0FBTyxTQUFTeGdCLEdBQUcsTUFBTSxXQUFXQSxFQUFFQSxFQUFFd2dCLE9BQU8sZ0JBQWdCeGdCLEdBQUdBLEVBQUV5Z0IsWUFBWSxHQUNsZkMsT0FBTyxTQUFTMWdCLEdBQUcsTUFBTSxXQUFXQSxFQUFFQSxFQUFFMGdCLE9BQU8sZ0JBQWdCMWdCLEdBQUdBLEVBQUUyZ0IsWUFBWSxlQUFlM2dCLEdBQUdBLEVBQUU0Z0IsV0FBVyxHQUFHQyxPQUFPLEVBQUVDLFVBQVUsS0FBY0MsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLElBQUlDLEdBQUd0Z0IsR0FBSSxxQkFBcUJDLE9BQU9zZ0IsR0FBRyxLQUFLdmdCLEdBQUksaUJBQWlCdkYsV0FBVzhsQixHQUFHOWxCLFNBQVMrbEIsY0FBYyxJQUFJQyxHQUFHemdCLEdBQUksY0FBY0MsU0FBU3NnQixHQUFHRyxHQUFHMWdCLEtBQU1zZ0IsSUFBSUMsSUFBSSxFQUFFQSxJQUFJLElBQUlBLElBQUlJLEdBQUdubEIsT0FBT0ksYUFBYSxJQUFJZ2xCLElBQUcsRUFDMVcsU0FBU0MsR0FBR3ZoQixFQUFFQyxHQUFHLE9BQU9ELEdBQUcsSUFBSyxRQUFRLE9BQU8sSUFBSStnQixHQUFHN1QsUUFBUWpOLEVBQUUwWCxTQUFTLElBQUssVUFBVSxPQUFPLE1BQU0xWCxFQUFFMFgsUUFBUSxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssV0FBVyxPQUFNLEVBQUcsUUFBUSxPQUFNLEdBQUksU0FBUzZKLEdBQUd4aEIsR0FBYyxNQUFNLGlCQUFqQkEsRUFBRUEsRUFBRTBaLFNBQWtDLFNBQVMxWixFQUFFQSxFQUFFekUsS0FBSyxLQUFLLElBQUlrbUIsSUFBRyxFQUUxUUMsR0FBRyxDQUFDQyxPQUFNLEVBQUdDLE1BQUssRUFBR0MsVUFBUyxFQUFHLGtCQUFpQixFQUFHQyxPQUFNLEVBQUdDLE9BQU0sRUFBR25qQixRQUFPLEVBQUdvakIsVUFBUyxFQUFHQyxPQUFNLEVBQUdDLFFBQU8sRUFBR0MsS0FBSSxFQUFHQyxNQUFLLEVBQUdDLE1BQUssRUFBR0MsS0FBSSxFQUFHQyxNQUFLLEdBQUksU0FBU0MsR0FBR3hpQixHQUFHLElBQUlDLEVBQUVELEdBQUdBLEVBQUVpRyxVQUFVakcsRUFBRWlHLFNBQVNuRSxjQUFjLE1BQU0sVUFBVTdCLElBQUl5aEIsR0FBRzFoQixFQUFFMEIsTUFBTSxhQUFhekIsRUFBUSxTQUFTd2lCLEdBQUd6aUIsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUdrTyxHQUFHbE8sR0FBc0IsR0FBbkJqQixFQUFFeWlCLEdBQUd6aUIsRUFBRSxhQUFnQnJILFNBQVNzSCxFQUFFLElBQUlxWixHQUFHLFdBQVcsU0FBUyxLQUFLclosRUFBRWdCLEdBQUdsQixFQUFFdEcsS0FBSyxDQUFDaXBCLE1BQU16aUIsRUFBRTBpQixVQUFVM2lCLEtBQUssSUFBSTRpQixHQUFHLEtBQUtDLEdBQUcsS0FBSyxTQUFTQyxHQUFHL2lCLEdBQUdnakIsR0FBR2hqQixFQUFFLEdBQUcsU0FBU2lqQixHQUFHampCLEdBQWUsR0FBRzZHLEVBQVRxYyxHQUFHbGpCLElBQVksT0FBT0EsRUFDbmUsU0FBU21qQixHQUFHbmpCLEVBQUVDLEdBQUcsR0FBRyxXQUFXRCxFQUFFLE9BQU9DLEVBQUUsSUFBSW1qQixJQUFHLEVBQUcsR0FBRzFpQixFQUFHLENBQUMsSUFBSTJpQixHQUFHLEdBQUczaUIsRUFBRyxDQUFDLElBQUk0aUIsR0FBRyxZQUFZbm9CLFNBQVMsSUFBSW1vQixHQUFHLENBQUMsSUFBSUMsR0FBR3BvQixTQUFTeUYsY0FBYyxPQUFPMmlCLEdBQUc3Z0IsYUFBYSxVQUFVLFdBQVc0Z0IsR0FBRyxtQkFBb0JDLEdBQUdDLFFBQVFILEdBQUdDLFFBQVFELElBQUcsRUFBR0QsR0FBR0MsTUFBTWxvQixTQUFTK2xCLGNBQWMsRUFBRS9sQixTQUFTK2xCLGNBQWMsU0FBU3VDLEtBQUtaLEtBQUtBLEdBQUdhLFlBQVksbUJBQW1CQyxJQUFJYixHQUFHRCxHQUFHLE1BQU0sU0FBU2MsR0FBRzNqQixHQUFHLEdBQUcsVUFBVUEsRUFBRXlCLGNBQWN3aEIsR0FBR0gsSUFBSSxDQUFDLElBQUk3aUIsRUFBRSxHQUF5QixHQUF0QndpQixHQUFHeGlCLEVBQUU2aUIsR0FBRzlpQixFQUFFeU8sR0FBR3pPLElBQUlBLEVBQUUraUIsR0FBTXJULEdBQUcxUCxFQUFFQyxPQUFPLENBQUN5UCxJQUFHLEVBQUcsSUFBSUosR0FBR3RQLEVBQUVDLEdBQUcsUUFBUXlQLElBQUcsRUFBR0UsUUFDM2UsU0FBU2dVLEdBQUc1akIsRUFBRUMsRUFBRUMsR0FBRyxZQUFZRixHQUFHeWpCLEtBQVVYLEdBQUc1aUIsR0FBUjJpQixHQUFHNWlCLEdBQVU0akIsWUFBWSxtQkFBbUJGLEtBQUssYUFBYTNqQixHQUFHeWpCLEtBQUssU0FBU0ssR0FBRzlqQixHQUFHLEdBQUcsb0JBQW9CQSxHQUFHLFVBQVVBLEdBQUcsWUFBWUEsRUFBRSxPQUFPaWpCLEdBQUdILElBQUksU0FBU2lCLEdBQUcvakIsRUFBRUMsR0FBRyxHQUFHLFVBQVVELEVBQUUsT0FBT2lqQixHQUFHaGpCLEdBQUcsU0FBUytqQixHQUFHaGtCLEVBQUVDLEdBQUcsR0FBRyxVQUFVRCxHQUFHLFdBQVdBLEVBQUUsT0FBT2lqQixHQUFHaGpCLEdBQW1FLElBQUlna0IsR0FBRyxtQkFBb0J4b0IsT0FBTytTLEdBQUcvUyxPQUFPK1MsR0FBNUcsU0FBWXhPLEVBQUVDLEdBQUcsT0FBT0QsSUFBSUMsSUFBSSxJQUFJRCxHQUFHLEVBQUVBLEdBQUksRUFBRUMsSUFBSUQsR0FBSUEsR0FBR0MsR0FBSUEsR0FBb0Rpa0IsR0FBR3pvQixPQUFPbkMsVUFBVW9DLGVBQzdhLFNBQVN5b0IsR0FBR25rQixFQUFFQyxHQUFHLEdBQUdna0IsR0FBR2prQixFQUFFQyxHQUFHLE9BQU0sRUFBRyxHQUFHLGlCQUFrQkQsR0FBRyxPQUFPQSxHQUFHLGlCQUFrQkMsR0FBRyxPQUFPQSxFQUFFLE9BQU0sRUFBRyxJQUFJQyxFQUFFekUsT0FBT3FCLEtBQUtrRCxHQUFHa0IsRUFBRXpGLE9BQU9xQixLQUFLbUQsR0FBRyxHQUFHQyxFQUFFdEgsU0FBU3NJLEVBQUV0SSxPQUFPLE9BQU0sRUFBRyxJQUFJc0ksRUFBRSxFQUFFQSxFQUFFaEIsRUFBRXRILE9BQU9zSSxJQUFJLElBQUlnakIsR0FBRzNxQixLQUFLMEcsRUFBRUMsRUFBRWdCLE1BQU0raUIsR0FBR2prQixFQUFFRSxFQUFFZ0IsSUFBSWpCLEVBQUVDLEVBQUVnQixLQUFLLE9BQU0sRUFBRyxPQUFNLEVBQUcsU0FBU2tqQixHQUFHcGtCLEdBQUcsS0FBS0EsR0FBR0EsRUFBRTBKLFlBQVkxSixFQUFFQSxFQUFFMEosV0FBVyxPQUFPMUosRUFDbFUsU0FBU3FrQixHQUFHcmtCLEVBQUVDLEdBQUcsSUFBd0JpQixFQUFwQmhCLEVBQUVra0IsR0FBR3BrQixHQUFPLElBQUpBLEVBQUUsRUFBWUUsR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRStKLFNBQVMsQ0FBMEIsR0FBekIvSSxFQUFFbEIsRUFBRUUsRUFBRThJLFlBQVlwUSxPQUFVb0gsR0FBR0MsR0FBR2lCLEdBQUdqQixFQUFFLE1BQU0sQ0FBQzdGLEtBQUs4RixFQUFFb2tCLE9BQU9ya0IsRUFBRUQsR0FBR0EsRUFBRWtCLEVBQUVsQixFQUFFLENBQUMsS0FBS0UsR0FBRyxDQUFDLEdBQUdBLEVBQUVxa0IsWUFBWSxDQUFDcmtCLEVBQUVBLEVBQUVxa0IsWUFBWSxNQUFNdmtCLEVBQUVFLEVBQUVBLEVBQUUwTyxXQUFXMU8sT0FBRSxFQUFPQSxFQUFFa2tCLEdBQUdsa0IsSUFBSSxTQUFTc2tCLEdBQUd4a0IsRUFBRUMsR0FBRyxTQUFPRCxJQUFHQyxLQUFFRCxJQUFJQyxLQUFLRCxHQUFHLElBQUlBLEVBQUVpSyxZQUFZaEssR0FBRyxJQUFJQSxFQUFFZ0ssU0FBU3VhLEdBQUd4a0IsRUFBRUMsRUFBRTJPLFlBQVksYUFBYTVPLEVBQUVBLEVBQUV5a0IsU0FBU3hrQixLQUFHRCxFQUFFMGtCLDRCQUF3RCxHQUE3QjFrQixFQUFFMGtCLHdCQUF3QnprQixNQUNsWixTQUFTMGtCLEtBQUssSUFBSSxJQUFJM2tCLEVBQUVXLE9BQU9WLEVBQUUrRyxJQUFLL0csYUFBYUQsRUFBRTRrQixtQkFBbUIsQ0FBQyxJQUFJLElBQUkxa0IsRUFBRSxpQkFBa0JELEVBQUU0a0IsY0FBYzVtQixTQUFTNm1CLEtBQUssTUFBTTVqQixHQUFHaEIsR0FBRSxFQUFHLElBQUdBLEVBQXlCLE1BQU1ELEVBQUUrRyxHQUEvQmhILEVBQUVDLEVBQUU0a0IsZUFBZ0MxcEIsVUFBVSxPQUFPOEUsRUFBRSxTQUFTOGtCLEdBQUcva0IsR0FBRyxJQUFJQyxFQUFFRCxHQUFHQSxFQUFFaUcsVUFBVWpHLEVBQUVpRyxTQUFTbkUsY0FBYyxPQUFPN0IsSUFBSSxVQUFVQSxJQUFJLFNBQVNELEVBQUUwQixNQUFNLFdBQVcxQixFQUFFMEIsTUFBTSxRQUFRMUIsRUFBRTBCLE1BQU0sUUFBUTFCLEVBQUUwQixNQUFNLGFBQWExQixFQUFFMEIsT0FBTyxhQUFhekIsR0FBRyxTQUFTRCxFQUFFZ2xCLGlCQUN4WixJQUFJQyxHQUFHdmtCLEdBQUksaUJBQWlCdkYsVUFBVSxJQUFJQSxTQUFTK2xCLGFBQWFnRSxHQUFHLEtBQUtDLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxJQUFHLEVBQzNGLFNBQVNDLEdBQUd0bEIsRUFBRUMsRUFBRUMsR0FBRyxJQUFJZ0IsRUFBRWhCLEVBQUVTLFNBQVNULEVBQUVBLEVBQUUvRSxTQUFTLElBQUkrRSxFQUFFK0osU0FBUy9KLEVBQUVBLEVBQUU2SCxjQUFjc2QsSUFBSSxNQUFNSCxJQUFJQSxLQUFLbGUsRUFBRzlGLEtBQXNDQSxFQUE1QixtQkFBTEEsRUFBRWdrQixLQUF5QkgsR0FBRzdqQixHQUFLLENBQUNxa0IsTUFBTXJrQixFQUFFc2tCLGVBQWVDLElBQUl2a0IsRUFBRXdrQixjQUF5RixDQUFDQyxZQUEzRXprQixHQUFHQSxFQUFFNkcsZUFBZTdHLEVBQUU2RyxjQUFjNmQsYUFBYWpsQixRQUFRa2xCLGdCQUErQkYsV0FBV0csYUFBYTVrQixFQUFFNGtCLGFBQWFDLFVBQVU3a0IsRUFBRTZrQixVQUFVQyxZQUFZOWtCLEVBQUU4a0IsYUFBY1osSUFBSWpCLEdBQUdpQixHQUFHbGtCLEtBQUtra0IsR0FBR2xrQixFQUFzQixHQUFwQkEsRUFBRXdoQixHQUFHeUMsR0FBRyxhQUFnQnZzQixTQUFTcUgsRUFBRSxJQUFJc1osR0FBRyxXQUFXLFNBQVMsS0FBS3RaLEVBQUVDLEdBQUdGLEVBQUV0RyxLQUFLLENBQUNpcEIsTUFBTTFpQixFQUFFMmlCLFVBQVUxaEIsSUFBSWpCLEVBQUVoRCxPQUFPaW9CLE1BQ2pmL1AsR0FBRyxtakJBQW1qQnhZLE1BQU0sS0FDNWpCLEdBQUd3WSxHQUFHLG9SQUFvUnhZLE1BQU0sS0FBSyxHQUFHd1ksR0FBR0QsR0FBRyxHQUFHLElBQUksSUFBSStRLEdBQUcscUZBQXFGdHBCLE1BQU0sS0FBS3VwQixHQUFHLEVBQUVBLEdBQUdELEdBQUdydEIsT0FBT3N0QixLQUFLalIsR0FBR2pRLElBQUlpaEIsR0FBR0MsSUFBSSxHQUFHMWxCLEVBQUcsZUFBZSxDQUFDLFdBQVcsY0FDbGVBLEVBQUcsZUFBZSxDQUFDLFdBQVcsY0FBY0EsRUFBRyxpQkFBaUIsQ0FBQyxhQUFhLGdCQUFnQkEsRUFBRyxpQkFBaUIsQ0FBQyxhQUFhLGdCQUFnQkQsRUFBRyxXQUFXLG9FQUFvRTVELE1BQU0sTUFBTTRELEVBQUcsV0FBVyx1RkFBdUY1RCxNQUFNLE1BQU00RCxFQUFHLGdCQUFnQixDQUFDLGlCQUFpQixXQUFXLFlBQVksVUFBVUEsRUFBRyxtQkFBbUIsMkRBQTJENUQsTUFBTSxNQUM1ZjRELEVBQUcscUJBQXFCLDZEQUE2RDVELE1BQU0sTUFBTTRELEVBQUcsc0JBQXNCLDhEQUE4RDVELE1BQU0sTUFBTSxJQUFJd3BCLEdBQUcsc05BQXNOeHBCLE1BQU0sS0FBS3lwQixHQUFHLElBQUkvbEIsSUFBSSwwQ0FBMEMxRCxNQUFNLEtBQUswcEIsT0FBT0YsS0FDbmYsU0FBU0csR0FBR3RtQixFQUFFQyxFQUFFQyxHQUFHLElBQUlnQixFQUFFbEIsRUFBRTBCLE1BQU0sZ0JBQWdCMUIsRUFBRWtZLGNBQWNoWSxFQS9DakUsU0FBWUYsRUFBRUMsRUFBRUMsRUFBRWdCLEVBQUVDLEVBQUVDLEVBQUU5RyxFQUFFOEssRUFBRUQsR0FBNEIsR0FBekJ3TCxHQUFHUCxNQUFNalgsS0FBS29FLFdBQWMrUyxHQUFHLENBQUMsSUFBR0EsR0FBZ0MsTUFBTWxTLE1BQU0yQixFQUFFLE1BQTFDLElBQUlvUSxFQUFFSSxHQUFHRCxJQUFHLEVBQUdDLEdBQUcsS0FBOEJDLEtBQUtBLElBQUcsRUFBR0MsR0FBR04sSUErQ2pFb1csQ0FBR3JsQixFQUFFakIsT0FBRSxFQUFPRCxHQUFHQSxFQUFFa1ksY0FBYyxLQUNwRyxTQUFTOEssR0FBR2hqQixFQUFFQyxHQUFHQSxFQUFFLElBQU8sRUFBRkEsR0FBSyxJQUFJLElBQUlDLEVBQUUsRUFBRUEsRUFBRUYsRUFBRXBILE9BQU9zSCxJQUFJLENBQUMsSUFBSWdCLEVBQUVsQixFQUFFRSxHQUFHaUIsRUFBRUQsRUFBRXloQixNQUFNemhCLEVBQUVBLEVBQUUwaEIsVUFBVTVpQixFQUFFLENBQUMsSUFBSW9CLE9BQUUsRUFBTyxHQUFHbkIsRUFBRSxJQUFJLElBQUkzRixFQUFFNEcsRUFBRXRJLE9BQU8sRUFBRSxHQUFHMEIsRUFBRUEsSUFBSSxDQUFDLElBQUk4SyxFQUFFbEUsRUFBRTVHLEdBQUc2SyxFQUFFQyxFQUFFb2hCLFNBQVNyVyxFQUFFL0ssRUFBRThTLGNBQTJCLEdBQWI5UyxFQUFFQSxFQUFFcWhCLFNBQVl0aEIsSUFBSS9ELEdBQUdELEVBQUVtWCx1QkFBdUIsTUFBTXRZLEVBQUVzbUIsR0FBR25sQixFQUFFaUUsRUFBRStLLEdBQUcvTyxFQUFFK0QsT0FBTyxJQUFJN0ssRUFBRSxFQUFFQSxFQUFFNEcsRUFBRXRJLE9BQU8wQixJQUFJLENBQW9ELEdBQTVDNkssR0FBUEMsRUFBRWxFLEVBQUU1RyxJQUFPa3NCLFNBQVNyVyxFQUFFL0ssRUFBRThTLGNBQWM5UyxFQUFFQSxFQUFFcWhCLFNBQVl0aEIsSUFBSS9ELEdBQUdELEVBQUVtWCx1QkFBdUIsTUFBTXRZLEVBQUVzbUIsR0FBR25sQixFQUFFaUUsRUFBRStLLEdBQUcvTyxFQUFFK0QsSUFBSSxHQUFHcUwsR0FBRyxNQUFNeFEsRUFBRXlRLEdBQUdELElBQUcsRUFBR0MsR0FBRyxLQUFLelEsRUFDMWEsU0FBUzBtQixHQUFFMW1CLEVBQUVDLEdBQUcsSUFBSUMsRUFBRXltQixHQUFHMW1CLEdBQUdpQixFQUFFbEIsRUFBRSxXQUFXRSxFQUFFMG1CLElBQUkxbEIsS0FBSzJsQixHQUFHNW1CLEVBQUVELEVBQUUsR0FBRSxHQUFJRSxFQUFFTyxJQUFJUyxJQUFJLElBQUk0bEIsR0FBRyxrQkFBa0J4USxLQUFLeVEsU0FBU3RkLFNBQVMsSUFBSXRILE1BQU0sR0FBRyxTQUFTNmtCLEdBQUdobkIsR0FBR0EsRUFBRThtQixNQUFNOW1CLEVBQUU4bUIsS0FBSSxFQUFHMW1CLEVBQUd4RCxTQUFRLFNBQVNxRCxHQUFHbW1CLEdBQUdRLElBQUkzbUIsSUFBSWduQixHQUFHaG5CLEdBQUUsRUFBR0QsRUFBRSxNQUFNaW5CLEdBQUdobkIsR0FBRSxFQUFHRCxFQUFFLFVBQ3RPLFNBQVNpbkIsR0FBR2puQixFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxJQUFJQyxFQUFFLEVBQUU1RCxVQUFVM0UsYUFBUSxJQUFTMkUsVUFBVSxHQUFHQSxVQUFVLEdBQUcsRUFBRTZELEVBQUVsQixFQUE2RCxHQUEzRCxvQkFBb0JGLEdBQUcsSUFBSUUsRUFBRStKLFdBQVc3SSxFQUFFbEIsRUFBRTZILGVBQWtCLE9BQU83RyxJQUFJakIsR0FBR21tQixHQUFHUSxJQUFJNW1CLEdBQUcsQ0FBQyxHQUFHLFdBQVdBLEVBQUUsT0FBT21CLEdBQUcsRUFBRUMsRUFBRUYsRUFBRSxJQUFJNUcsRUFBRXFzQixHQUFHdmxCLEdBQUdnRSxFQUFFcEYsRUFBRSxNQUFNQyxFQUFFLFVBQVUsVUFBVTNGLEVBQUVzc0IsSUFBSXhoQixLQUFLbkYsSUFBSWtCLEdBQUcsR0FBRzBsQixHQUFHemxCLEVBQUVwQixFQUFFbUIsRUFBRWxCLEdBQUczRixFQUFFbUcsSUFBSTJFLElBQ2xTLFNBQVN5aEIsR0FBRzdtQixFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxJQUFJQyxFQUFFOFQsR0FBRzNPLElBQUlyRyxHQUFHLFlBQU8sSUFBU2tCLEVBQUUsRUFBRUEsR0FBRyxLQUFLLEVBQUVBLEVBQUU2VixHQUFHLE1BQU0sS0FBSyxFQUFFN1YsRUFBRStWLEdBQUcsTUFBTSxRQUFRL1YsRUFBRThWLEdBQUcvVyxFQUFFaUIsRUFBRWdXLEtBQUssS0FBS2xYLEVBQUVDLEVBQUVGLEdBQUdtQixPQUFFLEdBQVEyTyxJQUFJLGVBQWU3UCxHQUFHLGNBQWNBLEdBQUcsVUFBVUEsSUFBSWtCLEdBQUUsR0FBSUQsT0FBRSxJQUFTQyxFQUFFbkIsRUFBRWdRLGlCQUFpQi9QLEVBQUVDLEVBQUUsQ0FBQ2duQixTQUFRLEVBQUdDLFFBQVFobUIsSUFBSW5CLEVBQUVnUSxpQkFBaUIvUCxFQUFFQyxHQUFFLFFBQUksSUFBU2lCLEVBQUVuQixFQUFFZ1EsaUJBQWlCL1AsRUFBRUMsRUFBRSxDQUFDaW5CLFFBQVFobUIsSUFBSW5CLEVBQUVnUSxpQkFBaUIvUCxFQUFFQyxHQUFFLEdBQ3BXLFNBQVNtWCxHQUFHclgsRUFBRUMsRUFBRUMsRUFBRWdCLEVBQUVDLEdBQUcsSUFBSUMsRUFBRUYsRUFBRSxHQUFHLElBQU8sRUFBRmpCLElBQU0sSUFBTyxFQUFGQSxJQUFNLE9BQU9pQixFQUFFbEIsRUFBRSxPQUFPLENBQUMsR0FBRyxPQUFPa0IsRUFBRSxPQUFPLElBQUk1RyxFQUFFNEcsRUFBRXFFLElBQUksR0FBRyxJQUFJakwsR0FBRyxJQUFJQSxFQUFFLENBQUMsSUFBSThLLEVBQUVsRSxFQUFFZ08sVUFBVXNFLGNBQWMsR0FBR3BPLElBQUlqRSxHQUFHLElBQUlpRSxFQUFFNkUsVUFBVTdFLEVBQUV3SixhQUFhek4sRUFBRSxNQUFNLEdBQUcsSUFBSTdHLEVBQUUsSUFBSUEsRUFBRTRHLEVBQUU0UCxPQUFPLE9BQU94VyxHQUFHLENBQUMsSUFBSTZLLEVBQUU3SyxFQUFFaUwsSUFBSSxJQUFHLElBQUlKLEdBQUcsSUFBSUEsTUFBS0EsRUFBRTdLLEVBQUU0VSxVQUFVc0UsaUJBQWtCclMsR0FBRyxJQUFJZ0UsRUFBRThFLFVBQVU5RSxFQUFFeUosYUFBYXpOLEdBQUUsT0FBTzdHLEVBQUVBLEVBQUV3VyxPQUFPLEtBQUssT0FBTzFMLEdBQUcsQ0FBUyxHQUFHLFFBQVg5SyxFQUFFNlksR0FBRy9OLElBQWUsT0FBZSxHQUFHLEtBQVhELEVBQUU3SyxFQUFFaUwsTUFBYyxJQUFJSixFQUFFLENBQUNqRSxFQUFFRSxFQUFFOUcsRUFBRSxTQUFTMEYsRUFBRW9GLEVBQUVBLEVBQUV3SixZQUFZMU4sRUFBRUEsRUFBRTRQLFFBdkQ3YyxTQUFZOVEsRUFBRUMsRUFBRUMsR0FBRyxHQUFHeVAsR0FBRyxPQUFPM1AsSUFBTzJQLElBQUcsRUFBRyxJQUFXRixHQUFHelAsRUFBRUMsRUFBRUMsR0FBRyxRQUFReVAsSUFBRyxFQUFHQyxNQXVEb1l3WCxFQUFHLFdBQVcsSUFBSWxtQixFQUFFRSxFQUFFRCxFQUFFc04sR0FBR3ZPLEdBQUc1RixFQUFFLEdBQ3BmMEYsRUFBRSxDQUFDLElBQUlvRixFQUFFNFAsR0FBRzFPLElBQUl0RyxHQUFHLFFBQUcsSUFBU29GLEVBQUUsQ0FBQyxJQUFJRCxFQUFFb1UsR0FBRzhOLEVBQUVybkIsRUFBRSxPQUFPQSxHQUFHLElBQUssV0FBVyxHQUFHLElBQUkwWCxHQUFHeFgsR0FBRyxNQUFNRixFQUFFLElBQUssVUFBVSxJQUFLLFFBQVFtRixFQUFFZ2EsR0FBRyxNQUFNLElBQUssVUFBVWtJLEVBQUUsUUFBUWxpQixFQUFFZ1csR0FBRyxNQUFNLElBQUssV0FBV2tNLEVBQUUsT0FBT2xpQixFQUFFZ1csR0FBRyxNQUFNLElBQUssYUFBYSxJQUFLLFlBQVloVyxFQUFFZ1csR0FBRyxNQUFNLElBQUssUUFBUSxHQUFHLElBQUlqYixFQUFFdWEsT0FBTyxNQUFNemEsRUFBRSxJQUFLLFdBQVcsSUFBSyxXQUFXLElBQUssWUFBWSxJQUFLLFlBQVksSUFBSyxVQUFVLElBQUssV0FBVyxJQUFLLFlBQVksSUFBSyxjQUFjbUYsRUFBRTZWLEdBQUcsTUFBTSxJQUFLLE9BQU8sSUFBSyxVQUFVLElBQUssWUFBWSxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssV0FBVyxJQUFLLFlBQVksSUFBSyxPQUFPN1YsRUFDMWlCOFYsR0FBRyxNQUFNLElBQUssY0FBYyxJQUFLLFdBQVcsSUFBSyxZQUFZLElBQUssYUFBYTlWLEVBQUUrYSxHQUFHLE1BQU0sS0FBS3RMLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHM1AsRUFBRWlXLEdBQUcsTUFBTSxLQUFLckcsR0FBRzVQLEVBQUVtYixHQUFHLE1BQU0sSUFBSyxTQUFTbmIsRUFBRXdVLEdBQUcsTUFBTSxJQUFLLFFBQVF4VSxFQUFFb2IsR0FBRyxNQUFNLElBQUssT0FBTyxJQUFLLE1BQU0sSUFBSyxRQUFRcGIsRUFBRXFXLEdBQUcsTUFBTSxJQUFLLG9CQUFvQixJQUFLLHFCQUFxQixJQUFLLGdCQUFnQixJQUFLLGNBQWMsSUFBSyxjQUFjLElBQUssYUFBYSxJQUFLLGNBQWMsSUFBSyxZQUFZclcsRUFBRXFhLEdBQUcsSUFBSThILEVBQUUsSUFBTyxFQUFGcm5CLEdBQUtzbkIsR0FBR0QsR0FBRyxXQUFXdG5CLEVBQUV3bkIsRUFBRUYsRUFBRSxPQUFPbGlCLEVBQUVBLEVBQUUsVUFBVSxLQUFLQSxFQUFFa2lCLEVBQUUsR0FBRyxJQUFJLElBQVFHLEVBQUpDLEVBQUV4bUIsRUFBSSxPQUMvZXdtQixHQUFHLENBQUssSUFBSUMsR0FBUkYsRUFBRUMsR0FBVXhZLFVBQXNGLEdBQTVFLElBQUl1WSxFQUFFbGlCLEtBQUssT0FBT29pQixJQUFJRixFQUFFRSxFQUFFLE9BQU9ILEdBQWMsT0FBVkcsRUFBRTlYLEdBQUc2WCxFQUFFRixLQUFZRixFQUFFNXRCLEtBQUtrdUIsR0FBR0YsRUFBRUMsRUFBRUYsS0FBU0YsRUFBRSxNQUFNRyxFQUFFQSxFQUFFNVcsT0FBTyxFQUFFd1csRUFBRTF1QixTQUFTd00sRUFBRSxJQUFJRCxFQUFFQyxFQUFFaWlCLEVBQUUsS0FBS25uQixFQUFFaUIsR0FBRzdHLEVBQUVaLEtBQUssQ0FBQ2lwQixNQUFNdmQsRUFBRXdkLFVBQVUwRSxNQUFNLEdBQUcsSUFBTyxFQUFGcm5CLEdBQUssQ0FBNEUsR0FBbkNrRixFQUFFLGFBQWFuRixHQUFHLGVBQWVBLEtBQXRFb0YsRUFBRSxjQUFjcEYsR0FBRyxnQkFBZ0JBLElBQTJDLElBQU8sR0FBRkMsTUFBUW9uQixFQUFFbm5CLEVBQUV5YSxlQUFlemEsRUFBRTBhLGVBQWV6SCxHQUFHa1UsS0FBSUEsRUFBRVEsT0FBZ0IxaUIsR0FBR0MsS0FBR0EsRUFBRWpFLEVBQUVSLFNBQVNRLEVBQUVBLEdBQUdpRSxFQUFFakUsRUFBRTRHLGVBQWUzQyxFQUFFd2dCLGFBQWF4Z0IsRUFBRTBpQixhQUFhbm5CLE9BQVV3RSxHQUFxQ0EsRUFBRWpFLEVBQWlCLFFBQWZtbUIsR0FBbkNBLEVBQUVubkIsRUFBRXlhLGVBQWV6YSxFQUFFMmEsV0FBa0IxSCxHQUFHa1UsR0FBRyxRQUNsZUEsS0FBUkUsRUFBRTNXLEdBQUd5VyxLQUFVLElBQUlBLEVBQUU5aEIsS0FBSyxJQUFJOGhCLEVBQUU5aEIsT0FBSzhoQixFQUFFLFFBQVVsaUIsRUFBRSxLQUFLa2lCLEVBQUVubUIsR0FBS2lFLElBQUlraUIsR0FBRSxDQUFnVSxHQUEvVEMsRUFBRXRNLEdBQUcyTSxFQUFFLGVBQWVILEVBQUUsZUFBZUUsRUFBRSxRQUFXLGVBQWUxbkIsR0FBRyxnQkFBZ0JBLElBQUVzbkIsRUFBRTlILEdBQUdtSSxFQUFFLGlCQUFpQkgsRUFBRSxpQkFBaUJFLEVBQUUsV0FBVUgsRUFBRSxNQUFNcGlCLEVBQUVDLEVBQUU4ZCxHQUFHL2QsR0FBR3NpQixFQUFFLE1BQU1KLEVBQUVqaUIsRUFBRThkLEdBQUdtRSxJQUFHamlCLEVBQUUsSUFBSWtpQixFQUFFSyxFQUFFRCxFQUFFLFFBQVF2aUIsRUFBRWpGLEVBQUVpQixJQUFLbEUsT0FBT3NxQixFQUFFbmlCLEVBQUV1VixjQUFjOE0sRUFBRUUsRUFBRSxLQUFLeFUsR0FBR2hTLEtBQUtELEtBQUlvbUIsRUFBRSxJQUFJQSxFQUFFRSxFQUFFRSxFQUFFLFFBQVFMLEVBQUVubkIsRUFBRWlCLElBQUtsRSxPQUFPd3FCLEVBQUVILEVBQUUzTSxjQUFjNE0sRUFBRUksRUFBRUwsR0FBR0MsRUFBRUksRUFBS3hpQixHQUFHa2lCLEVBQUVwbkIsRUFBRSxDQUFhLElBQVJ1bkIsRUFBRUgsRUFBRUssRUFBRSxFQUFNRCxFQUFoQkgsRUFBRW5pQixFQUFrQnNpQixFQUFFQSxFQUFFTSxHQUFHTixHQUFHQyxJQUFRLElBQUpELEVBQUUsRUFBTUUsRUFBRUgsRUFBRUcsRUFBRUEsRUFBRUksR0FBR0osR0FBR0YsSUFBSSxLQUFLLEVBQUVDLEVBQUVELEdBQUdILEVBQUVTLEdBQUdULEdBQUdJLElBQUksS0FBSyxFQUFFRCxFQUFFQyxHQUFHRixFQUNwZk8sR0FBR1AsR0FBR0MsSUFBSSxLQUFLQyxLQUFLLENBQUMsR0FBR0osSUFBSUUsR0FBRyxPQUFPQSxHQUFHRixJQUFJRSxFQUFFM1csVUFBVSxNQUFNNVEsRUFBRXFuQixFQUFFUyxHQUFHVCxHQUFHRSxFQUFFTyxHQUFHUCxHQUFHRixFQUFFLFVBQVVBLEVBQUUsS0FBSyxPQUFPbmlCLEdBQUc2aUIsR0FBRzF0QixFQUFFOEssRUFBRUQsRUFBRW1pQixHQUFFLEdBQUksT0FBT0QsR0FBRyxPQUFPRSxHQUFHUyxHQUFHMXRCLEVBQUVpdEIsRUFBRUYsRUFBRUMsR0FBRSxHQUFpRSxHQUFHLFlBQTFDbmlCLEdBQWpCQyxFQUFFbEUsRUFBRWdpQixHQUFHaGlCLEdBQUdQLFFBQVdzRixVQUFVYixFQUFFYSxTQUFTbkUsZ0JBQStCLFVBQVVxRCxHQUFHLFNBQVNDLEVBQUUxRCxLQUFLLElBQUl1bUIsRUFBRTlFLFFBQVEsR0FBR1gsR0FBR3BkLEdBQUcsR0FBR2dlLEdBQUc2RSxFQUFFakUsT0FBTyxDQUFDaUUsRUFBRW5FLEdBQUcsSUFBSW9FLEVBQUV0RSxRQUFRemUsRUFBRUMsRUFBRWEsV0FBVyxVQUFVZCxFQUFFckQsZ0JBQWdCLGFBQWFzRCxFQUFFMUQsTUFBTSxVQUFVMEQsRUFBRTFELFFBQVF1bUIsRUFBRWxFLElBQ2xWLE9BRHlWa0UsSUFBSUEsRUFBRUEsRUFBRWpvQixFQUFFa0IsSUFBS3VoQixHQUFHbm9CLEVBQUUydEIsRUFBRS9uQixFQUFFaUIsSUFBVyttQixHQUFHQSxFQUFFbG9CLEVBQUVvRixFQUFFbEUsR0FBRyxhQUFhbEIsSUFBSWtvQixFQUFFOWlCLEVBQUVrQyxnQkFDdGU0Z0IsRUFBRXhnQixZQUFZLFdBQVd0QyxFQUFFMUQsTUFBTW1HLEdBQUd6QyxFQUFFLFNBQVNBLEVBQUUyQixRQUFPbWhCLEVBQUVobkIsRUFBRWdpQixHQUFHaGlCLEdBQUdQLE9BQWNYLEdBQUcsSUFBSyxXQUFhd2lCLEdBQUcwRixJQUFJLFNBQVNBLEVBQUVsRCxtQkFBZ0JFLEdBQUdnRCxFQUFFL0MsR0FBR2prQixFQUFFa2tCLEdBQUcsTUFBSyxNQUFNLElBQUssV0FBV0EsR0FBR0QsR0FBR0QsR0FBRyxLQUFLLE1BQU0sSUFBSyxZQUFZRyxJQUFHLEVBQUcsTUFBTSxJQUFLLGNBQWMsSUFBSyxVQUFVLElBQUssVUFBVUEsSUFBRyxFQUFHQyxHQUFHaHJCLEVBQUU0RixFQUFFaUIsR0FBRyxNQUFNLElBQUssa0JBQWtCLEdBQUc4akIsR0FBRyxNQUFNLElBQUssVUFBVSxJQUFLLFFBQVFLLEdBQUdockIsRUFBRTRGLEVBQUVpQixHQUFHLElBQUlnbkIsRUFBRSxHQUFHbkgsR0FBRy9nQixFQUFFLENBQUMsT0FBT0QsR0FBRyxJQUFLLG1CQUFtQixJQUFJb29CLEVBQUUscUJBQXFCLE1BQU1ub0IsRUFBRSxJQUFLLGlCQUFpQm1vQixFQUFFLG1CQUFtQixNQUFNbm9CLEVBQ3JmLElBQUssb0JBQW9CbW9CLEVBQUUsc0JBQXNCLE1BQU1ub0IsRUFBRW1vQixPQUFFLE9BQVkzRyxHQUFHRixHQUFHdmhCLEVBQUVFLEtBQUtrb0IsRUFBRSxvQkFBb0IsWUFBWXBvQixHQUFHLE1BQU1FLEVBQUV5WCxVQUFVeVEsRUFBRSxzQkFBc0JBLElBQUloSCxJQUFJLE9BQU9saEIsRUFBRW9mLFNBQVNtQyxJQUFJLHVCQUF1QjJHLEVBQUUscUJBQXFCQSxHQUFHM0csS0FBSzBHLEVBQUUxUSxPQUFZRixHQUFHLFVBQVJELEdBQUduVyxHQUFrQm1XLEdBQUd2USxNQUFNdVEsR0FBR3RPLFlBQVl5WSxJQUFHLElBQWUsR0FBVnlHLEVBQUV4RixHQUFHeGhCLEVBQUVrbkIsSUFBT3h2QixTQUFTd3ZCLEVBQUUsSUFBSTFNLEdBQUcwTSxFQUFFcG9CLEVBQUUsS0FBS0UsRUFBRWlCLEdBQUc3RyxFQUFFWixLQUFLLENBQUNpcEIsTUFBTXlGLEVBQUV4RixVQUFVc0YsS0FBSUMsR0FBb0IsUUFBUkEsRUFBRTNHLEdBQUd0aEIsT0FBZmtvQixFQUFFN3NCLEtBQUs0c0IsTUFBc0NBLEVBQUVoSCxHQTFCakssU0FBWW5oQixFQUFFQyxHQUFHLE9BQU9ELEdBQUcsSUFBSyxpQkFBaUIsT0FBT3doQixHQUFHdmhCLEdBQUcsSUFBSyxXQUFXLE9BQUcsS0FBS0EsRUFBRXNmLE1BQWEsTUFBSytCLElBQUcsRUFBVUQsSUFBRyxJQUFLLFlBQVksT0FBT3JoQixFQUFFQyxFQUFFMUUsUUFBUzhsQixJQUFJQyxHQUFHLEtBQUt0aEIsRUFBRSxRQUFRLE9BQU8sTUEwQnhCcW9CLENBQUdyb0IsRUFBRUUsR0F6QjFiLFNBQVlGLEVBQUVDLEdBQUcsR0FBR3doQixHQUFHLE1BQU0sbUJBQW1CemhCLElBQUlnaEIsSUFBSU8sR0FBR3ZoQixFQUFFQyxJQUFJRCxFQUFFeVgsS0FBS0QsR0FBR0QsR0FBR0QsR0FBRyxLQUFLbUssSUFBRyxFQUFHemhCLEdBQUcsS0FBSyxPQUFPQSxHQUFHLElBQUssUUFBUSxPQUFPLEtBQUssSUFBSyxXQUFXLEtBQUtDLEVBQUVrYSxTQUFTbGEsRUFBRW9hLFFBQVFwYSxFQUFFcWEsVUFBVXJhLEVBQUVrYSxTQUFTbGEsRUFBRW9hLE9BQU8sQ0FBQyxHQUFHcGEsRUFBRXFvQixNQUFNLEVBQUVyb0IsRUFBRXFvQixLQUFLMXZCLE9BQU8sT0FBT3FILEVBQUVxb0IsS0FBSyxHQUFHcm9CLEVBQUVzZixNQUFNLE9BQU9yakIsT0FBT0ksYUFBYTJELEVBQUVzZixPQUFPLE9BQU8sS0FBSyxJQUFLLGlCQUFpQixPQUFPNkIsSUFBSSxPQUFPbmhCLEVBQUVxZixPQUFPLEtBQUtyZixFQUFFMUUsS0FBSyxRQUFRLE9BQU8sTUF5QjJEZ3RCLENBQUd2b0IsRUFBRUUsS0FBMkIsR0FBeEJnQixFQUFFd2hCLEdBQUd4aEIsRUFBRSxrQkFBcUJ0SSxTQUFTdUksRUFBRSxJQUFJdWEsR0FBRyxnQkFDbmYsY0FBYyxLQUFLeGIsRUFBRWlCLEdBQUc3RyxFQUFFWixLQUFLLENBQUNpcEIsTUFBTXhoQixFQUFFeWhCLFVBQVUxaEIsSUFBSUMsRUFBRTVGLEtBQUs0c0IsR0FBR25GLEdBQUcxb0IsRUFBRTJGLE1BQUssU0FBUzJuQixHQUFHNW5CLEVBQUVDLEVBQUVDLEdBQUcsTUFBTSxDQUFDc21CLFNBQVN4bUIsRUFBRXltQixTQUFTeG1CLEVBQUVpWSxjQUFjaFksR0FBRyxTQUFTd2lCLEdBQUcxaUIsRUFBRUMsR0FBRyxJQUFJLElBQUlDLEVBQUVELEVBQUUsVUFBVWlCLEVBQUUsR0FBRyxPQUFPbEIsR0FBRyxDQUFDLElBQUltQixFQUFFbkIsRUFBRW9CLEVBQUVELEVBQUUrTixVQUFVLElBQUkvTixFQUFFb0UsS0FBSyxPQUFPbkUsSUFBSUQsRUFBRUMsRUFBWSxPQUFWQSxFQUFFeU8sR0FBRzdQLEVBQUVFLEtBQVlnQixFQUFFc25CLFFBQVFaLEdBQUc1bkIsRUFBRW9CLEVBQUVELElBQWMsT0FBVkMsRUFBRXlPLEdBQUc3UCxFQUFFQyxLQUFZaUIsRUFBRXhILEtBQUtrdUIsR0FBRzVuQixFQUFFb0IsRUFBRUQsS0FBS25CLEVBQUVBLEVBQUU4USxPQUFPLE9BQU81UCxFQUFFLFNBQVM2bUIsR0FBRy9uQixHQUFHLEdBQUcsT0FBT0EsRUFBRSxPQUFPLEtBQUssR0FBR0EsRUFBRUEsRUFBRThRLGFBQWE5USxHQUFHLElBQUlBLEVBQUV1RixLQUFLLE9BQU92RixHQUFJLEtBQ3hhLFNBQVNnb0IsR0FBR2hvQixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsR0FBRyxJQUFJLElBQUlDLEVBQUVuQixFQUFFK1gsV0FBVzFkLEVBQUUsR0FBRyxPQUFPNEYsR0FBR0EsSUFBSWdCLEdBQUcsQ0FBQyxJQUFJa0UsRUFBRWxGLEVBQUVpRixFQUFFQyxFQUFFeUwsVUFBVVYsRUFBRS9LLEVBQUU4SixVQUFVLEdBQUcsT0FBTy9KLEdBQUdBLElBQUlqRSxFQUFFLE1BQU0sSUFBSWtFLEVBQUVHLEtBQUssT0FBTzRLLElBQUkvSyxFQUFFK0ssRUFBRWhQLEVBQWEsT0FBVmdFLEVBQUUwSyxHQUFHM1AsRUFBRWtCLEtBQVk5RyxFQUFFa3VCLFFBQVFaLEdBQUcxbkIsRUFBRWlGLEVBQUVDLElBQUtqRSxHQUFjLE9BQVZnRSxFQUFFMEssR0FBRzNQLEVBQUVrQixLQUFZOUcsRUFBRVosS0FBS2t1QixHQUFHMW5CLEVBQUVpRixFQUFFQyxLQUFNbEYsRUFBRUEsRUFBRTRRLE9BQU8sSUFBSXhXLEVBQUUxQixRQUFRb0gsRUFBRXRHLEtBQUssQ0FBQ2lwQixNQUFNMWlCLEVBQUUyaUIsVUFBVXRvQixJQUFJLFNBQVNtdUIsTUFBTSxJQUFJQyxHQUFHLEtBQUtDLEdBQUcsS0FBSyxTQUFTQyxHQUFHNW9CLEVBQUVDLEdBQUcsT0FBT0QsR0FBRyxJQUFLLFNBQVMsSUFBSyxRQUFRLElBQUssU0FBUyxJQUFLLFdBQVcsUUFBUUMsRUFBRTRvQixVQUFVLE9BQU0sRUFDM2IsU0FBU0MsR0FBRzlvQixFQUFFQyxHQUFHLE1BQU0sYUFBYUQsR0FBRyxXQUFXQSxHQUFHLGFBQWFBLEdBQUcsaUJBQWtCQyxFQUFFZ0ksVUFBVSxpQkFBa0JoSSxFQUFFZ0ksVUFBVSxpQkFBa0JoSSxFQUFFeUkseUJBQXlCLE9BQU96SSxFQUFFeUkseUJBQXlCLE1BQU16SSxFQUFFeUksd0JBQXdCcWdCLE9BQU8sSUFBSUMsR0FBRyxtQkFBb0JudUIsV0FBV0EsZ0JBQVcsRUFBT291QixHQUFHLG1CQUFvQmh1QixhQUFhQSxrQkFBYSxFQUFPLFNBQVNpdUIsR0FBR2xwQixJQUFHLElBQUlBLEVBQUVpSyxVQUEwQixJQUFJakssRUFBRWlLLFVBQW9CLE9BQVRqSyxFQUFFQSxFQUFFa0gsU0FBdENsSCxFQUFFZ0osWUFBWSxJQUNuWixTQUFTbWdCLEdBQUducEIsR0FBRyxLQUFLLE1BQU1BLEVBQUVBLEVBQUVBLEVBQUV1a0IsWUFBWSxDQUFDLElBQUl0a0IsRUFBRUQsRUFBRWlLLFNBQVMsR0FBRyxJQUFJaEssR0FBRyxJQUFJQSxFQUFFLE1BQU0sT0FBT0QsRUFBRSxTQUFTb3BCLEdBQUdwcEIsR0FBR0EsRUFBRUEsRUFBRXFwQixnQkFBZ0IsSUFBSSxJQUFJcHBCLEVBQUUsRUFBRUQsR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRWlLLFNBQVMsQ0FBQyxJQUFJL0osRUFBRUYsRUFBRXpFLEtBQUssR0FBRyxNQUFNMkUsR0FBRyxPQUFPQSxHQUFHLE9BQU9BLEVBQUUsQ0FBQyxHQUFHLElBQUlELEVBQUUsT0FBT0QsRUFBRUMsUUFBUSxPQUFPQyxHQUFHRCxJQUFJRCxFQUFFQSxFQUFFcXBCLGdCQUFnQixPQUFPLEtBQUssSUFBSUMsR0FBRyxFQUE4REMsR0FBR2pULEtBQUt5USxTQUFTdGQsU0FBUyxJQUFJdEgsTUFBTSxHQUFHcW5CLEdBQUcsZ0JBQWdCRCxHQUFHRSxHQUFHLGdCQUFnQkYsR0FBRzFCLEdBQUcsb0JBQW9CMEIsR0FBR0csR0FBRyxpQkFBaUJILEdBQzlkLFNBQVNwVyxHQUFHblQsR0FBRyxJQUFJQyxFQUFFRCxFQUFFd3BCLElBQUksR0FBR3ZwQixFQUFFLE9BQU9BLEVBQUUsSUFBSSxJQUFJQyxFQUFFRixFQUFFNE8sV0FBVzFPLEdBQUcsQ0FBQyxHQUFHRCxFQUFFQyxFQUFFMm5CLEtBQUszbkIsRUFBRXNwQixJQUFJLENBQWUsR0FBZHRwQixFQUFFRCxFQUFFNFEsVUFBYSxPQUFPNVEsRUFBRW9SLE9BQU8sT0FBT25SLEdBQUcsT0FBT0EsRUFBRW1SLE1BQU0sSUFBSXJSLEVBQUVvcEIsR0FBR3BwQixHQUFHLE9BQU9BLEdBQUcsQ0FBQyxHQUFHRSxFQUFFRixFQUFFd3BCLElBQUksT0FBT3RwQixFQUFFRixFQUFFb3BCLEdBQUdwcEIsR0FBRyxPQUFPQyxFQUFNQyxHQUFKRixFQUFFRSxHQUFNME8sV0FBVyxPQUFPLEtBQUssU0FBU0ssR0FBR2pQLEdBQWtCLFFBQWZBLEVBQUVBLEVBQUV3cEIsS0FBS3hwQixFQUFFNm5CLE1BQWMsSUFBSTduQixFQUFFdUYsS0FBSyxJQUFJdkYsRUFBRXVGLEtBQUssS0FBS3ZGLEVBQUV1RixLQUFLLElBQUl2RixFQUFFdUYsSUFBSSxLQUFLdkYsRUFBRSxTQUFTa2pCLEdBQUdsakIsR0FBRyxHQUFHLElBQUlBLEVBQUV1RixLQUFLLElBQUl2RixFQUFFdUYsSUFBSSxPQUFPdkYsRUFBRWtQLFVBQVUsTUFBTTlRLE1BQU0yQixFQUFFLEtBQU0sU0FBU29QLEdBQUduUCxHQUFHLE9BQU9BLEVBQUV5cEIsS0FBSyxLQUNsYixTQUFTOUMsR0FBRzNtQixHQUFHLElBQUlDLEVBQUVELEVBQUUwcEIsSUFBa0MsWUFBOUIsSUFBU3pwQixJQUFJQSxFQUFFRCxFQUFFMHBCLElBQUksSUFBSXJwQixLQUFZSixFQUFFLElBQUkwcEIsR0FBRyxHQUFHQyxJQUFJLEVBQUUsU0FBU0MsR0FBRzdwQixHQUFHLE1BQU0sQ0FBQ3VSLFFBQVF2UixHQUFHLFNBQVM4cEIsR0FBRTlwQixHQUFHLEVBQUU0cEIsS0FBSzVwQixFQUFFdVIsUUFBUW9ZLEdBQUdDLElBQUlELEdBQUdDLElBQUksS0FBS0EsTUFBTSxTQUFTRyxHQUFFL3BCLEVBQUVDLEdBQUcycEIsS0FBS0QsR0FBR0MsSUFBSTVwQixFQUFFdVIsUUFBUXZSLEVBQUV1UixRQUFRdFIsRUFBRSxJQUFJK3BCLEdBQUcsR0FBR0MsR0FBRUosR0FBR0csSUFBSUUsR0FBRUwsSUFBRyxHQUFJTSxHQUFHSCxHQUM1UCxTQUFTSSxHQUFHcHFCLEVBQUVDLEdBQUcsSUFBSUMsRUFBRUYsRUFBRTBCLEtBQUsyb0IsYUFBYSxJQUFJbnFCLEVBQUUsT0FBTzhwQixHQUFHLElBQUk5b0IsRUFBRWxCLEVBQUVrUCxVQUFVLEdBQUdoTyxHQUFHQSxFQUFFb3BCLDhDQUE4Q3JxQixFQUFFLE9BQU9pQixFQUFFcXBCLDBDQUEwQyxJQUFTbnBCLEVBQUxELEVBQUUsR0FBSyxJQUFJQyxLQUFLbEIsRUFBRWlCLEVBQUVDLEdBQUduQixFQUFFbUIsR0FBb0gsT0FBakhGLEtBQUlsQixFQUFFQSxFQUFFa1AsV0FBWW9iLDRDQUE0Q3JxQixFQUFFRCxFQUFFdXFCLDBDQUEwQ3BwQixHQUFVQSxFQUFFLFNBQVNxcEIsR0FBR3hxQixHQUF5QixPQUFPLE1BQTNCQSxFQUFFeXFCLGtCQUE4QyxTQUFTQyxLQUFLWixHQUFFSSxJQUFHSixHQUFFRyxJQUFHLFNBQVNVLEdBQUczcUIsRUFBRUMsRUFBRUMsR0FBRyxHQUFHK3BCLEdBQUUxWSxVQUFVeVksR0FBRyxNQUFNNXJCLE1BQU0yQixFQUFFLE1BQU1ncUIsR0FBRUUsR0FBRWhxQixHQUFHOHBCLEdBQUVHLEdBQUVocUIsR0FDL2UsU0FBUzBxQixHQUFHNXFCLEVBQUVDLEVBQUVDLEdBQUcsSUFBSWdCLEVBQUVsQixFQUFFa1AsVUFBZ0MsR0FBdEJsUCxFQUFFQyxFQUFFd3FCLGtCQUFxQixtQkFBb0J2cEIsRUFBRTJwQixnQkFBZ0IsT0FBTzNxQixFQUF3QixJQUFJLElBQUlpQixLQUE5QkQsRUFBRUEsRUFBRTJwQixrQkFBaUMsS0FBSzFwQixLQUFLbkIsR0FBRyxNQUFNNUIsTUFBTTJCLEVBQUUsSUFBSTJGLEVBQUd6RixJQUFJLFVBQVVrQixJQUFJLE9BQU90QixFQUFFLEdBQUdLLEVBQUVnQixHQUFHLFNBQVM0cEIsR0FBRzlxQixHQUF5RyxPQUF0R0EsR0FBR0EsRUFBRUEsRUFBRWtQLFlBQVlsUCxFQUFFK3FCLDJDQUEyQ2YsR0FBR0csR0FBR0YsR0FBRTFZLFFBQVF3WSxHQUFFRSxHQUFFanFCLEdBQUcrcEIsR0FBRUcsR0FBRUEsR0FBRTNZLFVBQWUsRUFBRyxTQUFTeVosR0FBR2hyQixFQUFFQyxFQUFFQyxHQUFHLElBQUlnQixFQUFFbEIsRUFBRWtQLFVBQVUsSUFBSWhPLEVBQUUsTUFBTTlDLE1BQU0yQixFQUFFLE1BQU1HLEdBQUdGLEVBQUU0cUIsR0FBRzVxQixFQUFFQyxFQUFFa3FCLElBQUlqcEIsRUFBRTZwQiwwQ0FBMEMvcUIsRUFBRThwQixHQUFFSSxJQUFHSixHQUFFRyxJQUFHRixHQUFFRSxHQUFFanFCLElBQUk4cEIsR0FBRUksSUFBR0gsR0FBRUcsR0FBRWhxQixHQUM3ZSxJQUFJK3FCLEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHcnJCLEVBQUV1VCx5QkFBeUIrWCxHQUFHdHJCLEVBQUVnVSwwQkFBMEJ1WCxHQUFHdnJCLEVBQUV3ckIsd0JBQXdCQyxHQUFHenJCLEVBQUUwckIscUJBQXFCQyxHQUFHM3JCLEVBQUU0ckIsc0JBQXNCQyxHQUFHN3JCLEVBQUV1VixhQUFhdVcsR0FBRzlyQixFQUFFK3JCLGlDQUFpQ0MsR0FBR2hzQixFQUFFaXNCLDJCQUEyQkMsR0FBR2xzQixFQUFFK1csOEJBQThCb1YsR0FBR25zQixFQUFFaVUsd0JBQXdCbVksR0FBR3BzQixFQUFFcXNCLHFCQUFxQkMsR0FBR3RzQixFQUFFdXNCLHNCQUFzQkMsR0FBRyxHQUFHQyxRQUFHLElBQVNkLEdBQUdBLEdBQUcsYUFBYWUsR0FBRyxLQUFLQyxHQUFHLEtBQUtDLElBQUcsRUFBR0MsR0FBR2hCLEtBQUtpQixHQUFFLElBQUlELEdBQUdoQixHQUFHLFdBQVcsT0FBT0EsS0FBS2dCLElBQ3RkLFNBQVNFLEtBQUssT0FBT2pCLE1BQU0sS0FBS0UsR0FBRyxPQUFPLEdBQUcsS0FBS0UsR0FBRyxPQUFPLEdBQUcsS0FBS0MsR0FBRyxPQUFPLEdBQUcsS0FBS0MsR0FBRyxPQUFPLEdBQUcsS0FBS0UsR0FBRyxPQUFPLEdBQUcsUUFBUSxNQUFNaHVCLE1BQU0yQixFQUFFLE9BQVEsU0FBUytzQixHQUFHOXNCLEdBQUcsT0FBT0EsR0FBRyxLQUFLLEdBQUcsT0FBTzhyQixHQUFHLEtBQUssR0FBRyxPQUFPRSxHQUFHLEtBQUssR0FBRyxPQUFPQyxHQUFHLEtBQUssR0FBRyxPQUFPQyxHQUFHLEtBQUssR0FBRyxPQUFPRSxHQUFHLFFBQVEsTUFBTWh1QixNQUFNMkIsRUFBRSxPQUFRLFNBQVNndEIsR0FBRy9zQixFQUFFQyxHQUFXLE9BQVJELEVBQUU4c0IsR0FBRzlzQixHQUFVbXJCLEdBQUduckIsRUFBRUMsR0FBRyxTQUFTK3NCLEdBQUdodEIsRUFBRUMsRUFBRUMsR0FBVyxPQUFSRixFQUFFOHNCLEdBQUc5c0IsR0FBVW9yQixHQUFHcHJCLEVBQUVDLEVBQUVDLEdBQUcsU0FBUytzQixLQUFLLEdBQUcsT0FBT1IsR0FBRyxDQUFDLElBQUl6c0IsRUFBRXlzQixHQUFHQSxHQUFHLEtBQUtwQixHQUFHcnJCLEdBQUdrdEIsS0FDM2EsU0FBU0EsS0FBSyxJQUFJUixJQUFJLE9BQU9GLEdBQUcsQ0FBQ0UsSUFBRyxFQUFHLElBQUkxc0IsRUFBRSxFQUFFLElBQUksSUFBSUMsRUFBRXVzQixHQUFHTyxHQUFHLElBQUcsV0FBVyxLQUFLL3NCLEVBQUVDLEVBQUVySCxPQUFPb0gsSUFBSSxDQUFDLElBQUlFLEVBQUVELEVBQUVELEdBQUcsR0FBR0UsRUFBRUEsR0FBRSxTQUFVLE9BQU9BLE9BQU1zc0IsR0FBRyxLQUFLLE1BQU10c0IsR0FBRyxNQUFNLE9BQU9zc0IsS0FBS0EsR0FBR0EsR0FBR3JxQixNQUFNbkMsRUFBRSxJQUFJb3JCLEdBQUdVLEdBQUdtQixJQUFJL3NCLEVBQUcsUUFBUXdzQixJQUFHLElBQUssSUFBSVMsR0FBR3JxQixFQUFHc3FCLHdCQUF3QixTQUFTQyxHQUFHcnRCLEVBQUVDLEdBQUcsR0FBR0QsR0FBR0EsRUFBRXN0QixhQUFhLENBQTRCLElBQUksSUFBSXB0QixLQUFuQ0QsRUFBRUosRUFBRSxHQUFHSSxHQUFHRCxFQUFFQSxFQUFFc3RCLGtCQUE0QixJQUFTcnRCLEVBQUVDLEtBQUtELEVBQUVDLEdBQUdGLEVBQUVFLElBQUksT0FBT0QsRUFBRSxPQUFPQSxFQUFFLElBQUlzdEIsR0FBRzFELEdBQUcsTUFBTTJELEdBQUcsS0FBS0MsR0FBRyxLQUFLQyxHQUFHLEtBQUssU0FBU0MsS0FBS0QsR0FBR0QsR0FBR0QsR0FBRyxLQUM1YixTQUFTSSxHQUFHNXRCLEdBQUcsSUFBSUMsRUFBRXN0QixHQUFHaGMsUUFBUXVZLEdBQUV5RCxJQUFJdnRCLEVBQUUwQixLQUFLa0UsU0FBU2lvQixjQUFjNXRCLEVBQUUsU0FBUzZ0QixHQUFHOXRCLEVBQUVDLEdBQUcsS0FBSyxPQUFPRCxHQUFHLENBQUMsSUFBSUUsRUFBRUYsRUFBRTZRLFVBQVUsSUFBSTdRLEVBQUUrdEIsV0FBVzl0QixLQUFLQSxFQUFFLElBQUcsT0FBT0MsSUFBSUEsRUFBRTZ0QixXQUFXOXRCLEtBQUtBLEVBQUUsTUFBV0MsRUFBRTZ0QixZQUFZOXRCLE9BQU9ELEVBQUUrdEIsWUFBWTl0QixFQUFFLE9BQU9DLElBQUlBLEVBQUU2dEIsWUFBWTl0QixHQUFHRCxFQUFFQSxFQUFFOFEsUUFBUSxTQUFTa2QsR0FBR2h1QixFQUFFQyxHQUFHdXRCLEdBQUd4dEIsRUFBRTB0QixHQUFHRCxHQUFHLEtBQXNCLFFBQWpCenRCLEVBQUVBLEVBQUVpdUIsZUFBdUIsT0FBT2p1QixFQUFFa3VCLGVBQWUsSUFBS2x1QixFQUFFbXVCLE1BQU1sdUIsS0FBS211QixJQUFHLEdBQUlwdUIsRUFBRWt1QixhQUFhLE1BQ3ZZLFNBQVNHLEdBQUdydUIsRUFBRUMsR0FBRyxHQUFHeXRCLEtBQUsxdEIsSUFBRyxJQUFLQyxHQUFHLElBQUlBLEVBQW1HLEdBQTdGLGlCQUFrQkEsR0FBRyxhQUFhQSxJQUFFeXRCLEdBQUcxdEIsRUFBRUMsRUFBRSxZQUFXQSxFQUFFLENBQUNxdUIsUUFBUXR1QixFQUFFdXVCLGFBQWF0dUIsRUFBRXV1QixLQUFLLE1BQVMsT0FBT2YsR0FBRyxDQUFDLEdBQUcsT0FBT0QsR0FBRyxNQUFNcHZCLE1BQU0yQixFQUFFLE1BQU0wdEIsR0FBR3h0QixFQUFFdXRCLEdBQUdTLGFBQWEsQ0FBQ0UsTUFBTSxFQUFFRCxhQUFhanVCLEVBQUV3dUIsV0FBVyxXQUFXaEIsR0FBR0EsR0FBR2UsS0FBS3Z1QixFQUFFLE9BQU9ELEVBQUU2dEIsY0FBYyxJQUFJYSxJQUFHLEVBQUcsU0FBU0MsR0FBRzN1QixHQUFHQSxFQUFFNHVCLFlBQVksQ0FBQ0MsVUFBVTd1QixFQUFFaVIsY0FBYzZkLGdCQUFnQixLQUFLQyxlQUFlLEtBQUtDLE9BQU8sQ0FBQ0MsUUFBUSxNQUFNQyxRQUFRLE1BQzFhLFNBQVNDLEdBQUdudkIsRUFBRUMsR0FBR0QsRUFBRUEsRUFBRTR1QixZQUFZM3VCLEVBQUUydUIsY0FBYzV1QixJQUFJQyxFQUFFMnVCLFlBQVksQ0FBQ0MsVUFBVTd1QixFQUFFNnVCLFVBQVVDLGdCQUFnQjl1QixFQUFFOHVCLGdCQUFnQkMsZUFBZS91QixFQUFFK3VCLGVBQWVDLE9BQU9odkIsRUFBRWd2QixPQUFPRSxRQUFRbHZCLEVBQUVrdkIsVUFBVSxTQUFTRSxHQUFHcHZCLEVBQUVDLEdBQUcsTUFBTSxDQUFDb3ZCLFVBQVVydkIsRUFBRXN2QixLQUFLcnZCLEVBQUVzRixJQUFJLEVBQUVncUIsUUFBUSxLQUFLNTBCLFNBQVMsS0FBSzZ6QixLQUFLLE1BQU0sU0FBU2dCLEdBQUd4dkIsRUFBRUMsR0FBbUIsR0FBRyxRQUFuQkQsRUFBRUEsRUFBRTR1QixhQUF3QixDQUFZLElBQUkxdUIsR0FBZkYsRUFBRUEsRUFBRWd2QixRQUFlQyxRQUFRLE9BQU8vdUIsRUFBRUQsRUFBRXV1QixLQUFLdnVCLEdBQUdBLEVBQUV1dUIsS0FBS3R1QixFQUFFc3VCLEtBQUt0dUIsRUFBRXN1QixLQUFLdnVCLEdBQUdELEVBQUVpdkIsUUFBUWh2QixHQUNyWixTQUFTd3ZCLEdBQUd6dkIsRUFBRUMsR0FBRyxJQUFJQyxFQUFFRixFQUFFNHVCLFlBQVkxdEIsRUFBRWxCLEVBQUU2USxVQUFVLEdBQUcsT0FBTzNQLEdBQW9CaEIsS0FBaEJnQixFQUFFQSxFQUFFMHRCLGFBQW1CLENBQUMsSUFBSXp0QixFQUFFLEtBQUtDLEVBQUUsS0FBeUIsR0FBRyxRQUF2QmxCLEVBQUVBLEVBQUU0dUIsaUJBQTRCLENBQUMsRUFBRSxDQUFDLElBQUl4MEIsRUFBRSxDQUFDKzBCLFVBQVVudkIsRUFBRW12QixVQUFVQyxLQUFLcHZCLEVBQUVvdkIsS0FBSy9wQixJQUFJckYsRUFBRXFGLElBQUlncUIsUUFBUXJ2QixFQUFFcXZCLFFBQVE1MEIsU0FBU3VGLEVBQUV2RixTQUFTNnpCLEtBQUssTUFBTSxPQUFPcHRCLEVBQUVELEVBQUVDLEVBQUU5RyxFQUFFOEcsRUFBRUEsRUFBRW90QixLQUFLbDBCLEVBQUU0RixFQUFFQSxFQUFFc3VCLFdBQVcsT0FBT3R1QixHQUFHLE9BQU9rQixFQUFFRCxFQUFFQyxFQUFFbkIsRUFBRW1CLEVBQUVBLEVBQUVvdEIsS0FBS3Z1QixPQUFPa0IsRUFBRUMsRUFBRW5CLEVBQWlILE9BQS9HQyxFQUFFLENBQUMydUIsVUFBVTN0QixFQUFFMnRCLFVBQVVDLGdCQUFnQjN0QixFQUFFNHRCLGVBQWUzdEIsRUFBRTR0QixPQUFPOXRCLEVBQUU4dEIsT0FBT0UsUUFBUWh1QixFQUFFZ3VCLGNBQVNsdkIsRUFBRTR1QixZQUFZMXVCLEdBQTRCLFFBQW5CRixFQUFFRSxFQUFFNnVCLGdCQUF3Qjd1QixFQUFFNHVCLGdCQUFnQjd1QixFQUFFRCxFQUFFd3VCLEtBQ25mdnVCLEVBQUVDLEVBQUU2dUIsZUFBZTl1QixFQUNuQixTQUFTeXZCLEdBQUcxdkIsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUcsSUFBSUMsRUFBRW5CLEVBQUU0dUIsWUFBWUYsSUFBRyxFQUFHLElBQUl0dEIsRUFBRUQsRUFBRTJ0QixnQkFBZ0J4MEIsRUFBRTZHLEVBQUU0dEIsZUFBZTNwQixFQUFFakUsRUFBRTZ0QixPQUFPQyxRQUFRLEdBQUcsT0FBTzdwQixFQUFFLENBQUNqRSxFQUFFNnRCLE9BQU9DLFFBQVEsS0FBSyxJQUFJOXBCLEVBQUVDLEVBQUUrSyxFQUFFaEwsRUFBRXFwQixLQUFLcnBCLEVBQUVxcEIsS0FBSyxLQUFLLE9BQU9sMEIsRUFBRThHLEVBQUUrTyxFQUFFN1YsRUFBRWswQixLQUFLcmUsRUFBRTdWLEVBQUU2SyxFQUFFLElBQUkzSSxFQUFFd0QsRUFBRTZRLFVBQVUsR0FBRyxPQUFPclUsRUFBRSxDQUFpQixJQUFJbXpCLEdBQXBCbnpCLEVBQUVBLEVBQUVveUIsYUFBb0JHLGVBQWVZLElBQUlyMUIsSUFBSSxPQUFPcTFCLEVBQUVuekIsRUFBRXN5QixnQkFBZ0IzZSxFQUFFd2YsRUFBRW5CLEtBQUtyZSxFQUFFM1QsRUFBRXV5QixlQUFlNXBCLElBQUksR0FBRyxPQUFPL0QsRUFBRSxDQUE4QixJQUE3QnV1QixFQUFFeHVCLEVBQUUwdEIsVUFBVXYwQixFQUFFLEVBQUVrQyxFQUFFMlQsRUFBRWhMLEVBQUUsT0FBTyxDQUFDQyxFQUFFaEUsRUFBRWt1QixLQUFLLElBQUlNLEVBQUV4dUIsRUFBRWl1QixVQUFVLElBQUludUIsRUFBRWtFLEtBQUtBLEVBQUUsQ0FBQyxPQUFPNUksSUFBSUEsRUFBRUEsRUFBRWd5QixLQUFLLENBQUNhLFVBQVVPLEVBQUVOLEtBQUssRUFBRS9wQixJQUFJbkUsRUFBRW1FLElBQUlncUIsUUFBUW51QixFQUFFbXVCLFFBQVE1MEIsU0FBU3lHLEVBQUV6RyxTQUNyZjZ6QixLQUFLLE9BQU94dUIsRUFBRSxDQUFDLElBQUk2dkIsRUFBRTd2QixFQUFFcW5CLEVBQUVqbUIsRUFBVSxPQUFSZ0UsRUFBRW5GLEVBQUUydkIsRUFBRTF2QixFQUFTbW5CLEVBQUU5aEIsS0FBSyxLQUFLLEVBQWMsR0FBRyxtQkFBZnNxQixFQUFFeEksRUFBRWtJLFNBQWlDLENBQUNJLEVBQUVFLEVBQUV0MkIsS0FBS3EyQixFQUFFRCxFQUFFdnFCLEdBQUcsTUFBTXBGLEVBQUUydkIsRUFBRUUsRUFBRSxNQUFNN3ZCLEVBQUUsS0FBSyxFQUFFNnZCLEVBQUU5ZSxPQUFlLEtBQVQ4ZSxFQUFFOWUsTUFBWSxHQUFHLEtBQUssRUFBc0QsR0FBRyxPQUEzQzNMLEVBQUUsbUJBQWR5cUIsRUFBRXhJLEVBQUVrSSxTQUFnQ00sRUFBRXQyQixLQUFLcTJCLEVBQUVELEVBQUV2cUIsR0FBR3lxQixHQUEwQixNQUFNN3ZCLEVBQUUydkIsRUFBRTl2QixFQUFFLEdBQUc4dkIsRUFBRXZxQixHQUFHLE1BQU1wRixFQUFFLEtBQUssRUFBRTB1QixJQUFHLEdBQUksT0FBT3R0QixFQUFFekcsV0FBV3FGLEVBQUUrUSxPQUFPLEdBQWUsUUFBWjNMLEVBQUVqRSxFQUFFK3RCLFNBQWlCL3RCLEVBQUUrdEIsUUFBUSxDQUFDOXRCLEdBQUdnRSxFQUFFMUwsS0FBSzBILFNBQVN3dUIsRUFBRSxDQUFDUCxVQUFVTyxFQUFFTixLQUFLbHFCLEVBQUVHLElBQUluRSxFQUFFbUUsSUFBSWdxQixRQUFRbnVCLEVBQUVtdUIsUUFBUTUwQixTQUFTeUcsRUFBRXpHLFNBQVM2ekIsS0FBSyxNQUFNLE9BQU9oeUIsR0FBRzJULEVBQUUzVCxFQUFFb3pCLEVBQUV6cUIsRUFBRXdxQixHQUFHbnpCLEVBQUVBLEVBQUVneUIsS0FBS29CLEVBQUV0MUIsR0FBRzhLLEVBQVcsR0FBRyxRQUFaaEUsRUFBRUEsRUFBRW90QixNQUMxZSxJQUFzQixRQUFuQnBwQixFQUFFakUsRUFBRTZ0QixPQUFPQyxTQUFpQixNQUFXN3RCLEVBQUVnRSxFQUFFb3BCLEtBQUtwcEIsRUFBRW9wQixLQUFLLEtBQUtydEIsRUFBRTR0QixlQUFlM3BCLEVBQUVqRSxFQUFFNnRCLE9BQU9DLFFBQVEsTUFBYyxPQUFPenlCLElBQUkySSxFQUFFd3FCLEdBQUd4dUIsRUFBRTB0QixVQUFVMXBCLEVBQUVoRSxFQUFFMnRCLGdCQUFnQjNlLEVBQUVoUCxFQUFFNHRCLGVBQWV2eUIsRUFBRXN6QixJQUFJeDFCLEVBQUUwRixFQUFFbXVCLE1BQU03ekIsRUFBRTBGLEVBQUVpUixjQUFjMGUsR0FBRyxTQUFTSSxHQUFHL3ZCLEVBQUVDLEVBQUVDLEdBQThCLEdBQTNCRixFQUFFQyxFQUFFaXZCLFFBQVFqdkIsRUFBRWl2QixRQUFRLEtBQVEsT0FBT2x2QixFQUFFLElBQUlDLEVBQUUsRUFBRUEsRUFBRUQsRUFBRXBILE9BQU9xSCxJQUFJLENBQUMsSUFBSWlCLEVBQUVsQixFQUFFQyxHQUFHa0IsRUFBRUQsRUFBRXZHLFNBQVMsR0FBRyxPQUFPd0csRUFBRSxDQUFxQixHQUFwQkQsRUFBRXZHLFNBQVMsS0FBS3VHLEVBQUVoQixFQUFLLG1CQUFvQmlCLEVBQUUsTUFBTS9DLE1BQU0yQixFQUFFLElBQUlvQixJQUFJQSxFQUFFNUgsS0FBSzJILEtBQUssSUFBSTh1QixJQUFHLElBQUtwd0IsRUFBR3F3QixXQUFXQyxLQUMzYixTQUFTQyxHQUFHbndCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUE4QmhCLEVBQUUsT0FBWEEsRUFBRUEsRUFBRWdCLEVBQXRCakIsRUFBRUQsRUFBRWlSLGdCQUE4Q2hSLEVBQUVKLEVBQUUsR0FBR0ksRUFBRUMsR0FBR0YsRUFBRWlSLGNBQWMvUSxFQUFFLElBQUlGLEVBQUVtdUIsUUFBUW51QixFQUFFNHVCLFlBQVlDLFVBQVUzdUIsR0FDM0ksSUFBSWt3QixHQUFHLENBQUNDLFVBQVUsU0FBU3J3QixHQUFHLFNBQU9BLEVBQUVBLEVBQUVzd0Isa0JBQWlCMWYsR0FBRzVRLEtBQUtBLEdBQU11d0IsZ0JBQWdCLFNBQVN2d0IsRUFBRUMsRUFBRUMsR0FBR0YsRUFBRUEsRUFBRXN3QixnQkFBZ0IsSUFBSXB2QixFQUFFc3ZCLEtBQUtydkIsRUFBRXN2QixHQUFHendCLEdBQUdvQixFQUFFZ3VCLEdBQUdsdUIsRUFBRUMsR0FBR0MsRUFBRW11QixRQUFRdHZCLEVBQUUsTUFBU0MsSUFBY2tCLEVBQUV6RyxTQUFTdUYsR0FBR3N2QixHQUFHeHZCLEVBQUVvQixHQUFHc3ZCLEdBQUcxd0IsRUFBRW1CLEVBQUVELElBQUl5dkIsb0JBQW9CLFNBQVMzd0IsRUFBRUMsRUFBRUMsR0FBR0YsRUFBRUEsRUFBRXN3QixnQkFBZ0IsSUFBSXB2QixFQUFFc3ZCLEtBQUtydkIsRUFBRXN2QixHQUFHendCLEdBQUdvQixFQUFFZ3VCLEdBQUdsdUIsRUFBRUMsR0FBR0MsRUFBRW1FLElBQUksRUFBRW5FLEVBQUVtdUIsUUFBUXR2QixFQUFFLE1BQVNDLElBQWNrQixFQUFFekcsU0FBU3VGLEdBQUdzdkIsR0FBR3h2QixFQUFFb0IsR0FBR3N2QixHQUFHMXdCLEVBQUVtQixFQUFFRCxJQUFJMHZCLG1CQUFtQixTQUFTNXdCLEVBQUVDLEdBQUdELEVBQUVBLEVBQUVzd0IsZ0JBQWdCLElBQUlwd0IsRUFBRXN3QixLQUFLdHZCLEVBQUV1dkIsR0FBR3p3QixHQUFHbUIsRUFBRWl1QixHQUFHbHZCLEVBQUVnQixHQUFHQyxFQUFFb0UsSUFBSSxFQUFFLE1BQVN0RixJQUFja0IsRUFBRXhHLFNBQ2pmc0YsR0FBR3V2QixHQUFHeHZCLEVBQUVtQixHQUFHdXZCLEdBQUcxd0IsRUFBRWtCLEVBQUVoQixLQUFLLFNBQVMyd0IsR0FBRzd3QixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsRUFBRUMsRUFBRTlHLEdBQWlCLE1BQU0sbUJBQXBCMEYsRUFBRUEsRUFBRWtQLFdBQXNDNGhCLHNCQUFzQjl3QixFQUFFOHdCLHNCQUFzQjV2QixFQUFFRSxFQUFFOUcsS0FBRzJGLEVBQUUzRyxXQUFXMkcsRUFBRTNHLFVBQVV5M0Isc0JBQXNCNU0sR0FBR2prQixFQUFFZ0IsSUFBS2lqQixHQUFHaGpCLEVBQUVDLElBQy9NLFNBQVM0dkIsR0FBR2h4QixFQUFFQyxFQUFFQyxHQUFHLElBQUlnQixHQUFFLEVBQUdDLEVBQUU2b0IsR0FBTzVvQixFQUFFbkIsRUFBRWd4QixZQUEyVyxNQUEvVixpQkFBa0I3dkIsR0FBRyxPQUFPQSxFQUFFQSxFQUFFaXRCLEdBQUdqdEIsSUFBSUQsRUFBRXFwQixHQUFHdnFCLEdBQUdrcUIsR0FBR0YsR0FBRTFZLFFBQXlCblEsR0FBR0YsRUFBRSxPQUF0QkEsRUFBRWpCLEVBQUVvcUIsZUFBd0NELEdBQUdwcUIsRUFBRW1CLEdBQUc2b0IsSUFBSS9wQixFQUFFLElBQUlBLEVBQUVDLEVBQUVrQixHQUFHcEIsRUFBRWlSLGNBQWMsT0FBT2hSLEVBQUVpeEIsWUFBTyxJQUFTanhCLEVBQUVpeEIsTUFBTWp4QixFQUFFaXhCLE1BQU0sS0FBS2p4QixFQUFFa3hCLFFBQVFmLEdBQUdwd0IsRUFBRWtQLFVBQVVqUCxFQUFFQSxFQUFFcXdCLGdCQUFnQnR3QixFQUFFa0IsS0FBSWxCLEVBQUVBLEVBQUVrUCxXQUFZb2IsNENBQTRDbnBCLEVBQUVuQixFQUFFdXFCLDBDQUEwQ25wQixHQUFVbkIsRUFDM1osU0FBU214QixHQUFHcHhCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFHbEIsRUFBRUMsRUFBRWl4QixNQUFNLG1CQUFvQmp4QixFQUFFb3hCLDJCQUEyQnB4QixFQUFFb3hCLDBCQUEwQm54QixFQUFFZ0IsR0FBRyxtQkFBb0JqQixFQUFFcXhCLGtDQUFrQ3J4QixFQUFFcXhCLGlDQUFpQ3B4QixFQUFFZ0IsR0FBR2pCLEVBQUVpeEIsUUFBUWx4QixHQUFHb3dCLEdBQUdPLG9CQUFvQjF3QixFQUFFQSxFQUFFaXhCLE1BQU0sTUFDL1AsU0FBU0ssR0FBR3Z4QixFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxJQUFJQyxFQUFFbkIsRUFBRWtQLFVBQVUvTixFQUFFckQsTUFBTW9DLEVBQUVpQixFQUFFK3ZCLE1BQU1seEIsRUFBRWlSLGNBQWM5UCxFQUFFK3VCLEtBQUtGLEdBQUdyQixHQUFHM3VCLEdBQUcsSUFBSW9CLEVBQUVuQixFQUFFZ3hCLFlBQVksaUJBQWtCN3ZCLEdBQUcsT0FBT0EsRUFBRUQsRUFBRW10QixRQUFRRCxHQUFHanRCLElBQUlBLEVBQUVvcEIsR0FBR3ZxQixHQUFHa3FCLEdBQUdGLEdBQUUxWSxRQUFRcFEsRUFBRW10QixRQUFRbEUsR0FBR3BxQixFQUFFb0IsSUFBSXN1QixHQUFHMXZCLEVBQUVFLEVBQUVpQixFQUFFRCxHQUFHQyxFQUFFK3ZCLE1BQU1seEIsRUFBRWlSLGNBQTJDLG1CQUE3QjdQLEVBQUVuQixFQUFFdXhCLDRCQUFpRHJCLEdBQUdud0IsRUFBRUMsRUFBRW1CLEVBQUVsQixHQUFHaUIsRUFBRSt2QixNQUFNbHhCLEVBQUVpUixlQUFlLG1CQUFvQmhSLEVBQUV1eEIsMEJBQTBCLG1CQUFvQnJ3QixFQUFFc3dCLHlCQUF5QixtQkFBb0J0d0IsRUFBRXV3QiwyQkFBMkIsbUJBQW9CdndCLEVBQUV3d0IscUJBQ3ZlMXhCLEVBQUVrQixFQUFFK3ZCLE1BQU0sbUJBQW9CL3ZCLEVBQUV3d0Isb0JBQW9CeHdCLEVBQUV3d0IscUJBQXFCLG1CQUFvQnh3QixFQUFFdXdCLDJCQUEyQnZ3QixFQUFFdXdCLDRCQUE0Qnp4QixJQUFJa0IsRUFBRSt2QixPQUFPZCxHQUFHTyxvQkFBb0J4dkIsRUFBRUEsRUFBRSt2QixNQUFNLE1BQU14QixHQUFHMXZCLEVBQUVFLEVBQUVpQixFQUFFRCxHQUFHQyxFQUFFK3ZCLE1BQU1seEIsRUFBRWlSLGVBQWUsbUJBQW9COVAsRUFBRXl3QixvQkFBb0I1eEIsRUFBRStRLE9BQU8sR0FBRyxJQUFJOGdCLEdBQUdqcEIsTUFBTUMsUUFDdlQsU0FBU2lwQixHQUFHOXhCLEVBQUVDLEVBQUVDLEdBQVcsR0FBRyxRQUFYRixFQUFFRSxFQUFFNnhCLE1BQWlCLG1CQUFvQi94QixHQUFHLGlCQUFrQkEsRUFBRSxDQUFDLEdBQUdFLEVBQUU4eEIsT0FBTyxDQUFZLEdBQVg5eEIsRUFBRUEsRUFBRTh4QixPQUFZLENBQUMsR0FBRyxJQUFJOXhCLEVBQUVxRixJQUFJLE1BQU1uSCxNQUFNMkIsRUFBRSxNQUFNLElBQUltQixFQUFFaEIsRUFBRWdQLFVBQVUsSUFBSWhPLEVBQUUsTUFBTTlDLE1BQU0yQixFQUFFLElBQUlDLElBQUksSUFBSW1CLEVBQUUsR0FBR25CLEVBQUUsT0FBRyxPQUFPQyxHQUFHLE9BQU9BLEVBQUU4eEIsS0FBSyxtQkFBb0I5eEIsRUFBRTh4QixLQUFLOXhCLEVBQUU4eEIsSUFBSUUsYUFBYTl3QixFQUFTbEIsRUFBRTh4QixNQUFJOXhCLEVBQUUsU0FBU0QsR0FBRyxJQUFJQyxFQUFFaUIsRUFBRWd2QixLQUFLandCLElBQUkrdkIsS0FBSy92QixFQUFFaUIsRUFBRWd2QixLQUFLLElBQUksT0FBT2x3QixTQUFTQyxFQUFFa0IsR0FBR2xCLEVBQUVrQixHQUFHbkIsSUFBS2l5QixXQUFXOXdCLEVBQVNsQixHQUFFLEdBQUcsaUJBQWtCRCxFQUFFLE1BQU01QixNQUFNMkIsRUFBRSxNQUFNLElBQUlHLEVBQUU4eEIsT0FBTyxNQUFNNXpCLE1BQU0yQixFQUFFLElBQUlDLElBQUssT0FBT0EsRUFDaGUsU0FBU2t5QixHQUFHbHlCLEVBQUVDLEdBQUcsR0FBRyxhQUFhRCxFQUFFMEIsS0FBSyxNQUFNdEQsTUFBTTJCLEVBQUUsR0FBRyxvQkFBb0J0RSxPQUFPbkMsVUFBVW1RLFNBQVNsUSxLQUFLMEcsR0FBRyxxQkFBcUJ4RSxPQUFPcUIsS0FBS21ELEdBQUd4RCxLQUFLLE1BQU0sSUFBSXdELElBQ2xLLFNBQVNreUIsR0FBR255QixHQUFHLFNBQVNDLEVBQUVBLEVBQUVDLEdBQUcsR0FBR0YsRUFBRSxDQUFDLElBQUlrQixFQUFFakIsRUFBRW15QixXQUFXLE9BQU9seEIsR0FBR0EsRUFBRW14QixXQUFXbnlCLEVBQUVELEVBQUVteUIsV0FBV2x5QixHQUFHRCxFQUFFcXlCLFlBQVlyeUIsRUFBRW15QixXQUFXbHlCLEVBQUVBLEVBQUVteUIsV0FBVyxLQUFLbnlCLEVBQUU2USxNQUFNLEdBQUcsU0FBUzdRLEVBQUVBLEVBQUVnQixHQUFHLElBQUlsQixFQUFFLE9BQU8sS0FBSyxLQUFLLE9BQU9rQixHQUFHakIsRUFBRUMsRUFBRWdCLEdBQUdBLEVBQUVBLEVBQUVvUSxRQUFRLE9BQU8sS0FBSyxTQUFTcFEsRUFBRWxCLEVBQUVDLEdBQUcsSUFBSUQsRUFBRSxJQUFJb1MsSUFBSSxPQUFPblMsR0FBRyxPQUFPQSxFQUFFekMsSUFBSXdDLEVBQUVnRixJQUFJL0UsRUFBRXpDLElBQUl5QyxHQUFHRCxFQUFFZ0YsSUFBSS9FLEVBQUVwRyxNQUFNb0csR0FBR0EsRUFBRUEsRUFBRXFSLFFBQVEsT0FBT3RSLEVBQUUsU0FBU21CLEVBQUVuQixFQUFFQyxHQUFzQyxPQUFuQ0QsRUFBRXV5QixHQUFHdnlCLEVBQUVDLElBQUtwRyxNQUFNLEVBQUVtRyxFQUFFc1IsUUFBUSxLQUFZdFIsRUFBRSxTQUFTb0IsRUFBRW5CLEVBQUVDLEVBQUVnQixHQUFhLE9BQVZqQixFQUFFcEcsTUFBTXFILEVBQU1sQixFQUE0QixRQUFqQmtCLEVBQUVqQixFQUFFNFEsWUFBNkIzUCxFQUFFQSxFQUFFckgsT0FBUXFHLEdBQUdELEVBQUU4USxNQUFNLEVBQ3BmN1EsR0FBR2dCLEdBQUVqQixFQUFFOFEsTUFBTSxFQUFTN1EsR0FEb2FBLEVBQ2xhLFNBQVM1RixFQUFFMkYsR0FBc0MsT0FBbkNELEdBQUcsT0FBT0MsRUFBRTRRLFlBQVk1USxFQUFFOFEsTUFBTSxHQUFVOVEsRUFBRSxTQUFTbUYsRUFBRXBGLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFHLE9BQUcsT0FBT2pCLEdBQUcsSUFBSUEsRUFBRXNGLE1BQVd0RixFQUFFdXlCLEdBQUd0eUIsRUFBRUYsRUFBRXl5QixLQUFLdnhCLElBQUs0UCxPQUFPOVEsRUFBRUMsS0FBRUEsRUFBRWtCLEVBQUVsQixFQUFFQyxJQUFLNFEsT0FBTzlRLEVBQVNDLEdBQUUsU0FBU2tGLEVBQUVuRixFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxPQUFHLE9BQU9qQixHQUFHQSxFQUFFZCxjQUFjZSxFQUFFd0IsT0FBWVIsRUFBRUMsRUFBRWxCLEVBQUVDLEVBQUVwQyxRQUFTaTBCLElBQUlELEdBQUc5eEIsRUFBRUMsRUFBRUMsR0FBR2dCLEVBQUU0UCxPQUFPOVEsRUFBRWtCLEtBQUVBLEVBQUV3eEIsR0FBR3h5QixFQUFFd0IsS0FBS3hCLEVBQUUxQyxJQUFJMEMsRUFBRXBDLE1BQU0sS0FBS2tDLEVBQUV5eUIsS0FBS3Z4QixJQUFLNndCLElBQUlELEdBQUc5eEIsRUFBRUMsRUFBRUMsR0FBR2dCLEVBQUU0UCxPQUFPOVEsRUFBU2tCLEdBQUUsU0FBU2lQLEVBQUVuUSxFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxPQUFHLE9BQU9qQixHQUFHLElBQUlBLEVBQUVzRixLQUFLdEYsRUFBRWlQLFVBQVVzRSxnQkFBZ0J0VCxFQUFFc1QsZUFBZXZULEVBQUVpUCxVQUFVeWpCLGlCQUFpQnp5QixFQUFFeXlCLGlCQUFzQjF5QixFQUNyZ0IyeUIsR0FBRzF5QixFQUFFRixFQUFFeXlCLEtBQUt2eEIsSUFBSzRQLE9BQU85USxFQUFFQyxLQUFFQSxFQUFFa0IsRUFBRWxCLEVBQUVDLEVBQUUrSCxVQUFVLEtBQU02SSxPQUFPOVEsRUFBU0MsR0FBRSxTQUFTekQsRUFBRXdELEVBQUVDLEVBQUVDLEVBQUVnQixFQUFFRSxHQUFHLE9BQUcsT0FBT25CLEdBQUcsSUFBSUEsRUFBRXNGLE1BQVd0RixFQUFFNHlCLEdBQUczeUIsRUFBRUYsRUFBRXl5QixLQUFLdnhCLEVBQUVFLElBQUswUCxPQUFPOVEsRUFBRUMsS0FBRUEsRUFBRWtCLEVBQUVsQixFQUFFQyxJQUFLNFEsT0FBTzlRLEVBQVNDLEdBQUUsU0FBUzB2QixFQUFFM3ZCLEVBQUVDLEVBQUVDLEdBQUcsR0FBRyxpQkFBa0JELEdBQUcsaUJBQWtCQSxFQUFFLE9BQU9BLEVBQUV1eUIsR0FBRyxHQUFHdnlCLEVBQUVELEVBQUV5eUIsS0FBS3Z5QixJQUFLNFEsT0FBTzlRLEVBQUVDLEVBQUUsR0FBRyxpQkFBa0JBLEdBQUcsT0FBT0EsRUFBRSxDQUFDLE9BQU9BLEVBQUUwRixVQUFVLEtBQUszQyxFQUFHLE9BQU85QyxFQUFFd3lCLEdBQUd6eUIsRUFBRXlCLEtBQUt6QixFQUFFekMsSUFBSXlDLEVBQUVuQyxNQUFNLEtBQUtrQyxFQUFFeXlCLEtBQUt2eUIsSUFBSzZ4QixJQUFJRCxHQUFHOXhCLEVBQUUsS0FBS0MsR0FBR0MsRUFBRTRRLE9BQU85USxFQUFFRSxFQUFFLEtBQUsrQyxFQUFHLE9BQU9oRCxFQUFFMnlCLEdBQUczeUIsRUFBRUQsRUFBRXl5QixLQUFLdnlCLElBQUs0USxPQUFPOVEsRUFBRUMsRUFBRSxHQUFHNHhCLEdBQUc1eEIsSUFBSXNFLEVBQUd0RSxHQUFHLE9BQU9BLEVBQUU0eUIsR0FBRzV5QixFQUNuZkQsRUFBRXl5QixLQUFLdnlCLEVBQUUsT0FBUTRRLE9BQU85USxFQUFFQyxFQUFFaXlCLEdBQUdseUIsRUFBRUMsR0FBRyxPQUFPLEtBQUssU0FBUzJ2QixFQUFFNXZCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFHLElBQUlDLEVBQUUsT0FBT2xCLEVBQUVBLEVBQUV6QyxJQUFJLEtBQUssR0FBRyxpQkFBa0IwQyxHQUFHLGlCQUFrQkEsRUFBRSxPQUFPLE9BQU9pQixFQUFFLEtBQUtpRSxFQUFFcEYsRUFBRUMsRUFBRSxHQUFHQyxFQUFFZ0IsR0FBRyxHQUFHLGlCQUFrQmhCLEdBQUcsT0FBT0EsRUFBRSxDQUFDLE9BQU9BLEVBQUV5RixVQUFVLEtBQUszQyxFQUFHLE9BQU85QyxFQUFFMUMsTUFBTTJELEVBQUVqQixFQUFFd0IsT0FBT3dCLEVBQUcxRyxFQUFFd0QsRUFBRUMsRUFBRUMsRUFBRXBDLE1BQU1tSyxTQUFTL0csRUFBRUMsR0FBR2dFLEVBQUVuRixFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxLQUFLLEtBQUsrQixFQUFHLE9BQU8vQyxFQUFFMUMsTUFBTTJELEVBQUVnUCxFQUFFblEsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUcsS0FBSyxHQUFHMndCLEdBQUczeEIsSUFBSXFFLEVBQUdyRSxHQUFHLE9BQU8sT0FBT2lCLEVBQUUsS0FBSzNFLEVBQUV3RCxFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRSxNQUFNZ3hCLEdBQUdseUIsRUFBRUUsR0FBRyxPQUFPLEtBQUssU0FBUzJ2QixFQUFFN3ZCLEVBQUVDLEVBQUVDLEVBQUVnQixFQUFFQyxHQUFHLEdBQUcsaUJBQWtCRCxHQUFHLGlCQUFrQkEsRUFBRSxPQUNsZWtFLEVBQUVuRixFQUR1ZUQsRUFBRUEsRUFBRXNHLElBQUlwRyxJQUN0ZixLQUFXLEdBQUdnQixFQUFFQyxHQUFHLEdBQUcsaUJBQWtCRCxHQUFHLE9BQU9BLEVBQUUsQ0FBQyxPQUFPQSxFQUFFeUUsVUFBVSxLQUFLM0MsRUFBRyxPQUFPaEQsRUFBRUEsRUFBRXNHLElBQUksT0FBT3BGLEVBQUUxRCxJQUFJMEMsRUFBRWdCLEVBQUUxRCxNQUFNLEtBQUswRCxFQUFFUSxPQUFPd0IsRUFBRzFHLEVBQUV5RCxFQUFFRCxFQUFFa0IsRUFBRXBELE1BQU1tSyxTQUFTOUcsRUFBRUQsRUFBRTFELEtBQUsySCxFQUFFbEYsRUFBRUQsRUFBRWtCLEVBQUVDLEdBQUcsS0FBSzhCLEVBQUcsT0FBMkNrTixFQUFFbFEsRUFBdENELEVBQUVBLEVBQUVzRyxJQUFJLE9BQU9wRixFQUFFMUQsSUFBSTBDLEVBQUVnQixFQUFFMUQsTUFBTSxLQUFXMEQsRUFBRUMsR0FBRyxHQUFHMHdCLEdBQUczd0IsSUFBSXFELEVBQUdyRCxHQUFHLE9BQXdCMUUsRUFBRXlELEVBQW5CRCxFQUFFQSxFQUFFc0csSUFBSXBHLElBQUksS0FBV2dCLEVBQUVDLEVBQUUsTUFBTSt3QixHQUFHanlCLEVBQUVpQixHQUFHLE9BQU8sS0FBSyxTQUFTbW1CLEVBQUVsbUIsRUFBRTdHLEVBQUU4SyxFQUFFRCxHQUFHLElBQUksSUFBSWdMLEVBQUUsS0FBS3VYLEVBQUUsS0FBS0YsRUFBRWx0QixFQUFFaXRCLEVBQUVqdEIsRUFBRSxFQUFFbXRCLEVBQUUsS0FBSyxPQUFPRCxHQUFHRCxFQUFFbmlCLEVBQUV4TSxPQUFPMnVCLElBQUksQ0FBQ0MsRUFBRTN0QixNQUFNMHRCLEdBQUdFLEVBQUVELEVBQUVBLEVBQUUsTUFBTUMsRUFBRUQsRUFBRWxXLFFBQVEsSUFBSTlVLEVBQUVvekIsRUFBRXp1QixFQUFFcW1CLEVBQUVwaUIsRUFBRW1pQixHQUFHcGlCLEdBQUcsR0FBRyxPQUFPM0ksRUFBRSxDQUFDLE9BQU9nckIsSUFBSUEsRUFBRUMsR0FBRyxNQUFNem5CLEdBQUd3bkIsR0FBRyxPQUNqZmhyQixFQUFFcVUsV0FBVzVRLEVBQUVrQixFQUFFcW1CLEdBQUdsdEIsRUFBRThHLEVBQUU1RSxFQUFFbEMsRUFBRWl0QixHQUFHLE9BQU9HLEVBQUV2WCxFQUFFM1QsRUFBRWtyQixFQUFFcFcsUUFBUTlVLEVBQUVrckIsRUFBRWxyQixFQUFFZ3JCLEVBQUVDLEVBQUUsR0FBR0YsSUFBSW5pQixFQUFFeE0sT0FBTyxPQUFPc0gsRUFBRWlCLEVBQUVxbUIsR0FBR3JYLEVBQUUsR0FBRyxPQUFPcVgsRUFBRSxDQUFDLEtBQUtELEVBQUVuaUIsRUFBRXhNLE9BQU8ydUIsSUFBa0IsUUFBZEMsRUFBRW1JLEVBQUV4dUIsRUFBRWlFLEVBQUVtaUIsR0FBR3BpQixNQUFjN0ssRUFBRThHLEVBQUVvbUIsRUFBRWx0QixFQUFFaXRCLEdBQUcsT0FBT0csRUFBRXZYLEVBQUVxWCxFQUFFRSxFQUFFcFcsUUFBUWtXLEVBQUVFLEVBQUVGLEdBQUcsT0FBT3JYLEVBQUUsSUFBSXFYLEVBQUV0bUIsRUFBRUMsRUFBRXFtQixHQUFHRCxFQUFFbmlCLEVBQUV4TSxPQUFPMnVCLElBQXNCLFFBQWxCRSxFQUFFb0ksRUFBRXJJLEVBQUVybUIsRUFBRW9tQixFQUFFbmlCLEVBQUVtaUIsR0FBR3BpQixNQUFjbkYsR0FBRyxPQUFPeW5CLEVBQUU1VyxXQUFXMlcsRUFBRXpVLE9BQU8sT0FBTzBVLEVBQUVqcUIsSUFBSStwQixFQUFFRSxFQUFFanFCLEtBQUtsRCxFQUFFOEcsRUFBRXFtQixFQUFFbnRCLEVBQUVpdEIsR0FBRyxPQUFPRyxFQUFFdlgsRUFBRXNYLEVBQUVDLEVBQUVwVyxRQUFRbVcsRUFBRUMsRUFBRUQsR0FBNEMsT0FBekN6bkIsR0FBR3duQixFQUFFNXFCLFNBQVEsU0FBU29ELEdBQUcsT0FBT0MsRUFBRWtCLEVBQUVuQixNQUFZbVEsRUFBRSxTQUFTbVgsRUFBRW5tQixFQUFFN0csRUFBRThLLEVBQUVELEdBQUcsSUFBSWdMLEVBQUU1TCxFQUFHYSxHQUFHLEdBQUcsbUJBQW9CK0ssRUFBRSxNQUFNL1IsTUFBTTJCLEVBQUUsTUFBa0IsR0FBRyxPQUFmcUYsRUFBRStLLEVBQUU1VyxLQUFLNkwsSUFDMWUsTUFBTWhILE1BQU0yQixFQUFFLE1BQU0sSUFBSSxJQUFJMm5CLEVBQUV2WCxFQUFFLEtBQUtxWCxFQUFFbHRCLEVBQUVpdEIsRUFBRWp0QixFQUFFLEVBQUVtdEIsRUFBRSxLQUFLanJCLEVBQUU0SSxFQUFFb3BCLE9BQU8sT0FBT2hILElBQUlockIsRUFBRXMyQixLQUFLdkwsSUFBSS9xQixFQUFFNEksRUFBRW9wQixPQUFPLENBQUNoSCxFQUFFM3RCLE1BQU0wdEIsR0FBR0UsRUFBRUQsRUFBRUEsRUFBRSxNQUFNQyxFQUFFRCxFQUFFbFcsUUFBUSxJQUFJZ1csRUFBRXNJLEVBQUV6dUIsRUFBRXFtQixFQUFFaHJCLEVBQUV1SyxNQUFNNUIsR0FBRyxHQUFHLE9BQU9taUIsRUFBRSxDQUFDLE9BQU9FLElBQUlBLEVBQUVDLEdBQUcsTUFBTXpuQixHQUFHd25CLEdBQUcsT0FBT0YsRUFBRXpXLFdBQVc1USxFQUFFa0IsRUFBRXFtQixHQUFHbHRCLEVBQUU4RyxFQUFFa21CLEVBQUVodEIsRUFBRWl0QixHQUFHLE9BQU9HLEVBQUV2WCxFQUFFbVgsRUFBRUksRUFBRXBXLFFBQVFnVyxFQUFFSSxFQUFFSixFQUFFRSxFQUFFQyxFQUFFLEdBQUdqckIsRUFBRXMyQixLQUFLLE9BQU81eUIsRUFBRWlCLEVBQUVxbUIsR0FBR3JYLEVBQUUsR0FBRyxPQUFPcVgsRUFBRSxDQUFDLE1BQU1ockIsRUFBRXMyQixLQUFLdkwsSUFBSS9xQixFQUFFNEksRUFBRW9wQixPQUF3QixRQUFqQmh5QixFQUFFbXpCLEVBQUV4dUIsRUFBRTNFLEVBQUV1SyxNQUFNNUIsTUFBYzdLLEVBQUU4RyxFQUFFNUUsRUFBRWxDLEVBQUVpdEIsR0FBRyxPQUFPRyxFQUFFdlgsRUFBRTNULEVBQUVrckIsRUFBRXBXLFFBQVE5VSxFQUFFa3JCLEVBQUVsckIsR0FBRyxPQUFPMlQsRUFBRSxJQUFJcVgsRUFBRXRtQixFQUFFQyxFQUFFcW1CLElBQUlockIsRUFBRXMyQixLQUFLdkwsSUFBSS9xQixFQUFFNEksRUFBRW9wQixPQUE0QixRQUFyQmh5QixFQUFFcXpCLEVBQUVySSxFQUFFcm1CLEVBQUVvbUIsRUFBRS9xQixFQUFFdUssTUFBTTVCLE1BQWNuRixHQUFHLE9BQU94RCxFQUFFcVUsV0FDaGYyVyxFQUFFelUsT0FBTyxPQUFPdlcsRUFBRWdCLElBQUkrcEIsRUFBRS9xQixFQUFFZ0IsS0FBS2xELEVBQUU4RyxFQUFFNUUsRUFBRWxDLEVBQUVpdEIsR0FBRyxPQUFPRyxFQUFFdlgsRUFBRTNULEVBQUVrckIsRUFBRXBXLFFBQVE5VSxFQUFFa3JCLEVBQUVsckIsR0FBNEMsT0FBekN3RCxHQUFHd25CLEVBQUU1cUIsU0FBUSxTQUFTb0QsR0FBRyxPQUFPQyxFQUFFa0IsRUFBRW5CLE1BQVltUSxFQUFFLE9BQU8sU0FBU25RLEVBQUVrQixFQUFFRSxFQUFFZ0UsR0FBRyxJQUFJRCxFQUFFLGlCQUFrQi9ELEdBQUcsT0FBT0EsR0FBR0EsRUFBRU0sT0FBT3dCLEdBQUksT0FBTzlCLEVBQUU1RCxJQUFJMkgsSUFBSS9ELEVBQUVBLEVBQUV0RCxNQUFNbUssVUFBVSxJQUFJa0ksRUFBRSxpQkFBa0IvTyxHQUFHLE9BQU9BLEVBQUUsR0FBRytPLEVBQUUsT0FBTy9PLEVBQUV1RSxVQUFVLEtBQUszQyxFQUFHaEQsRUFBRSxDQUFTLElBQVJtUSxFQUFFL08sRUFBRTVELElBQVEySCxFQUFFakUsRUFBRSxPQUFPaUUsR0FBRyxDQUFDLEdBQUdBLEVBQUUzSCxNQUFNMlMsRUFBRSxDQUFDLE9BQU9oTCxFQUFFSSxLQUFLLEtBQUssRUFBRSxHQUFHbkUsRUFBRU0sT0FBT3dCLEVBQUcsQ0FBQ2hELEVBQUVGLEVBQUVtRixFQUFFbU0sVUFBU3BRLEVBQUVDLEVBQUVnRSxFQUFFL0QsRUFBRXRELE1BQU1tSyxXQUFZNkksT0FBTzlRLEVBQUVBLEVBQUVrQixFQUFFLE1BQU1sQixFQUFFLE1BQU0sUUFBUSxHQUFHbUYsRUFBRWhHLGNBQWNpQyxFQUFFTSxLQUFLLENBQUN4QixFQUFFRixFQUFFbUYsRUFBRW1NLFVBQzVlcFEsRUFBRUMsRUFBRWdFLEVBQUUvRCxFQUFFdEQsUUFBU2kwQixJQUFJRCxHQUFHOXhCLEVBQUVtRixFQUFFL0QsR0FBR0YsRUFBRTRQLE9BQU85USxFQUFFQSxFQUFFa0IsRUFBRSxNQUFNbEIsR0FBR0UsRUFBRUYsRUFBRW1GLEdBQUcsTUFBV2xGLEVBQUVELEVBQUVtRixHQUFHQSxFQUFFQSxFQUFFbU0sUUFBUWxRLEVBQUVNLE9BQU93QixJQUFJaEMsRUFBRTJ4QixHQUFHenhCLEVBQUV0RCxNQUFNbUssU0FBU2pJLEVBQUV5eUIsS0FBS3J0QixFQUFFaEUsRUFBRTVELE1BQU9zVCxPQUFPOVEsRUFBRUEsRUFBRWtCLEtBQUlrRSxFQUFFc3RCLEdBQUd0eEIsRUFBRU0sS0FBS04sRUFBRTVELElBQUk0RCxFQUFFdEQsTUFBTSxLQUFLa0MsRUFBRXl5QixLQUFLcnRCLElBQUsyc0IsSUFBSUQsR0FBRzl4QixFQUFFa0IsRUFBRUUsR0FBR2dFLEVBQUUwTCxPQUFPOVEsRUFBRUEsRUFBRW9GLEdBQUcsT0FBTzlLLEVBQUUwRixHQUFHLEtBQUtpRCxFQUFHakQsRUFBRSxDQUFDLElBQUltRixFQUFFL0QsRUFBRTVELElBQUksT0FBTzBELEdBQUcsQ0FBQyxHQUFHQSxFQUFFMUQsTUFBTTJILEVBQUUsSUFBRyxJQUFJakUsRUFBRXFFLEtBQUtyRSxFQUFFZ08sVUFBVXNFLGdCQUFnQnBTLEVBQUVvUyxlQUFldFMsRUFBRWdPLFVBQVV5akIsaUJBQWlCdnhCLEVBQUV1eEIsZUFBZSxDQUFDenlCLEVBQUVGLEVBQUVrQixFQUFFb1EsVUFBU3BRLEVBQUVDLEVBQUVELEVBQUVFLEVBQUU2RyxVQUFVLEtBQU02SSxPQUFPOVEsRUFBRUEsRUFBRWtCLEVBQUUsTUFBTWxCLEVBQU9FLEVBQUVGLEVBQUVrQixHQUFHLE1BQVdqQixFQUFFRCxFQUFFa0IsR0FBR0EsRUFBRUEsRUFBRW9RLFNBQVFwUSxFQUNwZjB4QixHQUFHeHhCLEVBQUVwQixFQUFFeXlCLEtBQUtydEIsSUFBSzBMLE9BQU85USxFQUFFQSxFQUFFa0IsRUFBRSxPQUFPNUcsRUFBRTBGLEdBQUcsR0FBRyxpQkFBa0JvQixHQUFHLGlCQUFrQkEsRUFBRSxPQUFPQSxFQUFFLEdBQUdBLEVBQUUsT0FBT0YsR0FBRyxJQUFJQSxFQUFFcUUsS0FBS3JGLEVBQUVGLEVBQUVrQixFQUFFb1EsVUFBU3BRLEVBQUVDLEVBQUVELEVBQUVFLElBQUswUCxPQUFPOVEsRUFBRUEsRUFBRWtCLElBQUloQixFQUFFRixFQUFFa0IsSUFBR0EsRUFBRXN4QixHQUFHcHhCLEVBQUVwQixFQUFFeXlCLEtBQUtydEIsSUFBSzBMLE9BQU85USxFQUFFQSxFQUFFa0IsR0FBRzVHLEVBQUUwRixHQUFHLEdBQUc2eEIsR0FBR3p3QixHQUFHLE9BQU9pbUIsRUFBRXJuQixFQUFFa0IsRUFBRUUsRUFBRWdFLEdBQUcsR0FBR2IsRUFBR25ELEdBQUcsT0FBT2ttQixFQUFFdG5CLEVBQUVrQixFQUFFRSxFQUFFZ0UsR0FBYyxHQUFYK0ssR0FBRytoQixHQUFHbHlCLEVBQUVvQixRQUFNLElBQXFCQSxJQUFJK0QsRUFBRSxPQUFPbkYsRUFBRXVGLEtBQUssS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRyxNQUFNbkgsTUFBTTJCLEVBQUUsSUFBSTJGLEVBQUcxRixFQUFFMEIsT0FBTyxjQUFlLE9BQU94QixFQUFFRixFQUFFa0IsSUFBSSxJQUFJNnhCLEdBQUdaLElBQUcsR0FBSWEsR0FBR2IsSUFBRyxHQUFJYyxHQUFHLEdBQUdDLEdBQUdySixHQUFHb0osSUFBSUUsR0FBR3RKLEdBQUdvSixJQUFJRyxHQUFHdkosR0FBR29KLElBQ3RkLFNBQVNJLEdBQUdyekIsR0FBRyxHQUFHQSxJQUFJaXpCLEdBQUcsTUFBTTcwQixNQUFNMkIsRUFBRSxNQUFNLE9BQU9DLEVBQUUsU0FBU3N6QixHQUFHdHpCLEVBQUVDLEdBQXlDLE9BQXRDOHBCLEdBQUVxSixHQUFHbnpCLEdBQUc4cEIsR0FBRW9KLEdBQUduekIsR0FBRytwQixHQUFFbUosR0FBR0QsSUFBSWp6QixFQUFFQyxFQUFFZ0ssVUFBbUIsS0FBSyxFQUFFLEtBQUssR0FBR2hLLEdBQUdBLEVBQUVBLEVBQUVzekIsaUJBQWlCdHpCLEVBQUVxSixhQUFhSCxHQUFHLEtBQUssSUFBSSxNQUFNLFFBQWtFbEosRUFBRWtKLEdBQXJDbEosR0FBdkJELEVBQUUsSUFBSUEsRUFBRUMsRUFBRTJPLFdBQVczTyxHQUFNcUosY0FBYyxLQUFLdEosRUFBRUEsRUFBRXd6QixTQUFrQjFKLEdBQUVvSixJQUFJbkosR0FBRW1KLEdBQUdqekIsR0FBRyxTQUFTd3pCLEtBQUszSixHQUFFb0osSUFBSXBKLEdBQUVxSixJQUFJckosR0FBRXNKLElBQUksU0FBU00sR0FBRzF6QixHQUFHcXpCLEdBQUdELEdBQUc3aEIsU0FBUyxJQUFJdFIsRUFBRW96QixHQUFHSCxHQUFHM2hCLFNBQWFyUixFQUFFaUosR0FBR2xKLEVBQUVELEVBQUUwQixNQUFNekIsSUFBSUMsSUFBSTZwQixHQUFFb0osR0FBR256QixHQUFHK3BCLEdBQUVtSixHQUFHaHpCLElBQUksU0FBU3l6QixHQUFHM3pCLEdBQUdtekIsR0FBRzVoQixVQUFVdlIsSUFBSThwQixHQUFFb0osSUFBSXBKLEdBQUVxSixLQUFLLElBQUlTLEdBQUUvSixHQUFHLEdBQzljLFNBQVNnSyxHQUFHN3pCLEdBQUcsSUFBSSxJQUFJQyxFQUFFRCxFQUFFLE9BQU9DLEdBQUcsQ0FBQyxHQUFHLEtBQUtBLEVBQUVzRixJQUFJLENBQUMsSUFBSXJGLEVBQUVELEVBQUVnUixjQUFjLEdBQUcsT0FBTy9RLElBQW1CLFFBQWZBLEVBQUVBLEVBQUVnUixhQUFxQixPQUFPaFIsRUFBRTNFLE1BQU0sT0FBTzJFLEVBQUUzRSxNQUFNLE9BQU8wRSxPQUFPLEdBQUcsS0FBS0EsRUFBRXNGLFVBQUssSUFBU3RGLEVBQUU2ekIsY0FBY0MsYUFBYSxHQUFHLElBQWEsR0FBUjl6QixFQUFFOFEsT0FBVSxPQUFPOVEsT0FBTyxHQUFHLE9BQU9BLEVBQUVvUixNQUFNLENBQUNwUixFQUFFb1IsTUFBTVAsT0FBTzdRLEVBQUVBLEVBQUVBLEVBQUVvUixNQUFNLFNBQVMsR0FBR3BSLElBQUlELEVBQUUsTUFBTSxLQUFLLE9BQU9DLEVBQUVxUixTQUFTLENBQUMsR0FBRyxPQUFPclIsRUFBRTZRLFFBQVE3USxFQUFFNlEsU0FBUzlRLEVBQUUsT0FBTyxLQUFLQyxFQUFFQSxFQUFFNlEsT0FBTzdRLEVBQUVxUixRQUFRUixPQUFPN1EsRUFBRTZRLE9BQU83USxFQUFFQSxFQUFFcVIsUUFBUSxPQUFPLEtBQUssSUFBSTBpQixHQUFHLEtBQUtDLEdBQUcsS0FBS0MsSUFBRyxFQUNwZCxTQUFTQyxHQUFHbjBCLEVBQUVDLEdBQUcsSUFBSUMsRUFBRWswQixHQUFHLEVBQUUsS0FBSyxLQUFLLEdBQUdsMEIsRUFBRWYsWUFBWSxVQUFVZSxFQUFFd0IsS0FBSyxVQUFVeEIsRUFBRWdQLFVBQVVqUCxFQUFFQyxFQUFFNFEsT0FBTzlRLEVBQUVFLEVBQUU2USxNQUFNLEVBQUUsT0FBTy9RLEVBQUVveUIsWUFBWXB5QixFQUFFb3lCLFdBQVdDLFdBQVdueUIsRUFBRUYsRUFBRW95QixXQUFXbHlCLEdBQUdGLEVBQUVzeUIsWUFBWXR5QixFQUFFb3lCLFdBQVdseUIsRUFBRSxTQUFTbTBCLEdBQUdyMEIsRUFBRUMsR0FBRyxPQUFPRCxFQUFFdUYsS0FBSyxLQUFLLEVBQUUsSUFBSXJGLEVBQUVGLEVBQUUwQixLQUF5RSxPQUFPLFFBQTNFekIsRUFBRSxJQUFJQSxFQUFFZ0ssVUFBVS9KLEVBQUU0QixnQkFBZ0I3QixFQUFFZ0csU0FBU25FLGNBQWMsS0FBSzdCLEtBQW1CRCxFQUFFa1AsVUFBVWpQLEdBQUUsR0FBTyxLQUFLLEVBQUUsT0FBb0QsUUFBN0NBLEVBQUUsS0FBS0QsRUFBRXMwQixjQUFjLElBQUlyMEIsRUFBRWdLLFNBQVMsS0FBS2hLLEtBQVlELEVBQUVrUCxVQUFValAsR0FBRSxHQUFPLEtBQUssR0FBWSxRQUFRLE9BQU0sR0FDdmUsU0FBU3MwQixHQUFHdjBCLEdBQUcsR0FBR2swQixHQUFHLENBQUMsSUFBSWowQixFQUFFZzBCLEdBQUcsR0FBR2gwQixFQUFFLENBQUMsSUFBSUMsRUFBRUQsRUFBRSxJQUFJbzBCLEdBQUdyMEIsRUFBRUMsR0FBRyxDQUFxQixLQUFwQkEsRUFBRWtwQixHQUFHanBCLEVBQUVxa0IsZ0JBQXFCOFAsR0FBR3IwQixFQUFFQyxHQUF1QyxPQUFuQ0QsRUFBRStRLE9BQWUsS0FBVC9RLEVBQUUrUSxNQUFZLEVBQUVtakIsSUFBRyxPQUFHRixHQUFHaDBCLEdBQVNtMEIsR0FBR0gsR0FBRzl6QixHQUFHOHpCLEdBQUdoMEIsRUFBRWkwQixHQUFHOUssR0FBR2xwQixFQUFFeUosaUJBQWlCMUosRUFBRStRLE9BQWUsS0FBVC9RLEVBQUUrUSxNQUFZLEVBQUVtakIsSUFBRyxFQUFHRixHQUFHaDBCLEdBQUcsU0FBU3cwQixHQUFHeDBCLEdBQUcsSUFBSUEsRUFBRUEsRUFBRThRLE9BQU8sT0FBTzlRLEdBQUcsSUFBSUEsRUFBRXVGLEtBQUssSUFBSXZGLEVBQUV1RixLQUFLLEtBQUt2RixFQUFFdUYsS0FBS3ZGLEVBQUVBLEVBQUU4USxPQUFPa2pCLEdBQUdoMEIsRUFDNVMsU0FBU3kwQixHQUFHejBCLEdBQUcsR0FBR0EsSUFBSWcwQixHQUFHLE9BQU0sRUFBRyxJQUFJRSxHQUFHLE9BQU9NLEdBQUd4MEIsR0FBR2swQixJQUFHLEdBQUcsRUFBRyxJQUFJajBCLEVBQUVELEVBQUUwQixLQUFLLEdBQUcsSUFBSTFCLEVBQUV1RixLQUFLLFNBQVN0RixHQUFHLFNBQVNBLElBQUk2b0IsR0FBRzdvQixFQUFFRCxFQUFFOHpCLGVBQWUsSUFBSTd6QixFQUFFZzBCLEdBQUdoMEIsR0FBR2swQixHQUFHbjBCLEVBQUVDLEdBQUdBLEVBQUVrcEIsR0FBR2xwQixFQUFFc2tCLGFBQW1CLEdBQU5pUSxHQUFHeDBCLEdBQU0sS0FBS0EsRUFBRXVGLElBQUksQ0FBZ0QsS0FBN0J2RixFQUFFLFFBQXBCQSxFQUFFQSxFQUFFaVIsZUFBeUJqUixFQUFFa1IsV0FBVyxNQUFXLE1BQU05UyxNQUFNMkIsRUFBRSxNQUFNQyxFQUFFLENBQWlCLElBQWhCQSxFQUFFQSxFQUFFdWtCLFlBQWdCdGtCLEVBQUUsRUFBRUQsR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRWlLLFNBQVMsQ0FBQyxJQUFJL0osRUFBRUYsRUFBRXpFLEtBQUssR0FBRyxPQUFPMkUsRUFBRSxDQUFDLEdBQUcsSUFBSUQsRUFBRSxDQUFDZzBCLEdBQUc5SyxHQUFHbnBCLEVBQUV1a0IsYUFBYSxNQUFNdmtCLEVBQUVDLFFBQVEsTUFBTUMsR0FBRyxPQUFPQSxHQUFHLE9BQU9BLEdBQUdELElBQUlELEVBQUVBLEVBQUV1a0IsWUFBWTBQLEdBQUcsV0FBV0EsR0FBR0QsR0FBRzdLLEdBQUducEIsRUFBRWtQLFVBQVVxVixhQUFhLEtBQUssT0FBTSxFQUN0ZixTQUFTbVEsS0FBS1QsR0FBR0QsR0FBRyxLQUFLRSxJQUFHLEVBQUcsSUFBSVMsR0FBRyxHQUFHLFNBQVNDLEtBQUssSUFBSSxJQUFJNTBCLEVBQUUsRUFBRUEsRUFBRTIwQixHQUFHLzdCLE9BQU9vSCxJQUFJMjBCLEdBQUczMEIsR0FBRzYwQiw4QkFBOEIsS0FBS0YsR0FBRy83QixPQUFPLEVBQUUsSUFBSWs4QixHQUFHaHlCLEVBQUdpeUIsdUJBQXVCQyxHQUFHbHlCLEVBQUdzcUIsd0JBQXdCNkgsR0FBRyxFQUFFQyxHQUFFLEtBQUtDLEdBQUUsS0FBS0MsR0FBRSxLQUFLQyxJQUFHLEVBQUdDLElBQUcsRUFBRyxTQUFTQyxLQUFLLE1BQU1uM0IsTUFBTTJCLEVBQUUsTUFBTyxTQUFTeTFCLEdBQUd4MUIsRUFBRUMsR0FBRyxHQUFHLE9BQU9BLEVBQUUsT0FBTSxFQUFHLElBQUksSUFBSUMsRUFBRSxFQUFFQSxFQUFFRCxFQUFFckgsUUFBUXNILEVBQUVGLEVBQUVwSCxPQUFPc0gsSUFBSSxJQUFJK2pCLEdBQUdqa0IsRUFBRUUsR0FBR0QsRUFBRUMsSUFBSSxPQUFNLEVBQUcsT0FBTSxFQUM5WCxTQUFTdTFCLEdBQUd6MUIsRUFBRUMsRUFBRUMsRUFBRWdCLEVBQUVDLEVBQUVDLEdBQXlILEdBQXRINnpCLEdBQUc3ekIsRUFBRTh6QixHQUFFajFCLEVBQUVBLEVBQUVnUixjQUFjLEtBQUtoUixFQUFFMnVCLFlBQVksS0FBSzN1QixFQUFFa3VCLE1BQU0sRUFBRTJHLEdBQUd2akIsUUFBUSxPQUFPdlIsR0FBRyxPQUFPQSxFQUFFaVIsY0FBY3lrQixHQUFHQyxHQUFHMzFCLEVBQUVFLEVBQUVnQixFQUFFQyxHQUFNbTBCLEdBQUcsQ0FBQ2wwQixFQUFFLEVBQUUsRUFBRSxDQUFPLEdBQU5rMEIsSUFBRyxJQUFRLEdBQUdsMEIsR0FBRyxNQUFNaEQsTUFBTTJCLEVBQUUsTUFBTXFCLEdBQUcsRUFBRWcwQixHQUFFRCxHQUFFLEtBQUtsMUIsRUFBRTJ1QixZQUFZLEtBQUtrRyxHQUFHdmpCLFFBQVFxa0IsR0FBRzUxQixFQUFFRSxFQUFFZ0IsRUFBRUMsU0FBU20wQixJQUFrRSxHQUE5RFIsR0FBR3ZqQixRQUFRc2tCLEdBQUc1MUIsRUFBRSxPQUFPazFCLElBQUcsT0FBT0EsR0FBRTNHLEtBQUt5RyxHQUFHLEVBQUVHLEdBQUVELEdBQUVELEdBQUUsS0FBS0csSUFBRyxFQUFNcDFCLEVBQUUsTUFBTTdCLE1BQU0yQixFQUFFLE1BQU0sT0FBT0MsRUFBRSxTQUFTODFCLEtBQUssSUFBSTkxQixFQUFFLENBQUNpUixjQUFjLEtBQUs0ZCxVQUFVLEtBQUtrSCxVQUFVLEtBQUtwOEIsTUFBTSxLQUFLNjBCLEtBQUssTUFBOEMsT0FBeEMsT0FBTzRHLEdBQUVGLEdBQUVqa0IsY0FBY21rQixHQUFFcDFCLEVBQUVvMUIsR0FBRUEsR0FBRTVHLEtBQUt4dUIsRUFBU28xQixHQUMvZSxTQUFTWSxLQUFLLEdBQUcsT0FBT2IsR0FBRSxDQUFDLElBQUluMUIsRUFBRWsxQixHQUFFcmtCLFVBQVU3USxFQUFFLE9BQU9BLEVBQUVBLEVBQUVpUixjQUFjLFVBQVVqUixFQUFFbTFCLEdBQUUzRyxLQUFLLElBQUl2dUIsRUFBRSxPQUFPbTFCLEdBQUVGLEdBQUVqa0IsY0FBY21rQixHQUFFNUcsS0FBSyxHQUFHLE9BQU92dUIsRUFBRW0xQixHQUFFbjFCLEVBQUVrMUIsR0FBRW4xQixNQUFNLENBQUMsR0FBRyxPQUFPQSxFQUFFLE1BQU01QixNQUFNMkIsRUFBRSxNQUFVQyxFQUFFLENBQUNpUixlQUFQa2tCLEdBQUVuMUIsR0FBcUJpUixjQUFjNGQsVUFBVXNHLEdBQUV0RyxVQUFVa0gsVUFBVVosR0FBRVksVUFBVXA4QixNQUFNdzdCLEdBQUV4N0IsTUFBTTYwQixLQUFLLE1BQU0sT0FBTzRHLEdBQUVGLEdBQUVqa0IsY0FBY21rQixHQUFFcDFCLEVBQUVvMUIsR0FBRUEsR0FBRTVHLEtBQUt4dUIsRUFBRSxPQUFPbzFCLEdBQUUsU0FBU2EsR0FBR2oyQixFQUFFQyxHQUFHLE1BQU0sbUJBQW9CQSxFQUFFQSxFQUFFRCxHQUFHQyxFQUN2WSxTQUFTaTJCLEdBQUdsMkIsR0FBRyxJQUFJQyxFQUFFKzFCLEtBQUs5MUIsRUFBRUQsRUFBRXRHLE1BQU0sR0FBRyxPQUFPdUcsRUFBRSxNQUFNOUIsTUFBTTJCLEVBQUUsTUFBTUcsRUFBRWkyQixvQkFBb0JuMkIsRUFBRSxJQUFJa0IsRUFBRWkwQixHQUFFaDBCLEVBQUVELEVBQUU2MEIsVUFBVTMwQixFQUFFbEIsRUFBRSt1QixRQUFRLEdBQUcsT0FBTzd0QixFQUFFLENBQUMsR0FBRyxPQUFPRCxFQUFFLENBQUMsSUFBSTdHLEVBQUU2RyxFQUFFcXRCLEtBQUtydEIsRUFBRXF0QixLQUFLcHRCLEVBQUVvdEIsS0FBS3B0QixFQUFFb3RCLEtBQUtsMEIsRUFBRTRHLEVBQUU2MEIsVUFBVTUwQixFQUFFQyxFQUFFbEIsRUFBRSt1QixRQUFRLEtBQUssR0FBRyxPQUFPOXRCLEVBQUUsQ0FBQ0EsRUFBRUEsRUFBRXF0QixLQUFLdHRCLEVBQUVBLEVBQUUydEIsVUFBVSxJQUFJenBCLEVBQUU5SyxFQUFFOEcsRUFBRSxLQUFLK0QsRUFBRWhFLEVBQUUsRUFBRSxDQUFDLElBQUlnUCxFQUFFaEwsRUFBRW1xQixLQUFLLElBQUkyRixHQUFHOWtCLEtBQUtBLEVBQUUsT0FBTy9LLElBQUlBLEVBQUVBLEVBQUVvcEIsS0FBSyxDQUFDYyxLQUFLLEVBQUU4RyxPQUFPanhCLEVBQUVpeEIsT0FBT0MsYUFBYWx4QixFQUFFa3hCLGFBQWFDLFdBQVdueEIsRUFBRW14QixXQUFXOUgsS0FBSyxPQUFPdHRCLEVBQUVpRSxFQUFFa3hCLGVBQWVyMkIsRUFBRW1GLEVBQUVteEIsV0FBV3QyQixFQUFFa0IsRUFBRWlFLEVBQUVpeEIsWUFBWSxDQUFDLElBQUk1NUIsRUFBRSxDQUFDOHlCLEtBQUtuZixFQUFFaW1CLE9BQU9qeEIsRUFBRWl4QixPQUFPQyxhQUFhbHhCLEVBQUVreEIsYUFDOWZDLFdBQVdueEIsRUFBRW14QixXQUFXOUgsS0FBSyxNQUFNLE9BQU9wcEIsR0FBRzlLLEVBQUU4SyxFQUFFNUksRUFBRTRFLEVBQUVGLEdBQUdrRSxFQUFFQSxFQUFFb3BCLEtBQUtoeUIsRUFBRTA0QixHQUFFL0csT0FBT2hlLEVBQUUyZixJQUFJM2YsRUFBRWhMLEVBQUVBLEVBQUVxcEIsV0FBVyxPQUFPcnBCLEdBQUdBLElBQUloRSxHQUFHLE9BQU9pRSxFQUFFaEUsRUFBRUYsRUFBRWtFLEVBQUVvcEIsS0FBS2wwQixFQUFFMnBCLEdBQUcvaUIsRUFBRWpCLEVBQUVnUixpQkFBaUJtZCxJQUFHLEdBQUludUIsRUFBRWdSLGNBQWMvUCxFQUFFakIsRUFBRTR1QixVQUFVenRCLEVBQUVuQixFQUFFODFCLFVBQVUzd0IsRUFBRWxGLEVBQUVxMkIsa0JBQWtCcjFCLEVBQUUsTUFBTSxDQUFDakIsRUFBRWdSLGNBQWMvUSxFQUFFczJCLFVBQ3RRLFNBQVNDLEdBQUd6MkIsR0FBRyxJQUFJQyxFQUFFKzFCLEtBQUs5MUIsRUFBRUQsRUFBRXRHLE1BQU0sR0FBRyxPQUFPdUcsRUFBRSxNQUFNOUIsTUFBTTJCLEVBQUUsTUFBTUcsRUFBRWkyQixvQkFBb0JuMkIsRUFBRSxJQUFJa0IsRUFBRWhCLEVBQUVzMkIsU0FBU3IxQixFQUFFakIsRUFBRSt1QixRQUFRN3RCLEVBQUVuQixFQUFFZ1IsY0FBYyxHQUFHLE9BQU85UCxFQUFFLENBQUNqQixFQUFFK3VCLFFBQVEsS0FBSyxJQUFJMzBCLEVBQUU2RyxFQUFFQSxFQUFFcXRCLEtBQUssR0FBR3B0QixFQUFFcEIsRUFBRW9CLEVBQUU5RyxFQUFFODdCLFFBQVE5N0IsRUFBRUEsRUFBRWswQixXQUFXbDBCLElBQUk2RyxHQUFHOGlCLEdBQUc3aUIsRUFBRW5CLEVBQUVnUixpQkFBaUJtZCxJQUFHLEdBQUludUIsRUFBRWdSLGNBQWM3UCxFQUFFLE9BQU9uQixFQUFFODFCLFlBQVk5MUIsRUFBRTR1QixVQUFVenRCLEdBQUdsQixFQUFFcTJCLGtCQUFrQm4xQixFQUFFLE1BQU0sQ0FBQ0EsRUFBRUYsR0FDblYsU0FBU3cxQixHQUFHMTJCLEVBQUVDLEVBQUVDLEdBQUcsSUFBSWdCLEVBQUVqQixFQUFFMDJCLFlBQVl6MUIsRUFBRUEsRUFBRWpCLEVBQUUyMkIsU0FBUyxJQUFJejFCLEVBQUVsQixFQUFFNDBCLDhCQUF5SSxHQUF4RyxPQUFPMXpCLEVBQUVuQixFQUFFbUIsSUFBSUQsR0FBVWxCLEVBQUVBLEVBQUU2MkIsa0JBQWlCNzJCLEdBQUdpMUIsR0FBR2oxQixLQUFLQSxLQUFFQyxFQUFFNDBCLDhCQUE4QjN6QixFQUFFeXpCLEdBQUdqN0IsS0FBS3VHLEtBQU1ELEVBQUUsT0FBT0UsRUFBRUQsRUFBRTIyQixTQUFvQixNQUFYakMsR0FBR2o3QixLQUFLdUcsR0FBUzdCLE1BQU0yQixFQUFFLE1BQ3pQLFNBQVMrMkIsR0FBRzkyQixFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxJQUFJQyxFQUFFNDFCLEdBQUUsR0FBRyxPQUFPNTFCLEVBQUUsTUFBTS9DLE1BQU0yQixFQUFFLE1BQU0sSUFBSXFCLEVBQUVuQixFQUFFMDJCLFlBQVlyOEIsRUFBRThHLEVBQUVuQixFQUFFMjJCLFNBQVN4eEIsRUFBRTB2QixHQUFHdmpCLFFBQVFwTSxFQUFFQyxFQUFFNHhCLFVBQVMsV0FBVyxPQUFPTixHQUFHdjFCLEVBQUVsQixFQUFFQyxNQUFLaVEsRUFBRWhMLEVBQUUsR0FBRzNJLEVBQUUySSxFQUFFLEdBQUdBLEVBQUVpd0IsR0FBRSxJQUFJekYsRUFBRTN2QixFQUFFaVIsY0FBYzJlLEVBQUVELEVBQUVPLEtBQUtMLEVBQUVELEVBQUVxSCxZQUFZNVAsRUFBRXNJLEVBQUV6eUIsT0FBT3l5QixFQUFFQSxFQUFFdUgsVUFBVSxJQUFJNVAsRUFBRTROLEdBQ3VPLE9BRHJPbDFCLEVBQUVpUixjQUFjLENBQUNpZixLQUFLTixFQUFFMXlCLE9BQU8rQyxFQUFFaTNCLFVBQVVoMkIsR0FBR2tFLEVBQUUreEIsV0FBVSxXQUFXdkgsRUFBRXFILFlBQVkvMkIsRUFBRTB2QixFQUFFd0gsWUFBWWpuQixFQUFFLElBQUluUSxFQUFFb0IsRUFBRW5CLEVBQUUyMkIsU0FBUyxJQUFJM1MsR0FBRzNwQixFQUFFMEYsR0FBRyxDQUFDQSxFQUFFRSxFQUFFRCxFQUFFMjJCLFNBQVMzUyxHQUFHem5CLEVBQUV3RCxLQUFLbVEsRUFBRW5RLEdBQUdBLEVBQUV5d0IsR0FBR25KLEdBQUdubUIsRUFBRTAxQixrQkFBa0I3MkIsRUFBRW1CLEVBQUVzVSxjQUFjelYsRUFBRW1CLEVBQUUwMUIsaUJBQWlCMTFCLEVBQUUyVSxnQkFBZ0I5VixFQUFFLElBQUksSUFBSWtCLEVBQzVmQyxFQUFFNFUsY0FBYzNRLEVBQUVwRixFQUFFLEVBQUVvRixHQUFHLENBQUMsSUFBSUQsRUFBRSxHQUFHMFEsR0FBR3pRLEdBQUd1aUIsRUFBRSxHQUFHeGlCLEVBQUVqRSxFQUFFaUUsSUFBSW5GLEVBQUVvRixJQUFJdWlCLE1BQUssQ0FBQ3puQixFQUFFRCxFQUFFaUIsSUFBSWtFLEVBQUUreEIsV0FBVSxXQUFXLE9BQU9qMkIsRUFBRWpCLEVBQUUyMkIsU0FBUSxXQUFXLElBQUk1MkIsRUFBRTR2QixFQUFFcUgsWUFBWS8yQixFQUFFMHZCLEVBQUV3SCxZQUFZLElBQUlsM0IsRUFBRUYsRUFBRUMsRUFBRTIyQixVQUFVLElBQUkxMUIsRUFBRXV2QixHQUFHbkosR0FBR25tQixFQUFFMDFCLGtCQUFrQjMxQixFQUFFQyxFQUFFc1UsYUFBYSxNQUFNZ1MsR0FBR3ZuQixHQUFFLFdBQVcsTUFBTXVuQixXQUFTLENBQUN4bkIsRUFBRWlCLElBQUkraUIsR0FBRzRMLEVBQUUzdkIsSUFBSStqQixHQUFHb0QsRUFBRXBuQixJQUFJZ2tCLEdBQUcwTCxFQUFFenVCLE1BQUtsQixFQUFFLENBQUNpdkIsUUFBUSxLQUFLdUgsU0FBUyxLQUFLTCxvQkFBb0JGLEdBQUdNLGtCQUFrQi81QixJQUFLZzZCLFNBQVNybUIsRUFBRWtuQixHQUFHbGdCLEtBQUssS0FBSytkLEdBQUVsMUIsR0FBR21GLEVBQUV4TCxNQUFNcUcsRUFBRW1GLEVBQUU0d0IsVUFBVSxLQUFLdjVCLEVBQUVrNkIsR0FBR3YxQixFQUFFbEIsRUFBRUMsR0FBR2lGLEVBQUU4TCxjQUFjOUwsRUFBRTBwQixVQUFVcnlCLEdBQVVBLEVBQ3RlLFNBQVM4NkIsR0FBR3QzQixFQUFFQyxFQUFFQyxHQUFjLE9BQU80MkIsR0FBWmQsS0FBaUJoMkIsRUFBRUMsRUFBRUMsR0FBRyxTQUFTcTNCLEdBQUd2M0IsR0FBRyxJQUFJQyxFQUFFNjFCLEtBQW1MLE1BQTlLLG1CQUFvQjkxQixJQUFJQSxFQUFFQSxLQUFLQyxFQUFFZ1IsY0FBY2hSLEVBQUU0dUIsVUFBVTd1QixFQUFvRkEsR0FBbEZBLEVBQUVDLEVBQUV0RyxNQUFNLENBQUNzMUIsUUFBUSxLQUFLdUgsU0FBUyxLQUFLTCxvQkFBb0JGLEdBQUdNLGtCQUFrQnYyQixJQUFPdzJCLFNBQVNhLEdBQUdsZ0IsS0FBSyxLQUFLK2QsR0FBRWwxQixHQUFTLENBQUNDLEVBQUVnUixjQUFjalIsR0FDaFIsU0FBU3czQixHQUFHeDNCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFrTyxPQUEvTmxCLEVBQUUsQ0FBQ3VGLElBQUl2RixFQUFFeTNCLE9BQU94M0IsRUFBRXkzQixRQUFReDNCLEVBQUV5M0IsS0FBS3oyQixFQUFFc3RCLEtBQUssTUFBc0IsUUFBaEJ2dUIsRUFBRWkxQixHQUFFdEcsY0FBc0IzdUIsRUFBRSxDQUFDbXlCLFdBQVcsTUFBTThDLEdBQUV0RyxZQUFZM3VCLEVBQUVBLEVBQUVteUIsV0FBV3B5QixFQUFFd3VCLEtBQUt4dUIsR0FBbUIsUUFBZkUsRUFBRUQsRUFBRW15QixZQUFvQm55QixFQUFFbXlCLFdBQVdweUIsRUFBRXd1QixLQUFLeHVCLEdBQUdrQixFQUFFaEIsRUFBRXN1QixLQUFLdHVCLEVBQUVzdUIsS0FBS3h1QixFQUFFQSxFQUFFd3VCLEtBQUt0dEIsRUFBRWpCLEVBQUVteUIsV0FBV3B5QixHQUFXQSxFQUFFLFNBQVM0M0IsR0FBRzUzQixHQUE0QixPQUFkQSxFQUFFLENBQUN1UixRQUFRdlIsR0FBaEI4MUIsS0FBNEI3a0IsY0FBY2pSLEVBQUUsU0FBUzYzQixLQUFLLE9BQU83QixLQUFLL2tCLGNBQWMsU0FBUzZtQixHQUFHOTNCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFHLElBQUlDLEVBQUUyMEIsS0FBS1osR0FBRW5rQixPQUFPL1EsRUFBRW1CLEVBQUU4UCxjQUFjdW1CLEdBQUcsRUFBRXYzQixFQUFFQyxPQUFFLE9BQU8sSUFBU2dCLEVBQUUsS0FBS0EsR0FDamMsU0FBUzYyQixHQUFHLzNCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFHLElBQUlDLEVBQUU2MEIsS0FBSzkwQixPQUFFLElBQVNBLEVBQUUsS0FBS0EsRUFBRSxJQUFJRSxPQUFFLEVBQU8sR0FBRyxPQUFPK3pCLEdBQUUsQ0FBQyxJQUFJNzZCLEVBQUU2NkIsR0FBRWxrQixjQUEwQixHQUFaN1AsRUFBRTlHLEVBQUVvOUIsUUFBVyxPQUFPeDJCLEdBQUdzMEIsR0FBR3QwQixFQUFFNUcsRUFBRXE5QixNQUFtQixZQUFaSCxHQUFHdjNCLEVBQUVDLEVBQUVrQixFQUFFRixHQUFXZzBCLEdBQUVua0IsT0FBTy9RLEVBQUVtQixFQUFFOFAsY0FBY3VtQixHQUFHLEVBQUV2M0IsRUFBRUMsRUFBRWtCLEVBQUVGLEdBQUcsU0FBUzgyQixHQUFHaDRCLEVBQUVDLEdBQUcsT0FBTzYzQixHQUFHLElBQUksRUFBRTkzQixFQUFFQyxHQUFHLFNBQVNnNEIsR0FBR2o0QixFQUFFQyxHQUFHLE9BQU84M0IsR0FBRyxJQUFJLEVBQUUvM0IsRUFBRUMsR0FBRyxTQUFTaTRCLEdBQUdsNEIsRUFBRUMsR0FBRyxPQUFPODNCLEdBQUcsRUFBRSxFQUFFLzNCLEVBQUVDLEdBQUcsU0FBU2s0QixHQUFHbjRCLEVBQUVDLEdBQUcsTUFBRyxtQkFBb0JBLEdBQVNELEVBQUVBLElBQUlDLEVBQUVELEdBQUcsV0FBV0MsRUFBRSxRQUFVLE1BQU9BLEdBQXFCRCxFQUFFQSxJQUFJQyxFQUFFc1IsUUFBUXZSLEVBQUUsV0FBV0MsRUFBRXNSLFFBQVEsWUFBdEUsRUFDeFksU0FBUzZtQixHQUFHcDRCLEVBQUVDLEVBQUVDLEdBQTZDLE9BQTFDQSxFQUFFLE1BQU9BLEVBQWNBLEVBQUVtbUIsT0FBTyxDQUFDcm1CLElBQUksS0FBWSszQixHQUFHLEVBQUUsRUFBRUksR0FBR2hoQixLQUFLLEtBQUtsWCxFQUFFRCxHQUFHRSxHQUFHLFNBQVNtNEIsTUFBTSxTQUFTQyxHQUFHdDRCLEVBQUVDLEdBQUcsSUFBSUMsRUFBRTgxQixLQUFLLzFCLE9BQUUsSUFBU0EsRUFBRSxLQUFLQSxFQUFFLElBQUlpQixFQUFFaEIsRUFBRStRLGNBQWMsT0FBRyxPQUFPL1AsR0FBRyxPQUFPakIsR0FBR3UxQixHQUFHdjFCLEVBQUVpQixFQUFFLElBQVdBLEVBQUUsSUFBR2hCLEVBQUUrUSxjQUFjLENBQUNqUixFQUFFQyxHQUFVRCxHQUFFLFNBQVN1NEIsR0FBR3Y0QixFQUFFQyxHQUFHLElBQUlDLEVBQUU4MUIsS0FBSy8xQixPQUFFLElBQVNBLEVBQUUsS0FBS0EsRUFBRSxJQUFJaUIsRUFBRWhCLEVBQUUrUSxjQUFjLE9BQUcsT0FBTy9QLEdBQUcsT0FBT2pCLEdBQUd1MUIsR0FBR3YxQixFQUFFaUIsRUFBRSxJQUFXQSxFQUFFLElBQUdsQixFQUFFQSxJQUFJRSxFQUFFK1EsY0FBYyxDQUFDalIsRUFBRUMsR0FBVUQsR0FDelosU0FBU3c0QixHQUFHeDRCLEVBQUVDLEdBQUcsSUFBSUMsRUFBRTJzQixLQUFLRSxHQUFHLEdBQUc3c0IsRUFBRSxHQUFHQSxHQUFFLFdBQVdGLEdBQUUsTUFBTStzQixHQUFHLEdBQUc3c0IsRUFBRSxHQUFHQSxHQUFFLFdBQVcsSUFBSUEsRUFBRTgwQixHQUFHcmdCLFdBQVdxZ0IsR0FBR3JnQixXQUFXLEVBQUUsSUFBSTNVLEdBQUUsR0FBSUMsSUFBSSxRQUFRKzBCLEdBQUdyZ0IsV0FBV3pVLE1BQzVKLFNBQVNtM0IsR0FBR3IzQixFQUFFQyxFQUFFQyxHQUFHLElBQUlnQixFQUFFc3ZCLEtBQUtydkIsRUFBRXN2QixHQUFHendCLEdBQUdvQixFQUFFLENBQUNrdUIsS0FBS251QixFQUFFaTFCLE9BQU9sMkIsRUFBRW0yQixhQUFhLEtBQUtDLFdBQVcsS0FBSzlILEtBQUssTUFBTWwwQixFQUFFMkYsRUFBRWd2QixRQUE2RSxHQUFyRSxPQUFPMzBCLEVBQUU4RyxFQUFFb3RCLEtBQUtwdEIsR0FBR0EsRUFBRW90QixLQUFLbDBCLEVBQUVrMEIsS0FBS2wwQixFQUFFazBCLEtBQUtwdEIsR0FBR25CLEVBQUVndkIsUUFBUTd0QixFQUFFOUcsRUFBRTBGLEVBQUU2USxVQUFhN1EsSUFBSWsxQixJQUFHLE9BQU81NkIsR0FBR0EsSUFBSTQ2QixHQUFFSSxHQUFHRCxJQUFHLE1BQU8sQ0FBQyxHQUFHLElBQUlyMUIsRUFBRW11QixRQUFRLE9BQU83ekIsR0FBRyxJQUFJQSxFQUFFNnpCLFFBQWlDLFFBQXhCN3pCLEVBQUUyRixFQUFFazJCLHFCQUE4QixJQUFJLElBQUkvd0IsRUFBRW5GLEVBQUVzMkIsa0JBQWtCcHhCLEVBQUU3SyxFQUFFOEssRUFBRWxGLEdBQW1DLEdBQWhDa0IsRUFBRWkxQixhQUFhLzdCLEVBQUU4RyxFQUFFazFCLFdBQVdueEIsRUFBSzhlLEdBQUc5ZSxFQUFFQyxHQUFHLE9BQU8sTUFBTStLLElBQWF1Z0IsR0FBRzF3QixFQUFFbUIsRUFBRUQsSUFDOVosSUFBSTIwQixHQUFHLENBQUM0QyxZQUFZcEssR0FBR3FLLFlBQVluRCxHQUFHb0QsV0FBV3BELEdBQUc0QixVQUFVNUIsR0FBR3FELG9CQUFvQnJELEdBQUdzRCxnQkFBZ0J0RCxHQUFHdUQsUUFBUXZELEdBQUd3RCxXQUFXeEQsR0FBR3lELE9BQU96RCxHQUFHeUIsU0FBU3pCLEdBQUcwRCxjQUFjMUQsR0FBRzJELGlCQUFpQjNELEdBQUc0RCxjQUFjNUQsR0FBRzZELGlCQUFpQjdELEdBQUc4RCxvQkFBb0I5RCxHQUFHK0QsMEJBQXlCLEdBQUk1RCxHQUFHLENBQUMrQyxZQUFZcEssR0FBR3FLLFlBQVksU0FBUzE0QixFQUFFQyxHQUE0QyxPQUF6QzYxQixLQUFLN2tCLGNBQWMsQ0FBQ2pSLE9BQUUsSUFBU0MsRUFBRSxLQUFLQSxHQUFVRCxHQUFHMjRCLFdBQVd0SyxHQUFHOEksVUFBVWEsR0FBR1ksb0JBQW9CLFNBQVM1NEIsRUFBRUMsRUFBRUMsR0FBNkMsT0FBMUNBLEVBQUUsTUFBT0EsRUFBY0EsRUFBRW1tQixPQUFPLENBQUNybUIsSUFBSSxLQUFZODNCLEdBQUcsRUFBRSxFQUFFSyxHQUFHaGhCLEtBQUssS0FDdmZsWCxFQUFFRCxHQUFHRSxJQUFJMjRCLGdCQUFnQixTQUFTNzRCLEVBQUVDLEdBQUcsT0FBTzYzQixHQUFHLEVBQUUsRUFBRTkzQixFQUFFQyxJQUFJNjRCLFFBQVEsU0FBUzk0QixFQUFFQyxHQUFHLElBQUlDLEVBQUU0MUIsS0FBcUQsT0FBaEQ3MUIsT0FBRSxJQUFTQSxFQUFFLEtBQUtBLEVBQUVELEVBQUVBLElBQUlFLEVBQUUrUSxjQUFjLENBQUNqUixFQUFFQyxHQUFVRCxHQUFHKzRCLFdBQVcsU0FBUy80QixFQUFFQyxFQUFFQyxHQUFHLElBQUlnQixFQUFFNDBCLEtBQXVLLE9BQWxLNzFCLE9BQUUsSUFBU0MsRUFBRUEsRUFBRUQsR0FBR0EsRUFBRWlCLEVBQUUrUCxjQUFjL1AsRUFBRTJ0QixVQUFVNXVCLEVBQW1GRCxHQUFqRkEsRUFBRWtCLEVBQUV2SCxNQUFNLENBQUNzMUIsUUFBUSxLQUFLdUgsU0FBUyxLQUFLTCxvQkFBb0JuMkIsRUFBRXUyQixrQkFBa0J0MkIsSUFBT3UyQixTQUFTYSxHQUFHbGdCLEtBQUssS0FBSytkLEdBQUVsMUIsR0FBUyxDQUFDa0IsRUFBRStQLGNBQWNqUixJQUFJZzVCLE9BQU9wQixHQUFHWixTQUFTTyxHQUFHMEIsY0FBY1osR0FBR2EsaUJBQWlCLFNBQVNsNUIsR0FBRyxJQUFJQyxFQUFFczNCLEdBQUd2M0IsR0FBR0UsRUFBRUQsRUFBRSxHQUFHaUIsRUFBRWpCLEVBQUUsR0FDNVosT0FEK1orM0IsSUFBRyxXQUFXLElBQUkvM0IsRUFBRSswQixHQUFHcmdCLFdBQzllcWdCLEdBQUdyZ0IsV0FBVyxFQUFFLElBQUl6VCxFQUFFbEIsR0FBRyxRQUFRZzFCLEdBQUdyZ0IsV0FBVzFVLEtBQUksQ0FBQ0QsSUFBV0UsR0FBR2k1QixjQUFjLFdBQVcsSUFBSW41QixFQUFFdTNCLElBQUcsR0FBSXQzQixFQUFFRCxFQUFFLEdBQThCLE9BQU40M0IsR0FBckI1M0IsRUFBRXc0QixHQUFHcmhCLEtBQUssS0FBS25YLEVBQUUsS0FBZ0IsQ0FBQ0EsRUFBRUMsSUFBSW01QixpQkFBaUIsU0FBU3A1QixFQUFFQyxFQUFFQyxHQUFHLElBQUlnQixFQUFFNDBCLEtBQWtGLE9BQTdFNTBCLEVBQUUrUCxjQUFjLENBQUNpZixLQUFLLENBQUMrRyxZQUFZaDNCLEVBQUVtM0IsWUFBWSxNQUFNbDZCLE9BQU84QyxFQUFFazNCLFVBQVVoM0IsR0FBVTQyQixHQUFHNTFCLEVBQUVsQixFQUFFQyxFQUFFQyxJQUFJbTVCLG9CQUFvQixXQUFXLEdBQUduRixHQUFHLENBQUMsSUFBSWwwQixHQUFFLEVBQUdDLEVBekRsRCxTQUFZRCxHQUFHLE1BQU0sQ0FBQzJGLFNBQVM5QixFQUFHNEYsU0FBU3pKLEVBQUV3SixRQUFReEosR0F5RER1NUIsRUFBRyxXQUFpRCxNQUF0Q3Y1QixJQUFJQSxHQUFFLEVBQUdFLEVBQUUsTUFBTW9wQixNQUFNN2YsU0FBUyxNQUFZckwsTUFBTTJCLEVBQUUsU0FBU0csRUFBRXEzQixHQUFHdDNCLEdBQUcsR0FDMVosT0FENlosSUFBWSxFQUFQaTFCLEdBQUV6QyxRQUFVeUMsR0FBRW5rQixPQUFPLElBQUl5bUIsR0FBRyxHQUFFLFdBQVd0M0IsRUFBRSxNQUFNb3BCLE1BQU03ZixTQUFTLFlBQ2hmLEVBQU8sT0FBY3hKLEVBQW1DLE9BQU5zM0IsR0FBM0J0M0IsRUFBRSxNQUFNcXBCLE1BQU03ZixTQUFTLEtBQWlCeEosR0FBR3E1QiwwQkFBeUIsR0FBSTNELEdBQUcsQ0FBQzhDLFlBQVlwSyxHQUFHcUssWUFBWUosR0FBR0ssV0FBV3RLLEdBQUc4SSxVQUFVYyxHQUFHVyxvQkFBb0JSLEdBQUdTLGdCQUFnQlgsR0FBR1ksUUFBUVAsR0FBR1EsV0FBVzdDLEdBQUc4QyxPQUFPbkIsR0FBR2IsU0FBUyxXQUFXLE9BQU9kLEdBQUdELEtBQUtnRCxjQUFjWixHQUFHYSxpQkFBaUIsU0FBU2w1QixHQUFHLElBQUlDLEVBQUVpMkIsR0FBR0QsSUFBSS8xQixFQUFFRCxFQUFFLEdBQUdpQixFQUFFakIsRUFBRSxHQUE2RixPQUExRmc0QixJQUFHLFdBQVcsSUFBSWg0QixFQUFFKzBCLEdBQUdyZ0IsV0FBV3FnQixHQUFHcmdCLFdBQVcsRUFBRSxJQUFJelQsRUFBRWxCLEdBQUcsUUFBUWcxQixHQUFHcmdCLFdBQVcxVSxLQUFJLENBQUNELElBQVdFLEdBQUdpNUIsY0FBYyxXQUFXLElBQUluNUIsRUFBRWsyQixHQUFHRCxJQUFJLEdBQUcsTUFBTSxDQUFDNEIsS0FBS3RtQixRQUM5ZXZSLElBQUlvNUIsaUJBQWlCOUIsR0FBRytCLG9CQUFvQixXQUFXLE9BQU9uRCxHQUFHRCxJQUFJLElBQUlxRCwwQkFBeUIsR0FBSTFELEdBQUcsQ0FBQzZDLFlBQVlwSyxHQUFHcUssWUFBWUosR0FBR0ssV0FBV3RLLEdBQUc4SSxVQUFVYyxHQUFHVyxvQkFBb0JSLEdBQUdTLGdCQUFnQlgsR0FBR1ksUUFBUVAsR0FBR1EsV0FBV3RDLEdBQUd1QyxPQUFPbkIsR0FBR2IsU0FBUyxXQUFXLE9BQU9QLEdBQUdSLEtBQUtnRCxjQUFjWixHQUFHYSxpQkFBaUIsU0FBU2w1QixHQUFHLElBQUlDLEVBQUV3MkIsR0FBR1IsSUFBSS8xQixFQUFFRCxFQUFFLEdBQUdpQixFQUFFakIsRUFBRSxHQUE2RixPQUExRmc0QixJQUFHLFdBQVcsSUFBSWg0QixFQUFFKzBCLEdBQUdyZ0IsV0FBV3FnQixHQUFHcmdCLFdBQVcsRUFBRSxJQUFJelQsRUFBRWxCLEdBQUcsUUFBUWcxQixHQUFHcmdCLFdBQVcxVSxLQUFJLENBQUNELElBQVdFLEdBQUdpNUIsY0FBYyxXQUFXLElBQUluNUIsRUFBRXkyQixHQUFHUixJQUFJLEdBQUcsTUFBTSxDQUFDNEIsS0FBS3RtQixRQUNyZnZSLElBQUlvNUIsaUJBQWlCOUIsR0FBRytCLG9CQUFvQixXQUFXLE9BQU81QyxHQUFHUixJQUFJLElBQUlxRCwwQkFBeUIsR0FBSUUsR0FBRzEyQixFQUFHMjJCLGtCQUFrQnJMLElBQUcsRUFBRyxTQUFTc0wsR0FBRzE1QixFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBR2pCLEVBQUVvUixNQUFNLE9BQU9yUixFQUFFZ3pCLEdBQUcveUIsRUFBRSxLQUFLQyxFQUFFZ0IsR0FBRzZ4QixHQUFHOXlCLEVBQUVELEVBQUVxUixNQUFNblIsRUFBRWdCLEdBQUcsU0FBU3k0QixHQUFHMzVCLEVBQUVDLEVBQUVDLEVBQUVnQixFQUFFQyxHQUFHakIsRUFBRUEsRUFBRXNGLE9BQU8sSUFBSXBFLEVBQUVuQixFQUFFOHhCLElBQThCLE9BQTFCL0QsR0FBRy90QixFQUFFa0IsR0FBR0QsRUFBRXUwQixHQUFHejFCLEVBQUVDLEVBQUVDLEVBQUVnQixFQUFFRSxFQUFFRCxHQUFNLE9BQU9uQixHQUFJb3VCLElBQTBFbnVCLEVBQUU4USxPQUFPLEVBQUUyb0IsR0FBRzE1QixFQUFFQyxFQUFFaUIsRUFBRUMsR0FBVWxCLEVBQUVvUixRQUFoR3BSLEVBQUUydUIsWUFBWTV1QixFQUFFNHVCLFlBQVkzdUIsRUFBRThRLFFBQVEsSUFBSS9RLEVBQUVtdUIsUUFBUWh0QixFQUFFeTRCLEdBQUc1NUIsRUFBRUMsRUFBRWtCLElBQ3hXLFNBQVMwNEIsR0FBRzc1QixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsRUFBRUMsR0FBRyxHQUFHLE9BQU9wQixFQUFFLENBQUMsSUFBSTFGLEVBQUU0RixFQUFFd0IsS0FBSyxNQUFHLG1CQUFvQnBILEdBQUl3L0IsR0FBR3gvQixTQUFJLElBQVNBLEVBQUVnekIsY0FBYyxPQUFPcHRCLEVBQUU2NUIsY0FBUyxJQUFTNzVCLEVBQUVvdEIsZUFBc0R0dEIsRUFBRTB5QixHQUFHeHlCLEVBQUV3QixLQUFLLEtBQUtSLEVBQUVqQixFQUFFQSxFQUFFd3lCLEtBQUtyeEIsSUFBSzJ3QixJQUFJOXhCLEVBQUU4eEIsSUFBSS94QixFQUFFOFEsT0FBTzdRLEVBQVNBLEVBQUVvUixNQUFNclIsSUFBdkdDLEVBQUVzRixJQUFJLEdBQUd0RixFQUFFeUIsS0FBS3BILEVBQUUwL0IsR0FBR2g2QixFQUFFQyxFQUFFM0YsRUFBRTRHLEVBQUVDLEVBQUVDLElBQW9GLE9BQVY5RyxFQUFFMEYsRUFBRXFSLE1BQVMsSUFBS2xRLEVBQUVDLEtBQUtELEVBQUU3RyxFQUFFdzVCLGVBQTBCNXpCLEVBQUUsUUFBZEEsRUFBRUEsRUFBRTY1QixTQUFtQjc1QixFQUFFaWtCLElBQUtoakIsRUFBRUQsSUFBSWxCLEVBQUUreEIsTUFBTTl4QixFQUFFOHhCLEtBQVk2SCxHQUFHNTVCLEVBQUVDLEVBQUVtQixJQUFHbkIsRUFBRThRLE9BQU8sR0FBRS9RLEVBQUV1eUIsR0FBR2o0QixFQUFFNEcsSUFBSzZ3QixJQUFJOXhCLEVBQUU4eEIsSUFBSS94QixFQUFFOFEsT0FBTzdRLEVBQVNBLEVBQUVvUixNQUFNclIsR0FDbGIsU0FBU2c2QixHQUFHaDZCLEVBQUVDLEVBQUVDLEVBQUVnQixFQUFFQyxFQUFFQyxHQUFHLEdBQUcsT0FBT3BCLEdBQUdta0IsR0FBR25rQixFQUFFOHpCLGNBQWM1eUIsSUFBSWxCLEVBQUUreEIsTUFBTTl4QixFQUFFOHhCLElBQUksSUFBRzNELElBQUcsRUFBRyxJQUFLaHRCLEVBQUVELEdBQXFDLE9BQU9sQixFQUFFa3VCLE1BQU1udUIsRUFBRW11QixNQUFNeUwsR0FBRzU1QixFQUFFQyxFQUFFbUIsR0FBaEUsSUFBYSxNQUFScEIsRUFBRStRLFNBQWVxZCxJQUFHLEdBQTBDLE9BQU82TCxHQUFHajZCLEVBQUVDLEVBQUVDLEVBQUVnQixFQUFFRSxHQUNuTCxTQUFTODRCLEdBQUdsNkIsRUFBRUMsRUFBRUMsR0FBRyxJQUFJZ0IsRUFBRWpCLEVBQUVxMEIsYUFBYW56QixFQUFFRCxFQUFFK0csU0FBUzdHLEVBQUUsT0FBT3BCLEVBQUVBLEVBQUVpUixjQUFjLEtBQUssR0FBRyxXQUFXL1AsRUFBRXV4QixNQUFNLGtDQUFrQ3Z4QixFQUFFdXhCLEtBQUssR0FBRyxJQUFZLEVBQVB4eUIsRUFBRXd5QixNQUFReHlCLEVBQUVnUixjQUFjLENBQUNrcEIsVUFBVSxHQUFHQyxHQUFHbjZCLEVBQUVDLE9BQVEsSUFBRyxJQUFPLFdBQUZBLEdBQThFLE9BQU9GLEVBQUUsT0FBT29CLEVBQUVBLEVBQUUrNEIsVUFBVWo2QixFQUFFQSxFQUFFRCxFQUFFa3VCLE1BQU1sdUIsRUFBRTh0QixXQUFXLFdBQVc5dEIsRUFBRWdSLGNBQWMsQ0FBQ2twQixVQUFVbjZCLEdBQUdvNkIsR0FBR242QixFQUFFRCxHQUFHLEtBQXhLQyxFQUFFZ1IsY0FBYyxDQUFDa3BCLFVBQVUsR0FBR0MsR0FBR242QixFQUFFLE9BQU9tQixFQUFFQSxFQUFFKzRCLFVBQVVqNkIsUUFBMEgsT0FBT2tCLEdBQUdGLEVBQUVFLEVBQUUrNEIsVUFBVWo2QixFQUFFRCxFQUFFZ1IsY0FBYyxNQUFNL1AsRUFBRWhCLEVBQUVrNkIsR0FBR242QixFQUFFaUIsR0FBZSxPQUFadzRCLEdBQUcxNUIsRUFBRUMsRUFBRWtCLEVBQUVqQixHQUFVRCxFQUFFb1IsTUFDMWUsU0FBU2dwQixHQUFHcjZCLEVBQUVDLEdBQUcsSUFBSUMsRUFBRUQsRUFBRTh4QixLQUFPLE9BQU8veEIsR0FBRyxPQUFPRSxHQUFHLE9BQU9GLEdBQUdBLEVBQUUreEIsTUFBTTd4QixLQUFFRCxFQUFFOFEsT0FBTyxLQUFJLFNBQVNrcEIsR0FBR2o2QixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsR0FBRyxJQUFJQyxFQUFFb3BCLEdBQUd0cUIsR0FBR2lxQixHQUFHRixHQUFFMVksUUFBNEMsT0FBcENuUSxFQUFFZ3BCLEdBQUducUIsRUFBRW1CLEdBQUc0c0IsR0FBRy90QixFQUFFa0IsR0FBR2pCLEVBQUV1MUIsR0FBR3oxQixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUUsRUFBRUQsR0FBTSxPQUFPbkIsR0FBSW91QixJQUEwRW51QixFQUFFOFEsT0FBTyxFQUFFMm9CLEdBQUcxNUIsRUFBRUMsRUFBRUMsRUFBRWlCLEdBQVVsQixFQUFFb1IsUUFBaEdwUixFQUFFMnVCLFlBQVk1dUIsRUFBRTR1QixZQUFZM3VCLEVBQUU4USxRQUFRLElBQUkvUSxFQUFFbXVCLFFBQVFodEIsRUFBRXk0QixHQUFHNTVCLEVBQUVDLEVBQUVrQixJQUM5UCxTQUFTbTVCLEdBQUd0NkIsRUFBRUMsRUFBRUMsRUFBRWdCLEVBQUVDLEdBQUcsR0FBR3FwQixHQUFHdHFCLEdBQUcsQ0FBQyxJQUFJa0IsR0FBRSxFQUFHMHBCLEdBQUc3cUIsUUFBUW1CLEdBQUUsRUFBVyxHQUFSNHNCLEdBQUcvdEIsRUFBRWtCLEdBQU0sT0FBT2xCLEVBQUVpUCxVQUFVLE9BQU9sUCxJQUFJQSxFQUFFNlEsVUFBVSxLQUFLNVEsRUFBRTRRLFVBQVUsS0FBSzVRLEVBQUU4USxPQUFPLEdBQUdpZ0IsR0FBRy93QixFQUFFQyxFQUFFZ0IsR0FBR3F3QixHQUFHdHhCLEVBQUVDLEVBQUVnQixFQUFFQyxHQUFHRCxHQUFFLE9BQVEsR0FBRyxPQUFPbEIsRUFBRSxDQUFDLElBQUkxRixFQUFFMkYsRUFBRWlQLFVBQVU5SixFQUFFbkYsRUFBRTZ6QixjQUFjeDVCLEVBQUV3RCxNQUFNc0gsRUFBRSxJQUFJRCxFQUFFN0ssRUFBRWcwQixRQUFRbmUsRUFBRWpRLEVBQUUrd0IsWUFBMEM5Z0IsRUFBOUIsaUJBQWtCQSxHQUFHLE9BQU9BLEVBQUlrZSxHQUFHbGUsR0FBMkJpYSxHQUFHbnFCLEVBQTFCa1EsRUFBRXFhLEdBQUd0cUIsR0FBR2lxQixHQUFHRixHQUFFMVksU0FBbUIsSUFBSS9VLEVBQUUwRCxFQUFFc3hCLHlCQUF5QjdCLEVBQUUsbUJBQW9CbnpCLEdBQUcsbUJBQW9CbEMsRUFBRW0zQix3QkFBd0I5QixHQUFHLG1CQUFvQnIxQixFQUFFZzNCLGtDQUNwZCxtQkFBb0JoM0IsRUFBRSsyQiw0QkFBNEJqc0IsSUFBSWxFLEdBQUdpRSxJQUFJZ0wsSUFBSWloQixHQUFHbnhCLEVBQUUzRixFQUFFNEcsRUFBRWlQLEdBQUd1ZSxJQUFHLEVBQUcsSUFBSWtCLEVBQUUzdkIsRUFBRWdSLGNBQWMzVyxFQUFFNDJCLE1BQU10QixFQUFFRixHQUFHenZCLEVBQUVpQixFQUFFNUcsRUFBRTZHLEdBQUdnRSxFQUFFbEYsRUFBRWdSLGNBQWM3TCxJQUFJbEUsR0FBRzB1QixJQUFJenFCLEdBQUcra0IsR0FBRTNZLFNBQVNtZCxJQUFJLG1CQUFvQmx5QixJQUFJMnpCLEdBQUdsd0IsRUFBRUMsRUFBRTFELEVBQUUwRSxHQUFHaUUsRUFBRWxGLEVBQUVnUixnQkFBZ0I3TCxFQUFFc3BCLElBQUltQyxHQUFHNXdCLEVBQUVDLEVBQUVrRixFQUFFbEUsRUFBRTB1QixFQUFFenFCLEVBQUVnTCxLQUFLd2YsR0FBRyxtQkFBb0JyMUIsRUFBRW8zQiwyQkFBMkIsbUJBQW9CcDNCLEVBQUVxM0IscUJBQXFCLG1CQUFvQnIzQixFQUFFcTNCLG9CQUFvQnIzQixFQUFFcTNCLHFCQUFxQixtQkFBb0JyM0IsRUFBRW8zQiwyQkFBMkJwM0IsRUFBRW8zQiw2QkFBNkIsbUJBQ3plcDNCLEVBQUVzM0Isb0JBQW9CM3hCLEVBQUU4USxPQUFPLEtBQUssbUJBQW9CelcsRUFBRXMzQixvQkFBb0IzeEIsRUFBRThRLE9BQU8sR0FBRzlRLEVBQUU2ekIsY0FBYzV5QixFQUFFakIsRUFBRWdSLGNBQWM5TCxHQUFHN0ssRUFBRXdELE1BQU1vRCxFQUFFNUcsRUFBRTQyQixNQUFNL3JCLEVBQUU3SyxFQUFFZzBCLFFBQVFuZSxFQUFFalAsRUFBRWtFLElBQUksbUJBQW9COUssRUFBRXMzQixvQkFBb0IzeEIsRUFBRThRLE9BQU8sR0FBRzdQLEdBQUUsT0FBUSxDQUFDNUcsRUFBRTJGLEVBQUVpUCxVQUFVaWdCLEdBQUdudkIsRUFBRUMsR0FBR21GLEVBQUVuRixFQUFFNnpCLGNBQWMzakIsRUFBRWxRLEVBQUV5QixPQUFPekIsRUFBRWQsWUFBWWlHLEVBQUVpb0IsR0FBR3B0QixFQUFFeUIsS0FBSzBELEdBQUc5SyxFQUFFd0QsTUFBTXFTLEVBQUV3ZixFQUFFMXZCLEVBQUVxMEIsYUFBYTFFLEVBQUV0MUIsRUFBRWcwQixRQUFzRG5wQixFQUE5QixpQkFBaEJBLEVBQUVqRixFQUFFK3dCLGNBQWlDLE9BQU85ckIsRUFBSWtwQixHQUFHbHBCLEdBQTJCaWxCLEdBQUducUIsRUFBMUJrRixFQUFFcWxCLEdBQUd0cUIsR0FBR2lxQixHQUFHRixHQUFFMVksU0FBbUIsSUFBSXNlLEVBQUUzdkIsRUFBRXN4QiwwQkFBMEJoMUIsRUFBRSxtQkFBb0JxekIsR0FDbmYsbUJBQW9CdjFCLEVBQUVtM0IsMEJBQTBCLG1CQUFvQm4zQixFQUFFZzNCLGtDQUFrQyxtQkFBb0JoM0IsRUFBRSsyQiw0QkFBNEJqc0IsSUFBSXVxQixHQUFHQyxJQUFJenFCLElBQUlpc0IsR0FBR254QixFQUFFM0YsRUFBRTRHLEVBQUVpRSxHQUFHdXBCLElBQUcsRUFBR2tCLEVBQUUzdkIsRUFBRWdSLGNBQWMzVyxFQUFFNDJCLE1BQU10QixFQUFFRixHQUFHenZCLEVBQUVpQixFQUFFNUcsRUFBRTZHLEdBQUcsSUFBSWttQixFQUFFcG5CLEVBQUVnUixjQUFjN0wsSUFBSXVxQixHQUFHQyxJQUFJdkksR0FBRzZDLEdBQUUzWSxTQUFTbWQsSUFBSSxtQkFBb0JtQixJQUFJTSxHQUFHbHdCLEVBQUVDLEVBQUUydkIsRUFBRTN1QixHQUFHbW1CLEVBQUVwbkIsRUFBRWdSLGdCQUFnQmQsRUFBRXVlLElBQUltQyxHQUFHNXdCLEVBQUVDLEVBQUVpUSxFQUFFalAsRUFBRTB1QixFQUFFdkksRUFBRWxpQixLQUFLM0ksR0FBRyxtQkFBb0JsQyxFQUFFaWdDLDRCQUE0QixtQkFBb0JqZ0MsRUFBRWtnQyxzQkFBc0IsbUJBQW9CbGdDLEVBQUVrZ0MscUJBQXFCbGdDLEVBQUVrZ0Msb0JBQW9CdDVCLEVBQzFnQm1tQixFQUFFbGlCLEdBQUcsbUJBQW9CN0ssRUFBRWlnQyw0QkFBNEJqZ0MsRUFBRWlnQywyQkFBMkJyNUIsRUFBRW1tQixFQUFFbGlCLElBQUksbUJBQW9CN0ssRUFBRW1nQyxxQkFBcUJ4NkIsRUFBRThRLE9BQU8sR0FBRyxtQkFBb0J6VyxFQUFFbTNCLDBCQUEwQnh4QixFQUFFOFEsT0FBTyxPQUFPLG1CQUFvQnpXLEVBQUVtZ0Msb0JBQW9CcjFCLElBQUlwRixFQUFFOHpCLGVBQWVsRSxJQUFJNXZCLEVBQUVpUixnQkFBZ0JoUixFQUFFOFEsT0FBTyxHQUFHLG1CQUFvQnpXLEVBQUVtM0IseUJBQXlCcnNCLElBQUlwRixFQUFFOHpCLGVBQWVsRSxJQUFJNXZCLEVBQUVpUixnQkFBZ0JoUixFQUFFOFEsT0FBTyxLQUFLOVEsRUFBRTZ6QixjQUFjNXlCLEVBQUVqQixFQUFFZ1IsY0FBY29XLEdBQUcvc0IsRUFBRXdELE1BQU1vRCxFQUFFNUcsRUFBRTQyQixNQUFNN0osRUFBRS9zQixFQUFFZzBCLFFBQVFucEIsRUFBRWpFLEVBQUVpUCxJQUFJLG1CQUFvQjdWLEVBQUVtZ0Msb0JBQzdmcjFCLElBQUlwRixFQUFFOHpCLGVBQWVsRSxJQUFJNXZCLEVBQUVpUixnQkFBZ0JoUixFQUFFOFEsT0FBTyxHQUFHLG1CQUFvQnpXLEVBQUVtM0IseUJBQXlCcnNCLElBQUlwRixFQUFFOHpCLGVBQWVsRSxJQUFJNXZCLEVBQUVpUixnQkFBZ0JoUixFQUFFOFEsT0FBTyxLQUFLN1AsR0FBRSxHQUFJLE9BQU93NUIsR0FBRzE2QixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUUsRUFBRUQsR0FDekwsU0FBU3U1QixHQUFHMTZCLEVBQUVDLEVBQUVDLEVBQUVnQixFQUFFQyxFQUFFQyxHQUFHaTVCLEdBQUdyNkIsRUFBRUMsR0FBRyxJQUFJM0YsRUFBRSxJQUFhLEdBQVIyRixFQUFFOFEsT0FBVSxJQUFJN1AsSUFBSTVHLEVBQUUsT0FBTzZHLEdBQUc2cEIsR0FBRy9xQixFQUFFQyxHQUFFLEdBQUkwNUIsR0FBRzU1QixFQUFFQyxFQUFFbUIsR0FBR0YsRUFBRWpCLEVBQUVpUCxVQUFVc3FCLEdBQUdqb0IsUUFBUXRSLEVBQUUsSUFBSW1GLEVBQUU5SyxHQUFHLG1CQUFvQjRGLEVBQUV5NkIseUJBQXlCLEtBQUt6NUIsRUFBRXNFLFNBQXdJLE9BQS9IdkYsRUFBRThRLE9BQU8sRUFBRSxPQUFPL1EsR0FBRzFGLEdBQUcyRixFQUFFb1IsTUFBTTBoQixHQUFHOXlCLEVBQUVELEVBQUVxUixNQUFNLEtBQUtqUSxHQUFHbkIsRUFBRW9SLE1BQU0waEIsR0FBRzl5QixFQUFFLEtBQUttRixFQUFFaEUsSUFBSXM0QixHQUFHMTVCLEVBQUVDLEVBQUVtRixFQUFFaEUsR0FBR25CLEVBQUVnUixjQUFjL1AsRUFBRWd3QixNQUFNL3ZCLEdBQUc2cEIsR0FBRy9xQixFQUFFQyxHQUFFLEdBQVdELEVBQUVvUixNQUFNLFNBQVN1cEIsR0FBRzU2QixHQUFHLElBQUlDLEVBQUVELEVBQUVrUCxVQUFValAsRUFBRTQ2QixlQUFlbFEsR0FBRzNxQixFQUFFQyxFQUFFNDZCLGVBQWU1NkIsRUFBRTQ2QixpQkFBaUI1NkIsRUFBRXF1QixTQUFTcnVCLEVBQUVxdUIsU0FBUzNELEdBQUczcUIsRUFBRUMsRUFBRXF1QixTQUFRLEdBQUlnRixHQUFHdHpCLEVBQUVDLEVBQUV1VCxlQUM3ZCxJQVMwVnNuQixHQUFNQyxHQUFHQyxHQVQvVkMsR0FBRyxDQUFDL3BCLFdBQVcsS0FBS2dxQixVQUFVLEdBQ2xDLFNBQVNDLEdBQUduN0IsRUFBRUMsRUFBRUMsR0FBRyxJQUFzQzVGLEVBQWxDNEcsRUFBRWpCLEVBQUVxMEIsYUFBYW56QixFQUFFeXlCLEdBQUVyaUIsUUFBUW5RLEdBQUUsRUFBNk0sT0FBdk05RyxFQUFFLElBQWEsR0FBUjJGLEVBQUU4USxVQUFhelcsR0FBRSxPQUFPMEYsR0FBRyxPQUFPQSxFQUFFaVIsZ0JBQWlCLElBQU8sRUFBRjlQLElBQU03RyxHQUFHOEcsR0FBRSxFQUFHbkIsRUFBRThRLFFBQVEsSUFBSSxPQUFPL1EsR0FBRyxPQUFPQSxFQUFFaVIsb0JBQWUsSUFBUy9QLEVBQUVrNkIsV0FBVSxJQUFLbDZCLEVBQUVtNkIsNkJBQTZCbDZCLEdBQUcsR0FBRzRvQixHQUFFNkosR0FBSSxFQUFGenlCLEdBQVEsT0FBT25CLFFBQUcsSUFBU2tCLEVBQUVrNkIsVUFBVTdHLEdBQUd0MEIsR0FBR0QsRUFBRWtCLEVBQUUrRyxTQUFTOUcsRUFBRUQsRUFBRWs2QixTQUFZaDZCLEdBQVNwQixFQUFFczdCLEdBQUdyN0IsRUFBRUQsRUFBRW1CLEVBQUVqQixHQUFHRCxFQUFFb1IsTUFBTUosY0FBYyxDQUFDa3BCLFVBQVVqNkIsR0FBR0QsRUFBRWdSLGNBQWNncUIsR0FBR2o3QixHQUFLLGlCQUFrQmtCLEVBQUVxNkIsMkJBQWlDdjdCLEVBQUVzN0IsR0FBR3I3QixFQUFFRCxFQUFFbUIsRUFBRWpCLEdBQUdELEVBQUVvUixNQUFNSixjQUFjLENBQUNrcEIsVUFBVWo2QixHQUMvZkQsRUFBRWdSLGNBQWNncUIsR0FBR2g3QixFQUFFa3VCLE1BQU0sU0FBU251QixLQUFFRSxFQUFFczdCLEdBQUcsQ0FBQy9JLEtBQUssVUFBVXhxQixTQUFTakksR0FBR0MsRUFBRXd5QixLQUFLdnlCLEVBQUUsT0FBUTRRLE9BQU83USxFQUFTQSxFQUFFb1IsTUFBTW5SLEtBQVlGLEVBQUVpUixjQUFrQjdQLEdBQVNGLEVBR3pKLFNBQVlsQixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsR0FBRyxJQUFJQyxFQUFFbkIsRUFBRXd5QixLQUFLbjRCLEVBQUUwRixFQUFFcVIsTUFBTXJSLEVBQUUxRixFQUFFZ1gsUUFBUSxJQUFJbE0sRUFBRSxDQUFDcXRCLEtBQUssU0FBU3hxQixTQUFTL0gsR0FBb1MsT0FBalMsSUFBTyxFQUFGa0IsSUFBTW5CLEVBQUVvUixRQUFRL1csSUFBRzRGLEVBQUVELEVBQUVvUixPQUFRMGMsV0FBVyxFQUFFN3RCLEVBQUVvMEIsYUFBYWx2QixFQUFpQixRQUFmOUssRUFBRTRGLEVBQUVreUIsYUFBcUJueUIsRUFBRXF5QixZQUFZcHlCLEVBQUVveUIsWUFBWXJ5QixFQUFFbXlCLFdBQVc5M0IsRUFBRUEsRUFBRSszQixXQUFXLE1BQU1weUIsRUFBRXF5QixZQUFZcnlCLEVBQUVteUIsV0FBVyxNQUFNbHlCLEVBQUVxeUIsR0FBR2o0QixFQUFFOEssR0FBRyxPQUFPcEYsRUFBRWtCLEVBQUVxeEIsR0FBR3Z5QixFQUFFa0IsSUFBSUEsRUFBRTJ4QixHQUFHM3hCLEVBQUVFLEVBQUVELEVBQUUsT0FBUTRQLE9BQU8sRUFBRzdQLEVBQUU0UCxPQUFPN1EsRUFBRUMsRUFBRTRRLE9BQU83USxFQUFFQyxFQUFFb1IsUUFBUXBRLEVBQUVqQixFQUFFb1IsTUFBTW5SLEVBQVNnQixFQUh4T3U2QixDQUFHejdCLEVBQUVDLEVBQUVpQixFQUFFK0csU0FBUy9HLEVBQUVrNkIsU0FBU2w3QixHQUFHa0IsRUFBRW5CLEVBQUVvUixNQUFNbFEsRUFBRW5CLEVBQUVxUixNQUFNSixjQUFjN1AsRUFBRTZQLGNBQWMsT0FBTzlQLEVBQUUsQ0FBQ2c1QixVQUFVajZCLEdBQUcsQ0FBQ2k2QixVQUFVaDVCLEVBQUVnNUIsVUFBVWo2QixHQUFHa0IsRUFBRTJzQixXQUFXL3RCLEVBQUUrdEIsWUFBWTd0QixFQUFFRCxFQUFFZ1IsY0FBY2dxQixHQUFHLzVCLElBQUVoQixFQUVoVixTQUFZRixFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxJQUFJQyxFQUFFbkIsRUFBRXFSLE1BQWlMLE9BQTNLclIsRUFBRW1CLEVBQUVtUSxRQUFRcFIsRUFBRXF5QixHQUFHcHhCLEVBQUUsQ0FBQ3N4QixLQUFLLFVBQVV4cUIsU0FBUy9ILElBQUksSUFBWSxFQUFQRCxFQUFFd3lCLFFBQVV2eUIsRUFBRWl1QixNQUFNanRCLEdBQUdoQixFQUFFNFEsT0FBTzdRLEVBQUVDLEVBQUVvUixRQUFRLEtBQUssT0FBT3RSLElBQUlBLEVBQUVxeUIsV0FBVyxLQUFLcnlCLEVBQUUrUSxNQUFNLEVBQUU5USxFQUFFcXlCLFlBQVlyeUIsRUFBRW15QixXQUFXcHlCLEdBQVVDLEVBQUVvUixNQUFNblIsRUFGcUh3N0IsQ0FBRzE3QixFQUFFQyxFQUFFaUIsRUFBRStHLFNBQVMvSCxHQUFHRCxFQUFFZ1IsY0FBYyxLQUFZL1EsSUFDbFEsU0FBU283QixHQUFHdDdCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFHLElBQUlDLEVBQUVuQixFQUFFeXlCLEtBQUtyeEIsRUFBRXBCLEVBQUVxUixNQUF1SyxPQUFqS3BSLEVBQUUsQ0FBQ3d5QixLQUFLLFNBQVN4cUIsU0FBU2hJLEdBQUcsSUFBTyxFQUFGa0IsSUFBTSxPQUFPQyxHQUFHQSxFQUFFMnNCLFdBQVcsRUFBRTNzQixFQUFFa3pCLGFBQWFyMEIsR0FBR21CLEVBQUVvNkIsR0FBR3Y3QixFQUFFa0IsRUFBRSxFQUFFLE1BQU1qQixFQUFFMnlCLEdBQUczeUIsRUFBRWlCLEVBQUVELEVBQUUsTUFBTUUsRUFBRTBQLE9BQU85USxFQUFFRSxFQUFFNFEsT0FBTzlRLEVBQUVvQixFQUFFa1EsUUFBUXBSLEVBQUVGLEVBQUVxUixNQUFNalEsRUFBU2xCLEVBRWdELFNBQVN5N0IsR0FBRzM3QixFQUFFQyxHQUFHRCxFQUFFbXVCLE9BQU9sdUIsRUFBRSxJQUFJQyxFQUFFRixFQUFFNlEsVUFBVSxPQUFPM1EsSUFBSUEsRUFBRWl1QixPQUFPbHVCLEdBQUc2dEIsR0FBRzl0QixFQUFFOFEsT0FBTzdRLEdBQ3RkLFNBQVMyN0IsR0FBRzU3QixFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsRUFBRUMsR0FBRyxJQUFJOUcsRUFBRTBGLEVBQUVpUixjQUFjLE9BQU8zVyxFQUFFMEYsRUFBRWlSLGNBQWMsQ0FBQzRxQixZQUFZNTdCLEVBQUU2N0IsVUFBVSxLQUFLQyxtQkFBbUIsRUFBRUMsS0FBSzk2QixFQUFFKzZCLEtBQUsvN0IsRUFBRWc4QixTQUFTLzZCLEVBQUVpeEIsV0FBV2h4QixJQUFJOUcsRUFBRXVoQyxZQUFZNTdCLEVBQUUzRixFQUFFd2hDLFVBQVUsS0FBS3hoQyxFQUFFeWhDLG1CQUFtQixFQUFFemhDLEVBQUUwaEMsS0FBSzk2QixFQUFFNUcsRUFBRTJoQyxLQUFLLzdCLEVBQUU1RixFQUFFNGhDLFNBQVMvNkIsRUFBRTdHLEVBQUU4M0IsV0FBV2h4QixHQUN2USxTQUFTKzZCLEdBQUduOEIsRUFBRUMsRUFBRUMsR0FBRyxJQUFJZ0IsRUFBRWpCLEVBQUVxMEIsYUFBYW56QixFQUFFRCxFQUFFNnlCLFlBQVkzeUIsRUFBRUYsRUFBRSs2QixLQUFzQyxHQUFqQ3ZDLEdBQUcxNUIsRUFBRUMsRUFBRWlCLEVBQUUrRyxTQUFTL0gsR0FBa0IsSUFBTyxHQUF0QmdCLEVBQUUweUIsR0FBRXJpQixVQUFxQnJRLEVBQUksRUFBRkEsRUFBSSxFQUFFakIsRUFBRThRLE9BQU8sT0FBTyxDQUFDLEdBQUcsT0FBTy9RLEdBQUcsSUFBYSxHQUFSQSxFQUFFK1EsT0FBVS9RLEVBQUUsSUFBSUEsRUFBRUMsRUFBRW9SLE1BQU0sT0FBT3JSLEdBQUcsQ0FBQyxHQUFHLEtBQUtBLEVBQUV1RixJQUFJLE9BQU92RixFQUFFaVIsZUFBZTBxQixHQUFHMzdCLEVBQUVFLFFBQVEsR0FBRyxLQUFLRixFQUFFdUYsSUFBSW8yQixHQUFHMzdCLEVBQUVFLFFBQVEsR0FBRyxPQUFPRixFQUFFcVIsTUFBTSxDQUFDclIsRUFBRXFSLE1BQU1QLE9BQU85USxFQUFFQSxFQUFFQSxFQUFFcVIsTUFBTSxTQUFTLEdBQUdyUixJQUFJQyxFQUFFLE1BQU1ELEVBQUUsS0FBSyxPQUFPQSxFQUFFc1IsU0FBUyxDQUFDLEdBQUcsT0FBT3RSLEVBQUU4USxRQUFROVEsRUFBRThRLFNBQVM3USxFQUFFLE1BQU1ELEVBQUVBLEVBQUVBLEVBQUU4USxPQUFPOVEsRUFBRXNSLFFBQVFSLE9BQU85USxFQUFFOFEsT0FBTzlRLEVBQUVBLEVBQUVzUixRQUFRcFEsR0FBRyxFQUFTLEdBQVA2b0IsR0FBRTZKLEdBQUUxeUIsR0FBTSxJQUFZLEVBQVBqQixFQUFFd3lCLE1BQVF4eUIsRUFBRWdSLGNBQ3plLFVBQVUsT0FBTzlQLEdBQUcsSUFBSyxXQUFxQixJQUFWakIsRUFBRUQsRUFBRW9SLE1BQVVsUSxFQUFFLEtBQUssT0FBT2pCLEdBQWlCLFFBQWRGLEVBQUVFLEVBQUUyUSxZQUFvQixPQUFPZ2pCLEdBQUc3ekIsS0FBS21CLEVBQUVqQixHQUFHQSxFQUFFQSxFQUFFb1IsUUFBWSxRQUFKcFIsRUFBRWlCLElBQVlBLEVBQUVsQixFQUFFb1IsTUFBTXBSLEVBQUVvUixNQUFNLE9BQU9sUSxFQUFFakIsRUFBRW9SLFFBQVFwUixFQUFFb1IsUUFBUSxNQUFNc3FCLEdBQUczN0IsR0FBRSxFQUFHa0IsRUFBRWpCLEVBQUVrQixFQUFFbkIsRUFBRW15QixZQUFZLE1BQU0sSUFBSyxZQUE2QixJQUFqQmx5QixFQUFFLEtBQUtpQixFQUFFbEIsRUFBRW9SLE1BQVVwUixFQUFFb1IsTUFBTSxLQUFLLE9BQU9sUSxHQUFHLENBQWUsR0FBRyxRQUFqQm5CLEVBQUVtQixFQUFFMFAsWUFBdUIsT0FBT2dqQixHQUFHN3pCLEdBQUcsQ0FBQ0MsRUFBRW9SLE1BQU1sUSxFQUFFLE1BQU1uQixFQUFFbUIsRUFBRW1RLFFBQVFuUSxFQUFFbVEsUUFBUXBSLEVBQUVBLEVBQUVpQixFQUFFQSxFQUFFbkIsRUFBRTQ3QixHQUFHMzdCLEdBQUUsRUFBR0MsRUFBRSxLQUFLa0IsRUFBRW5CLEVBQUVteUIsWUFBWSxNQUFNLElBQUssV0FBV3dKLEdBQUczN0IsR0FBRSxFQUFHLEtBQUssVUFBSyxFQUFPQSxFQUFFbXlCLFlBQVksTUFBTSxRQUFRbnlCLEVBQUVnUixjQUFjLEtBQUssT0FBT2hSLEVBQUVvUixNQUMvZixTQUFTdW9CLEdBQUc1NUIsRUFBRUMsRUFBRUMsR0FBeUQsR0FBdEQsT0FBT0YsSUFBSUMsRUFBRWd1QixhQUFhanVCLEVBQUVpdUIsY0FBYzZCLElBQUk3dkIsRUFBRWt1QixNQUFTLElBQUtqdUIsRUFBRUQsRUFBRTh0QixZQUFZLENBQUMsR0FBRyxPQUFPL3RCLEdBQUdDLEVBQUVvUixRQUFRclIsRUFBRXFSLE1BQU0sTUFBTWpULE1BQU0yQixFQUFFLE1BQU0sR0FBRyxPQUFPRSxFQUFFb1IsTUFBTSxDQUE0QyxJQUFqQ25SLEVBQUVxeUIsR0FBWnZ5QixFQUFFQyxFQUFFb1IsTUFBYXJSLEVBQUVzMEIsY0FBY3IwQixFQUFFb1IsTUFBTW5SLEVBQU1BLEVBQUU0USxPQUFPN1EsRUFBRSxPQUFPRCxFQUFFc1IsU0FBU3RSLEVBQUVBLEVBQUVzUixTQUFRcFIsRUFBRUEsRUFBRW9SLFFBQVFpaEIsR0FBR3Z5QixFQUFFQSxFQUFFczBCLGVBQWdCeGpCLE9BQU83USxFQUFFQyxFQUFFb1IsUUFBUSxLQUFLLE9BQU9yUixFQUFFb1IsTUFBTSxPQUFPLEtBSzVQLFNBQVMrcUIsR0FBR3A4QixFQUFFQyxHQUFHLElBQUlpMEIsR0FBRyxPQUFPbDBCLEVBQUVrOEIsVUFBVSxJQUFLLFNBQVNqOEIsRUFBRUQsRUFBRWk4QixLQUFLLElBQUksSUFBSS83QixFQUFFLEtBQUssT0FBT0QsR0FBRyxPQUFPQSxFQUFFNFEsWUFBWTNRLEVBQUVELEdBQUdBLEVBQUVBLEVBQUVxUixRQUFRLE9BQU9wUixFQUFFRixFQUFFaThCLEtBQUssS0FBSy83QixFQUFFb1IsUUFBUSxLQUFLLE1BQU0sSUFBSyxZQUFZcFIsRUFBRUYsRUFBRWk4QixLQUFLLElBQUksSUFBSS82QixFQUFFLEtBQUssT0FBT2hCLEdBQUcsT0FBT0EsRUFBRTJRLFlBQVkzUCxFQUFFaEIsR0FBR0EsRUFBRUEsRUFBRW9SLFFBQVEsT0FBT3BRLEVBQUVqQixHQUFHLE9BQU9ELEVBQUVpOEIsS0FBS2o4QixFQUFFaThCLEtBQUssS0FBS2o4QixFQUFFaThCLEtBQUszcUIsUUFBUSxLQUFLcFEsRUFBRW9RLFFBQVEsTUFDN1osU0FBUytxQixHQUFHcjhCLEVBQUVDLEVBQUVDLEdBQUcsSUFBSWdCLEVBQUVqQixFQUFFcTBCLGFBQWEsT0FBT3IwQixFQUFFc0YsS0FBSyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssRUFBRSxLQUFLLEdBQUcsT0FBTyxLQUFLLEtBQUssRUFBRSxPQUFPaWxCLEdBQUd2cUIsRUFBRXlCLE9BQU9ncEIsS0FBSyxLQUFLLEtBQUssRUFBc0wsT0FBcEwrSSxLQUFLM0osR0FBRUksSUFBR0osR0FBRUcsSUFBRzJLLE1BQUsxekIsRUFBRWpCLEVBQUVpUCxXQUFZMnJCLGlCQUFpQjM1QixFQUFFb3RCLFFBQVFwdEIsRUFBRTI1QixlQUFlMzVCLEVBQUUyNUIsZUFBZSxNQUFTLE9BQU83NkIsR0FBRyxPQUFPQSxFQUFFcVIsUUFBTW9qQixHQUFHeDBCLEdBQUdBLEVBQUU4USxPQUFPLEVBQUU3UCxFQUFFcVMsVUFBVXRULEVBQUU4USxPQUFPLE1BQWtCLEtBQUssS0FBSyxFQUFFNGlCLEdBQUcxekIsR0FBRyxJQUFJa0IsRUFBRWt5QixHQUFHRCxHQUFHN2hCLFNBQWtCLEdBQVRyUixFQUFFRCxFQUFFeUIsS0FBUSxPQUFPMUIsR0FBRyxNQUFNQyxFQUFFaVAsVUFBVTZyQixHQUFHLzZCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFLbEIsRUFBRSt4QixNQUFNOXhCLEVBQUU4eEIsTUFBTTl4QixFQUFFOFEsT0FBTyxTQUFTLENBQUMsSUFBSTdQLEVBQUUsQ0FBQyxHQUFHLE9BQzdmakIsRUFBRWlQLFVBQVUsTUFBTTlRLE1BQU0yQixFQUFFLE1BQU0sT0FBTyxLQUFzQixHQUFqQkMsRUFBRXF6QixHQUFHSCxHQUFHM2hCLFNBQVlrakIsR0FBR3gwQixHQUFHLENBQUNpQixFQUFFakIsRUFBRWlQLFVBQVVoUCxFQUFFRCxFQUFFeUIsS0FBSyxJQUFJTixFQUFFbkIsRUFBRTZ6QixjQUE4QixPQUFoQjV5QixFQUFFc29CLElBQUl2cEIsRUFBRWlCLEVBQUV1b0IsSUFBSXJvQixFQUFTbEIsR0FBRyxJQUFLLFNBQVN3bUIsR0FBRSxTQUFTeGxCLEdBQUd3bEIsR0FBRSxRQUFReGxCLEdBQUcsTUFBTSxJQUFLLFNBQVMsSUFBSyxTQUFTLElBQUssUUFBUXdsQixHQUFFLE9BQU94bEIsR0FBRyxNQUFNLElBQUssUUFBUSxJQUFLLFFBQVEsSUFBSWxCLEVBQUUsRUFBRUEsRUFBRW1tQixHQUFHdnRCLE9BQU9vSCxJQUFJMG1CLEdBQUVQLEdBQUdubUIsR0FBR2tCLEdBQUcsTUFBTSxJQUFLLFNBQVN3bEIsR0FBRSxRQUFReGxCLEdBQUcsTUFBTSxJQUFLLE1BQU0sSUFBSyxRQUFRLElBQUssT0FBT3dsQixHQUFFLFFBQVF4bEIsR0FBR3dsQixHQUFFLE9BQU94bEIsR0FBRyxNQUFNLElBQUssVUFBVXdsQixHQUFFLFNBQVN4bEIsR0FBRyxNQUFNLElBQUssUUFBUXNHLEdBQUd0RyxFQUFFRSxHQUFHc2xCLEdBQUUsVUFBVXhsQixHQUFHLE1BQU0sSUFBSyxTQUFTQSxFQUFFb0csY0FDNWYsQ0FBQ2cxQixjQUFjbDdCLEVBQUVtN0IsVUFBVTdWLEdBQUUsVUFBVXhsQixHQUFHLE1BQU0sSUFBSyxXQUFXeUgsR0FBR3pILEVBQUVFLEdBQUdzbEIsR0FBRSxVQUFVeGxCLEdBQWtCLElBQUksSUFBSTVHLEtBQXZCZ1UsR0FBR3BPLEVBQUVrQixHQUFHcEIsRUFBRSxLQUFrQm9CLEVBQUVBLEVBQUUxRixlQUFlcEIsS0FBSzZHLEVBQUVDLEVBQUU5RyxHQUFHLGFBQWFBLEVBQUUsaUJBQWtCNkcsRUFBRUQsRUFBRThILGNBQWM3SCxJQUFJbkIsRUFBRSxDQUFDLFdBQVdtQixJQUFJLGlCQUFrQkEsR0FBR0QsRUFBRThILGNBQWMsR0FBRzdILElBQUluQixFQUFFLENBQUMsV0FBVyxHQUFHbUIsSUFBSWIsRUFBRzVFLGVBQWVwQixJQUFJLE1BQU02RyxHQUFHLGFBQWE3RyxHQUFHb3NCLEdBQUUsU0FBU3hsQixJQUFJLE9BQU9oQixHQUFHLElBQUssUUFBUWdHLEVBQUdoRixHQUFHNEcsR0FBRzVHLEVBQUVFLEdBQUUsR0FBSSxNQUFNLElBQUssV0FBVzhFLEVBQUdoRixHQUFHNkgsR0FBRzdILEdBQUcsTUFBTSxJQUFLLFNBQVMsSUFBSyxTQUFTLE1BQU0sUUFBUSxtQkFBb0JFLEVBQUVvN0IsVUFBVXQ3QixFQUFFdTdCLFFBQ3RmaFUsSUFBSXZuQixFQUFFbEIsRUFBRUMsRUFBRTJ1QixZQUFZMXRCLEVBQUUsT0FBT0EsSUFBSWpCLEVBQUU4USxPQUFPLE9BQU8sQ0FBaVosT0FBaFp6VyxFQUFFLElBQUk2RyxFQUFFOEksU0FBUzlJLEVBQUVBLEVBQUU0RyxjQUFjL0gsSUFBSWlKLEtBQVVqSixFQUFFa0osR0FBR2hKLElBQUlGLElBQUlpSixHQUFRLFdBQVcvSSxJQUFHRixFQUFFMUYsRUFBRXNHLGNBQWMsUUFBUzJJLFVBQVUscUJBQXVCdkosRUFBRUEsRUFBRTJKLFlBQVkzSixFQUFFMEosYUFBYSxpQkFBa0J4SSxFQUFFc04sR0FBR3hPLEVBQUUxRixFQUFFc0csY0FBY1YsRUFBRSxDQUFDc08sR0FBR3ROLEVBQUVzTixNQUFNeE8sRUFBRTFGLEVBQUVzRyxjQUFjVixHQUFHLFdBQVdBLElBQUk1RixFQUFFMEYsRUFBRWtCLEVBQUVxN0IsU0FBU2ppQyxFQUFFaWlDLFVBQVMsRUFBR3I3QixFQUFFdzdCLE9BQU9waUMsRUFBRW9pQyxLQUFLeDdCLEVBQUV3N0IsUUFBUTE4QixFQUFFMUYsRUFBRXFpQyxnQkFBZ0IzOEIsRUFBRUUsR0FBR0YsRUFBRXdwQixJQUFJdnBCLEVBQUVELEVBQUV5cEIsSUFBSXZvQixFQUFFNDVCLEdBQUc5NkIsRUFBRUMsR0FBU0EsRUFBRWlQLFVBQVVsUCxFQUFFMUYsRUFBRWlVLEdBQUdyTyxFQUFFZ0IsR0FBVWhCLEdBQUcsSUFBSyxTQUFTd21CLEdBQUUsU0FBUzFtQixHQUFHMG1CLEdBQUUsUUFBUTFtQixHQUNwZm1CLEVBQUVELEVBQUUsTUFBTSxJQUFLLFNBQVMsSUFBSyxTQUFTLElBQUssUUFBUXdsQixHQUFFLE9BQU8xbUIsR0FBR21CLEVBQUVELEVBQUUsTUFBTSxJQUFLLFFBQVEsSUFBSyxRQUFRLElBQUlDLEVBQUUsRUFBRUEsRUFBRWdsQixHQUFHdnRCLE9BQU91SSxJQUFJdWxCLEdBQUVQLEdBQUdobEIsR0FBR25CLEdBQUdtQixFQUFFRCxFQUFFLE1BQU0sSUFBSyxTQUFTd2xCLEdBQUUsUUFBUTFtQixHQUFHbUIsRUFBRUQsRUFBRSxNQUFNLElBQUssTUFBTSxJQUFLLFFBQVEsSUFBSyxPQUFPd2xCLEdBQUUsUUFBUTFtQixHQUFHMG1CLEdBQUUsT0FBTzFtQixHQUFHbUIsRUFBRUQsRUFBRSxNQUFNLElBQUssVUFBVXdsQixHQUFFLFNBQVMxbUIsR0FBR21CLEVBQUVELEVBQUUsTUFBTSxJQUFLLFFBQVFzRyxHQUFHeEgsRUFBRWtCLEdBQUdDLEVBQUVnRyxFQUFHbkgsRUFBRWtCLEdBQUd3bEIsR0FBRSxVQUFVMW1CLEdBQUcsTUFBTSxJQUFLLFNBQVNtQixFQUFFNkcsR0FBR2hJLEVBQUVrQixHQUFHLE1BQU0sSUFBSyxTQUFTbEIsRUFBRXNILGNBQWMsQ0FBQ2cxQixjQUFjcDdCLEVBQUVxN0IsVUFBVXA3QixFQUFFdEIsRUFBRSxHQUFHcUIsRUFBRSxDQUFDNkYsV0FBTSxJQUFTMmYsR0FBRSxVQUFVMW1CLEdBQUcsTUFBTSxJQUFLLFdBQVcySSxHQUFHM0ksRUFBRWtCLEdBQUdDLEVBQ3Bmc0gsR0FBR3pJLEVBQUVrQixHQUFHd2xCLEdBQUUsVUFBVTFtQixHQUFHLE1BQU0sUUFBUW1CLEVBQUVELEVBQUVvTixHQUFHcE8sRUFBRWlCLEdBQUcsSUFBSWlFLEVBQUVqRSxFQUFFLElBQUlDLEtBQUtnRSxFQUFFLEdBQUdBLEVBQUUxSixlQUFlMEYsR0FBRyxDQUFDLElBQUkrRCxFQUFFQyxFQUFFaEUsR0FBRyxVQUFVQSxFQUFFNEwsR0FBR2hOLEVBQUVtRixHQUFHLDRCQUE0Qi9ELEVBQXVCLE9BQXBCK0QsRUFBRUEsRUFBRUEsRUFBRTRqQixZQUFPLElBQWdCMWYsR0FBR3JKLEVBQUVtRixHQUFJLGFBQWEvRCxFQUFFLGlCQUFrQitELEdBQUcsYUFBYWpGLEdBQUcsS0FBS2lGLElBQUk0RSxHQUFHL0osRUFBRW1GLEdBQUcsaUJBQWtCQSxHQUFHNEUsR0FBRy9KLEVBQUUsR0FBR21GLEdBQUcsbUNBQW1DL0QsR0FBRyw2QkFBNkJBLEdBQUcsY0FBY0EsSUFBSWQsRUFBRzVFLGVBQWUwRixHQUFHLE1BQU0rRCxHQUFHLGFBQWEvRCxHQUFHc2xCLEdBQUUsU0FBUzFtQixHQUFHLE1BQU1tRixHQUFHakQsRUFBR2xDLEVBQUVvQixFQUFFK0QsRUFBRTdLLElBQUksT0FBTzRGLEdBQUcsSUFBSyxRQUFRZ0csRUFBR2xHLEdBQUc4SCxHQUFHOUgsRUFBRWtCLEdBQUUsR0FDbmYsTUFBTSxJQUFLLFdBQVdnRixFQUFHbEcsR0FBRytJLEdBQUcvSSxHQUFHLE1BQU0sSUFBSyxTQUFTLE1BQU1rQixFQUFFNkYsT0FBTy9HLEVBQUUwQyxhQUFhLFFBQVEsR0FBR3FELEVBQUc3RSxFQUFFNkYsUUFBUSxNQUFNLElBQUssU0FBUy9HLEVBQUV1OEIsV0FBV3I3QixFQUFFcTdCLFNBQW1CLE9BQVZuN0IsRUFBRUYsRUFBRTZGLE9BQWNxQixHQUFHcEksSUFBSWtCLEVBQUVxN0IsU0FBU243QixHQUFFLEdBQUksTUFBTUYsRUFBRW1HLGNBQWNlLEdBQUdwSSxJQUFJa0IsRUFBRXE3QixTQUFTcjdCLEVBQUVtRyxjQUFhLEdBQUksTUFBTSxRQUFRLG1CQUFvQmxHLEVBQUVxN0IsVUFBVXg4QixFQUFFeThCLFFBQVFoVSxJQUFJRyxHQUFHMW9CLEVBQUVnQixLQUFLakIsRUFBRThRLE9BQU8sR0FBRyxPQUFPOVEsRUFBRTh4QixNQUFNOXhCLEVBQUU4USxPQUFPLEtBQUssT0FBTyxLQUFLLEtBQUssRUFBRSxHQUFHL1EsR0FBRyxNQUFNQyxFQUFFaVAsVUFBVThyQixHQUFHaDdCLEVBQUVDLEVBQUVELEVBQUU4ekIsY0FBYzV5QixPQUFPLENBQUMsR0FBRyxpQkFBa0JBLEdBQUcsT0FBT2pCLEVBQUVpUCxVQUFVLE1BQU05USxNQUFNMkIsRUFBRSxNQUMvZUcsRUFBRW16QixHQUFHRCxHQUFHN2hCLFNBQVM4aEIsR0FBR0gsR0FBRzNoQixTQUFTa2pCLEdBQUd4MEIsSUFBSWlCLEVBQUVqQixFQUFFaVAsVUFBVWhQLEVBQUVELEVBQUU2ekIsY0FBYzV5QixFQUFFc29CLElBQUl2cEIsRUFBRWlCLEVBQUVnSixZQUFZaEssSUFBSUQsRUFBRThRLE9BQU8sTUFBSzdQLEdBQUcsSUFBSWhCLEVBQUUrSixTQUFTL0osRUFBRUEsRUFBRTZILGVBQWUzTSxlQUFlOEYsSUFBS3NvQixJQUFJdnBCLEVBQUVBLEVBQUVpUCxVQUFVaE8sR0FBRyxPQUFPLEtBQUssS0FBSyxHQUEwQixPQUF2QjRvQixHQUFFOEosSUFBRzF5QixFQUFFakIsRUFBRWdSLGNBQWlCLElBQWEsR0FBUmhSLEVBQUU4USxRQUFpQjlRLEVBQUVrdUIsTUFBTWp1QixFQUFFRCxJQUFFaUIsRUFBRSxPQUFPQSxFQUFFaEIsR0FBRSxFQUFHLE9BQU9GLE9BQUUsSUFBU0MsRUFBRTZ6QixjQUFjc0gsVUFBVTNHLEdBQUd4MEIsR0FBR0MsRUFBRSxPQUFPRixFQUFFaVIsY0FBaUIvUCxJQUFJaEIsR0FBRyxJQUFZLEVBQVBELEVBQUV3eUIsUUFBVyxPQUFPenlCLElBQUcsSUFBS0MsRUFBRTZ6QixjQUFjdUgsNEJBQTRCLElBQWUsRUFBVnpILEdBQUVyaUIsU0FBVyxJQUFJcXJCLEtBQUlBLEdBQUUsSUFBVyxJQUFJQSxJQUFHLElBQUlBLEtBQUVBLEdBQ3JmLEdBQUUsT0FBTzdGLElBQUcsSUFBUSxVQUFIakgsS0FBZSxJQUFRLFVBQUgrTSxLQUFlQyxHQUFHL0YsR0FBRWdHLE9BQU03N0IsR0FBR2hCLEtBQUVELEVBQUU4USxPQUFPLEdBQVMsTUFBSyxLQUFLLEVBQUUsT0FBTzBpQixLQUFXLE9BQU96ekIsR0FBR2duQixHQUFHL21CLEVBQUVpUCxVQUFVc0UsZUFBZSxLQUFLLEtBQUssR0FBRyxPQUFPb2EsR0FBRzN0QixHQUFHLEtBQUssS0FBSyxHQUFHLE9BQU91cUIsR0FBR3ZxQixFQUFFeUIsT0FBT2dwQixLQUFLLEtBQUssS0FBSyxHQUEwQixHQUF2QlosR0FBRThKLElBQXdCLFFBQXJCMXlCLEVBQUVqQixFQUFFZ1IsZUFBMEIsT0FBTyxLQUFzQyxHQUFqQzdQLEVBQUUsSUFBYSxHQUFSbkIsRUFBRThRLE9BQTJCLFFBQWpCelcsRUFBRTRHLEVBQUU0NkIsV0FBc0IsR0FBRzE2QixFQUFFZzdCLEdBQUdsN0IsR0FBRSxPQUFRLENBQUMsR0FBRyxJQUFJMDdCLElBQUcsT0FBTzU4QixHQUFHLElBQWEsR0FBUkEsRUFBRStRLE9BQVUsSUFBSS9RLEVBQUVDLEVBQUVvUixNQUFNLE9BQU9yUixHQUFHLENBQVMsR0FBRyxRQUFYMUYsRUFBRXU1QixHQUFHN3pCLElBQWUsQ0FDalcsSUFEa1dDLEVBQUU4USxPQUFPLEdBQUdxckIsR0FBR2w3QixHQUFFLEdBQW9CLFFBQWhCRSxFQUFFOUcsRUFBRXMwQixlQUF1QjN1QixFQUFFMnVCLFlBQVl4dEIsRUFBRW5CLEVBQUU4USxPQUFPLEdBQ25mLE9BQU83UCxFQUFFa3hCLGFBQWFueUIsRUFBRXF5QixZQUFZLE1BQU1yeUIsRUFBRW15QixXQUFXbHhCLEVBQUVreEIsV0FBV2x4QixFQUFFaEIsRUFBTUEsRUFBRUQsRUFBRW9SLE1BQU0sT0FBT25SLEdBQU9GLEVBQUVrQixHQUFORSxFQUFFbEIsR0FBUTZRLE9BQU8sRUFBRTNQLEVBQUVpeEIsV0FBVyxLQUFLanhCLEVBQUVreEIsWUFBWSxLQUFLbHhCLEVBQUVneEIsV0FBVyxLQUFtQixRQUFkOTNCLEVBQUU4RyxFQUFFeVAsWUFBb0J6UCxFQUFFMnNCLFdBQVcsRUFBRTNzQixFQUFFK3NCLE1BQU1udUIsRUFBRW9CLEVBQUVpUSxNQUFNLEtBQUtqUSxFQUFFMHlCLGNBQWMsS0FBSzF5QixFQUFFNlAsY0FBYyxLQUFLN1AsRUFBRXd0QixZQUFZLEtBQUt4dEIsRUFBRTZzQixhQUFhLEtBQUs3c0IsRUFBRThOLFVBQVUsT0FBTzlOLEVBQUUyc0IsV0FBV3p6QixFQUFFeXpCLFdBQVczc0IsRUFBRStzQixNQUFNN3pCLEVBQUU2ekIsTUFBTS9zQixFQUFFaVEsTUFBTS9XLEVBQUUrVyxNQUFNalEsRUFBRTB5QixjQUFjeDVCLEVBQUV3NUIsY0FBYzF5QixFQUFFNlAsY0FBYzNXLEVBQUUyVyxjQUFjN1AsRUFBRXd0QixZQUFZdDBCLEVBQUVzMEIsWUFBWXh0QixFQUFFTSxLQUFLcEgsRUFBRW9ILEtBQUsxQixFQUFFMUYsRUFBRTJ6QixhQUNwZjdzQixFQUFFNnNCLGFBQWEsT0FBT2p1QixFQUFFLEtBQUssQ0FBQ211QixNQUFNbnVCLEVBQUVtdUIsTUFBTUQsYUFBYWx1QixFQUFFa3VCLGVBQWVodUIsRUFBRUEsRUFBRW9SLFFBQTJCLE9BQW5CeVksR0FBRTZKLEdBQVksRUFBVkEsR0FBRXJpQixRQUFVLEdBQVV0UixFQUFFb1IsTUFBTXJSLEVBQUVBLEVBQUVzUixRQUFRLE9BQU9wUSxFQUFFKzZCLE1BQU1yUCxLQUFJb1EsS0FBSy84QixFQUFFOFEsT0FBTyxHQUFHM1AsR0FBRSxFQUFHZzdCLEdBQUdsN0IsR0FBRSxHQUFJakIsRUFBRWt1QixNQUFNLGNBQWMsQ0FBQyxJQUFJL3NCLEVBQUUsR0FBVyxRQUFScEIsRUFBRTZ6QixHQUFHdjVCLEtBQWEsR0FBRzJGLEVBQUU4USxPQUFPLEdBQUczUCxHQUFFLEVBQW1CLFFBQWhCbEIsRUFBRUYsRUFBRTR1QixlQUF1QjN1QixFQUFFMnVCLFlBQVkxdUIsRUFBRUQsRUFBRThRLE9BQU8sR0FBR3FyQixHQUFHbDdCLEdBQUUsR0FBSSxPQUFPQSxFQUFFKzZCLE1BQU0sV0FBVy82QixFQUFFZzdCLFdBQVc1aEMsRUFBRXVXLFlBQVlxakIsR0FBRyxPQUFtQyxRQUE1QmowQixFQUFFQSxFQUFFbXlCLFdBQVdseEIsRUFBRWt4QixjQUFzQm55QixFQUFFb3lCLFdBQVcsTUFBTSxVQUFVLEVBQUV6RixLQUFJMXJCLEVBQUU2NkIsbUJBQW1CaUIsSUFBSSxhQUFhOThCLElBQUlELEVBQUU4USxPQUNqZixHQUFHM1AsR0FBRSxFQUFHZzdCLEdBQUdsN0IsR0FBRSxHQUFJakIsRUFBRWt1QixNQUFNLFVBQVVqdEIsRUFBRTI2QixhQUFhdmhDLEVBQUVnWCxRQUFRclIsRUFBRW9SLE1BQU1wUixFQUFFb1IsTUFBTS9XLElBQWEsUUFBVDRGLEVBQUVnQixFQUFFODZCLE1BQWM5N0IsRUFBRW9SLFFBQVFoWCxFQUFFMkYsRUFBRW9SLE1BQU0vVyxFQUFFNEcsRUFBRTg2QixLQUFLMWhDLEdBQUcsT0FBTyxPQUFPNEcsRUFBRSs2QixNQUFNLzdCLEVBQUVnQixFQUFFKzZCLEtBQUsvNkIsRUFBRTQ2QixVQUFVNTdCLEVBQUVnQixFQUFFKzZCLEtBQUsvN0IsRUFBRW9SLFFBQVFwUSxFQUFFa3hCLFdBQVdueUIsRUFBRW15QixXQUFXbHhCLEVBQUU2NkIsbUJBQW1CblAsS0FBSTFzQixFQUFFb1IsUUFBUSxLQUFLclIsRUFBRTJ6QixHQUFFcmlCLFFBQVF3WSxHQUFFNkosR0FBRXh5QixFQUFJLEVBQUZuQixFQUFJLEVBQUksRUFBRkEsR0FBS0MsR0FBRyxLQUFLLEtBQUssR0FBRyxLQUFLLEdBQUcsT0FBTys4QixLQUFLLE9BQU9qOUIsR0FBRyxPQUFPQSxFQUFFaVIsZ0JBQWlCLE9BQU9oUixFQUFFZ1IsZ0JBQWdCLGtDQUFrQy9QLEVBQUV1eEIsT0FBT3h5QixFQUFFOFEsT0FBTyxHQUFHLEtBQUssTUFBTTNTLE1BQU0yQixFQUFFLElBQUlFLEVBQUVzRixNQUNoZCxTQUFTMjNCLEdBQUdsOUIsR0FBRyxPQUFPQSxFQUFFdUYsS0FBSyxLQUFLLEVBQUVpbEIsR0FBR3hxQixFQUFFMEIsT0FBT2dwQixLQUFLLElBQUl6cUIsRUFBRUQsRUFBRStRLE1BQU0sT0FBUyxLQUFGOVEsR0FBUUQsRUFBRStRLE9BQVMsS0FBSDlRLEVBQVEsR0FBR0QsR0FBRyxLQUFLLEtBQUssRUFBZ0MsR0FBOUJ5ekIsS0FBSzNKLEdBQUVJLElBQUdKLEdBQUVHLElBQUcySyxLQUFrQixJQUFPLElBQXBCMzBCLEVBQUVELEVBQUUrUSxRQUFvQixNQUFNM1MsTUFBTTJCLEVBQUUsTUFBeUIsT0FBbkJDLEVBQUUrUSxPQUFTLEtBQUg5USxFQUFRLEdBQVVELEVBQUUsS0FBSyxFQUFFLE9BQU8yekIsR0FBRzN6QixHQUFHLEtBQUssS0FBSyxHQUFHLE9BQU84cEIsR0FBRThKLElBQWUsTUFBWjN6QixFQUFFRCxFQUFFK1EsUUFBYy9RLEVBQUUrUSxPQUFTLEtBQUg5USxFQUFRLEdBQUdELEdBQUcsS0FBSyxLQUFLLEdBQUcsT0FBTzhwQixHQUFFOEosSUFBRyxLQUFLLEtBQUssRUFBRSxPQUFPSCxLQUFLLEtBQUssS0FBSyxHQUFHLE9BQU83RixHQUFHNXRCLEdBQUcsS0FBSyxLQUFLLEdBQUcsS0FBSyxHQUFHLE9BQU9pOUIsS0FBSyxLQUFLLFFBQVEsT0FBTyxNQUNyYSxTQUFTRSxHQUFHbjlCLEVBQUVDLEdBQUcsSUFBSSxJQUFJQyxFQUFFLEdBQUdnQixFQUFFakIsRUFBRSxHQUFHQyxHQUFHb0YsRUFBR3BFLEdBQUdBLEVBQUVBLEVBQUU0UCxhQUFhNVAsR0FBRyxJQUFJQyxFQUFFakIsRUFBRSxNQUFNa0IsR0FBR0QsRUFBRSw2QkFBNkJDLEVBQUVnOEIsUUFBUSxLQUFLaDhCLEVBQUVxRCxNQUFNLE1BQU0sQ0FBQ3NDLE1BQU0vRyxFQUFFOUMsT0FBTytDLEVBQUV3RSxNQUFNdEQsR0FBRyxTQUFTazhCLEdBQUdyOUIsRUFBRUMsR0FBRyxJQUFJcTlCLFFBQVE5akMsTUFBTXlHLEVBQUU4RyxPQUFPLE1BQU03RyxHQUFHckYsWUFBVyxXQUFXLE1BQU1xRixNQWxCM1A0NkIsR0FBRyxTQUFTOTZCLEVBQUVDLEdBQUcsSUFBSSxJQUFJQyxFQUFFRCxFQUFFb1IsTUFBTSxPQUFPblIsR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRXFGLEtBQUssSUFBSXJGLEVBQUVxRixJQUFJdkYsRUFBRTRKLFlBQVkxSixFQUFFZ1AsZ0JBQWdCLEdBQUcsSUFBSWhQLEVBQUVxRixLQUFLLE9BQU9yRixFQUFFbVIsTUFBTSxDQUFDblIsRUFBRW1SLE1BQU1QLE9BQU81USxFQUFFQSxFQUFFQSxFQUFFbVIsTUFBTSxTQUFTLEdBQUduUixJQUFJRCxFQUFFLE1BQU0sS0FBSyxPQUFPQyxFQUFFb1IsU0FBUyxDQUFDLEdBQUcsT0FBT3BSLEVBQUU0USxRQUFRNVEsRUFBRTRRLFNBQVM3USxFQUFFLE9BQU9DLEVBQUVBLEVBQUU0USxPQUFPNVEsRUFBRW9SLFFBQVFSLE9BQU81USxFQUFFNFEsT0FBTzVRLEVBQUVBLEVBQUVvUixVQUNoU3lwQixHQUFHLFNBQVMvNkIsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUcsSUFBSUMsRUFBRW5CLEVBQUU4ekIsY0FBYyxHQUFHM3lCLElBQUlELEVBQUUsQ0FBQ2xCLEVBQUVDLEVBQUVpUCxVQUFVbWtCLEdBQUdILEdBQUczaEIsU0FBUyxJQUF5VWpYLEVBQXJVOEcsRUFBRSxLQUFLLE9BQU9sQixHQUFHLElBQUssUUFBUWlCLEVBQUVnRyxFQUFHbkgsRUFBRW1CLEdBQUdELEVBQUVpRyxFQUFHbkgsRUFBRWtCLEdBQUdFLEVBQUUsR0FBRyxNQUFNLElBQUssU0FBU0QsRUFBRTZHLEdBQUdoSSxFQUFFbUIsR0FBR0QsRUFBRThHLEdBQUdoSSxFQUFFa0IsR0FBR0UsRUFBRSxHQUFHLE1BQU0sSUFBSyxTQUFTRCxFQUFFdEIsRUFBRSxHQUFHc0IsRUFBRSxDQUFDNEYsV0FBTSxJQUFTN0YsRUFBRXJCLEVBQUUsR0FBR3FCLEVBQUUsQ0FBQzZGLFdBQU0sSUFBUzNGLEVBQUUsR0FBRyxNQUFNLElBQUssV0FBV0QsRUFBRXNILEdBQUd6SSxFQUFFbUIsR0FBR0QsRUFBRXVILEdBQUd6SSxFQUFFa0IsR0FBR0UsRUFBRSxHQUFHLE1BQU0sUUFBUSxtQkFBb0JELEVBQUVxN0IsU0FBUyxtQkFBb0J0N0IsRUFBRXM3QixVQUFVeDhCLEVBQUV5OEIsUUFBUWhVLElBQXlCLElBQUl0WSxLQUF6QjdCLEdBQUdwTyxFQUFFZ0IsR0FBU2hCLEVBQUUsS0FBY2lCLEVBQUUsSUFBSUQsRUFBRXhGLGVBQWV5VSxJQUFJaFAsRUFBRXpGLGVBQWV5VSxJQUFJLE1BQU1oUCxFQUFFZ1AsR0FBRyxHQUFHLFVBQzNlQSxFQUFFLENBQUMsSUFBSS9LLEVBQUVqRSxFQUFFZ1AsR0FBRyxJQUFJN1YsS0FBSzhLLEVBQUVBLEVBQUUxSixlQUFlcEIsS0FBSzRGLElBQUlBLEVBQUUsSUFBSUEsRUFBRTVGLEdBQUcsUUFBUSw0QkFBNEI2VixHQUFHLGFBQWFBLEdBQUcsbUNBQW1DQSxHQUFHLDZCQUE2QkEsR0FBRyxjQUFjQSxJQUFJN1AsRUFBRzVFLGVBQWV5VSxHQUFHL08sSUFBSUEsRUFBRSxLQUFLQSxFQUFFQSxHQUFHLElBQUkxSCxLQUFLeVcsRUFBRSxPQUFPLElBQUlBLEtBQUtqUCxFQUFFLENBQUMsSUFBSWlFLEVBQUVqRSxFQUFFaVAsR0FBeUIsR0FBdEIvSyxFQUFFLE1BQU1qRSxFQUFFQSxFQUFFZ1AsUUFBRyxFQUFValAsRUFBRXhGLGVBQWV5VSxJQUFJaEwsSUFBSUMsSUFBSSxNQUFNRCxHQUFHLE1BQU1DLEdBQUcsR0FBRyxVQUFVK0ssRUFBRSxHQUFHL0ssRUFBRSxDQUFDLElBQUk5SyxLQUFLOEssR0FBR0EsRUFBRTFKLGVBQWVwQixJQUFJNkssR0FBR0EsRUFBRXpKLGVBQWVwQixLQUFLNEYsSUFBSUEsRUFBRSxJQUFJQSxFQUFFNUYsR0FBRyxJQUFJLElBQUlBLEtBQUs2SyxFQUFFQSxFQUFFekosZUFBZXBCLElBQUk4SyxFQUFFOUssS0FBSzZLLEVBQUU3SyxLQUFLNEYsSUFDbGZBLEVBQUUsSUFBSUEsRUFBRTVGLEdBQUc2SyxFQUFFN0ssU0FBUzRGLElBQUlrQixJQUFJQSxFQUFFLElBQUlBLEVBQUUxSCxLQUFLeVcsRUFBRWpRLElBQUlBLEVBQUVpRixNQUFNLDRCQUE0QmdMLEdBQUdoTCxFQUFFQSxFQUFFQSxFQUFFNGpCLFlBQU8sRUFBTzNqQixFQUFFQSxFQUFFQSxFQUFFMmpCLFlBQU8sRUFBTyxNQUFNNWpCLEdBQUdDLElBQUlELElBQUkvRCxFQUFFQSxHQUFHLElBQUkxSCxLQUFLeVcsRUFBRWhMLElBQUksYUFBYWdMLEVBQUUsaUJBQWtCaEwsR0FBRyxpQkFBa0JBLElBQUkvRCxFQUFFQSxHQUFHLElBQUkxSCxLQUFLeVcsRUFBRSxHQUFHaEwsR0FBRyxtQ0FBbUNnTCxHQUFHLDZCQUE2QkEsSUFBSTdQLEVBQUc1RSxlQUFleVUsSUFBSSxNQUFNaEwsR0FBRyxhQUFhZ0wsR0FBR3VXLEdBQUUsU0FBUzFtQixHQUFHb0IsR0FBR2dFLElBQUlELElBQUkvRCxFQUFFLEtBQUssaUJBQWtCK0QsR0FBRyxPQUFPQSxHQUFHQSxFQUFFUSxXQUFXOUIsRUFBR3NCLEVBQUVzRSxZQUFZckksRUFBRUEsR0FBRyxJQUFJMUgsS0FBS3lXLEVBQUVoTCxJQUFJakYsSUFBSWtCLEVBQUVBLEdBQUcsSUFBSTFILEtBQUssUUFDL2V3RyxHQUFHLElBQUlpUSxFQUFFL08sR0FBS25CLEVBQUUydUIsWUFBWXplLEtBQUVsUSxFQUFFOFEsT0FBTyxLQUFJaXFCLEdBQUcsU0FBU2g3QixFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBR2hCLElBQUlnQixJQUFJakIsRUFBRThRLE9BQU8sSUFjZ0wsSUFBSXdzQixHQUFHLG1CQUFvQkMsUUFBUUEsUUFBUXByQixJQUFJLFNBQVNxckIsR0FBR3o5QixFQUFFQyxFQUFFQyxJQUFHQSxFQUFFa3ZCLElBQUksRUFBRWx2QixJQUFLcUYsSUFBSSxFQUFFckYsRUFBRXF2QixRQUFRLENBQUNyd0IsUUFBUSxNQUFNLElBQUlnQyxFQUFFakIsRUFBRThHLE1BQXNELE9BQWhEN0csRUFBRXZGLFNBQVMsV0FBVytpQyxLQUFLQSxJQUFHLEVBQUdDLEdBQUd6OEIsR0FBR204QixHQUFHcjlCLEVBQUVDLElBQVdDLEVBQ3BiLFNBQVMwOUIsR0FBRzU5QixFQUFFQyxFQUFFQyxJQUFHQSxFQUFFa3ZCLElBQUksRUFBRWx2QixJQUFLcUYsSUFBSSxFQUFFLElBQUlyRSxFQUFFbEIsRUFBRTBCLEtBQUtpNUIseUJBQXlCLEdBQUcsbUJBQW9CejVCLEVBQUUsQ0FBQyxJQUFJQyxFQUFFbEIsRUFBRThHLE1BQU03RyxFQUFFcXZCLFFBQVEsV0FBbUIsT0FBUjhOLEdBQUdyOUIsRUFBRUMsR0FBVWlCLEVBQUVDLElBQUksSUFBSUMsRUFBRXBCLEVBQUVrUCxVQUE4TyxPQUFwTyxPQUFPOU4sR0FBRyxtQkFBb0JBLEVBQUV5OEIsb0JBQW9CMzlCLEVBQUV2RixTQUFTLFdBQVcsbUJBQW9CdUcsSUFBSSxPQUFPNDhCLEdBQUdBLEdBQUcsSUFBSXo5QixJQUFJLENBQUNsSCxPQUFPMmtDLEdBQUdyOUIsSUFBSXRILE1BQU1ra0MsR0FBR3I5QixFQUFFQyxJQUFJLElBQUlDLEVBQUVELEVBQUV3RSxNQUFNdEwsS0FBSzBrQyxrQkFBa0I1OUIsRUFBRThHLE1BQU0sQ0FBQ2czQixlQUFlLE9BQU83OUIsRUFBRUEsRUFBRSxPQUFjQSxFQUFFLElBQUk4OUIsR0FBRyxtQkFBb0JDLFFBQVFBLFFBQVE1OUIsSUFDeGMsU0FBUzY5QixHQUFHbCtCLEdBQUcsSUFBSUMsRUFBRUQsRUFBRSt4QixJQUFJLEdBQUcsT0FBTzl4QixFQUFFLEdBQUcsbUJBQW9CQSxFQUFFLElBQUlBLEVBQUUsTUFBTSxNQUFNQyxHQUFHaStCLEdBQUduK0IsRUFBRUUsUUFBUUQsRUFBRXNSLFFBQVEsS0FBSyxTQUFTNnNCLEdBQUdwK0IsRUFBRUMsR0FBRyxPQUFPQSxFQUFFc0YsS0FBSyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsT0FBTyxLQUFLLEVBQUUsR0FBVyxJQUFSdEYsRUFBRThRLE9BQVcsT0FBTy9RLEVBQUUsQ0FBQyxJQUFJRSxFQUFFRixFQUFFOHpCLGNBQWM1eUIsRUFBRWxCLEVBQUVpUixjQUE0QmhSLEdBQWRELEVBQUVDLEVBQUVpUCxXQUFjdWlCLHdCQUF3Qnh4QixFQUFFZCxjQUFjYyxFQUFFeUIsS0FBS3hCLEVBQUVtdEIsR0FBR3B0QixFQUFFeUIsS0FBS3hCLEdBQUdnQixHQUFHbEIsRUFBRXErQixvQ0FBb0NwK0IsRUFBRSxPQUFPLEtBQUssRUFBNkMsWUFBbkMsSUFBUkEsRUFBRThRLE9BQVdtWSxHQUFHanBCLEVBQUVpUCxVQUFVc0UsZ0JBQXNCLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssR0FBRyxPQUFPLE1BQU1wVixNQUFNMkIsRUFBRSxNQUM1ZSxTQUFTdStCLEdBQUd0K0IsRUFBRUMsRUFBRUMsR0FBRyxPQUFPQSxFQUFFcUYsS0FBSyxLQUFLLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQWdELEdBQUcsUUFBaEN0RixFQUFFLFFBQWxCQSxFQUFFQyxFQUFFMHVCLGFBQXVCM3VCLEVBQUVteUIsV0FBVyxNQUFpQixDQUFDcHlCLEVBQUVDLEVBQUVBLEVBQUV1dUIsS0FBSyxFQUFFLENBQUMsR0FBRyxJQUFXLEVBQU54dUIsRUFBRXVGLEtBQU8sQ0FBQyxJQUFJckUsRUFBRWxCLEVBQUV5M0IsT0FBT3ozQixFQUFFMDNCLFFBQVF4MkIsSUFBSWxCLEVBQUVBLEVBQUV3dUIsV0FBV3h1QixJQUFJQyxHQUFnRCxHQUFHLFFBQWhDQSxFQUFFLFFBQWxCQSxFQUFFQyxFQUFFMHVCLGFBQXVCM3VCLEVBQUVteUIsV0FBVyxNQUFpQixDQUFDcHlCLEVBQUVDLEVBQUVBLEVBQUV1dUIsS0FBSyxFQUFFLENBQUMsSUFBSXJ0QixFQUFFbkIsRUFBRWtCLEVBQUVDLEVBQUVxdEIsS0FBYSxJQUFPLEdBQWZydEIsRUFBRUEsRUFBRW9FLE9BQWUsSUFBTyxFQUFGcEUsS0FBT285QixHQUFHcitCLEVBQUVGLEdBQUd3K0IsR0FBR3QrQixFQUFFRixJQUFJQSxFQUFFa0IsUUFBUWxCLElBQUlDLEdBQUcsT0FBTyxLQUFLLEVBQ3RSLE9BRHdSRCxFQUFFRSxFQUFFZ1AsVUFBa0IsRUFBUmhQLEVBQUU2USxRQUFVLE9BQU85USxFQUFFRCxFQUFFNHhCLHFCQUFxQjF3QixFQUFFaEIsRUFBRWYsY0FBY2UsRUFBRXdCLEtBQUt6QixFQUFFNnpCLGNBQWN6RyxHQUFHbnRCLEVBQUV3QixLQUFLekIsRUFBRTZ6QixlQUFlOXpCLEVBQUV5NkIsbUJBQW1CdjVCLEVBQ3hnQmpCLEVBQUVnUixjQUFjalIsRUFBRXErQiw0Q0FBdUQsUUFBaEJwK0IsRUFBRUMsRUFBRTB1QixjQUFzQm1CLEdBQUc3dkIsRUFBRUQsRUFBRUQsSUFBVSxLQUFLLEVBQWtCLEdBQUcsUUFBbkJDLEVBQUVDLEVBQUUwdUIsYUFBd0IsQ0FBUSxHQUFQNXVCLEVBQUUsS0FBUSxPQUFPRSxFQUFFbVIsTUFBTSxPQUFPblIsRUFBRW1SLE1BQU05TCxLQUFLLEtBQUssRUFBRXZGLEVBQUVFLEVBQUVtUixNQUFNbkMsVUFBVSxNQUFNLEtBQUssRUFBRWxQLEVBQUVFLEVBQUVtUixNQUFNbkMsVUFBVTZnQixHQUFHN3ZCLEVBQUVELEVBQUVELEdBQUcsT0FBTyxLQUFLLEVBQTJFLE9BQXpFQSxFQUFFRSxFQUFFZ1AsZUFBVSxPQUFPalAsR0FBVyxFQUFSQyxFQUFFNlEsT0FBUzZYLEdBQUcxb0IsRUFBRXdCLEtBQUt4QixFQUFFNHpCLGdCQUFnQjl6QixFQUFFeStCLFNBQWUsS0FBSyxFQUFTLEtBQUssRUFBUyxLQUFLLEdBQUcsT0FBTyxLQUFLLEdBQ3pZLFlBRDRZLE9BQU92K0IsRUFBRStRLGdCQUFnQi9RLEVBQUVBLEVBQUUyUSxVQUFVLE9BQU8zUSxJQUFJQSxFQUFFQSxFQUFFK1EsY0FBYyxPQUFPL1EsSUFBSUEsRUFBRUEsRUFBRWdSLFdBQVcsT0FBT2hSLEdBQUc4VCxHQUFHOVQsT0FDaGYsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsT0FBTyxNQUFNOUIsTUFBTTJCLEVBQUUsTUFDNUUsU0FBUzIrQixHQUFHMStCLEVBQUVDLEdBQUcsSUFBSSxJQUFJQyxFQUFFRixJQUFJLENBQUMsR0FBRyxJQUFJRSxFQUFFcUYsSUFBSSxDQUFDLElBQUlyRSxFQUFFaEIsRUFBRWdQLFVBQVUsR0FBR2pQLEVBQVksbUJBQVZpQixFQUFFQSxFQUFFK0wsT0FBNEJFLFlBQVlqTSxFQUFFaU0sWUFBWSxVQUFVLE9BQU8sYUFBYWpNLEVBQUV5OUIsUUFBUSxXQUFXLENBQUN6OUIsRUFBRWhCLEVBQUVnUCxVQUFVLElBQUkvTixFQUFFakIsRUFBRTR6QixjQUFjN21CLE1BQU05TCxFQUFFLE1BQVNBLEdBQWFBLEVBQUV6RixlQUFlLFdBQVd5RixFQUFFdzlCLFFBQVEsS0FBS3o5QixFQUFFK0wsTUFBTTB4QixRQUFRNXhCLEdBQUcsVUFBVTVMLFNBQVMsR0FBRyxJQUFJakIsRUFBRXFGLElBQUlyRixFQUFFZ1AsVUFBVWhGLFVBQVVqSyxFQUFFLEdBQUdDLEVBQUU0ekIsbUJBQW1CLElBQUksS0FBSzV6QixFQUFFcUYsS0FBSyxLQUFLckYsRUFBRXFGLEtBQUssT0FBT3JGLEVBQUUrUSxlQUFlL1EsSUFBSUYsSUFBSSxPQUFPRSxFQUFFbVIsTUFBTSxDQUFDblIsRUFBRW1SLE1BQU1QLE9BQU81USxFQUFFQSxFQUFFQSxFQUFFbVIsTUFBTSxTQUFTLEdBQUduUixJQUN0ZkYsRUFBRSxNQUFNLEtBQUssT0FBT0UsRUFBRW9SLFNBQVMsQ0FBQyxHQUFHLE9BQU9wUixFQUFFNFEsUUFBUTVRLEVBQUU0USxTQUFTOVEsRUFBRSxPQUFPRSxFQUFFQSxFQUFFNFEsT0FBTzVRLEVBQUVvUixRQUFRUixPQUFPNVEsRUFBRTRRLE9BQU81USxFQUFFQSxFQUFFb1IsU0FDakgsU0FBU3N0QixHQUFHNStCLEVBQUVDLEdBQUcsR0FBR2lyQixJQUFJLG1CQUFvQkEsR0FBRzJULHFCQUFxQixJQUFJM1QsR0FBRzJULHFCQUFxQjVULEdBQUdockIsR0FBRyxNQUFNbUIsSUFBSSxPQUFPbkIsRUFBRXNGLEtBQUssS0FBSyxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBbUIsR0FBRyxRQUFuQnZGLEVBQUVDLEVBQUUydUIsY0FBeUMsUUFBZjV1QixFQUFFQSxFQUFFb3lCLFlBQXFCLENBQUMsSUFBSWx5QixFQUFFRixFQUFFQSxFQUFFd3VCLEtBQUssRUFBRSxDQUFDLElBQUl0dEIsRUFBRWhCLEVBQUVpQixFQUFFRCxFQUFFdzJCLFFBQWdCLEdBQVJ4MkIsRUFBRUEsRUFBRXFFLFNBQU8sSUFBU3BFLEVBQUUsR0FBRyxJQUFPLEVBQUZELEdBQUtxOUIsR0FBR3QrQixFQUFFQyxPQUFPLENBQUNnQixFQUFFakIsRUFBRSxJQUFJa0IsSUFBSSxNQUFNQyxHQUFHKzhCLEdBQUdqOUIsRUFBRUUsSUFBSWxCLEVBQUVBLEVBQUVzdUIsV0FBV3R1QixJQUFJRixHQUFHLE1BQU0sS0FBSyxFQUFzQixHQUFwQmsrQixHQUFHaitCLEdBQW9CLG1CQUFqQkQsRUFBRUMsRUFBRWlQLFdBQW1DNHZCLHFCQUFxQixJQUFJOStCLEVBQUVsQyxNQUFNbUMsRUFBRTZ6QixjQUFjOXpCLEVBQUVreEIsTUFBTWp4QixFQUFFZ1IsY0FBY2pSLEVBQUU4K0IsdUJBQXVCLE1BQU0xOUIsR0FBRys4QixHQUFHbCtCLEVBQy9nQm1CLEdBQUcsTUFBTSxLQUFLLEVBQUU4OEIsR0FBR2orQixHQUFHLE1BQU0sS0FBSyxFQUFFOCtCLEdBQUcvK0IsRUFBRUMsSUFBSSxTQUFTKytCLEdBQUdoL0IsR0FBR0EsRUFBRTZRLFVBQVUsS0FBSzdRLEVBQUVxUixNQUFNLEtBQUtyUixFQUFFaXVCLGFBQWEsS0FBS2p1QixFQUFFc3lCLFlBQVksS0FBS3R5QixFQUFFb3lCLFdBQVcsS0FBS3B5QixFQUFFOHpCLGNBQWMsS0FBSzl6QixFQUFFaVIsY0FBYyxLQUFLalIsRUFBRXMwQixhQUFhLEtBQUt0MEIsRUFBRThRLE9BQU8sS0FBSzlRLEVBQUU0dUIsWUFBWSxLQUFLLFNBQVNxUSxHQUFHai9CLEdBQUcsT0FBTyxJQUFJQSxFQUFFdUYsS0FBSyxJQUFJdkYsRUFBRXVGLEtBQUssSUFBSXZGLEVBQUV1RixJQUNuUyxTQUFTMjVCLEdBQUdsL0IsR0FBR0EsRUFBRSxDQUFDLElBQUksSUFBSUMsRUFBRUQsRUFBRThRLE9BQU8sT0FBTzdRLEdBQUcsQ0FBQyxHQUFHZy9CLEdBQUdoL0IsR0FBRyxNQUFNRCxFQUFFQyxFQUFFQSxFQUFFNlEsT0FBTyxNQUFNMVMsTUFBTTJCLEVBQUUsTUFBTyxJQUFJRyxFQUFFRCxFQUFnQixPQUFkQSxFQUFFQyxFQUFFZ1AsVUFBaUJoUCxFQUFFcUYsS0FBSyxLQUFLLEVBQUUsSUFBSXJFLEdBQUUsRUFBRyxNQUFNLEtBQUssRUFBK0IsS0FBSyxFQUFFakIsRUFBRUEsRUFBRXVULGNBQWN0UyxHQUFFLEVBQUcsTUFBTSxRQUFRLE1BQU05QyxNQUFNMkIsRUFBRSxNQUFlLEdBQVJHLEVBQUU2USxRQUFXaEgsR0FBRzlKLEVBQUUsSUFBSUMsRUFBRTZRLFFBQVEsSUFBSS9RLEVBQUVDLEVBQUUsSUFBSUMsRUFBRUYsSUFBSSxDQUFDLEtBQUssT0FBT0UsRUFBRW9SLFNBQVMsQ0FBQyxHQUFHLE9BQU9wUixFQUFFNFEsUUFBUW11QixHQUFHLytCLEVBQUU0USxRQUFRLENBQUM1USxFQUFFLEtBQUssTUFBTUYsRUFBRUUsRUFBRUEsRUFBRTRRLE9BQWlDLElBQTFCNVEsRUFBRW9SLFFBQVFSLE9BQU81USxFQUFFNFEsT0FBVzVRLEVBQUVBLEVBQUVvUixRQUFRLElBQUlwUixFQUFFcUYsS0FBSyxJQUFJckYsRUFBRXFGLEtBQUssS0FBS3JGLEVBQUVxRixLQUFLLENBQUMsR0FBVyxFQUFSckYsRUFBRTZRLE1BQVEsU0FBUzlRLEVBQUUsR0FBRyxPQUMvZUMsRUFBRW1SLE9BQU8sSUFBSW5SLEVBQUVxRixJQUFJLFNBQVN0RixFQUFPQyxFQUFFbVIsTUFBTVAsT0FBTzVRLEVBQUVBLEVBQUVBLEVBQUVtUixNQUFNLEtBQWEsRUFBUm5SLEVBQUU2USxPQUFTLENBQUM3USxFQUFFQSxFQUFFZ1AsVUFBVSxNQUFNbFAsR0FBR2tCLEVBQUVpK0IsR0FBR24vQixFQUFFRSxFQUFFRCxHQUFHbS9CLEdBQUdwL0IsRUFBRUUsRUFBRUQsR0FDekgsU0FBU2svQixHQUFHbi9CLEVBQUVDLEVBQUVDLEdBQUcsSUFBSWdCLEVBQUVsQixFQUFFdUYsSUFBSXBFLEVBQUUsSUFBSUQsR0FBRyxJQUFJQSxFQUFFLEdBQUdDLEVBQUVuQixFQUFFbUIsRUFBRW5CLEVBQUVrUCxVQUFVbFAsRUFBRWtQLFVBQVVzWCxTQUFTdm1CLEVBQUUsSUFBSUMsRUFBRStKLFNBQVMvSixFQUFFME8sV0FBV3l3QixhQUFhci9CLEVBQUVDLEdBQUdDLEVBQUVtL0IsYUFBYXIvQixFQUFFQyxJQUFJLElBQUlDLEVBQUUrSixVQUFVaEssRUFBRUMsRUFBRTBPLFlBQWF5d0IsYUFBYXIvQixFQUFFRSxJQUFLRCxFQUFFQyxHQUFJMEosWUFBWTVKLEdBQTRCLE9BQXhCRSxFQUFFQSxFQUFFby9CLHNCQUEwQyxPQUFPci9CLEVBQUV3OEIsVUFBVXg4QixFQUFFdzhCLFFBQVFoVSxVQUFVLEdBQUcsSUFBSXZuQixHQUFjLFFBQVZsQixFQUFFQSxFQUFFcVIsT0FBZ0IsSUFBSTh0QixHQUFHbi9CLEVBQUVDLEVBQUVDLEdBQUdGLEVBQUVBLEVBQUVzUixRQUFRLE9BQU90UixHQUFHbS9CLEdBQUduL0IsRUFBRUMsRUFBRUMsR0FBR0YsRUFBRUEsRUFBRXNSLFFBQzlZLFNBQVM4dEIsR0FBR3AvQixFQUFFQyxFQUFFQyxHQUFHLElBQUlnQixFQUFFbEIsRUFBRXVGLElBQUlwRSxFQUFFLElBQUlELEdBQUcsSUFBSUEsRUFBRSxHQUFHQyxFQUFFbkIsRUFBRW1CLEVBQUVuQixFQUFFa1AsVUFBVWxQLEVBQUVrUCxVQUFVc1gsU0FBU3ZtQixFQUFFQyxFQUFFbS9CLGFBQWFyL0IsRUFBRUMsR0FBR0MsRUFBRTBKLFlBQVk1SixRQUFRLEdBQUcsSUFBSWtCLEdBQWMsUUFBVmxCLEVBQUVBLEVBQUVxUixPQUFnQixJQUFJK3RCLEdBQUdwL0IsRUFBRUMsRUFBRUMsR0FBR0YsRUFBRUEsRUFBRXNSLFFBQVEsT0FBT3RSLEdBQUdvL0IsR0FBR3AvQixFQUFFQyxFQUFFQyxHQUFHRixFQUFFQSxFQUFFc1IsUUFDck4sU0FBU3l0QixHQUFHLytCLEVBQUVDLEdBQUcsSUFBSSxJQUFha0IsRUFBRUMsRUFBWGxCLEVBQUVELEVBQUVpQixHQUFFLElBQVMsQ0FBQyxJQUFJQSxFQUFFLENBQUNBLEVBQUVoQixFQUFFNFEsT0FBTzlRLEVBQUUsT0FBTyxDQUFDLEdBQUcsT0FBT2tCLEVBQUUsTUFBTTlDLE1BQU0yQixFQUFFLE1BQW9CLE9BQWRvQixFQUFFRCxFQUFFZ08sVUFBaUJoTyxFQUFFcUUsS0FBSyxLQUFLLEVBQUVuRSxHQUFFLEVBQUcsTUFBTXBCLEVBQUUsS0FBSyxFQUFpQyxLQUFLLEVBQUVtQixFQUFFQSxFQUFFcVMsY0FBY3BTLEdBQUUsRUFBRyxNQUFNcEIsRUFBRWtCLEVBQUVBLEVBQUU0UCxPQUFPNVAsR0FBRSxFQUFHLEdBQUcsSUFBSWhCLEVBQUVxRixLQUFLLElBQUlyRixFQUFFcUYsSUFBSSxDQUFDdkYsRUFBRSxJQUFJLElBQUkxRixFQUFFMEYsRUFBRW9GLEVBQUVsRixFQUFFaUYsRUFBRUMsSUFBSSxHQUFHdzVCLEdBQUd0a0MsRUFBRTZLLEdBQUcsT0FBT0EsRUFBRWtNLE9BQU8sSUFBSWxNLEVBQUVJLElBQUlKLEVBQUVrTSxNQUFNUCxPQUFPM0wsRUFBRUEsRUFBRUEsRUFBRWtNLFVBQVUsQ0FBQyxHQUFHbE0sSUFBSUMsRUFBRSxNQUFNcEYsRUFBRSxLQUFLLE9BQU9tRixFQUFFbU0sU0FBUyxDQUFDLEdBQUcsT0FBT25NLEVBQUUyTCxRQUFRM0wsRUFBRTJMLFNBQVMxTCxFQUFFLE1BQU1wRixFQUFFbUYsRUFBRUEsRUFBRTJMLE9BQU8zTCxFQUFFbU0sUUFBUVIsT0FBTzNMLEVBQUUyTCxPQUFPM0wsRUFBRUEsRUFBRW1NLFFBQVFsUSxHQUFHOUcsRUFBRTZHLEVBQUVpRSxFQUFFbEYsRUFBRWdQLFVBQ3JmLElBQUk1VSxFQUFFMlAsU0FBUzNQLEVBQUVzVSxXQUFXakYsWUFBWXZFLEdBQUc5SyxFQUFFcVAsWUFBWXZFLElBQUlqRSxFQUFFd0ksWUFBWXpKLEVBQUVnUCxnQkFBZ0IsR0FBRyxJQUFJaFAsRUFBRXFGLEtBQUssR0FBRyxPQUFPckYsRUFBRW1SLE1BQU0sQ0FBQ2xRLEVBQUVqQixFQUFFZ1AsVUFBVXNFLGNBQWNwUyxHQUFFLEVBQUdsQixFQUFFbVIsTUFBTVAsT0FBTzVRLEVBQUVBLEVBQUVBLEVBQUVtUixNQUFNLGVBQWUsR0FBR3V0QixHQUFHNStCLEVBQUVFLEdBQUcsT0FBT0EsRUFBRW1SLE1BQU0sQ0FBQ25SLEVBQUVtUixNQUFNUCxPQUFPNVEsRUFBRUEsRUFBRUEsRUFBRW1SLE1BQU0sU0FBUyxHQUFHblIsSUFBSUQsRUFBRSxNQUFNLEtBQUssT0FBT0MsRUFBRW9SLFNBQVMsQ0FBQyxHQUFHLE9BQU9wUixFQUFFNFEsUUFBUTVRLEVBQUU0USxTQUFTN1EsRUFBRSxPQUFrQixLQUFYQyxFQUFFQSxFQUFFNFEsUUFBYXZMLE1BQU1yRSxHQUFFLEdBQUloQixFQUFFb1IsUUFBUVIsT0FBTzVRLEVBQUU0USxPQUFPNVEsRUFBRUEsRUFBRW9SLFNBQ2xaLFNBQVNpdUIsR0FBR3YvQixFQUFFQyxHQUFHLE9BQU9BLEVBQUVzRixLQUFLLEtBQUssRUFBRSxLQUFLLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsSUFBSXJGLEVBQUVELEVBQUUydUIsWUFBeUMsR0FBRyxRQUFoQzF1QixFQUFFLE9BQU9BLEVBQUVBLEVBQUVreUIsV0FBVyxNQUFpQixDQUFDLElBQUlseEIsRUFBRWhCLEVBQUVBLEVBQUVzdUIsS0FBSyxHQUFHLElBQVcsRUFBTnR0QixFQUFFcUUsT0FBU3ZGLEVBQUVrQixFQUFFdzJCLFFBQVF4MkIsRUFBRXcyQixhQUFRLE9BQU8sSUFBUzEzQixHQUFHQSxLQUFLa0IsRUFBRUEsRUFBRXN0QixXQUFXdHRCLElBQUloQixHQUFHLE9BQU8sS0FBSyxFQUFFLE9BQU8sS0FBSyxFQUFnQixHQUFHLE9BQWpCQSxFQUFFRCxFQUFFaVAsV0FBcUIsQ0FBQ2hPLEVBQUVqQixFQUFFNnpCLGNBQWMsSUFBSTN5QixFQUFFLE9BQU9uQixFQUFFQSxFQUFFOHpCLGNBQWM1eUIsRUFBRWxCLEVBQUVDLEVBQUV5QixLQUFLLElBQUlOLEVBQUVuQixFQUFFMnVCLFlBQStCLEdBQW5CM3VCLEVBQUUydUIsWUFBWSxLQUFRLE9BQU94dEIsRUFBRSxDQUFnRixJQUEvRWxCLEVBQUV1cEIsSUFBSXZvQixFQUFFLFVBQVVsQixHQUFHLFVBQVVrQixFQUFFUSxNQUFNLE1BQU1SLEVBQUU3QyxNQUFNc0osR0FBR3pILEVBQUVnQixHQUFHcU4sR0FBR3ZPLEVBQUVtQixHQUFHbEIsRUFBRXNPLEdBQUd2TyxFQUFFa0IsR0FBT0MsRUFBRSxFQUFFQSxFQUFFQyxFQUFFeEksT0FBT3VJLEdBQ2xmLEVBQUUsQ0FBQyxJQUFJN0csRUFBRThHLEVBQUVELEdBQUdpRSxFQUFFaEUsRUFBRUQsRUFBRSxHQUFHLFVBQVU3RyxFQUFFMFMsR0FBRzlNLEVBQUVrRixHQUFHLDRCQUE0QjlLLEVBQUUrTyxHQUFHbkosRUFBRWtGLEdBQUcsYUFBYTlLLEVBQUV5UCxHQUFHN0osRUFBRWtGLEdBQUdsRCxFQUFHaEMsRUFBRTVGLEVBQUU4SyxFQUFFbkYsR0FBRyxPQUFPRCxHQUFHLElBQUssUUFBUTRILEdBQUcxSCxFQUFFZ0IsR0FBRyxNQUFNLElBQUssV0FBVzRILEdBQUc1SSxFQUFFZ0IsR0FBRyxNQUFNLElBQUssU0FBU2xCLEVBQUVFLEVBQUVvSCxjQUFjZzFCLFlBQVlwOEIsRUFBRW9ILGNBQWNnMUIsY0FBY3A3QixFQUFFcTdCLFNBQW1CLE9BQVZuN0IsRUFBRUYsRUFBRTZGLE9BQWNxQixHQUFHbEksSUFBSWdCLEVBQUVxN0IsU0FBU243QixHQUFFLEdBQUlwQixNQUFNa0IsRUFBRXE3QixXQUFXLE1BQU1yN0IsRUFBRW1HLGFBQWFlLEdBQUdsSSxJQUFJZ0IsRUFBRXE3QixTQUFTcjdCLEVBQUVtRyxjQUFhLEdBQUllLEdBQUdsSSxJQUFJZ0IsRUFBRXE3QixTQUFTcjdCLEVBQUVxN0IsU0FBUyxHQUFHLElBQUcsTUFBTyxPQUFPLEtBQUssRUFBRSxHQUFHLE9BQU90OEIsRUFBRWlQLFVBQVUsTUFBTTlRLE1BQU0yQixFQUFFLE1BQy9jLFlBRHFkRSxFQUFFaVAsVUFBVWhGLFVBQ2pmakssRUFBRTZ6QixlQUFxQixLQUFLLEVBQThELGFBQTVENXpCLEVBQUVELEVBQUVpUCxXQUFZcUUsVUFBVXJULEVBQUVxVCxTQUFRLEVBQUdTLEdBQUc5VCxFQUFFc1QsaUJBQXVCLEtBQUssR0FBRyxPQUFPLEtBQUssR0FBeUQsT0FBdEQsT0FBT3ZULEVBQUVnUixnQkFBZ0J1dUIsR0FBRzVTLEtBQUk4UixHQUFHeitCLEVBQUVvUixPQUFNLFNBQUtvdUIsR0FBR3gvQixHQUFVLEtBQUssR0FBUyxZQUFOdy9CLEdBQUd4L0IsR0FBVSxLQUFLLEdBQUcsT0FBTyxLQUFLLEdBQUcsS0FBSyxHQUFnQyxZQUE3QnkrQixHQUFHeitCLEVBQUUsT0FBT0EsRUFBRWdSLGVBQXNCLE1BQU03UyxNQUFNMkIsRUFBRSxNQUFPLFNBQVMwL0IsR0FBR3ovQixHQUFHLElBQUlDLEVBQUVELEVBQUU0dUIsWUFBWSxHQUFHLE9BQU8zdUIsRUFBRSxDQUFDRCxFQUFFNHVCLFlBQVksS0FBSyxJQUFJMXVCLEVBQUVGLEVBQUVrUCxVQUFVLE9BQU9oUCxJQUFJQSxFQUFFRixFQUFFa1AsVUFBVSxJQUFJOHVCLElBQUkvOUIsRUFBRXJELFNBQVEsU0FBU3FELEdBQUcsSUFBSWlCLEVBQUV3K0IsR0FBR3ZvQixLQUFLLEtBQUtuWCxFQUFFQyxHQUFHQyxFQUFFMG1CLElBQUkzbUIsS0FBS0MsRUFBRU8sSUFBSVIsR0FBR0EsRUFBRTAvQixLQUFLeitCLEVBQUVBLFFBQ25lLFNBQVMwK0IsR0FBRzUvQixFQUFFQyxHQUFHLE9BQU8sT0FBT0QsSUFBc0IsUUFBbEJBLEVBQUVBLEVBQUVpUixnQkFBd0IsT0FBT2pSLEVBQUVrUixhQUErQixRQUFsQmpSLEVBQUVBLEVBQUVnUixnQkFBd0IsT0FBT2hSLEVBQUVpUixXQUFlLElBQUkydUIsR0FBR3ZwQixLQUFLd3BCLEtBQUtDLEdBQUdqOUIsRUFBR2l5Qix1QkFBdUJpTCxHQUFHbDlCLEVBQUcyMkIsa0JBQWtCd0csR0FBRSxFQUFFbEosR0FBRSxLQUFLbUosR0FBRSxLQUFLbkQsR0FBRSxFQUFFb0QsR0FBRyxFQUFFQyxHQUFHdlcsR0FBRyxHQUFHK1MsR0FBRSxFQUFFeUQsR0FBRyxLQUFLQyxHQUFHLEVBQUV4USxHQUFHLEVBQUUrTSxHQUFHLEVBQUUwRCxHQUFHLEVBQUVDLEdBQUcsS0FBS2hCLEdBQUcsRUFBRXhDLEdBQUd5RCxJQUFTLFNBQVNDLEtBQUsxRCxHQUFHcFEsS0FBSSxJQUFJLElBOEJzRitULEdBOUJsRkMsR0FBRSxLQUFLbEQsSUFBRyxFQUFHQyxHQUFHLEtBQUtHLEdBQUcsS0FBSytDLElBQUcsRUFBR0MsR0FBRyxLQUFLQyxHQUFHLEdBQUdDLEdBQUcsR0FBR0MsR0FBRyxHQUFHQyxHQUFHLEtBQUtDLEdBQUcsRUFBRUMsR0FBRyxLQUFLQyxJQUFJLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEtBQUtDLElBQUcsRUFBRyxTQUFTalIsS0FBSyxPQUFPLElBQU8sR0FBRnlQLElBQU1yVCxNQUFLLElBQUl5VSxHQUFHQSxHQUFHQSxHQUFHelUsS0FDM2UsU0FBUzZELEdBQUd6d0IsR0FBWSxHQUFHLElBQU8sR0FBbkJBLEVBQUVBLEVBQUV5eUIsT0FBa0IsT0FBTyxFQUFFLEdBQUcsSUFBTyxFQUFGenlCLEdBQUssT0FBTyxLQUFLNnNCLEtBQUssRUFBRSxFQUFrQixHQUFoQixJQUFJeVUsS0FBS0EsR0FBR2hCLElBQU8sSUFBSW5ULEdBQUd4WSxXQUFXLENBQUMsSUFBSTRzQixLQUFLQSxHQUFHLE9BQU9mLEdBQUdBLEdBQUcvcUIsYUFBYSxHQUFHelYsRUFBRXNoQyxHQUFHLElBQUlyaEMsRUFBRSxTQUFTc2hDLEdBQXNELE9BQTdDLElBQU50aEMsSUFBSUEsSUFBOEIsSUFBUEEsR0FBYkQsRUFBRSxTQUFTQSxJQUFPQSxLQUFVQyxFQUFFLE1BQWNBLEVBQTRELE9BQTFERCxFQUFFNnNCLEtBQXVCN3NCLEVBQUVpVyxHQUFwQixJQUFPLEVBQUZncUIsS0FBTSxLQUFLamdDLEVBQU8sR0FBUUEsRUF0SzNRLFNBQVlBLEdBQUcsT0FBT0EsR0FBRyxLQUFLLEdBQUcsT0FBTyxHQUFHLEtBQUssR0FBRyxPQUFPLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxPQUFPLEVBQUUsS0FBSyxHQUFHLE9BQU8sRUFBRSxRQUFRLE9BQU8sR0FzS3VKMGhDLENBQUcxaEMsR0FBVnNoQyxJQUNuUixTQUFTNVEsR0FBRzF3QixFQUFFQyxFQUFFQyxHQUFHLEdBQUcsR0FBR2loQyxHQUFHLE1BQU1BLEdBQUcsRUFBRUMsR0FBRyxLQUFLaGpDLE1BQU0yQixFQUFFLE1BQWdCLEdBQUcsUUFBYkMsRUFBRTJoQyxHQUFHM2hDLEVBQUVDLElBQWUsT0FBTyxLQUFLbVcsR0FBR3BXLEVBQUVDLEVBQUVDLEdBQUdGLElBQUkrMkIsS0FBSThGLElBQUk1OEIsRUFBRSxJQUFJMjhCLElBQUdFLEdBQUc5OEIsRUFBRSs4QixLQUFJLElBQUk3N0IsRUFBRTJyQixLQUFLLElBQUk1c0IsRUFBRSxJQUFPLEVBQUZnZ0MsS0FBTSxJQUFPLEdBQUZBLElBQU0yQixHQUFHNWhDLElBQUk2aEMsR0FBRzdoQyxFQUFFRSxHQUFHLElBQUkrL0IsS0FBSVMsS0FBS3pULFFBQVEsSUFBTyxFQUFGZ1QsS0FBTSxLQUFLLytCLEdBQUcsS0FBS0EsSUFBSSxPQUFPZ2dDLEdBQUdBLEdBQUcsSUFBSTdnQyxJQUFJLENBQUNMLElBQUlraEMsR0FBR3pnQyxJQUFJVCxJQUFJNmhDLEdBQUc3aEMsRUFBRUUsSUFBSXNnQyxHQUFHeGdDLEVBQUUsU0FBUzJoQyxHQUFHM2hDLEVBQUVDLEdBQUdELEVBQUVtdUIsT0FBT2x1QixFQUFFLElBQUlDLEVBQUVGLEVBQUU2USxVQUFxQyxJQUEzQixPQUFPM1EsSUFBSUEsRUFBRWl1QixPQUFPbHVCLEdBQUdDLEVBQUVGLEVBQU1BLEVBQUVBLEVBQUU4USxPQUFPLE9BQU85USxHQUFHQSxFQUFFK3RCLFlBQVk5dEIsRUFBZ0IsUUFBZEMsRUFBRUYsRUFBRTZRLGFBQXFCM1EsRUFBRTZ0QixZQUFZOXRCLEdBQUdDLEVBQUVGLEVBQUVBLEVBQUVBLEVBQUU4USxPQUFPLE9BQU8sSUFBSTVRLEVBQUVxRixJQUFJckYsRUFBRWdQLFVBQVUsS0FDemUsU0FBUzJ5QixHQUFHN2hDLEVBQUVDLEdBQUcsSUFBSSxJQUFJQyxFQUFFRixFQUFFOGhDLGFBQWE1Z0MsRUFBRWxCLEVBQUUyVixlQUFleFUsRUFBRW5CLEVBQUU0VixZQUFZeFUsRUFBRXBCLEVBQUUraEMsZ0JBQWdCem5DLEVBQUUwRixFQUFFeVYsYUFBYSxFQUFFbmIsR0FBRyxDQUFDLElBQUk4SyxFQUFFLEdBQUd5USxHQUFHdmIsR0FBRzZLLEVBQUUsR0FBR0MsRUFBRStLLEVBQUUvTyxFQUFFZ0UsR0FBRyxJQUFJLElBQUkrSyxHQUFHLEdBQUcsSUFBS2hMLEVBQUVqRSxJQUFJLElBQUtpRSxFQUFFaEUsR0FBRyxDQUFDZ1AsRUFBRWxRLEVBQUVzVixHQUFHcFEsR0FBRyxJQUFJM0ksRUFBRThZLEdBQUVsVSxFQUFFZ0UsR0FBRyxJQUFJNUksRUFBRTJULEVBQUUsSUFBSSxHQUFHM1QsRUFBRTJULEVBQUUsS0FBSyxRQUFRQSxHQUFHbFEsSUFBSUQsRUFBRTBWLGNBQWN2USxHQUFHN0ssSUFBSTZLLEVBQXdCLEdBQXRCakUsRUFBRXNVLEdBQUd4VixFQUFFQSxJQUFJKzJCLEdBQUVnRyxHQUFFLEdBQUc5OEIsRUFBRXFWLEdBQUssSUFBSXBVLEVBQUUsT0FBT2hCLElBQUlBLElBQUlvc0IsSUFBSWpCLEdBQUduckIsR0FBR0YsRUFBRThoQyxhQUFhLEtBQUs5aEMsRUFBRWdpQyxpQkFBaUIsT0FBTyxDQUFDLEdBQUcsT0FBTzloQyxFQUFFLENBQUMsR0FBR0YsRUFBRWdpQyxtQkFBbUIvaEMsRUFBRSxPQUFPQyxJQUFJb3NCLElBQUlqQixHQUFHbnJCLEdBQUcsS0FBS0QsR0FBR0MsRUFBRTBoQyxHQUFHenFCLEtBQUssS0FBS25YLEdBQUcsT0FBT3dzQixJQUFJQSxHQUFHLENBQUN0c0IsR0FBR3VzQixHQUFHckIsR0FBR1UsR0FBR29CLEtBQUtWLEdBQUc5eUIsS0FBS3dHLEdBQ3JmQSxFQUFFb3NCLElBQVdwc0IsRUFBUCxLQUFLRCxFQUFJK3NCLEdBQUcsR0FBRzRVLEdBQUd6cUIsS0FBSyxLQUFLblgsSUFBZWd0QixHQUFWOXNCLEVBeksrRixTQUFZRixHQUFHLE9BQU9BLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxPQUFPLEdBQUcsS0FBSyxHQUFHLEtBQUssR0FBRyxLQUFLLEdBQUcsS0FBSyxHQUFHLE9BQU8sR0FBRyxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLEdBQUcsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxHQUFHLEtBQUssRUFBRSxPQUFPLEdBQUcsUUFBUSxNQUFNNUIsTUFBTTJCLEVBQUUsSUFBSUMsS0F5S3hUaWlDLENBQUdoaUMsR0FBVWlpQyxHQUFHL3FCLEtBQUssS0FBS25YLElBQUtBLEVBQUVnaUMsaUJBQWlCL2hDLEVBQUVELEVBQUU4aEMsYUFBYTVoQyxHQUM1RyxTQUFTZ2lDLEdBQUdsaUMsR0FBaUIsR0FBZHFoQyxJQUFJLEVBQUVFLEdBQUdELEdBQUcsRUFBSyxJQUFPLEdBQUZyQixJQUFNLE1BQU03aEMsTUFBTTJCLEVBQUUsTUFBTSxJQUFJRSxFQUFFRCxFQUFFOGhDLGFBQWEsR0FBR0ssTUFBTW5pQyxFQUFFOGhDLGVBQWU3aEMsRUFBRSxPQUFPLEtBQUssSUFBSUMsRUFBRXNWLEdBQUd4VixFQUFFQSxJQUFJKzJCLEdBQUVnRyxHQUFFLEdBQUcsR0FBRyxJQUFJNzhCLEVBQUUsT0FBTyxLQUFLLElBQUlnQixFQUFFaEIsRUFBTWlCLEVBQUU4K0IsR0FBRUEsSUFBRyxHQUFHLElBQUk3K0IsRUFBRWdoQyxLQUFrQyxJQUExQnJMLEtBQUkvMkIsR0FBRys4QixLQUFJNzdCLElBQUV3L0IsS0FBSzJCLEdBQUdyaUMsRUFBRWtCLFVBQVVvaEMsS0FBSyxNQUFNLE1BQU1sOUIsR0FBR205QixHQUFHdmlDLEVBQUVvRixHQUFnRSxHQUFwRHVvQixLQUFLb1MsR0FBR3h1QixRQUFRblEsRUFBRTYrQixHQUFFOStCLEVBQUUsT0FBTysrQixHQUFFaC9CLEVBQUUsR0FBRzYxQixHQUFFLEtBQUtnRyxHQUFFLEVBQUU3N0IsRUFBRTA3QixJQUFNLElBQUswRCxHQUFHekQsSUFBSXdGLEdBQUdyaUMsRUFBRSxRQUFRLEdBQUcsSUFBSWtCLEVBQUUsQ0FBeUYsR0FBeEYsSUFBSUEsSUFBSSsrQixJQUFHLEdBQUdqZ0MsRUFBRXVULFVBQVV2VCxFQUFFdVQsU0FBUSxFQUFHMlYsR0FBR2xwQixFQUFFd1QsZ0JBQXdCLEtBQVJ0VCxFQUFFOFYsR0FBR2hXLE1BQVdrQixFQUFFc2hDLEdBQUd4aUMsRUFBRUUsS0FBUSxJQUFJZ0IsRUFBRSxNQUFNakIsRUFBRW9nQyxHQUFHZ0MsR0FBR3JpQyxFQUFFLEdBQUc4OEIsR0FBRzk4QixFQUFFRSxHQUFHMmhDLEdBQUc3aEMsRUFBRTRzQixNQUFLM3NCLEVBQzNjLE9BRDZjRCxFQUFFeWlDLGFBQ3JmemlDLEVBQUV1UixRQUFRVixVQUFVN1EsRUFBRTBpQyxjQUFjeGlDLEVBQVNnQixHQUFHLEtBQUssRUFBRSxLQUFLLEVBQUUsTUFBTTlDLE1BQU0yQixFQUFFLE1BQU0sS0FBSyxFQUFFNGlDLEdBQUczaUMsR0FBRyxNQUFNLEtBQUssRUFBVSxHQUFSODhCLEdBQUc5OEIsRUFBRUUsSUFBUyxTQUFGQSxLQUFjQSxHQUFpQixJQUFiZ0IsRUFBRXMrQixHQUFHLElBQUk1UyxNQUFVLENBQUMsR0FBRyxJQUFJcFgsR0FBR3hWLEVBQUUsR0FBRyxNQUF5QixLQUFuQm1CLEVBQUVuQixFQUFFMlYsZ0JBQXFCelYsS0FBS0EsRUFBRSxDQUFDc3dCLEtBQUt4d0IsRUFBRTRWLGFBQWE1VixFQUFFMlYsZUFBZXhVLEVBQUUsTUFBTW5CLEVBQUVwRixjQUFjb3VCLEdBQUcyWixHQUFHeHJCLEtBQUssS0FBS25YLEdBQUdrQixHQUFHLE1BQU15aEMsR0FBRzNpQyxHQUFHLE1BQU0sS0FBSyxFQUFVLEdBQVI4OEIsR0FBRzk4QixFQUFFRSxJQUFTLFFBQUZBLEtBQWFBLEVBQUUsTUFBcUIsSUFBZmdCLEVBQUVsQixFQUFFcVcsV0FBZWxWLEdBQUcsRUFBRSxFQUFFakIsR0FBRyxDQUFDLElBQUk1RixFQUFFLEdBQUd1YixHQUFHM1YsR0FBR2tCLEVBQUUsR0FBRzlHLEdBQUVBLEVBQUU0RyxFQUFFNUcsSUFBSzZHLElBQUlBLEVBQUU3RyxHQUFHNEYsSUFBSWtCLEVBQ2paLEdBRG1abEIsRUFBRWlCLEVBQ2xaLElBRDRaakIsR0FBRyxLQUFYQSxFQUFFMHNCLEtBQUkxc0IsR0FBVyxJQUFJLElBQUlBLEVBQUUsSUFBSSxLQUFLQSxFQUFFLEtBQUssS0FBS0EsRUFBRSxLQUFLLElBQUlBLEVBQUUsSUFBSSxLQUNsZkEsRUFBRSxLQUFLLEtBQUsyL0IsR0FBRzMvQixFQUFFLE9BQU9BLEdBQVUsQ0FBQ0YsRUFBRXBGLGNBQWNvdUIsR0FBRzJaLEdBQUd4ckIsS0FBSyxLQUFLblgsR0FBR0UsR0FBRyxNQUFNeWlDLEdBQUczaUMsR0FBRyxNQUFNLEtBQUssRUFBRTJpQyxHQUFHM2lDLEdBQUcsTUFBTSxRQUFRLE1BQU01QixNQUFNMkIsRUFBRSxPQUFrQixPQUFWOGhDLEdBQUc3aEMsRUFBRTRzQixNQUFZNXNCLEVBQUU4aEMsZUFBZTdoQyxFQUFFaWlDLEdBQUcvcUIsS0FBSyxLQUFLblgsR0FBRyxLQUFLLFNBQVM4OEIsR0FBRzk4QixFQUFFQyxHQUF1RCxJQUFwREEsSUFBSXNnQyxHQUFHdGdDLElBQUk0OEIsR0FBRzc4QixFQUFFMlYsZ0JBQWdCMVYsRUFBRUQsRUFBRTRWLGNBQWMzVixFQUFNRCxFQUFFQSxFQUFFK2hDLGdCQUFnQixFQUFFOWhDLEdBQUcsQ0FBQyxJQUFJQyxFQUFFLEdBQUcyVixHQUFHNVYsR0FBR2lCLEVBQUUsR0FBR2hCLEVBQUVGLEVBQUVFLElBQUksRUFBRUQsSUFBSWlCLEdBQzFVLFNBQVMwZ0MsR0FBRzVoQyxHQUFHLEdBQUcsSUFBTyxHQUFGaWdDLElBQU0sTUFBTTdoQyxNQUFNMkIsRUFBRSxNQUFXLEdBQUxvaUMsS0FBUW5pQyxJQUFJKzJCLElBQUcsSUFBSy8yQixFQUFFMFYsYUFBYXFuQixJQUFHLENBQUMsSUFBSTk4QixFQUFFODhCLEdBQU03OEIsRUFBRXNpQyxHQUFHeGlDLEVBQUVDLEdBQUcsSUFBS3FnQyxHQUFHekQsTUFBZ0IzOEIsRUFBRXNpQyxHQUFHeGlDLEVBQWZDLEVBQUV1VixHQUFHeFYsRUFBRUMsVUFBNkJDLEVBQUVzaUMsR0FBR3hpQyxFQUFmQyxFQUFFdVYsR0FBR3hWLEVBQUUsSUFBZ0gsR0FBbkcsSUFBSUEsRUFBRXVGLEtBQUssSUFBSXJGLElBQUkrL0IsSUFBRyxHQUFHamdDLEVBQUV1VCxVQUFVdlQsRUFBRXVULFNBQVEsRUFBRzJWLEdBQUdscEIsRUFBRXdULGdCQUF3QixLQUFSdlQsRUFBRStWLEdBQUdoVyxNQUFXRSxFQUFFc2lDLEdBQUd4aUMsRUFBRUMsS0FBUSxJQUFJQyxFQUFFLE1BQU1BLEVBQUVtZ0MsR0FBR2dDLEdBQUdyaUMsRUFBRSxHQUFHODhCLEdBQUc5OEIsRUFBRUMsR0FBRzRoQyxHQUFHN2hDLEVBQUU0c0IsTUFBSzFzQixFQUF1RSxPQUFyRUYsRUFBRXlpQyxhQUFhemlDLEVBQUV1UixRQUFRVixVQUFVN1EsRUFBRTBpQyxjQUFjemlDLEVBQUUwaUMsR0FBRzNpQyxHQUFHNmhDLEdBQUc3aEMsRUFBRTRzQixNQUFZLEtBQ25SLFNBQVNnVyxHQUFHNWlDLEVBQUVDLEdBQUcsSUFBSUMsRUFBRSsvQixHQUFFQSxJQUFHLEVBQUUsSUFBSSxPQUFPamdDLEVBQUVDLEdBQUcsUUFBWSxLQUFKZ2dDLEdBQUUvL0IsS0FBVXdnQyxLQUFLelQsT0FBTyxTQUFTNFYsR0FBRzdpQyxFQUFFQyxHQUFHLElBQUlDLEVBQUUrL0IsR0FBRUEsS0FBSSxFQUFFQSxJQUFHLEVBQUUsSUFBSSxPQUFPamdDLEVBQUVDLEdBQUcsUUFBWSxLQUFKZ2dDLEdBQUUvL0IsS0FBVXdnQyxLQUFLelQsT0FBTyxTQUFTbU4sR0FBR3A2QixFQUFFQyxHQUFHOHBCLEdBQUVxVyxHQUFHRCxJQUFJQSxJQUFJbGdDLEVBQUVxZ0MsSUFBSXJnQyxFQUFFLFNBQVNnOUIsS0FBS2tELEdBQUdDLEdBQUc3dUIsUUFBUXVZLEdBQUVzVyxJQUM1VixTQUFTaUMsR0FBR3JpQyxFQUFFQyxHQUFHRCxFQUFFeWlDLGFBQWEsS0FBS3ppQyxFQUFFMGlDLGNBQWMsRUFBRSxJQUFJeGlDLEVBQUVGLEVBQUVwRixjQUFpRCxJQUFsQyxJQUFJc0YsSUFBSUYsRUFBRXBGLGVBQWUsRUFBRXF1QixHQUFHL29CLElBQU8sT0FBT2dnQyxHQUFFLElBQUloZ0MsRUFBRWdnQyxHQUFFcHZCLE9BQU8sT0FBTzVRLEdBQUcsQ0FBQyxJQUFJZ0IsRUFBRWhCLEVBQUUsT0FBT2dCLEVBQUVxRSxLQUFLLEtBQUssRUFBNkIsT0FBM0JyRSxFQUFFQSxFQUFFUSxLQUFLK29CLG9CQUF3Q0MsS0FBSyxNQUFNLEtBQUssRUFBRStJLEtBQUszSixHQUFFSSxJQUFHSixHQUFFRyxJQUFHMkssS0FBSyxNQUFNLEtBQUssRUFBRWpCLEdBQUd6eUIsR0FBRyxNQUFNLEtBQUssRUFBRXV5QixLQUFLLE1BQU0sS0FBSyxHQUFjLEtBQUssR0FBRzNKLEdBQUU4SixJQUFHLE1BQU0sS0FBSyxHQUFHaEcsR0FBRzFzQixHQUFHLE1BQU0sS0FBSyxHQUFHLEtBQUssR0FBRys3QixLQUFLLzhCLEVBQUVBLEVBQUU0USxPQUFPaW1CLEdBQUUvMkIsRUFBRWtnQyxHQUFFM04sR0FBR3Z5QixFQUFFdVIsUUFBUSxNQUFNd3JCLEdBQUVvRCxHQUFHRyxHQUFHcmdDLEVBQUUyOEIsR0FBRSxFQUFFeUQsR0FBRyxLQUFLRSxHQUFHMUQsR0FBRy9NLEdBQUcsRUFDdmMsU0FBU3lTLEdBQUd2aUMsRUFBRUMsR0FBRyxPQUFFLENBQUMsSUFBSUMsRUFBRWdnQyxHQUFFLElBQXVCLEdBQW5CdlMsS0FBS21ILEdBQUd2akIsUUFBUXNrQixHQUFNUixHQUFHLENBQUMsSUFBSSxJQUFJbjBCLEVBQUVnMEIsR0FBRWprQixjQUFjLE9BQU8vUCxHQUFHLENBQUMsSUFBSUMsRUFBRUQsRUFBRXZILE1BQU0sT0FBT3dILElBQUlBLEVBQUU4dEIsUUFBUSxNQUFNL3RCLEVBQUVBLEVBQUVzdEIsS0FBSzZHLElBQUcsRUFBeUMsR0FBdENKLEdBQUcsRUFBRUcsR0FBRUQsR0FBRUQsR0FBRSxLQUFLSSxJQUFHLEVBQUcwSyxHQUFHenVCLFFBQVEsS0FBUSxPQUFPclIsR0FBRyxPQUFPQSxFQUFFNFEsT0FBTyxDQUFDOHJCLEdBQUUsRUFBRXlELEdBQUdwZ0MsRUFBRWlnQyxHQUFFLEtBQUssTUFBTWxnQyxFQUFFLENBQUMsSUFBSW9CLEVBQUVwQixFQUFFMUYsRUFBRTRGLEVBQUU0USxPQUFPMUwsRUFBRWxGLEVBQUVpRixFQUFFbEYsRUFBb0QsR0FBbERBLEVBQUU4OEIsR0FBRTMzQixFQUFFMkwsT0FBTyxLQUFLM0wsRUFBRWt0QixZQUFZbHRCLEVBQUVndEIsV0FBVyxLQUFRLE9BQU9qdEIsR0FBRyxpQkFBa0JBLEdBQUcsbUJBQW9CQSxFQUFFdzZCLEtBQUssQ0FBQyxJQUFJeHZCLEVBQUVoTCxFQUFFLEdBQUcsSUFBWSxFQUFQQyxFQUFFcXRCLE1BQVEsQ0FBQyxJQUFJajJCLEVBQUU0SSxFQUFFeUwsVUFBVXJVLEdBQUc0SSxFQUFFd3BCLFlBQVlweUIsRUFBRW95QixZQUFZeHBCLEVBQUU2TCxjQUFjelUsRUFBRXlVLGNBQWM3TCxFQUFFK29CLE1BQU0zeEIsRUFBRTJ4QixRQUNwZi9vQixFQUFFd3BCLFlBQVksS0FBS3hwQixFQUFFNkwsY0FBYyxNQUFNLElBQUkwZSxFQUFFLElBQWUsRUFBVmlFLEdBQUVyaUIsU0FBV3FlLEVBQUV0MUIsRUFBRSxFQUFFLENBQUMsSUFBSXUxQixFQUFFLEdBQUdBLEVBQUUsS0FBS0QsRUFBRXJxQixJQUFJLENBQUMsSUFBSThoQixFQUFFdUksRUFBRTNlLGNBQWMsR0FBRyxPQUFPb1csRUFBRXdJLEVBQUUsT0FBT3hJLEVBQUVuVyxlQUFxQixDQUFDLElBQUlvVyxFQUFFc0ksRUFBRWtFLGNBQWNqRSxPQUFFLElBQVN2SSxFQUFFOFQsWUFBWSxJQUFLOVQsRUFBRStULDZCQUE4QjFMLElBQVMsR0FBR0UsRUFBRSxDQUFDLElBQUl0SSxFQUFFcUksRUFBRWhCLFlBQVksR0FBRyxPQUFPckgsRUFBRSxDQUFDLElBQUlDLEVBQUUsSUFBSW5uQixJQUFJbW5CLEVBQUUvbUIsSUFBSTBQLEdBQUd5ZixFQUFFaEIsWUFBWXBILE9BQU9ELEVBQUU5bUIsSUFBSTBQLEdBQUcsR0FBRyxJQUFZLEVBQVB5ZixFQUFFNkMsTUFBUSxDQUEyQyxHQUExQzdDLEVBQUU3ZSxPQUFPLEdBQUczTCxFQUFFMkwsT0FBTyxNQUFNM0wsRUFBRTJMLFFBQVEsS0FBUSxJQUFJM0wsRUFBRUcsSUFBSSxHQUFHLE9BQU9ILEVBQUV5TCxVQUFVekwsRUFBRUcsSUFBSSxPQUFPLENBQUMsSUFBSW1pQixFQUFFMEgsSUFBSSxFQUFFLEdBQUcxSCxFQUFFbmlCLElBQUksRUFBRWlxQixHQUFHcHFCLEVBQUVzaUIsR0FBR3RpQixFQUFFK29CLE9BQU8sRUFBRSxNQUFNbnVCLEVBQUVtRixPQUM1ZixFQUFPQyxFQUFFbkYsRUFBRSxJQUFJd25CLEVBQUVybUIsRUFBRTBoQyxVQUErRyxHQUFyRyxPQUFPcmIsR0FBR0EsRUFBRXJtQixFQUFFMGhDLFVBQVUsSUFBSXZGLEdBQUdwNEIsRUFBRSxJQUFJOUUsSUFBSW9uQixFQUFFemlCLElBQUltTCxFQUFFaEwsU0FBZ0IsS0FBWEEsRUFBRXNpQixFQUFFbmhCLElBQUk2SixNQUFnQmhMLEVBQUUsSUFBSTlFLElBQUlvbkIsRUFBRXppQixJQUFJbUwsRUFBRWhMLEtBQVNBLEVBQUV5aEIsSUFBSXhoQixHQUFHLENBQUNELEVBQUUxRSxJQUFJMkUsR0FBRyxJQUFJdWlCLEVBQUVvYixHQUFHNXJCLEtBQUssS0FBSy9WLEVBQUUrTyxFQUFFL0ssR0FBRytLLEVBQUV3dkIsS0FBS2hZLEVBQUVBLEdBQUdpSSxFQUFFN2UsT0FBTyxLQUFLNmUsRUFBRXpCLE1BQU1sdUIsRUFBRSxNQUFNRCxFQUFFNHZCLEVBQUVBLEVBQUU5ZSxhQUFhLE9BQU84ZSxHQUFHenFCLEVBQUUvRyxPQUFPc0gsRUFBR04sRUFBRTFELE9BQU8scUJBQXFCLHlMQUF5TCxJQUFJazdCLEtBQUlBLEdBQUUsR0FBR3ozQixFQUFFZzRCLEdBQUdoNEIsRUFBRUMsR0FBR3dxQixFQUNwZnQxQixFQUFFLEVBQUUsQ0FBQyxPQUFPczFCLEVBQUVycUIsS0FBSyxLQUFLLEVBQUVuRSxFQUFFK0QsRUFBRXlxQixFQUFFN2UsT0FBTyxLQUFLOVEsSUFBSUEsRUFBRTJ2QixFQUFFekIsT0FBT2x1QixFQUFrQnd2QixHQUFHRyxFQUFiNk4sR0FBRzdOLEVBQUV4dUIsRUFBRW5CLElBQVcsTUFBTUQsRUFBRSxLQUFLLEVBQUVvQixFQUFFK0QsRUFBRSxJQUFJK2lCLEVBQUUwSCxFQUFFbHVCLEtBQUt5bUIsRUFBRXlILEVBQUUxZ0IsVUFBVSxHQUFHLElBQWEsR0FBUjBnQixFQUFFN2UsU0FBWSxtQkFBb0JtWCxFQUFFeVMsMEJBQTBCLE9BQU94UyxHQUFHLG1CQUFvQkEsRUFBRTBWLG9CQUFvQixPQUFPQyxLQUFLQSxHQUFHbFgsSUFBSXVCLEtBQUssQ0FBQ3lILEVBQUU3ZSxPQUFPLEtBQUs5USxJQUFJQSxFQUFFMnZCLEVBQUV6QixPQUFPbHVCLEVBQWtCd3ZCLEdBQUdHLEVBQWJnTyxHQUFHaE8sRUFBRXh1QixFQUFFbkIsSUFBVyxNQUFNRCxHQUFHNHZCLEVBQUVBLEVBQUU5ZSxhQUFhLE9BQU84ZSxHQUFHb1QsR0FBRzlpQyxHQUFHLE1BQU0raUMsR0FBSWhqQyxFQUFFZ2pDLEVBQUcvQyxLQUFJaGdDLEdBQUcsT0FBT0EsSUFBSWdnQyxHQUFFaGdDLEVBQUVBLEVBQUU0USxRQUFRLFNBQVMsT0FDL2EsU0FBU3N4QixLQUFLLElBQUlwaUMsRUFBRSsvQixHQUFHeHVCLFFBQXNCLE9BQWR3dUIsR0FBR3h1QixRQUFRc2tCLEdBQVUsT0FBTzcxQixFQUFFNjFCLEdBQUc3MUIsRUFBRSxTQUFTd2lDLEdBQUd4aUMsRUFBRUMsR0FBRyxJQUFJQyxFQUFFKy9CLEdBQUVBLElBQUcsR0FBRyxJQUFJLytCLEVBQUVraEMsS0FBMkIsSUFBdEJyTCxLQUFJLzJCLEdBQUcrOEIsS0FBSTk4QixHQUFHb2lDLEdBQUdyaUMsRUFBRUMsU0FBVWlqQyxLQUFLLE1BQU0sTUFBTS9oQyxHQUFHb2hDLEdBQUd2aUMsRUFBRW1CLEdBQWtDLEdBQXRCd3NCLEtBQUtzUyxHQUFFLy9CLEVBQUU2L0IsR0FBR3h1QixRQUFRclEsRUFBSyxPQUFPZy9CLEdBQUUsTUFBTTloQyxNQUFNMkIsRUFBRSxNQUFpQixPQUFYZzNCLEdBQUUsS0FBS2dHLEdBQUUsRUFBU0gsR0FBRSxTQUFTc0csS0FBSyxLQUFLLE9BQU9oRCxJQUFHaUQsR0FBR2pELElBQUcsU0FBU29DLEtBQUssS0FBSyxPQUFPcEMsS0FBSTNVLE1BQU00WCxHQUFHakQsSUFBRyxTQUFTaUQsR0FBR25qQyxHQUFHLElBQUlDLEVBQUUwZ0MsR0FBRzNnQyxFQUFFNlEsVUFBVTdRLEVBQUVtZ0MsSUFBSW5nQyxFQUFFOHpCLGNBQWM5ekIsRUFBRXMwQixhQUFhLE9BQU9yMEIsRUFBRStpQyxHQUFHaGpDLEdBQUdrZ0MsR0FBRWpnQyxFQUFFKy9CLEdBQUd6dUIsUUFBUSxLQUM1YSxTQUFTeXhCLEdBQUdoakMsR0FBRyxJQUFJQyxFQUFFRCxFQUFFLEVBQUUsQ0FBQyxJQUFJRSxFQUFFRCxFQUFFNFEsVUFBcUIsR0FBWDdRLEVBQUVDLEVBQUU2USxPQUFVLElBQWEsS0FBUjdRLEVBQUU4USxPQUFZLENBQWMsR0FBRyxRQUFoQjdRLEVBQUVtOEIsR0FBR244QixFQUFFRCxFQUFFa2dDLEtBQXFCLFlBQUpELEdBQUVoZ0MsR0FBYSxHQUFHLE1BQVBBLEVBQUVELEdBQVlzRixLQUFLLEtBQUtyRixFQUFFcUYsS0FBSyxPQUFPckYsRUFBRStRLGVBQWUsSUFBUSxXQUFIa3ZCLEtBQWdCLElBQVksRUFBUGpnQyxFQUFFdXlCLE1BQVEsQ0FBQyxJQUFJLElBQUl2eEIsRUFBRSxFQUFFQyxFQUFFakIsRUFBRW1SLE1BQU0sT0FBT2xRLEdBQUdELEdBQUdDLEVBQUVndEIsTUFBTWh0QixFQUFFNHNCLFdBQVc1c0IsRUFBRUEsRUFBRW1RLFFBQVFwUixFQUFFNnRCLFdBQVc3c0IsRUFBRSxPQUFPbEIsR0FBRyxJQUFhLEtBQVJBLEVBQUUrUSxTQUFjLE9BQU8vUSxFQUFFc3lCLGNBQWN0eUIsRUFBRXN5QixZQUFZcnlCLEVBQUVxeUIsYUFBYSxPQUFPcnlCLEVBQUVteUIsYUFBYSxPQUFPcHlCLEVBQUVveUIsYUFBYXB5QixFQUFFb3lCLFdBQVdDLFdBQVdweUIsRUFBRXF5QixhQUFhdHlCLEVBQUVveUIsV0FBV255QixFQUFFbXlCLFlBQVksRUFBRW55QixFQUFFOFEsUUFBUSxPQUMvZS9RLEVBQUVveUIsV0FBV3B5QixFQUFFb3lCLFdBQVdDLFdBQVdweUIsRUFBRUQsRUFBRXN5QixZQUFZcnlCLEVBQUVELEVBQUVveUIsV0FBV255QixRQUFRLENBQVMsR0FBRyxRQUFYQyxFQUFFZzlCLEdBQUdqOUIsSUFBa0MsT0FBbEJDLEVBQUU2USxPQUFPLFVBQUttdkIsR0FBRWhnQyxHQUFTLE9BQU9GLElBQUlBLEVBQUVzeUIsWUFBWXR5QixFQUFFb3lCLFdBQVcsS0FBS3B5QixFQUFFK1EsT0FBTyxNQUFrQixHQUFHLFFBQWY5USxFQUFFQSxFQUFFcVIsU0FBeUIsWUFBSjR1QixHQUFFamdDLEdBQVNpZ0MsR0FBRWpnQyxFQUFFRCxRQUFRLE9BQU9DLEdBQUcsSUFBSTI4QixLQUFJQSxHQUFFLEdBQUcsU0FBUytGLEdBQUczaUMsR0FBRyxJQUFJQyxFQUFFNHNCLEtBQThCLE9BQXpCRSxHQUFHLEdBQUdxVyxHQUFHanNCLEtBQUssS0FBS25YLEVBQUVDLElBQVcsS0FDdFQsU0FBU21qQyxHQUFHcGpDLEVBQUVDLEdBQUcsR0FBR2tpQyxXQUFXLE9BQU9yQixJQUFJLEdBQUcsSUFBTyxHQUFGYixJQUFNLE1BQU03aEMsTUFBTTJCLEVBQUUsTUFBTSxJQUFJRyxFQUFFRixFQUFFeWlDLGFBQWEsR0FBRyxPQUFPdmlDLEVBQUUsT0FBTyxLQUEyQyxHQUF0Q0YsRUFBRXlpQyxhQUFhLEtBQUt6aUMsRUFBRTBpQyxjQUFjLEVBQUt4aUMsSUFBSUYsRUFBRXVSLFFBQVEsTUFBTW5ULE1BQU0yQixFQUFFLE1BQU1DLEVBQUU4aEMsYUFBYSxLQUFLLElBQUk1Z0MsRUFBRWhCLEVBQUVpdUIsTUFBTWp1QixFQUFFNnRCLFdBQVc1c0IsRUFBRUQsRUFBRUUsRUFBRXBCLEVBQUV5VixjQUFjdFUsRUFBRW5CLEVBQUV5VixhQUFhdFUsRUFBRW5CLEVBQUUyVixlQUFlLEVBQUUzVixFQUFFNFYsWUFBWSxFQUFFNVYsRUFBRTBWLGNBQWN2VSxFQUFFbkIsRUFBRTYyQixrQkFBa0IxMUIsRUFBRW5CLEVBQUU4VixnQkFBZ0IzVSxFQUFFQSxFQUFFbkIsRUFBRStWLGNBQWMsSUFBSSxJQUFJemIsRUFBRTBGLEVBQUVxVyxXQUFXalIsRUFBRXBGLEVBQUUraEMsZ0JBQWdCLEVBQUUzZ0MsR0FBRyxDQUFDLElBQUkrRCxFQUFFLEdBQUcwUSxHQUFHelUsR0FBRytPLEVBQUUsR0FBR2hMLEVBQUVoRSxFQUFFZ0UsR0FBRyxFQUFFN0ssRUFBRTZLLElBQUksRUFBRUMsRUFBRUQsSUFBSSxFQUFFL0QsSUFBSStPLEVBQ25WLEdBRHFWLE9BQ2pmK3dCLElBQUksSUFBTyxHQUFGaGdDLElBQU9nZ0MsR0FBR3RhLElBQUk1bUIsSUFBSWtoQyxHQUFHbnVCLE9BQU8vUyxHQUFHQSxJQUFJKzJCLEtBQUltSixHQUFFbkosR0FBRSxLQUFLZ0csR0FBRSxHQUFHLEVBQUU3OEIsRUFBRTZRLE1BQU0sT0FBTzdRLEVBQUVreUIsWUFBWWx5QixFQUFFa3lCLFdBQVdDLFdBQVdueUIsRUFBRWdCLEVBQUVoQixFQUFFb3lCLGFBQWFweEIsRUFBRWhCLEVBQUVnQixFQUFFaEIsRUFBRW95QixZQUFlLE9BQU9weEIsRUFBRSxDQUF3QyxHQUF2Q0MsRUFBRTgrQixHQUFFQSxJQUFHLEdBQUdELEdBQUd6dUIsUUFBUSxLQUFLbVgsR0FBRzNSLEdBQWFnTyxHQUFWenFCLEVBQUVxcUIsTUFBYyxDQUFDLEdBQUcsbUJBQW1CcnFCLEVBQUU4SyxFQUFFLENBQUNtZ0IsTUFBTWpyQixFQUFFa3JCLGVBQWVDLElBQUluckIsRUFBRW9yQixtQkFBbUIxbEIsRUFBRSxHQUFHb0YsR0FBR0EsRUFBRTlLLEVBQUV5TixnQkFBZ0IzQyxFQUFFd2dCLGFBQWFqbEIsUUFBUXdQLEVBQUUvSyxFQUFFeWdCLGNBQWN6Z0IsRUFBRXlnQixpQkFBaUIsSUFBSTFWLEVBQUVrekIsV0FBVyxDQUFDaitCLEVBQUUrSyxFQUFFd1YsV0FBV3ZrQixFQUFFK08sRUFBRTJWLGFBQWEzZ0IsRUFBRWdMLEVBQUU0VixVQUFVNVYsRUFBRUEsRUFBRTZWLFlBQVksSUFBSTVnQixFQUFFNkUsU0FBUzlFLEVBQUU4RSxTQUFTLE1BQU1nNUIsR0FBSTc5QixFQUFFLEtBQ25mLE1BQU1wRixFQUFFLElBQUl4RCxFQUFFLEVBQUVtekIsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEVBQUUsRUFBRXhJLEVBQUUsRUFBRUMsRUFBRWh0QixFQUFFaXRCLEVBQUUsS0FBS3RuQixFQUFFLE9BQU8sQ0FBQyxJQUFJLElBQUl1bkIsRUFBS0YsSUFBSWxpQixHQUFHLElBQUloRSxHQUFHLElBQUlrbUIsRUFBRXJkLFdBQVcwbEIsRUFBRW56QixFQUFFNEUsR0FBR2ttQixJQUFJbmlCLEdBQUcsSUFBSWdMLEdBQUcsSUFBSW1YLEVBQUVyZCxXQUFXMmxCLEVBQUVwekIsRUFBRTJULEdBQUcsSUFBSW1YLEVBQUVyZCxXQUFXek4sR0FBRzhxQixFQUFFcGQsVUFBVXRSLFFBQVcsUUFBUTR1QixFQUFFRixFQUFFNWQsYUFBa0I2ZCxFQUFFRCxFQUFFQSxFQUFFRSxFQUFFLE9BQU8sQ0FBQyxHQUFHRixJQUFJaHRCLEVBQUUsTUFBTTJGLEVBQThDLEdBQTVDc25CLElBQUluaUIsS0FBS3lxQixJQUFJenVCLElBQUl1dUIsRUFBRW56QixHQUFHK3FCLElBQUlwaUIsS0FBS2tpQixJQUFJbFgsSUFBSXlmLEVBQUVwekIsR0FBTSxRQUFRZ3JCLEVBQUVGLEVBQUUvQyxhQUFhLE1BQVVnRCxHQUFKRCxFQUFFQyxHQUFNM1ksV0FBVzBZLEVBQUVFLEVBQUVwaUIsR0FBRyxJQUFJdXFCLElBQUksSUFBSUMsRUFBRSxLQUFLLENBQUNySyxNQUFNb0ssRUFBRWxLLElBQUltSyxRQUFReHFCLEVBQUUsS0FBS0EsRUFBRUEsR0FBRyxDQUFDbWdCLE1BQU0sRUFBRUUsSUFBSSxRQUFRcmdCLEVBQUUsS0FBS3VqQixHQUFHLENBQUMyYSxZQUFZaHBDLEVBQUVpcEMsZUFBZW4rQixHQUFHMlIsSUFBRyxFQUFHeXFCLEdBQUcsS0FBS0MsSUFBRyxFQUFHYixHQUFFMS9CLEVBQUUsT0FBT3NpQyxLQUFLLE1BQU1QLEdBQUksR0FBRyxPQUN2Z0JyQyxHQUFFLE1BQU14aUMsTUFBTTJCLEVBQUUsTUFBTW8rQixHQUFHeUMsR0FBRXFDLEdBQUlyQyxHQUFFQSxHQUFFdk8sa0JBQWlCLE9BQU91TyxJQUFHWSxHQUFHLEtBQUtaLEdBQUUxL0IsRUFBRSxPQUFPLElBQUk1RyxFQUFFMEYsRUFBRSxPQUFPNGdDLElBQUcsQ0FBQyxJQUFJbFosRUFBRWtaLEdBQUU3dkIsTUFBK0IsR0FBdkIsR0FBRjJXLEdBQU0zZCxHQUFHNjJCLEdBQUUxeEIsVUFBVSxJQUFTLElBQUZ3WSxFQUFNLENBQUMsSUFBSUQsRUFBRW1aLEdBQUUvdkIsVUFBVSxHQUFHLE9BQU80VyxFQUFFLENBQUMsSUFBSUUsRUFBRUYsRUFBRXNLLElBQUksT0FBT3BLLElBQUksbUJBQW9CQSxFQUFFQSxFQUFFLE1BQU1BLEVBQUVwVyxRQUFRLE9BQU8sT0FBUyxLQUFGbVcsR0FBUSxLQUFLLEVBQUV3WCxHQUFHMEIsSUFBR0EsR0FBRTd2QixRQUFRLEVBQUUsTUFBTSxLQUFLLEVBQUVtdUIsR0FBRzBCLElBQUdBLEdBQUU3dkIsUUFBUSxFQUFFd3VCLEdBQUdxQixHQUFFL3ZCLFVBQVUrdkIsSUFBRyxNQUFNLEtBQUssS0FBS0EsR0FBRTd2QixRQUFRLEtBQUssTUFBTSxLQUFLLEtBQUs2dkIsR0FBRTd2QixRQUFRLEtBQUt3dUIsR0FBR3FCLEdBQUUvdkIsVUFBVSt2QixJQUFHLE1BQU0sS0FBSyxFQUFFckIsR0FBR3FCLEdBQUUvdkIsVUFBVSt2QixJQUFHLE1BQU0sS0FBSyxFQUFNN0IsR0FBR3prQyxFQUFQOEssRUFBRXc3QixJQUFVLElBQUkzWSxFQUFFN2lCLEVBQUV5TCxVQUFVbXVCLEdBQUc1NUIsR0FBRyxPQUNuZjZpQixHQUFHK1csR0FBRy9XLEdBQUcyWSxHQUFFQSxHQUFFdk8sWUFBWSxNQUFNNFEsR0FBSSxHQUFHLE9BQU9yQyxHQUFFLE1BQU14aUMsTUFBTTJCLEVBQUUsTUFBTW8rQixHQUFHeUMsR0FBRXFDLEdBQUlyQyxHQUFFQSxHQUFFdk8sa0JBQWlCLE9BQU91TyxJQUFrRCxHQUEvQ2paLEVBQUVnQixHQUFHbEIsRUFBRTlDLEtBQUsrQyxFQUFFQyxFQUFFMmIsWUFBWWhwQyxFQUFFcXRCLEVBQUU0YixlQUFrQjliLElBQUlDLEdBQUdBLEdBQUdBLEVBQUUzZixlQUFleWMsR0FBR2tELEVBQUUzZixjQUFjd3JCLGdCQUFnQjdMLEdBQUcsQ0FBQyxPQUFPcHRCLEdBQUd5cUIsR0FBRzJDLEtBQUtELEVBQUVudEIsRUFBRWlyQixXQUFjLEtBQVJvQyxFQUFFcnRCLEVBQUVtckIsT0FBaUJrQyxFQUFFRixHQUFHLG1CQUFtQkMsR0FBR0EsRUFBRWxDLGVBQWVpQyxFQUFFQyxFQUFFaEMsYUFBYXBQLEtBQUttdEIsSUFBSTliLEVBQUVELEVBQUUzZ0IsTUFBTW5PLFVBQVUrdUIsR0FBR0YsRUFBRUMsRUFBRTNmLGVBQWU1TSxXQUFXc3NCLEVBQUU3QixhQUFhamxCLFFBQVNrbEIsZUFBZThCLEVBQUVBLEVBQUU5QixlQUFlemdCLEVBQUVzaUIsRUFBRTFlLFlBQVlwUSxPQUFPcXZCLEVBQUUzUixLQUFLbXRCLElBQUlucEMsRUFBRWlyQixNQUFNbmdCLEdBQUc5SyxPQUFFLElBQ3BmQSxFQUFFbXJCLElBQUl3QyxFQUFFM1IsS0FBS210QixJQUFJbnBDLEVBQUVtckIsSUFBSXJnQixJQUFJdWlCLEVBQUUrYixRQUFRemIsRUFBRTN0QixJQUFJOEssRUFBRTlLLEVBQUVBLEVBQUUydEIsRUFBRUEsRUFBRTdpQixHQUFHQSxFQUFFaWYsR0FBR3FELEVBQUVPLEdBQUc3bUIsRUFBRWlqQixHQUFHcUQsRUFBRXB0QixHQUFHOEssR0FBR2hFLElBQUksSUFBSXVtQixFQUFFMGIsWUFBWTFiLEVBQUVoQyxhQUFhdmdCLEVBQUVoTCxNQUFNdXRCLEVBQUU3QixlQUFlMWdCLEVBQUVrZixRQUFRcUQsRUFBRTVCLFlBQVkza0IsRUFBRWhILE1BQU11dEIsRUFBRTNCLGNBQWM1a0IsRUFBRWtqQixXQUFVbUQsRUFBRUEsRUFBRWtjLGVBQWdCQyxTQUFTeCtCLEVBQUVoTCxLQUFLZ0wsRUFBRWtmLFFBQVFxRCxFQUFFa2Msa0JBQWtCNWIsRUFBRTN0QixHQUFHcXRCLEVBQUVtYyxTQUFTcmMsR0FBR0UsRUFBRStiLE9BQU90aUMsRUFBRWhILEtBQUtnSCxFQUFFa2pCLFVBQVVtRCxFQUFFc2MsT0FBTzNpQyxFQUFFaEgsS0FBS2dILEVBQUVrakIsUUFBUXFELEVBQUVtYyxTQUFTcmMsT0FBUUEsRUFBRSxHQUFHLElBQUlFLEVBQUVELEVBQUVDLEVBQUVBLEVBQUUvWSxZQUFZLElBQUkrWSxFQUFFMWQsVUFBVXdkLEVBQUUvdEIsS0FBSyxDQUFDd0YsUUFBUXlvQixFQUFFcWMsS0FBS3JjLEVBQUVzYyxXQUFXQyxJQUFJdmMsRUFBRXdjLFlBQW1ELElBQXZDLG1CQUFvQnpjLEVBQUUrVyxPQUFPL1csRUFBRStXLFFBQVkvVyxFQUNyZixFQUFFQSxFQUFFRCxFQUFFN3VCLE9BQU84dUIsS0FBSUMsRUFBRUYsRUFBRUMsSUFBS3hvQixRQUFRK2tDLFdBQVd0YyxFQUFFcWMsS0FBS3JjLEVBQUV6b0IsUUFBUWlsQyxVQUFVeGMsRUFBRXVjLElBQUludEIsS0FBSzJSLEdBQUdDLEdBQUdELEdBQUcsS0FBSzFvQixFQUFFdVIsUUFBUXJSLEVBQUUwZ0MsR0FBRTEvQixFQUFFLE9BQU8sSUFBSXdtQixFQUFFMW5CLEVBQUUsT0FBTzRnQyxJQUFHLENBQUMsSUFBSTFZLEVBQUUwWSxHQUFFN3ZCLE1BQWdDLEdBQXhCLEdBQUZtWCxHQUFNb1csR0FBRzVXLEVBQUVrWixHQUFFL3ZCLFVBQVUrdkIsSUFBUSxJQUFGMVksRUFBTSxDQUFDVCxPQUFFLEVBQU8sSUFBSVUsRUFBRXlZLEdBQUU3TyxJQUFJLEdBQUcsT0FBTzVKLEVBQUUsQ0FBQyxJQUFJQyxFQUFFd1ksR0FBRTF4QixVQUFVLE9BQU8weEIsR0FBRXI3QixLQUFLLEtBQUssRUFBRWtpQixFQUFFVyxFQUFFLE1BQU0sUUFBUVgsRUFBRVcsRUFBRSxtQkFBb0JELEVBQUVBLEVBQUVWLEdBQUdVLEVBQUU1VyxRQUFRa1csR0FBR21aLEdBQUVBLEdBQUV2TyxZQUFZLE1BQU00USxHQUFJLEdBQUcsT0FBT3JDLEdBQUUsTUFBTXhpQyxNQUFNMkIsRUFBRSxNQUFNbytCLEdBQUd5QyxHQUFFcUMsR0FBSXJDLEdBQUVBLEdBQUV2TyxrQkFBaUIsT0FBT3VPLElBQUdBLEdBQUUsS0FBS3JVLEtBQUswVCxHQUFFOStCLE9BQU9uQixFQUFFdVIsUUFBUXJSLEVBQUUsR0FBRzJnQyxHQUFHQSxJQUFHLEVBQUdDLEdBQUc5Z0MsRUFBRStnQyxHQUFHOWdDLE9BQU8sSUFBSTJnQyxHQUFFMS9CLEVBQUUsT0FBTzAvQixJQUFHM2dDLEVBQ3BmMmdDLEdBQUV2TyxXQUFXdU8sR0FBRXZPLFdBQVcsS0FBYSxFQUFSdU8sR0FBRTd2QixTQUFVbVgsRUFBRTBZLElBQUl0dkIsUUFBUSxLQUFLNFcsRUFBRWhaLFVBQVUsTUFBTTB4QixHQUFFM2dDLEVBQXFGLEdBQWxFLEtBQWpCaUIsRUFBRWxCLEVBQUV5VixnQkFBcUJxb0IsR0FBRyxNQUFNLElBQUk1OEIsRUFBRWxCLElBQUlvaEMsR0FBR0QsTUFBTUEsR0FBRyxFQUFFQyxHQUFHcGhDLEdBQUdtaEMsR0FBRyxFQUFFamhDLEVBQUVBLEVBQUVnUCxVQUFhZ2MsSUFBSSxtQkFBb0JBLEdBQUdrWixrQkFBa0IsSUFBSWxaLEdBQUdrWixrQkFBa0JuWixHQUFHL3FCLE9BQUUsRUFBTyxLQUFzQixHQUFoQkEsRUFBRXFSLFFBQVFSLFFBQVcsTUFBTWt5QixJQUFlLEdBQVZwQixHQUFHN2hDLEVBQUU0c0IsTUFBUThRLEdBQUcsTUFBTUEsSUFBRyxFQUFHMTlCLEVBQUUyOUIsR0FBR0EsR0FBRyxLQUFLMzlCLEVBQUUsT0FBRyxJQUFPLEVBQUZpZ0MsS0FBaUJoVCxLQUFMLEtBQ2pXLFNBQVN1VyxLQUFLLEtBQUssT0FBTzVDLElBQUcsQ0FBQyxJQUFJNWdDLEVBQUU0Z0MsR0FBRS92QixVQUFVNHdCLElBQUksT0FBT0QsS0FBSyxJQUFhLEVBQVJaLEdBQUU3dkIsT0FBU1UsR0FBR212QixHQUFFWSxNQUFNQyxJQUFHLEdBQUksS0FBS2IsR0FBRXI3QixLQUFLcTZCLEdBQUc1L0IsRUFBRTRnQyxLQUFJbnZCLEdBQUdtdkIsR0FBRVksTUFBTUMsSUFBRyxJQUFLLElBQUl4aEMsRUFBRTJnQyxHQUFFN3ZCLE1BQU0sSUFBTyxJQUFGOVEsSUFBUW0rQixHQUFHcCtCLEVBQUU0Z0MsSUFBRyxJQUFPLElBQUYzZ0MsSUFBUTRnQyxLQUFLQSxJQUFHLEVBQUc3VCxHQUFHLElBQUcsV0FBZ0IsT0FBTG1WLEtBQVksU0FBUXZCLEdBQUVBLEdBQUV2TyxZQUFZLFNBQVM4UCxLQUFLLEdBQUcsS0FBS3BCLEdBQUcsQ0FBQyxJQUFJL2dDLEVBQUUsR0FBRytnQyxHQUFHLEdBQUdBLEdBQVMsT0FBTkEsR0FBRyxHQUFVaFUsR0FBRy9zQixFQUFFcWtDLElBQUksT0FBTSxFQUFHLFNBQVM3RixHQUFHeCtCLEVBQUVDLEdBQUcrZ0MsR0FBR3RuQyxLQUFLdUcsRUFBRUQsR0FBRzZnQyxLQUFLQSxJQUFHLEVBQUc3VCxHQUFHLElBQUcsV0FBZ0IsT0FBTG1WLEtBQVksU0FBUSxTQUFTNUQsR0FBR3YrQixFQUFFQyxHQUFHZ2hDLEdBQUd2bkMsS0FBS3VHLEVBQUVELEdBQUc2Z0MsS0FBS0EsSUFBRyxFQUFHN1QsR0FBRyxJQUFHLFdBQWdCLE9BQUxtVixLQUFZLFNBQ3pkLFNBQVNrQyxLQUFLLEdBQUcsT0FBT3ZELEdBQUcsT0FBTSxFQUFHLElBQUk5Z0MsRUFBRThnQyxHQUFXLEdBQVJBLEdBQUcsS0FBUSxJQUFPLEdBQUZiLElBQU0sTUFBTTdoQyxNQUFNMkIsRUFBRSxNQUFNLElBQUlFLEVBQUVnZ0MsR0FBRUEsSUFBRyxHQUFHLElBQUkvL0IsRUFBRStnQyxHQUFHQSxHQUFHLEdBQUcsSUFBSSxJQUFJLy9CLEVBQUUsRUFBRUEsRUFBRWhCLEVBQUV0SCxPQUFPc0ksR0FBRyxFQUFFLENBQUMsSUFBSUMsRUFBRWpCLEVBQUVnQixHQUFHRSxFQUFFbEIsRUFBRWdCLEVBQUUsR0FBRzVHLEVBQUU2RyxFQUFFdTJCLFFBQXlCLEdBQWpCdjJCLEVBQUV1MkIsYUFBUSxFQUFVLG1CQUFvQnA5QixFQUFFLElBQUlBLElBQUksTUFBTTZLLEdBQUcsR0FBRyxPQUFPL0QsRUFBRSxNQUFNaEQsTUFBTTJCLEVBQUUsTUFBTW8rQixHQUFHLzhCLEVBQUUrRCxJQUFlLElBQVhqRixFQUFFOGdDLEdBQUdBLEdBQUcsR0FBTzkvQixFQUFFLEVBQUVBLEVBQUVoQixFQUFFdEgsT0FBT3NJLEdBQUcsRUFBRSxDQUFDQyxFQUFFakIsRUFBRWdCLEdBQUdFLEVBQUVsQixFQUFFZ0IsRUFBRSxHQUFHLElBQUksSUFBSWtFLEVBQUVqRSxFQUFFczJCLE9BQU90MkIsRUFBRXUyQixRQUFRdHlCLElBQUksTUFBTUQsR0FBRyxHQUFHLE9BQU8vRCxFQUFFLE1BQU1oRCxNQUFNMkIsRUFBRSxNQUFNbytCLEdBQUcvOEIsRUFBRStELElBQUksSUFBSUMsRUFBRXBGLEVBQUV1UixRQUFRK2dCLFlBQVksT0FBT2x0QixHQUFHcEYsRUFBRW9GLEVBQUVpdEIsV0FBV2p0QixFQUFFaXRCLFdBQVcsS0FBYSxFQUFSanRCLEVBQUUyTCxRQUFVM0wsRUFBRWtNLFFBQ2pmLEtBQUtsTSxFQUFFOEosVUFBVSxNQUFNOUosRUFBRXBGLEVBQVcsT0FBVGlnQyxHQUFFaGdDLEVBQUVndEIsTUFBVyxFQUFHLFNBQVNxWCxHQUFHdGtDLEVBQUVDLEVBQUVDLEdBQXlCc3ZCLEdBQUd4dkIsRUFBZkMsRUFBRXc5QixHQUFHejlCLEVBQWZDLEVBQUVrOUIsR0FBR2o5QixFQUFFRCxHQUFZLElBQVdBLEVBQUV1d0IsS0FBZSxRQUFWeHdCLEVBQUUyaEMsR0FBRzNoQyxFQUFFLE1BQWNvVyxHQUFHcFcsRUFBRSxFQUFFQyxHQUFHNGhDLEdBQUc3aEMsRUFBRUMsSUFDekksU0FBU2srQixHQUFHbitCLEVBQUVDLEdBQUcsR0FBRyxJQUFJRCxFQUFFdUYsSUFBSSsrQixHQUFHdGtDLEVBQUVBLEVBQUVDLFFBQVEsSUFBSSxJQUFJQyxFQUFFRixFQUFFOFEsT0FBTyxPQUFPNVEsR0FBRyxDQUFDLEdBQUcsSUFBSUEsRUFBRXFGLElBQUksQ0FBQysrQixHQUFHcGtDLEVBQUVGLEVBQUVDLEdBQUcsTUFBVyxHQUFHLElBQUlDLEVBQUVxRixJQUFJLENBQUMsSUFBSXJFLEVBQUVoQixFQUFFZ1AsVUFBVSxHQUFHLG1CQUFvQmhQLEVBQUV3QixLQUFLaTVCLDBCQUEwQixtQkFBb0J6NUIsRUFBRTI4QixvQkFBb0IsT0FBT0MsS0FBS0EsR0FBR2xYLElBQUkxbEIsSUFBSSxDQUFXLElBQUlDLEVBQUV5OEIsR0FBRzE5QixFQUFuQkYsRUFBRW05QixHQUFHbDlCLEVBQUVELEdBQWdCLEdBQTRCLEdBQXpCd3ZCLEdBQUd0dkIsRUFBRWlCLEdBQUdBLEVBQUVxdkIsS0FBa0IsUUFBYnR3QixFQUFFeWhDLEdBQUd6aEMsRUFBRSxJQUFla1csR0FBR2xXLEVBQUUsRUFBRWlCLEdBQUcwZ0MsR0FBRzNoQyxFQUFFaUIsUUFBUSxHQUFHLG1CQUFvQkQsRUFBRTI4QixvQkFBb0IsT0FBT0MsS0FBS0EsR0FBR2xYLElBQUkxbEIsSUFBSSxJQUFJQSxFQUFFMjhCLGtCQUFrQjU5QixFQUFFRCxHQUFHLE1BQU1vQixJQUFJLE9BQU9sQixFQUFFQSxFQUFFNFEsUUFDcGQsU0FBU2l5QixHQUFHL2lDLEVBQUVDLEVBQUVDLEdBQUcsSUFBSWdCLEVBQUVsQixFQUFFOGlDLFVBQVUsT0FBTzVoQyxHQUFHQSxFQUFFNlIsT0FBTzlTLEdBQUdBLEVBQUV1d0IsS0FBS3h3QixFQUFFNFYsYUFBYTVWLEVBQUUyVixlQUFlelYsRUFBRTYyQixLQUFJLzJCLElBQUkrOEIsR0FBRTc4QixLQUFLQSxJQUFJLElBQUkwOEIsSUFBRyxJQUFJQSxLQUFNLFNBQUZHLE1BQWNBLElBQUcsSUFBSW5RLEtBQUk0UyxHQUFHNkMsR0FBR3JpQyxFQUFFLEdBQUd1Z0MsSUFBSXJnQyxHQUFHMmhDLEdBQUc3aEMsRUFBRUMsR0FBRyxTQUFTeS9CLEdBQUcxL0IsRUFBRUMsR0FBRyxJQUFJQyxFQUFFRixFQUFFa1AsVUFBVSxPQUFPaFAsR0FBR0EsRUFBRTZTLE9BQU85UyxHQUFPLElBQUpBLEVBQUUsS0FBbUIsSUFBTyxHQUFoQkEsRUFBRUQsRUFBRXl5QixPQUFleHlCLEVBQUUsRUFBRSxJQUFPLEVBQUZBLEdBQUtBLEVBQUUsS0FBSzRzQixLQUFLLEVBQUUsR0FBRyxJQUFJeVUsS0FBS0EsR0FBR2hCLElBQXVCLEtBQW5CcmdDLEVBQUVpVyxHQUFHLFVBQVVvckIsT0FBWXJoQyxFQUFFLFdBQVdDLEVBQUVzd0IsS0FBZSxRQUFWeHdCLEVBQUUyaEMsR0FBRzNoQyxFQUFFQyxNQUFjbVcsR0FBR3BXLEVBQUVDLEVBQUVDLEdBQUcyaEMsR0FBRzdoQyxFQUFFRSxJQVVqWixTQUFTcWtDLEdBQUd2a0MsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUcvSCxLQUFLb00sSUFBSXZGLEVBQUU3RyxLQUFLcUUsSUFBSTBDLEVBQUUvRyxLQUFLbVksUUFBUW5ZLEtBQUtrWSxNQUFNbFksS0FBSzJYLE9BQU8zWCxLQUFLK1YsVUFBVS9WLEtBQUt1SSxLQUFLdkksS0FBS2dHLFlBQVksS0FBS2hHLEtBQUtVLE1BQU0sRUFBRVYsS0FBSzQ0QixJQUFJLEtBQUs1NEIsS0FBS203QixhQUFhcjBCLEVBQUU5RyxLQUFLODBCLGFBQWE5MEIsS0FBSzhYLGNBQWM5WCxLQUFLeTFCLFlBQVl6MUIsS0FBSzI2QixjQUFjLEtBQUszNkIsS0FBS3M1QixLQUFLdnhCLEVBQUUvSCxLQUFLNFgsTUFBTSxFQUFFNVgsS0FBS2k1QixXQUFXajVCLEtBQUttNUIsWUFBWW41QixLQUFLazVCLFdBQVcsS0FBS2w1QixLQUFLNDBCLFdBQVc1MEIsS0FBS2cxQixNQUFNLEVBQUVoMUIsS0FBSzBYLFVBQVUsS0FBSyxTQUFTdWpCLEdBQUdwMEIsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUcsT0FBTyxJQUFJcWpDLEdBQUd2a0MsRUFBRUMsRUFBRUMsRUFBRWdCLEdBQUcsU0FBUzQ0QixHQUFHOTVCLEdBQWlCLFVBQWRBLEVBQUVBLEVBQUUxRyxhQUF1QjBHLEVBQUV3a0Msa0JBRXJkLFNBQVNqUyxHQUFHdnlCLEVBQUVDLEdBQUcsSUFBSUMsRUFBRUYsRUFBRTZRLFVBQ3VCLE9BRGIsT0FBTzNRLElBQUdBLEVBQUVrMEIsR0FBR3AwQixFQUFFdUYsSUFBSXRGLEVBQUVELEVBQUV4QyxJQUFJd0MsRUFBRXl5QixPQUFRdHpCLFlBQVlhLEVBQUViLFlBQVllLEVBQUV3QixLQUFLMUIsRUFBRTBCLEtBQUt4QixFQUFFZ1AsVUFBVWxQLEVBQUVrUCxVQUFVaFAsRUFBRTJRLFVBQVU3USxFQUFFQSxFQUFFNlEsVUFBVTNRLElBQUlBLEVBQUVvMEIsYUFBYXIwQixFQUFFQyxFQUFFd0IsS0FBSzFCLEVBQUUwQixLQUFLeEIsRUFBRTZRLE1BQU0sRUFBRTdRLEVBQUVteUIsV0FBVyxLQUFLbnlCLEVBQUVveUIsWUFBWSxLQUFLcHlCLEVBQUVreUIsV0FBVyxNQUFNbHlCLEVBQUU2dEIsV0FBVy90QixFQUFFK3RCLFdBQVc3dEIsRUFBRWl1QixNQUFNbnVCLEVBQUVtdUIsTUFBTWp1QixFQUFFbVIsTUFBTXJSLEVBQUVxUixNQUFNblIsRUFBRTR6QixjQUFjOXpCLEVBQUU4ekIsY0FBYzV6QixFQUFFK1EsY0FBY2pSLEVBQUVpUixjQUFjL1EsRUFBRTB1QixZQUFZNXVCLEVBQUU0dUIsWUFBWTN1QixFQUFFRCxFQUFFaXVCLGFBQWEvdEIsRUFBRSt0QixhQUFhLE9BQU9odUIsRUFBRSxLQUFLLENBQUNrdUIsTUFBTWx1QixFQUFFa3VCLE1BQU1ELGFBQWFqdUIsRUFBRWl1QixjQUMzZWh1QixFQUFFb1IsUUFBUXRSLEVBQUVzUixRQUFRcFIsRUFBRXJHLE1BQU1tRyxFQUFFbkcsTUFBTXFHLEVBQUU2eEIsSUFBSS94QixFQUFFK3hCLElBQVc3eEIsRUFDdkQsU0FBU3d5QixHQUFHMXlCLEVBQUVDLEVBQUVDLEVBQUVnQixFQUFFQyxFQUFFQyxHQUFHLElBQUk5RyxFQUFFLEVBQU0sR0FBSjRHLEVBQUVsQixFQUFLLG1CQUFvQkEsRUFBRTg1QixHQUFHOTVCLEtBQUsxRixFQUFFLFFBQVEsR0FBRyxpQkFBa0IwRixFQUFFMUYsRUFBRSxPQUFPMEYsRUFBRSxPQUFPQSxHQUFHLEtBQUtrRCxFQUFHLE9BQU8ydkIsR0FBRzN5QixFQUFFK0gsU0FBUzlHLEVBQUVDLEVBQUVuQixHQUFHLEtBQUs2RCxFQUFHeEosRUFBRSxFQUFFNkcsR0FBRyxHQUFHLE1BQU0sS0FBS2dDLEVBQUc3SSxFQUFFLEVBQUU2RyxHQUFHLEVBQUUsTUFBTSxLQUFLaUMsRUFBRyxPQUFPcEQsRUFBRW8wQixHQUFHLEdBQUdsMEIsRUFBRUQsRUFBSSxFQUFGa0IsSUFBT2hDLFlBQVlpRSxFQUFHcEQsRUFBRTBCLEtBQUswQixFQUFHcEQsRUFBRW11QixNQUFNL3NCLEVBQUVwQixFQUFFLEtBQUt3RCxFQUFHLE9BQU94RCxFQUFFbzBCLEdBQUcsR0FBR2wwQixFQUFFRCxFQUFFa0IsSUFBS08sS0FBSzhCLEVBQUd4RCxFQUFFYixZQUFZcUUsRUFBR3hELEVBQUVtdUIsTUFBTS9zQixFQUFFcEIsRUFBRSxLQUFLeUQsRUFBRyxPQUFPekQsRUFBRW8wQixHQUFHLEdBQUdsMEIsRUFBRUQsRUFBRWtCLElBQUtoQyxZQUFZc0UsRUFBR3pELEVBQUVtdUIsTUFBTS9zQixFQUFFcEIsRUFBRSxLQUFLK0QsRUFBRyxPQUFPeTNCLEdBQUd0N0IsRUFBRWlCLEVBQUVDLEVBQUVuQixHQUFHLEtBQUsrRCxFQUFHLE9BQU9oRSxFQUFFbzBCLEdBQUcsR0FBR2wwQixFQUFFRCxFQUFFa0IsSUFBS2hDLFlBQVk2RSxFQUFHaEUsRUFBRW11QixNQUFNL3NCLEVBQUVwQixFQUFFLFFBQVEsR0FBRyxpQkFDaGZBLEdBQUcsT0FBT0EsRUFBRSxPQUFPQSxFQUFFMkYsVUFBVSxLQUFLdEMsRUFBRy9JLEVBQUUsR0FBRyxNQUFNMEYsRUFBRSxLQUFLc0QsRUFBR2hKLEVBQUUsRUFBRSxNQUFNMEYsRUFBRSxLQUFLdUQsRUFBR2pKLEVBQUUsR0FBRyxNQUFNMEYsRUFBRSxLQUFLMEQsRUFBR3BKLEVBQUUsR0FBRyxNQUFNMEYsRUFBRSxLQUFLMkQsRUFBR3JKLEVBQUUsR0FBRzRHLEVBQUUsS0FBSyxNQUFNbEIsRUFBRSxLQUFLNEQsRUFBR3RKLEVBQUUsR0FBRyxNQUFNMEYsRUFBRSxNQUFNNUIsTUFBTTJCLEVBQUUsSUFBSSxNQUFNQyxFQUFFQSxTQUFTQSxFQUFFLEtBQXVELE9BQWpEQyxFQUFFbTBCLEdBQUc5NUIsRUFBRTRGLEVBQUVELEVBQUVrQixJQUFLaEMsWUFBWWEsRUFBRUMsRUFBRXlCLEtBQUtSLEVBQUVqQixFQUFFa3VCLE1BQU0vc0IsRUFBU25CLEVBQUUsU0FBUzR5QixHQUFHN3lCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUEyQixPQUF4QmxCLEVBQUVvMEIsR0FBRyxFQUFFcDBCLEVBQUVrQixFQUFFakIsSUFBS2t1QixNQUFNanVCLEVBQVNGLEVBQUUsU0FBU3c3QixHQUFHeDdCLEVBQUVDLEVBQUVDLEVBQUVnQixHQUE2QyxPQUExQ2xCLEVBQUVvMEIsR0FBRyxHQUFHcDBCLEVBQUVrQixFQUFFakIsSUFBS2QsWUFBWTRFLEVBQUcvRCxFQUFFbXVCLE1BQU1qdUIsRUFBU0YsRUFBRSxTQUFTd3lCLEdBQUd4eUIsRUFBRUMsRUFBRUMsR0FBOEIsT0FBM0JGLEVBQUVvMEIsR0FBRyxFQUFFcDBCLEVBQUUsS0FBS0MsSUFBS2t1QixNQUFNanVCLEVBQVNGLEVBQ2xjLFNBQVM0eUIsR0FBRzV5QixFQUFFQyxFQUFFQyxHQUE4SixPQUEzSkQsRUFBRW0wQixHQUFHLEVBQUUsT0FBT3AwQixFQUFFaUksU0FBU2pJLEVBQUVpSSxTQUFTLEdBQUdqSSxFQUFFeEMsSUFBSXlDLElBQUtrdUIsTUFBTWp1QixFQUFFRCxFQUFFaVAsVUFBVSxDQUFDc0UsY0FBY3hULEVBQUV3VCxjQUFjaXhCLGdCQUFnQixLQUFLOVIsZUFBZTN5QixFQUFFMnlCLGdCQUF1QjF5QixFQUNyTCxTQUFTeWtDLEdBQUcxa0MsRUFBRUMsRUFBRUMsR0FBRy9HLEtBQUtvTSxJQUFJdEYsRUFBRTlHLEtBQUtxYSxjQUFjeFQsRUFBRTdHLEtBQUtzcEMsYUFBYXRwQyxLQUFLMnBDLFVBQVUzcEMsS0FBS29ZLFFBQVFwWSxLQUFLc3JDLGdCQUFnQixLQUFLdHJDLEtBQUt5QixlQUFlLEVBQUV6QixLQUFLMGhDLGVBQWUxaEMsS0FBS20xQixRQUFRLEtBQUtuMUIsS0FBS29hLFFBQVFyVCxFQUFFL0csS0FBSzJvQyxhQUFhLEtBQUszb0MsS0FBSzZvQyxpQkFBaUIsRUFBRTdvQyxLQUFLa2QsV0FBV0YsR0FBRyxHQUFHaGQsS0FBSzRvQyxnQkFBZ0I1ckIsSUFBSSxHQUFHaGQsS0FBSzJjLGVBQWUzYyxLQUFLdXBDLGNBQWN2cEMsS0FBSzA5QixpQkFBaUIxOUIsS0FBS3VjLGFBQWF2YyxLQUFLeWMsWUFBWXpjLEtBQUt3YyxlQUFleGMsS0FBS3NjLGFBQWEsRUFBRXRjLEtBQUs0YyxjQUFjSSxHQUFHLEdBQUdoZCxLQUFLd3JDLGdDQUFnQyxLQUM3ZSxTQUFTQyxHQUFHNWtDLEVBQUVDLEVBQUVDLEdBQUcsSUFBSWdCLEVBQUUsRUFBRTNELFVBQVUzRSxhQUFRLElBQVMyRSxVQUFVLEdBQUdBLFVBQVUsR0FBRyxLQUFLLE1BQU0sQ0FBQ29JLFNBQVMxQyxFQUFHekYsSUFBSSxNQUFNMEQsRUFBRSxLQUFLLEdBQUdBLEVBQUUrRyxTQUFTakksRUFBRXdULGNBQWN2VCxFQUFFMHlCLGVBQWV6eUIsR0FDeEssU0FBUzJrQyxHQUFHN2tDLEVBQUVDLEVBQUVDLEVBQUVnQixHQUFHLElBQUlDLEVBQUVsQixFQUFFc1IsUUFBUW5RLEVBQUVvdkIsS0FBS2wyQixFQUFFbTJCLEdBQUd0dkIsR0FBR25CLEVBQUUsR0FBR0UsRUFBRSxDQUFxQkQsRUFBRSxDQUFDLEdBQUcyUSxHQUExQjFRLEVBQUVBLEVBQUVvd0IsbUJBQThCcHdCLEdBQUcsSUFBSUEsRUFBRXFGLElBQUksTUFBTW5ILE1BQU0yQixFQUFFLE1BQU0sSUFBSXFGLEVBQUVsRixFQUFFLEVBQUUsQ0FBQyxPQUFPa0YsRUFBRUcsS0FBSyxLQUFLLEVBQUVILEVBQUVBLEVBQUU4SixVQUFVb2YsUUFBUSxNQUFNcnVCLEVBQUUsS0FBSyxFQUFFLEdBQUd1cUIsR0FBR3BsQixFQUFFMUQsTUFBTSxDQUFDMEQsRUFBRUEsRUFBRThKLFVBQVU2YiwwQ0FBMEMsTUFBTTlxQixHQUFHbUYsRUFBRUEsRUFBRTBMLGFBQWEsT0FBTzFMLEdBQUcsTUFBTWhILE1BQU0yQixFQUFFLE1BQU8sR0FBRyxJQUFJRyxFQUFFcUYsSUFBSSxDQUFDLElBQUlKLEVBQUVqRixFQUFFd0IsS0FBSyxHQUFHOG9CLEdBQUdybEIsR0FBRyxDQUFDakYsRUFBRTBxQixHQUFHMXFCLEVBQUVpRixFQUFFQyxHQUFHLE1BQU1wRixHQUFHRSxFQUFFa0YsT0FBT2xGLEVBQUU4cEIsR0FDclcsT0FEd1csT0FBTy9wQixFQUFFcXVCLFFBQVFydUIsRUFBRXF1QixRQUFRcHVCLEVBQUVELEVBQUU0NkIsZUFBZTM2QixHQUFFRCxFQUFFbXZCLEdBQUdodUIsRUFBRTlHLElBQUtpMUIsUUFBUSxDQUFDcndCLFFBQVFjLEdBQXVCLFFBQXBCa0IsT0FBRSxJQUFTQSxFQUFFLEtBQUtBLEtBQzFlakIsRUFBRXRGLFNBQVN1RyxHQUFHc3VCLEdBQUdydUIsRUFBRWxCLEdBQUd5d0IsR0FBR3Z2QixFQUFFN0csRUFBRThHLEdBQVU5RyxFQUFFLFNBQVN3cUMsR0FBRzlrQyxHQUFlLEtBQVpBLEVBQUVBLEVBQUV1UixTQUFjRixNQUFNLE9BQU8sS0FBSyxPQUFPclIsRUFBRXFSLE1BQU05TCxLQUFLLEtBQUssRUFBMkIsUUFBUSxPQUFPdkYsRUFBRXFSLE1BQU1uQyxXQUFXLFNBQVM2MUIsR0FBRy9rQyxFQUFFQyxHQUFxQixHQUFHLFFBQXJCRCxFQUFFQSxFQUFFaVIsZ0JBQTJCLE9BQU9qUixFQUFFa1IsV0FBVyxDQUFDLElBQUloUixFQUFFRixFQUFFazdCLFVBQVVsN0IsRUFBRWs3QixVQUFVLElBQUloN0IsR0FBR0EsRUFBRUQsRUFBRUMsRUFBRUQsR0FBRyxTQUFTK2tDLEdBQUdobEMsRUFBRUMsR0FBRzhrQyxHQUFHL2tDLEVBQUVDLElBQUlELEVBQUVBLEVBQUU2USxZQUFZazBCLEdBQUcva0MsRUFBRUMsR0FDeFYsU0FBU2dsQyxHQUFHamxDLEVBQUVDLEVBQUVDLEdBQUcsSUFBSWdCLEVBQUUsTUFBTWhCLEdBQUcsTUFBTUEsRUFBRWdsQyxrQkFBa0JobEMsRUFBRWdsQyxpQkFBaUJDLGdCQUFnQixLQUFpSyxHQUE1SmpsQyxFQUFFLElBQUl3a0MsR0FBRzFrQyxFQUFFQyxFQUFFLE1BQU1DLElBQUcsSUFBS0EsRUFBRXFULFNBQVN0VCxFQUFFbTBCLEdBQUcsRUFBRSxLQUFLLEtBQUssSUFBSW4wQixFQUFFLEVBQUUsSUFBSUEsRUFBRSxFQUFFLEdBQUdDLEVBQUVxUixRQUFRdFIsRUFBRUEsRUFBRWlQLFVBQVVoUCxFQUFFeXVCLEdBQUcxdUIsR0FBR0QsRUFBRTZuQixJQUFJM25CLEVBQUVxUixRQUFReVYsR0FBRyxJQUFJaG5CLEVBQUVpSyxTQUFTakssRUFBRTRPLFdBQVc1TyxHQUFNa0IsRUFBRSxJQUFJbEIsRUFBRSxFQUFFQSxFQUFFa0IsRUFBRXRJLE9BQU9vSCxJQUFJLENBQVEsSUFBSW1CLEdBQVhsQixFQUFFaUIsRUFBRWxCLElBQVcyMkIsWUFBWXgxQixFQUFFQSxFQUFFbEIsRUFBRTIyQixTQUFTLE1BQU0xMkIsRUFBRXlrQyxnQ0FBZ0N6a0MsRUFBRXlrQyxnQ0FBZ0MsQ0FBQzFrQyxFQUFFa0IsR0FBR2pCLEVBQUV5a0MsZ0NBQWdDanJDLEtBQUt1RyxFQUFFa0IsR0FBR2hJLEtBQUtpc0MsY0FBY2xsQyxFQUMvUixTQUFTbWxDLEdBQUdybEMsR0FBRyxTQUFTQSxHQUFHLElBQUlBLEVBQUVpSyxVQUFVLElBQUlqSyxFQUFFaUssVUFBVSxLQUFLakssRUFBRWlLLFdBQVcsSUFBSWpLLEVBQUVpSyxVQUFVLGlDQUFpQ2pLLEVBQUVrSyxZQUV2VCxTQUFTbzdCLEdBQUd0bEMsRUFBRUMsRUFBRUMsRUFBRWdCLEVBQUVDLEdBQUcsSUFBSUMsRUFBRWxCLEVBQUVvL0Isb0JBQW9CLEdBQUdsK0IsRUFBRSxDQUFDLElBQUk5RyxFQUFFOEcsRUFBRWdrQyxjQUFjLEdBQUcsbUJBQW9CamtDLEVBQUUsQ0FBQyxJQUFJaUUsRUFBRWpFLEVBQUVBLEVBQUUsV0FBVyxJQUFJbkIsRUFBRThrQyxHQUFHeHFDLEdBQUc4SyxFQUFFN0wsS0FBS3lHLElBQUk2a0MsR0FBRzVrQyxFQUFFM0YsRUFBRTBGLEVBQUVtQixPQUFPLENBQW1ELEdBQWxEQyxFQUFFbEIsRUFBRW8vQixvQkFEMUssU0FBWXQvQixFQUFFQyxHQUEwSCxHQUF2SEEsSUFBMkRBLE1BQXZEQSxFQUFFRCxFQUFFLElBQUlBLEVBQUVpSyxTQUFTakssRUFBRXV6QixnQkFBZ0J2ekIsRUFBRTBKLFdBQVcsT0FBYSxJQUFJekosRUFBRWdLLFdBQVdoSyxFQUFFc2xDLGFBQWEscUJBQXdCdGxDLEVBQUUsSUFBSSxJQUFJQyxFQUFFQSxFQUFFRixFQUFFZ0ssV0FBV2hLLEVBQUUySixZQUFZekosR0FBRyxPQUFPLElBQUkra0MsR0FBR2psQyxFQUFFLEVBQUVDLEVBQUUsQ0FBQ3NULFNBQVEsUUFBSSxHQUMzQml5QixDQUFHdGxDLEVBQUVnQixHQUFHNUcsRUFBRThHLEVBQUVna0MsY0FBaUIsbUJBQW9CamtDLEVBQUUsQ0FBQyxJQUFJZ0UsRUFBRWhFLEVBQUVBLEVBQUUsV0FBVyxJQUFJbkIsRUFBRThrQyxHQUFHeHFDLEdBQUc2SyxFQUFFNUwsS0FBS3lHLElBQUk2aUMsSUFBRyxXQUFXZ0MsR0FBRzVrQyxFQUFFM0YsRUFBRTBGLEVBQUVtQixNQUFLLE9BQU8yakMsR0FBR3hxQyxHQUdsRyxTQUFTbXJDLEdBQUd6bEMsRUFBRUMsR0FBRyxJQUFJQyxFQUFFLEVBQUUzQyxVQUFVM0UsYUFBUSxJQUFTMkUsVUFBVSxHQUFHQSxVQUFVLEdBQUcsS0FBSyxJQUFJOG5DLEdBQUdwbEMsR0FBRyxNQUFNN0IsTUFBTTJCLEVBQUUsTUFBTSxPQUFPNmtDLEdBQUc1a0MsRUFBRUMsRUFBRSxLQUFLQyxHQTFCdFd5Z0MsR0FBRyxTQUFTM2dDLEVBQUVDLEVBQUVDLEdBQUcsSUFBSWdCLEVBQUVqQixFQUFFa3VCLE1BQU0sR0FBRyxPQUFPbnVCLEVBQUUsR0FBR0EsRUFBRTh6QixnQkFBZ0I3ekIsRUFBRXEwQixjQUFjcEssR0FBRTNZLFFBQVE2YyxJQUFHLE1BQVEsSUFBRyxJQUFLbHVCLEVBQUVnQixHQUFvQyxDQUFPLE9BQU5rdEIsSUFBRyxFQUFVbnVCLEVBQUVzRixLQUFLLEtBQUssRUFBRXExQixHQUFHMzZCLEdBQUd5MEIsS0FBSyxNQUFNLEtBQUssRUFBRWhCLEdBQUd6ekIsR0FBRyxNQUFNLEtBQUssRUFBRXVxQixHQUFHdnFCLEVBQUV5QixPQUFPb3BCLEdBQUc3cUIsR0FBRyxNQUFNLEtBQUssRUFBRXF6QixHQUFHcnpCLEVBQUVBLEVBQUVpUCxVQUFVc0UsZUFBZSxNQUFNLEtBQUssR0FBR3RTLEVBQUVqQixFQUFFNnpCLGNBQWMvc0IsTUFBTSxJQUFJNUYsRUFBRWxCLEVBQUV5QixLQUFLa0UsU0FBU21rQixHQUFFd0QsR0FBR3BzQixFQUFFMHNCLGVBQWUxc0IsRUFBRTBzQixjQUFjM3NCLEVBQUUsTUFBTSxLQUFLLEdBQUcsR0FBRyxPQUFPakIsRUFBRWdSLGNBQWUsT0FBRyxJQUFLL1EsRUFBRUQsRUFBRW9SLE1BQU0wYyxZQUFtQm9OLEdBQUduN0IsRUFBRUMsRUFBRUMsSUFBRzZwQixHQUFFNkosR0FBWSxFQUFWQSxHQUFFcmlCLFNBQThCLFFBQW5CdFIsRUFBRTI1QixHQUFHNTVCLEVBQUVDLEVBQUVDLElBQy9lRCxFQUFFcVIsUUFBUSxNQUFLeVksR0FBRTZKLEdBQVksRUFBVkEsR0FBRXJpQixTQUFXLE1BQU0sS0FBSyxHQUEwQixHQUF2QnJRLEVBQUUsSUFBS2hCLEVBQUVELEVBQUU4dEIsWUFBZSxJQUFhLEdBQVIvdEIsRUFBRStRLE9BQVUsQ0FBQyxHQUFHN1AsRUFBRSxPQUFPaTdCLEdBQUduOEIsRUFBRUMsRUFBRUMsR0FBR0QsRUFBRThRLE9BQU8sR0FBK0YsR0FBMUUsUUFBbEI1UCxFQUFFbEIsRUFBRWdSLGlCQUF5QjlQLEVBQUUyNkIsVUFBVSxLQUFLMzZCLEVBQUU4NkIsS0FBSyxLQUFLOTZCLEVBQUVpeEIsV0FBVyxNQUFNckksR0FBRTZKLEdBQUVBLEdBQUVyaUIsU0FBWXJRLEVBQUUsTUFBVyxPQUFPLEtBQUssS0FBSyxHQUFHLEtBQUssR0FBRyxPQUFPakIsRUFBRWt1QixNQUFNLEVBQUUrTCxHQUFHbDZCLEVBQUVDLEVBQUVDLEdBQUcsT0FBTzA1QixHQUFHNTVCLEVBQUVDLEVBQUVDLEdBRDNMa3VCLEdBQUcsSUFBYSxNQUFScHVCLEVBQUUrUSxZQUN5THFkLElBQUcsRUFBYSxPQUFWbnVCLEVBQUVrdUIsTUFBTSxFQUFTbHVCLEVBQUVzRixLQUFLLEtBQUssRUFBK0ksR0FBN0lyRSxFQUFFakIsRUFBRXlCLEtBQUssT0FBTzFCLElBQUlBLEVBQUU2USxVQUFVLEtBQUs1USxFQUFFNFEsVUFBVSxLQUFLNVEsRUFBRThRLE9BQU8sR0FBRy9RLEVBQUVDLEVBQUVxMEIsYUFBYW56QixFQUFFaXBCLEdBQUducUIsRUFBRWdxQixHQUFFMVksU0FBU3ljLEdBQUcvdEIsRUFBRUMsR0FBR2lCLEVBQUVzMEIsR0FBRyxLQUFLeDFCLEVBQUVpQixFQUFFbEIsRUFBRW1CLEVBQUVqQixHQUFHRCxFQUFFOFEsT0FBTyxFQUFLLGlCQUNyZTVQLEdBQUcsT0FBT0EsR0FBRyxtQkFBb0JBLEVBQUVxRSxhQUFRLElBQVNyRSxFQUFFd0UsU0FBUyxDQUFpRCxHQUFoRDFGLEVBQUVzRixJQUFJLEVBQUV0RixFQUFFZ1IsY0FBYyxLQUFLaFIsRUFBRTJ1QixZQUFZLEtBQVFwRSxHQUFHdHBCLEdBQUcsQ0FBQyxJQUFJRSxHQUFFLEVBQUcwcEIsR0FBRzdxQixRQUFRbUIsR0FBRSxFQUFHbkIsRUFBRWdSLGNBQWMsT0FBTzlQLEVBQUUrdkIsWUFBTyxJQUFTL3ZCLEVBQUUrdkIsTUFBTS92QixFQUFFK3ZCLE1BQU0sS0FBS3ZDLEdBQUcxdUIsR0FBRyxJQUFJM0YsRUFBRTRHLEVBQUVzd0IseUJBQXlCLG1CQUFvQmwzQixHQUFHNjFCLEdBQUdsd0IsRUFBRWlCLEVBQUU1RyxFQUFFMEYsR0FBR21CLEVBQUVnd0IsUUFBUWYsR0FBR253QixFQUFFaVAsVUFBVS9OLEVBQUVBLEVBQUVtdkIsZ0JBQWdCcndCLEVBQUVzeEIsR0FBR3R4QixFQUFFaUIsRUFBRWxCLEVBQUVFLEdBQUdELEVBQUV5NkIsR0FBRyxLQUFLejZCLEVBQUVpQixHQUFFLEVBQUdFLEVBQUVsQixRQUFRRCxFQUFFc0YsSUFBSSxFQUFFbTBCLEdBQUcsS0FBS3o1QixFQUFFa0IsRUFBRWpCLEdBQUdELEVBQUVBLEVBQUVvUixNQUFNLE9BQU9wUixFQUFFLEtBQUssR0FBR2tCLEVBQUVsQixFQUFFZCxZQUFZYSxFQUFFLENBQ2hYLE9BRGlYLE9BQU9BLElBQUlBLEVBQUU2USxVQUFVLEtBQUs1USxFQUFFNFEsVUFBVSxLQUFLNVEsRUFBRThRLE9BQU8sR0FDbmYvUSxFQUFFQyxFQUFFcTBCLGFBQXVCbnpCLEdBQVZDLEVBQUVELEVBQUUyRSxPQUFVM0UsRUFBRTBFLFVBQVU1RixFQUFFeUIsS0FBS1AsRUFBRUMsRUFBRW5CLEVBQUVzRixJQU94RCxTQUFZdkYsR0FBRyxHQUFHLG1CQUFvQkEsRUFBRSxPQUFPODVCLEdBQUc5NUIsR0FBRyxFQUFFLEVBQUUsR0FBRyxNQUFTQSxFQUFZLENBQWMsSUFBYkEsRUFBRUEsRUFBRTJGLFlBQWdCcEMsRUFBRyxPQUFPLEdBQUcsR0FBR3ZELElBQUkwRCxFQUFHLE9BQU8sR0FBRyxPQUFPLEVBUGxGZ2lDLENBQUd2a0MsR0FBR25CLEVBQUVxdEIsR0FBR2xzQixFQUFFbkIsR0FBVW9CLEdBQUcsS0FBSyxFQUFFbkIsRUFBRWc2QixHQUFHLEtBQUtoNkIsRUFBRWtCLEVBQUVuQixFQUFFRSxHQUFHLE1BQU1GLEVBQUUsS0FBSyxFQUFFQyxFQUFFcTZCLEdBQUcsS0FBS3I2QixFQUFFa0IsRUFBRW5CLEVBQUVFLEdBQUcsTUFBTUYsRUFBRSxLQUFLLEdBQUdDLEVBQUUwNUIsR0FBRyxLQUFLMTVCLEVBQUVrQixFQUFFbkIsRUFBRUUsR0FBRyxNQUFNRixFQUFFLEtBQUssR0FBR0MsRUFBRTQ1QixHQUFHLEtBQUs1NUIsRUFBRWtCLEVBQUVrc0IsR0FBR2xzQixFQUFFTyxLQUFLMUIsR0FBR2tCLEVBQUVoQixHQUFHLE1BQU1GLEVBQUUsTUFBTTVCLE1BQU0yQixFQUFFLElBQUlvQixFQUFFLEtBQU0sT0FBT2xCLEVBQUUsS0FBSyxFQUFFLE9BQU9pQixFQUFFakIsRUFBRXlCLEtBQUtQLEVBQUVsQixFQUFFcTBCLGFBQTJDMkYsR0FBR2o2QixFQUFFQyxFQUFFaUIsRUFBckNDLEVBQUVsQixFQUFFZCxjQUFjK0IsRUFBRUMsRUFBRWtzQixHQUFHbnNCLEVBQUVDLEdBQWNqQixHQUFHLEtBQUssRUFBRSxPQUFPZ0IsRUFBRWpCLEVBQUV5QixLQUFLUCxFQUFFbEIsRUFBRXEwQixhQUEyQ2dHLEdBQUd0NkIsRUFBRUMsRUFBRWlCLEVBQXJDQyxFQUFFbEIsRUFBRWQsY0FBYytCLEVBQUVDLEVBQUVrc0IsR0FBR25zQixFQUFFQyxHQUFjakIsR0FBRyxLQUFLLEVBQXdCLEdBQXRCMDZCLEdBQUczNkIsR0FBR2lCLEVBQUVqQixFQUFFMnVCLFlBQWUsT0FBTzV1QixHQUFHLE9BQU9rQixFQUFFLE1BQU05QyxNQUFNMkIsRUFBRSxNQUMzWSxHQUE5R21CLEVBQUVqQixFQUFFcTBCLGFBQStCbnpCLEVBQUUsUUFBcEJBLEVBQUVsQixFQUFFZ1IsZUFBeUI5UCxFQUFFakMsUUFBUSxLQUFLaXdCLEdBQUdudkIsRUFBRUMsR0FBR3l2QixHQUFHenZCLEVBQUVpQixFQUFFLEtBQUtoQixJQUFHZ0IsRUFBRWpCLEVBQUVnUixjQUFjL1IsV0FBZWlDLEVBQUV1ekIsS0FBS3owQixFQUFFMjVCLEdBQUc1NUIsRUFBRUMsRUFBRUMsT0FBTyxDQUF1RixJQUFyRWtCLEdBQWpCRCxFQUFFbEIsRUFBRWlQLFdBQWlCcUUsV0FBUTBnQixHQUFHOUssR0FBR2xwQixFQUFFaVAsVUFBVXNFLGNBQWM5SixZQUFZc3FCLEdBQUcvekIsRUFBRW1CLEVBQUU4eUIsSUFBRyxHQUFNOXlCLEVBQUUsQ0FBcUMsR0FBRyxPQUF2Q3BCLEVBQUVtQixFQUFFd2pDLGlDQUEyQyxJQUFJeGpDLEVBQUUsRUFBRUEsRUFBRW5CLEVBQUVwSCxPQUFPdUksR0FBRyxHQUFFQyxFQUFFcEIsRUFBRW1CLElBQUswekIsOEJBQThCNzBCLEVBQUVtQixFQUFFLEdBQUd3ekIsR0FBR2o3QixLQUFLMEgsR0FBb0IsSUFBakJsQixFQUFFOHlCLEdBQUcveUIsRUFBRSxLQUFLaUIsRUFBRWhCLEdBQU9ELEVBQUVvUixNQUFNblIsRUFBRUEsR0FBR0EsRUFBRTZRLE9BQWUsRUFBVDdRLEVBQUU2USxNQUFTLEtBQUs3USxFQUFFQSxFQUFFb1IsYUFBYW9vQixHQUFHMTVCLEVBQUVDLEVBQUVpQixFQUFFaEIsR0FBR3cwQixLQUFLejBCLEVBQUVBLEVBQUVvUixNQUFNLE9BQU9wUixFQUFFLEtBQUssRUFBRSxPQUFPeXpCLEdBQUd6ekIsR0FBRyxPQUFPRCxHQUNuZnUwQixHQUFHdDBCLEdBQUdpQixFQUFFakIsRUFBRXlCLEtBQUtQLEVBQUVsQixFQUFFcTBCLGFBQWFsekIsRUFBRSxPQUFPcEIsRUFBRUEsRUFBRTh6QixjQUFjLEtBQUt4NUIsRUFBRTZHLEVBQUU4RyxTQUFTNmdCLEdBQUc1bkIsRUFBRUMsR0FBRzdHLEVBQUUsS0FBSyxPQUFPOEcsR0FBRzBuQixHQUFHNW5CLEVBQUVFLEtBQUtuQixFQUFFOFEsT0FBTyxJQUFJc3BCLEdBQUdyNkIsRUFBRUMsR0FBR3k1QixHQUFHMTVCLEVBQUVDLEVBQUUzRixFQUFFNEYsR0FBR0QsRUFBRW9SLE1BQU0sS0FBSyxFQUFFLE9BQU8sT0FBT3JSLEdBQUd1MEIsR0FBR3QwQixHQUFHLEtBQUssS0FBSyxHQUFHLE9BQU9rN0IsR0FBR243QixFQUFFQyxFQUFFQyxHQUFHLEtBQUssRUFBRSxPQUFPb3pCLEdBQUdyekIsRUFBRUEsRUFBRWlQLFVBQVVzRSxlQUFldFMsRUFBRWpCLEVBQUVxMEIsYUFBYSxPQUFPdDBCLEVBQUVDLEVBQUVvUixNQUFNMGhCLEdBQUc5eUIsRUFBRSxLQUFLaUIsRUFBRWhCLEdBQUd3NUIsR0FBRzE1QixFQUFFQyxFQUFFaUIsRUFBRWhCLEdBQUdELEVBQUVvUixNQUFNLEtBQUssR0FBRyxPQUFPblEsRUFBRWpCLEVBQUV5QixLQUFLUCxFQUFFbEIsRUFBRXEwQixhQUEyQ3FGLEdBQUczNUIsRUFBRUMsRUFBRWlCLEVBQXJDQyxFQUFFbEIsRUFBRWQsY0FBYytCLEVBQUVDLEVBQUVrc0IsR0FBR25zQixFQUFFQyxHQUFjakIsR0FBRyxLQUFLLEVBQUUsT0FBT3c1QixHQUFHMTVCLEVBQUVDLEVBQUVBLEVBQUVxMEIsYUFBYXAwQixHQUFHRCxFQUFFb1IsTUFBTSxLQUFLLEVBQ3RjLEtBQUssR0FBRyxPQUFPcW9CLEdBQUcxNUIsRUFBRUMsRUFBRUEsRUFBRXEwQixhQUFhcnNCLFNBQVMvSCxHQUFHRCxFQUFFb1IsTUFBTSxLQUFLLEdBQUdyUixFQUFFLENBQUNrQixFQUFFakIsRUFBRXlCLEtBQUtrRSxTQUFTekUsRUFBRWxCLEVBQUVxMEIsYUFBYWg2QixFQUFFMkYsRUFBRTZ6QixjQUFjMXlCLEVBQUVELEVBQUU0RixNQUFNLElBQUkzQixFQUFFbkYsRUFBRXlCLEtBQUtrRSxTQUFpRCxHQUF4Q21rQixHQUFFd0QsR0FBR25vQixFQUFFeW9CLGVBQWV6b0IsRUFBRXlvQixjQUFjenNCLEVBQUssT0FBTzlHLEVBQUUsR0FBRzhLLEVBQUU5SyxFQUFFeU0sTUFBMEcsSUFBcEczRixFQUFFNmlCLEdBQUc3ZSxFQUFFaEUsR0FBRyxFQUF3RixHQUFyRixtQkFBb0JGLEVBQUV5a0Msc0JBQXNCemtDLEVBQUV5a0Msc0JBQXNCdmdDLEVBQUVoRSxHQUFHLGNBQXFCLEdBQUc5RyxFQUFFMk4sV0FBVzlHLEVBQUU4RyxXQUFXaWlCLEdBQUUzWSxRQUFRLENBQUN0UixFQUFFMjVCLEdBQUc1NUIsRUFBRUMsRUFBRUMsR0FBRyxNQUFNRixRQUFRLElBQWMsUUFBVm9GLEVBQUVuRixFQUFFb1IsU0FBaUJqTSxFQUFFMEwsT0FBTzdRLEdBQUcsT0FBT21GLEdBQUcsQ0FBQyxJQUFJRCxFQUFFQyxFQUFFNm9CLGFBQWEsR0FBRyxPQUFPOW9CLEVBQUUsQ0FBQzdLLEVBQUU4SyxFQUFFaU0sTUFBTSxJQUFJLElBQUlsQixFQUN0ZmhMLEVBQUUrb0IsYUFBYSxPQUFPL2QsR0FBRyxDQUFDLEdBQUdBLEVBQUVtZSxVQUFVcHRCLEdBQUcsSUFBS2lQLEVBQUVvZSxhQUFhbnRCLEdBQUcsQ0FBQyxJQUFJZ0UsRUFBRUcsT0FBTTRLLEVBQUVpZixJQUFJLEVBQUVsdkIsR0FBR0EsSUFBS3FGLElBQUksRUFBRWlxQixHQUFHcHFCLEVBQUUrSyxJQUFJL0ssRUFBRStvQixPQUFPanVCLEVBQWdCLFFBQWRpUSxFQUFFL0ssRUFBRXlMLGFBQXFCVixFQUFFZ2UsT0FBT2p1QixHQUFHNHRCLEdBQUcxb0IsRUFBRTBMLE9BQU81USxHQUFHaUYsRUFBRWdwQixPQUFPanVCLEVBQUUsTUFBTWlRLEVBQUVBLEVBQUVxZSxXQUFXbDBCLEVBQUUsS0FBSzhLLEVBQUVHLEtBQUlILEVBQUUxRCxPQUFPekIsRUFBRXlCLEtBQUssS0FBYTBELEVBQUVpTSxNQUFNLEdBQUcsT0FBTy9XLEVBQUVBLEVBQUV3VyxPQUFPMUwsT0FBTyxJQUFJOUssRUFBRThLLEVBQUUsT0FBTzlLLEdBQUcsQ0FBQyxHQUFHQSxJQUFJMkYsRUFBRSxDQUFDM0YsRUFBRSxLQUFLLE1BQWtCLEdBQUcsUUFBZjhLLEVBQUU5SyxFQUFFZ1gsU0FBb0IsQ0FBQ2xNLEVBQUUwTCxPQUFPeFcsRUFBRXdXLE9BQU94VyxFQUFFOEssRUFBRSxNQUFNOUssRUFBRUEsRUFBRXdXLE9BQU8xTCxFQUFFOUssRUFBRW8vQixHQUFHMTVCLEVBQUVDLEVBQUVrQixFQUFFOEcsU0FBUy9ILEdBQUdELEVBQUVBLEVBQUVvUixNQUFNLE9BQU9wUixFQUFFLEtBQUssRUFBRSxPQUFPa0IsRUFBRWxCLEVBQUV5QixLQUFzQlIsR0FBakJFLEVBQUVuQixFQUFFcTBCLGNBQWlCcnNCLFNBQVMrbEIsR0FBRy90QixFQUFFQyxHQUNuZGdCLEVBQUVBLEVBRG9kQyxFQUFFa3RCLEdBQUdsdEIsRUFDcGZDLEVBQUV3a0Msd0JBQThCM2xDLEVBQUU4USxPQUFPLEVBQUUyb0IsR0FBRzE1QixFQUFFQyxFQUFFaUIsRUFBRWhCLEdBQUdELEVBQUVvUixNQUFNLEtBQUssR0FBRyxPQUFnQmpRLEVBQUVpc0IsR0FBWGxzQixFQUFFbEIsRUFBRXlCLEtBQVl6QixFQUFFcTBCLGNBQTZCdUYsR0FBRzc1QixFQUFFQyxFQUFFa0IsRUFBdEJDLEVBQUVpc0IsR0FBR2xzQixFQUFFTyxLQUFLTixHQUFjRixFQUFFaEIsR0FBRyxLQUFLLEdBQUcsT0FBTzg1QixHQUFHaDZCLEVBQUVDLEVBQUVBLEVBQUV5QixLQUFLekIsRUFBRXEwQixhQUFhcHpCLEVBQUVoQixHQUFHLEtBQUssR0FBRyxPQUFPZ0IsRUFBRWpCLEVBQUV5QixLQUFLUCxFQUFFbEIsRUFBRXEwQixhQUFhbnpCLEVBQUVsQixFQUFFZCxjQUFjK0IsRUFBRUMsRUFBRWtzQixHQUFHbnNCLEVBQUVDLEdBQUcsT0FBT25CLElBQUlBLEVBQUU2USxVQUFVLEtBQUs1USxFQUFFNFEsVUFBVSxLQUFLNVEsRUFBRThRLE9BQU8sR0FBRzlRLEVBQUVzRixJQUFJLEVBQUVpbEIsR0FBR3RwQixJQUFJbEIsR0FBRSxFQUFHOHFCLEdBQUc3cUIsSUFBSUQsR0FBRSxFQUFHZ3VCLEdBQUcvdEIsRUFBRUMsR0FBRzh3QixHQUFHL3dCLEVBQUVpQixFQUFFQyxHQUFHb3dCLEdBQUd0eEIsRUFBRWlCLEVBQUVDLEVBQUVqQixHQUFHdzZCLEdBQUcsS0FBS3o2QixFQUFFaUIsR0FBRSxFQUFHbEIsRUFBRUUsR0FBRyxLQUFLLEdBQUcsT0FBT2k4QixHQUFHbjhCLEVBQUVDLEVBQUVDLEdBQUcsS0FBSyxHQUFvQixLQUFLLEdBQUcsT0FBT2c2QixHQUFHbDZCLEVBQUVDLEVBQUVDLEdBQUcsTUFBTTlCLE1BQU0yQixFQUFFLElBQUlFLEVBQUVzRixPQWEvZTAvQixHQUFHM3JDLFVBQVVrTSxPQUFPLFNBQVN4RixHQUFHNmtDLEdBQUc3a0MsRUFBRTdHLEtBQUtpc0MsY0FBYyxLQUFLLE9BQU9ILEdBQUczckMsVUFBVXVzQyxRQUFRLFdBQVcsSUFBSTdsQyxFQUFFN0csS0FBS2lzQyxjQUFjbmxDLEVBQUVELEVBQUV3VCxjQUFjcXhCLEdBQUcsS0FBSzdrQyxFQUFFLE1BQUssV0FBV0MsRUFBRTRuQixJQUFJLFNBRXdKblcsR0FBRyxTQUFTMVIsR0FBTSxLQUFLQSxFQUFFdUYsTUFBZ0JtckIsR0FBRzF3QixFQUFFLEVBQVZ3d0IsTUFBZXdVLEdBQUdobEMsRUFBRSxLQUFLMlIsR0FBRyxTQUFTM1IsR0FBTSxLQUFLQSxFQUFFdUYsTUFBZ0JtckIsR0FBRzF3QixFQUFFLFNBQVZ3d0IsTUFBc0J3VSxHQUFHaGxDLEVBQUUsWUFDbmM0UixHQUFHLFNBQVM1UixHQUFHLEdBQUcsS0FBS0EsRUFBRXVGLElBQUksQ0FBQyxJQUFJdEYsRUFBRXV3QixLQUFLdHdCLEVBQUV1d0IsR0FBR3p3QixHQUFHMHdCLEdBQUcxd0IsRUFBRUUsRUFBRUQsR0FBRytrQyxHQUFHaGxDLEVBQUVFLEtBQUsyUixHQUFHLFNBQVM3UixFQUFFQyxHQUFHLE9BQU9BLEtBQzdGNE8sR0FBRyxTQUFTN08sRUFBRUMsRUFBRUMsR0FBRyxPQUFPRCxHQUFHLElBQUssUUFBeUIsR0FBakIySCxHQUFHNUgsRUFBRUUsR0FBR0QsRUFBRUMsRUFBRTdCLEtBQVEsVUFBVTZCLEVBQUV3QixNQUFNLE1BQU16QixFQUFFLENBQUMsSUFBSUMsRUFBRUYsRUFBRUUsRUFBRTBPLFlBQVkxTyxFQUFFQSxFQUFFME8sV0FBc0YsSUFBM0UxTyxFQUFFQSxFQUFFNGxDLGlCQUFpQixjQUFjQyxLQUFLQyxVQUFVLEdBQUcvbEMsR0FBRyxtQkFBdUJBLEVBQUUsRUFBRUEsRUFBRUMsRUFBRXRILE9BQU9xSCxJQUFJLENBQUMsSUFBSWlCLEVBQUVoQixFQUFFRCxHQUFHLEdBQUdpQixJQUFJbEIsR0FBR2tCLEVBQUUra0MsT0FBT2ptQyxFQUFFaW1DLEtBQUssQ0FBQyxJQUFJOWtDLEVBQUVnTyxHQUFHak8sR0FBRyxJQUFJQyxFQUFFLE1BQU0vQyxNQUFNMkIsRUFBRSxLQUFLOEcsRUFBRzNGLEdBQUcwRyxHQUFHMUcsRUFBRUMsS0FBSyxNQUFNLElBQUssV0FBVzJILEdBQUc5SSxFQUFFRSxHQUFHLE1BQU0sSUFBSyxTQUFtQixPQUFWRCxFQUFFQyxFQUFFNkcsUUFBZXFCLEdBQUdwSSxJQUFJRSxFQUFFcThCLFNBQVN0OEIsR0FBRSxLQUFNcVAsR0FBR3N6QixHQUM5WnJ6QixHQUFHLFNBQVN2UCxFQUFFQyxFQUFFQyxFQUFFZ0IsRUFBRUMsR0FBRyxJQUFJQyxFQUFFNitCLEdBQUVBLElBQUcsRUFBRSxJQUFJLE9BQU9sVCxHQUFHLEdBQUcvc0IsRUFBRW1YLEtBQUssS0FBS2xYLEVBQUVDLEVBQUVnQixFQUFFQyxJQUFJLFFBQVksS0FBSjgrQixHQUFFNytCLEtBQVVzL0IsS0FBS3pULFFBQVF6ZCxHQUFHLFdBQVcsSUFBTyxHQUFGeXdCLE1BaEQvSCxXQUFjLEdBQUcsT0FBT2lCLEdBQUcsQ0FBQyxJQUFJbGhDLEVBQUVraEMsR0FBR0EsR0FBRyxLQUFLbGhDLEVBQUVwRCxTQUFRLFNBQVNvRCxHQUFHQSxFQUFFMFYsY0FBYyxHQUFHMVYsRUFBRXlWLGFBQWFvc0IsR0FBRzdoQyxFQUFFNHNCLFNBQU9LLEtBZ0RzQmlaLEdBQUsvRCxPQUFPMXlCLEdBQUcsU0FBU3pQLEVBQUVDLEdBQUcsSUFBSUMsRUFBRSsvQixHQUFFQSxJQUFHLEVBQUUsSUFBSSxPQUFPamdDLEVBQUVDLEdBQUcsUUFBWSxLQUFKZ2dDLEdBQUUvL0IsS0FBVXdnQyxLQUFLelQsUUFBK0ksSUFBSWtaLEdBQUcsQ0FBQ0MsT0FBTyxDQUFDbjNCLEdBQUdpVSxHQUFHL1QsR0FBR0MsR0FBR0MsR0FBRzh5QixHQUFHLENBQUM1d0IsU0FBUSxLQUFNODBCLEdBQUcsQ0FBQ0Msd0JBQXdCbnpCLEdBQUdvekIsV0FBVyxFQUFFQyxRQUFRLFNBQVNDLG9CQUFvQixhQUN2ZUMsR0FBRyxDQUFDSCxXQUFXRixHQUFHRSxXQUFXQyxRQUFRSCxHQUFHRyxRQUFRQyxvQkFBb0JKLEdBQUdJLG9CQUFvQkUsZUFBZU4sR0FBR00sZUFBZUMsa0JBQWtCLEtBQUtDLDRCQUE0QixLQUFLQyw0QkFBNEIsS0FBS0MsY0FBYyxLQUFLQyx3QkFBd0IsS0FBS0Msd0JBQXdCLEtBQUtDLG1CQUFtQixLQUFLQyxlQUFlLEtBQUtDLHFCQUFxQnRrQyxFQUFHaXlCLHVCQUF1QnNTLHdCQUF3QixTQUFTcm5DLEdBQVcsT0FBTyxRQUFmQSxFQUFFb1IsR0FBR3BSLElBQW1CLEtBQUtBLEVBQUVrUCxXQUFXbzNCLHdCQUF3QkQsR0FBR0MseUJBUi9JLFdBQWMsT0FBTyxNQVM3V2dCLDRCQUE0QixLQUFLQyxnQkFBZ0IsS0FBS0MsYUFBYSxLQUFLQyxrQkFBa0IsS0FBS0MsZ0JBQWdCLE1BQU0sR0FBRyxvQkFBcUJDLCtCQUErQixDQUFDLElBQUlDLEdBQUdELCtCQUErQixJQUFJQyxHQUFHQyxZQUFZRCxHQUFHRSxjQUFjLElBQUk3YyxHQUFHMmMsR0FBR0csT0FBT3JCLElBQUl4YixHQUFHMGMsR0FBRyxNQUFNNW5DLE1BQUszRyxFQUFRMEosbURBQW1Eb2pDLEdBQUc5c0MsRUFBUTJ1QyxhQUFhdkMsR0FDblhwc0MsRUFBUTR1QyxZQUFZLFNBQVNqb0MsR0FBRyxHQUFHLE1BQU1BLEVBQUUsT0FBTyxLQUFLLEdBQUcsSUFBSUEsRUFBRWlLLFNBQVMsT0FBT2pLLEVBQUUsSUFBSUMsRUFBRUQsRUFBRXN3QixnQkFBZ0IsUUFBRyxJQUFTcndCLEVBQUUsQ0FBQyxHQUFHLG1CQUFvQkQsRUFBRXdGLE9BQU8sTUFBTXBILE1BQU0yQixFQUFFLE1BQU0sTUFBTTNCLE1BQU0yQixFQUFFLElBQUl0RSxPQUFPcUIsS0FBS2tELEtBQTBDLE9BQTFCLFFBQVZBLEVBQUVvUixHQUFHblIsSUFBYyxLQUFLRCxFQUFFa1AsV0FBb0I3VixFQUFRNnVDLFVBQVUsU0FBU2xvQyxFQUFFQyxHQUFHLElBQUlDLEVBQUUrL0IsR0FBRSxHQUFHLElBQU8sR0FBRi8vQixHQUFNLE9BQU9GLEVBQUVDLEdBQUdnZ0MsSUFBRyxFQUFFLElBQUksR0FBR2pnQyxFQUFFLE9BQU8rc0IsR0FBRyxHQUFHL3NCLEVBQUVtWCxLQUFLLEtBQUtsWCxJQUFJLFFBQVFnZ0MsR0FBRS8vQixFQUFFK3NCLE9BQU81ekIsRUFBUWthLFFBQVEsU0FBU3ZULEVBQUVDLEVBQUVDLEdBQUcsSUFBSW1sQyxHQUFHcGxDLEdBQUcsTUFBTTdCLE1BQU0yQixFQUFFLE1BQU0sT0FBT3VsQyxHQUFHLEtBQUt0bEMsRUFBRUMsR0FBRSxFQUFHQyxJQUNuZDdHLEVBQVFtTSxPQUFPLFNBQVN4RixFQUFFQyxFQUFFQyxHQUFHLElBQUltbEMsR0FBR3BsQyxHQUFHLE1BQU03QixNQUFNMkIsRUFBRSxNQUFNLE9BQU91bEMsR0FBRyxLQUFLdGxDLEVBQUVDLEdBQUUsRUFBR0MsSUFBSTdHLEVBQVE4dUMsdUJBQXVCLFNBQVNub0MsR0FBRyxJQUFJcWxDLEdBQUdybEMsR0FBRyxNQUFNNUIsTUFBTTJCLEVBQUUsS0FBSyxRQUFPQyxFQUFFcy9CLHNCQUFxQnVELElBQUcsV0FBV3lDLEdBQUcsS0FBSyxLQUFLdGxDLEdBQUUsR0FBRyxXQUFXQSxFQUFFcy9CLG9CQUFvQixLQUFLdC9CLEVBQUU2bkIsSUFBSSxZQUFTLElBQVF4dUIsRUFBUSt1Qyx3QkFBd0J4RixHQUFHdnBDLEVBQVFndkMsc0JBQXNCLFNBQVNyb0MsRUFBRUMsR0FBRyxPQUFPd2xDLEdBQUd6bEMsRUFBRUMsRUFBRSxFQUFFMUMsVUFBVTNFLGFBQVEsSUFBUzJFLFVBQVUsR0FBR0EsVUFBVSxHQUFHLE9BQzlhbEUsRUFBUWl2QyxvQ0FBb0MsU0FBU3RvQyxFQUFFQyxFQUFFQyxFQUFFZ0IsR0FBRyxJQUFJbWtDLEdBQUdubEMsR0FBRyxNQUFNOUIsTUFBTTJCLEVBQUUsTUFBTSxHQUFHLE1BQU1DLFFBQUcsSUFBU0EsRUFBRXN3QixnQkFBZ0IsTUFBTWx5QixNQUFNMkIsRUFBRSxLQUFLLE9BQU91bEMsR0FBR3RsQyxFQUFFQyxFQUFFQyxHQUFFLEVBQUdnQixJQUFJN0gsRUFBUW10QyxRQUFRLFUsNEJDdFM3TCxTQUFTK0IsSUFFUCxHQUM0QyxvQkFBbkNaLGdDQUM0QyxtQkFBNUNBLCtCQUErQlksU0FjeEMsSUFFRVosK0JBQStCWSxTQUFTQSxHQUN4QyxNQUFPeHJDLEdBR1B1Z0MsUUFBUTlqQyxNQUFNdUQsSUFPaEJ3ckMsR0FDQW52QyxFQUFPQyxRQUFVLEVBQWpCLE0sMkJDMUJXLElBQUk4VyxFQUFFLEVBQVEsS0FBaUIzVCxFQUFFLE1BQU1vekIsRUFBRSxNQUFNdjJCLEVBQVFtdkMsU0FBUyxNQUFNbnZDLEVBQVFvdkMsV0FBVyxNQUFNcHZDLEVBQVFxdkMsU0FBUyxNQUFNLElBQUlqaEIsRUFBRSxNQUFNM25CLEVBQUUsTUFBTTRuQixFQUFFLE1BQU1ydUIsRUFBUXN2QyxTQUFTLE1BQU0sSUFBSW5oQixFQUFFLE1BQU1HLEVBQUUsTUFDcE0sR0FBRyxtQkFBb0IxakIsUUFBUUEsT0FBT0MsSUFBSSxDQUFDLElBQUlvakIsRUFBRXJqQixPQUFPQyxJQUFJMUgsRUFBRThxQixFQUFFLGlCQUFpQnNJLEVBQUV0SSxFQUFFLGdCQUFnQmp1QixFQUFRbXZDLFNBQVNsaEIsRUFBRSxrQkFBa0JqdUIsRUFBUW92QyxXQUFXbmhCLEVBQUUscUJBQXFCanVCLEVBQVFxdkMsU0FBU3BoQixFQUFFLGtCQUFrQkcsRUFBRUgsRUFBRSxrQkFBa0J4bkIsRUFBRXduQixFQUFFLGlCQUFpQkksRUFBRUosRUFBRSxxQkFBcUJqdUIsRUFBUXN2QyxTQUFTcmhCLEVBQUUsa0JBQWtCRSxFQUFFRixFQUFFLGNBQWNLLEVBQUVMLEVBQUUsY0FBYyxJQUFJRCxFQUFFLG1CQUFvQnBqQixRQUFRQSxPQUFPSyxTQUN0UixTQUFTaWpCLEVBQUV2bkIsR0FBRyxJQUFJLElBQUlDLEVBQUUseURBQXlERCxFQUFFRSxFQUFFLEVBQUVBLEVBQUUzQyxVQUFVM0UsT0FBT3NILElBQUlELEdBQUcsV0FBV0UsbUJBQW1CNUMsVUFBVTJDLElBQUksTUFBTSx5QkFBeUJGLEVBQUUsV0FBV0MsRUFBRSxpSEFDcFUsSUFBSTB2QixFQUFFLENBQUNVLFVBQVUsV0FBVyxPQUFNLEdBQUlPLG1CQUFtQixhQUFhRCxvQkFBb0IsYUFBYUosZ0JBQWdCLGNBQWN0dkIsRUFBRSxHQUFHLFNBQVM0dUIsRUFBRTd2QixFQUFFQyxFQUFFQyxHQUFHL0csS0FBSzJFLE1BQU1rQyxFQUFFN0csS0FBS20xQixRQUFRcnVCLEVBQUU5RyxLQUFLKzJCLEtBQUtqdkIsRUFBRTlILEtBQUtnNEIsUUFBUWp4QixHQUFHeXZCLEVBQ3BOLFNBQVM5dEIsS0FBNkIsU0FBU3NDLEVBQUVuRSxFQUFFQyxFQUFFQyxHQUFHL0csS0FBSzJFLE1BQU1rQyxFQUFFN0csS0FBS20xQixRQUFRcnVCLEVBQUU5RyxLQUFLKzJCLEtBQUtqdkIsRUFBRTlILEtBQUtnNEIsUUFBUWp4QixHQUFHeXZCLEVBRHNHRSxFQUFFdjJCLFVBQVVrckMsaUJBQWlCLEdBQUczVSxFQUFFdjJCLFVBQVVzdkMsU0FBUyxTQUFTNW9DLEVBQUVDLEdBQUcsR0FBRyxpQkFBa0JELEdBQUcsbUJBQW9CQSxHQUFHLE1BQU1BLEVBQUUsTUFBTTVCLE1BQU1tcEIsRUFBRSxLQUFLcHVCLEtBQUtnNEIsUUFBUVosZ0JBQWdCcDNCLEtBQUs2RyxFQUFFQyxFQUFFLGFBQWE0dkIsRUFBRXYyQixVQUFVdXZDLFlBQVksU0FBUzdvQyxHQUFHN0csS0FBS2c0QixRQUFRUCxtQkFBbUJ6M0IsS0FBSzZHLEVBQUUsZ0JBQ25kNkIsRUFBRXZJLFVBQVV1MkIsRUFBRXYyQixVQUFzRixJQUFJZ2MsRUFBRW5SLEVBQUU3SyxVQUFVLElBQUl1SSxFQUFFeVQsRUFBRWpQLFlBQVlsQyxFQUFFZ00sRUFBRW1GLEVBQUV1YSxFQUFFdjJCLFdBQVdnYyxFQUFFeWIsc0JBQXFCLEVBQUcsSUFBSXJLLEVBQUUsQ0FBQ25WLFFBQVEsTUFBTXVZLEVBQUVydUIsT0FBT25DLFVBQVVvQyxlQUFlcXVCLEVBQUUsQ0FBQ3ZzQixLQUFJLEVBQUd1MEIsS0FBSSxFQUFHK1csUUFBTyxFQUFHQyxVQUFTLEdBQ2hTLFNBQVM5Z0IsRUFBRWpvQixFQUFFQyxFQUFFQyxHQUFHLElBQUlpQixFQUFFRCxFQUFFLEdBQUdpRSxFQUFFLEtBQUtDLEVBQUUsS0FBSyxHQUFHLE1BQU1uRixFQUFFLElBQUlrQixVQUFLLElBQVNsQixFQUFFOHhCLE1BQU0zc0IsRUFBRW5GLEVBQUU4eEIsVUFBSyxJQUFTOXhCLEVBQUV6QyxNQUFNMkgsRUFBRSxHQUFHbEYsRUFBRXpDLEtBQUt5QyxFQUFFNnBCLEVBQUV2d0IsS0FBSzBHLEVBQUVrQixLQUFLNG9CLEVBQUVydUIsZUFBZXlGLEtBQUtELEVBQUVDLEdBQUdsQixFQUFFa0IsSUFBSSxJQUFJN0csRUFBRWlELFVBQVUzRSxPQUFPLEVBQUUsR0FBRyxJQUFJMEIsRUFBRTRHLEVBQUUrRyxTQUFTL0gsT0FBTyxHQUFHLEVBQUU1RixFQUFFLENBQUMsSUFBSSxJQUFJOEcsRUFBRXdILE1BQU10TyxHQUFHdUYsRUFBRSxFQUFFQSxFQUFFdkYsRUFBRXVGLElBQUl1QixFQUFFdkIsR0FBR3RDLFVBQVVzQyxFQUFFLEdBQUdxQixFQUFFK0csU0FBUzdHLEVBQUUsR0FBR3BCLEdBQUdBLEVBQUVzdEIsYUFBYSxJQUFJbnNCLEtBQUs3RyxFQUFFMEYsRUFBRXN0QixrQkFBZSxJQUFTcHNCLEVBQUVDLEtBQUtELEVBQUVDLEdBQUc3RyxFQUFFNkcsSUFBSSxNQUFNLENBQUN3RSxTQUFTbkosRUFBRWtGLEtBQUsxQixFQUFFeEMsSUFBSTJILEVBQUU0c0IsSUFBSTNzQixFQUFFdEgsTUFBTW9ELEVBQUU4d0IsT0FBT3RMLEVBQUVuVixTQUN4VSxTQUFTNlcsRUFBRXBvQixHQUFHLE1BQU0saUJBQWtCQSxHQUFHLE9BQU9BLEdBQUdBLEVBQUUyRixXQUFXbkosRUFBcUcsSUFBSXl0QixFQUFFLE9BQU8sU0FBU0MsRUFBRWxxQixFQUFFQyxHQUFHLE1BQU0saUJBQWtCRCxHQUFHLE9BQU9BLEdBQUcsTUFBTUEsRUFBRXhDLElBQTdLLFNBQWdCd0MsR0FBRyxJQUFJQyxFQUFFLENBQUMsSUFBSSxLQUFLLElBQUksTUFBTSxNQUFNLElBQUlELEVBQUU0QyxRQUFRLFNBQVEsU0FBUzVDLEdBQUcsT0FBT0MsRUFBRUQsTUFBbUZncEMsQ0FBTyxHQUFHaHBDLEVBQUV4QyxLQUFLeUMsRUFBRXdKLFNBQVMsSUFDNVcsU0FBU21qQixFQUFFNXNCLEVBQUVDLEVBQUVDLEVBQUVpQixFQUFFRCxHQUFHLElBQUlpRSxTQUFTbkYsRUFBSyxjQUFjbUYsR0FBRyxZQUFZQSxJQUFFbkYsRUFBRSxNQUFLLElBQUlvRixHQUFFLEVBQUcsR0FBRyxPQUFPcEYsRUFBRW9GLEdBQUUsT0FBUSxPQUFPRCxHQUFHLElBQUssU0FBUyxJQUFLLFNBQVNDLEdBQUUsRUFBRyxNQUFNLElBQUssU0FBUyxPQUFPcEYsRUFBRTJGLFVBQVUsS0FBS25KLEVBQUUsS0FBS296QixFQUFFeHFCLEdBQUUsR0FBSSxHQUFHQSxFQUFFLE9BQVdsRSxFQUFFQSxFQUFOa0UsRUFBRXBGLEdBQVNBLEVBQUUsS0FBS21CLEVBQUUsSUFBSStvQixFQUFFOWtCLEVBQUUsR0FBR2pFLEVBQUV5SCxNQUFNQyxRQUFRM0gsSUFBSWhCLEVBQUUsR0FBRyxNQUFNRixJQUFJRSxFQUFFRixFQUFFNEMsUUFBUXFuQixFQUFFLE9BQU8sS0FBSzJDLEVBQUUxckIsRUFBRWpCLEVBQUVDLEVBQUUsSUFBRyxTQUFTRixHQUFHLE9BQU9BLE1BQUssTUFBTWtCLElBQUlrbkIsRUFBRWxuQixLQUFLQSxFQUQvVyxTQUFXbEIsRUFBRUMsR0FBRyxNQUFNLENBQUMwRixTQUFTbkosRUFBRWtGLEtBQUsxQixFQUFFMEIsS0FBS2xFLElBQUl5QyxFQUFFOHhCLElBQUkveEIsRUFBRSt4QixJQUFJajBCLE1BQU1rQyxFQUFFbEMsTUFBTWswQixPQUFPaHlCLEVBQUVneUIsUUFDNFI5SixDQUFFaG5CLEVBQUVoQixJQUFJZ0IsRUFBRTFELEtBQUs0SCxHQUFHQSxFQUFFNUgsTUFBTTBELEVBQUUxRCxJQUFJLElBQUksR0FBRzBELEVBQUUxRCxLQUFLb0YsUUFBUXFuQixFQUFFLE9BQU8sS0FBS2pxQixJQUFJQyxFQUFFdkcsS0FBS3dILElBQUksRUFBeUIsR0FBdkJrRSxFQUFFLEVBQUVqRSxFQUFFLEtBQUtBLEVBQUUsSUFBSUEsRUFBRSxJQUFPeUgsTUFBTUMsUUFBUTdJLEdBQUcsSUFBSSxJQUFJMUYsRUFDemYsRUFBRUEsRUFBRTBGLEVBQUVwSCxPQUFPMEIsSUFBSSxDQUFRLElBQUk4RyxFQUFFRCxFQUFFK29CLEVBQWYva0IsRUFBRW5GLEVBQUUxRixHQUFlQSxHQUFHOEssR0FBR3duQixFQUFFem5CLEVBQUVsRixFQUFFQyxFQUFFa0IsRUFBRUYsUUFBUSxHQUFVLG1CQUFQRSxFQU5oRSxTQUFXcEIsR0FBRyxPQUFHLE9BQU9BLEdBQUcsaUJBQWtCQSxFQUFTLEtBQXNDLG1CQUFqQ0EsRUFBRXFuQixHQUFHcm5CLEVBQUVxbkIsSUFBSXJuQixFQUFFLGVBQTBDQSxFQUFFLEtBTWxERCxDQUFFQyxJQUF5QixJQUFJQSxFQUFFb0IsRUFBRTdILEtBQUt5RyxHQUFHMUYsRUFBRSxJQUFJNkssRUFBRW5GLEVBQUV3dUIsUUFBUXNFLE1BQTZCMXRCLEdBQUd3bkIsRUFBMUJ6bkIsRUFBRUEsRUFBRTRCLE1BQTBCOUcsRUFBRUMsRUFBdEJrQixFQUFFRCxFQUFFK29CLEVBQUUva0IsRUFBRTdLLEtBQWtCNEcsUUFBUSxHQUFHLFdBQVdpRSxFQUFFLE1BQU1sRixFQUFFLEdBQUdELEVBQUU1QixNQUFNbXBCLEVBQUUsR0FBRyxvQkFBb0J0bkIsRUFBRSxxQkFBcUJ4RSxPQUFPcUIsS0FBS2tELEdBQUd2RCxLQUFLLE1BQU0sSUFBSXdELElBQUksT0FBT21GLEVBQUUsU0FBU3d1QixFQUFFNXpCLEVBQUVDLEVBQUVDLEdBQUcsR0FBRyxNQUFNRixFQUFFLE9BQU9BLEVBQUUsSUFBSW1CLEVBQUUsR0FBR0QsRUFBRSxFQUFtRCxPQUFqRDByQixFQUFFNXNCLEVBQUVtQixFQUFFLEdBQUcsSUFBRyxTQUFTbkIsR0FBRyxPQUFPQyxFQUFFMUcsS0FBSzJHLEVBQUVGLEVBQUVrQixRQUFjQyxFQUMxWixTQUFTZ25CLEVBQUVub0IsR0FBRyxJQUFJLElBQUlBLEVBQUVpcEMsUUFBUSxDQUFDLElBQUlocEMsRUFBRUQsRUFBRWtwQyxRQUFRanBDLEVBQUVBLElBQUlELEVBQUVpcEMsUUFBUSxFQUFFanBDLEVBQUVrcEMsUUFBUWpwQyxFQUFFQSxFQUFFMC9CLE1BQUssU0FBUzEvQixHQUFHLElBQUlELEVBQUVpcEMsVUFBVWhwQyxFQUFFQSxFQUFFa3BDLFFBQVFucEMsRUFBRWlwQyxRQUFRLEVBQUVqcEMsRUFBRWtwQyxRQUFRanBDLE1BQUksU0FBU0EsR0FBRyxJQUFJRCxFQUFFaXBDLFVBQVVqcEMsRUFBRWlwQyxRQUFRLEVBQUVqcEMsRUFBRWtwQyxRQUFRanBDLE1BQUssR0FBRyxJQUFJRCxFQUFFaXBDLFFBQVEsT0FBT2pwQyxFQUFFa3BDLFFBQVEsTUFBTWxwQyxFQUFFa3BDLFFBQVMsSUFBSWhVLEVBQUUsQ0FBQzNqQixRQUFRLE1BQU0sU0FBUzRqQixJQUFJLElBQUluMUIsRUFBRWsxQixFQUFFM2pCLFFBQVEsR0FBRyxPQUFPdlIsRUFBRSxNQUFNNUIsTUFBTW1wQixFQUFFLE1BQU0sT0FBT3ZuQixFQUFFLElBQUlvMUIsRUFBRSxDQUFDTCx1QkFBdUJHLEVBQUU5SCx3QkFBd0IsQ0FBQ3pZLFdBQVcsR0FBRzhrQixrQkFBa0IvUyxFQUFFMGlCLHFCQUFxQixDQUFDNzNCLFNBQVEsR0FBSXZWLE9BQU9tVSxHQUNqZTlXLEVBQVE2TyxTQUFTLENBQUMzTCxJQUFJcTNCLEVBQUVoM0IsUUFBUSxTQUFTb0QsRUFBRUMsRUFBRUMsR0FBRzB6QixFQUFFNXpCLEdBQUUsV0FBV0MsRUFBRW1RLE1BQU1qWCxLQUFLb0UsYUFBWTJDLElBQUltcEMsTUFBTSxTQUFTcnBDLEdBQUcsSUFBSUMsRUFBRSxFQUF1QixPQUFyQjJ6QixFQUFFNXpCLEdBQUUsV0FBV0MsT0FBYUEsR0FBR3FwQyxRQUFRLFNBQVN0cEMsR0FBRyxPQUFPNHpCLEVBQUU1ekIsR0FBRSxTQUFTQSxHQUFHLE9BQU9BLE1BQUssSUFBSXVwQyxLQUFLLFNBQVN2cEMsR0FBRyxJQUFJb29CLEVBQUVwb0IsR0FBRyxNQUFNNUIsTUFBTW1wQixFQUFFLE1BQU0sT0FBT3ZuQixJQUFJM0csRUFBUTQyQixVQUFVSixFQUFFeDJCLEVBQVFtd0MsY0FBY3JsQyxFQUFFOUssRUFBUTBKLG1EQUFtRHF5QixFQUNoWC83QixFQUFRb3dDLGFBQWEsU0FBU3pwQyxFQUFFQyxFQUFFQyxHQUFHLEdBQUcsTUFBT0YsRUFBYyxNQUFNNUIsTUFBTW1wQixFQUFFLElBQUl2bkIsSUFBSSxJQUFJbUIsRUFBRWdQLEVBQUUsR0FBR25RLEVBQUVsQyxPQUFPb0QsRUFBRWxCLEVBQUV4QyxJQUFJMkgsRUFBRW5GLEVBQUUreEIsSUFBSTNzQixFQUFFcEYsRUFBRWd5QixPQUFPLEdBQUcsTUFBTS94QixFQUFFLENBQW9FLFFBQW5FLElBQVNBLEVBQUU4eEIsTUFBTTVzQixFQUFFbEYsRUFBRTh4QixJQUFJM3NCLEVBQUVzaEIsRUFBRW5WLGNBQVMsSUFBU3RSLEVBQUV6QyxNQUFNMEQsRUFBRSxHQUFHakIsRUFBRXpDLEtBQVF3QyxFQUFFMEIsTUFBTTFCLEVBQUUwQixLQUFLNHJCLGFBQWEsSUFBSWh6QixFQUFFMEYsRUFBRTBCLEtBQUs0ckIsYUFBYSxJQUFJbHNCLEtBQUtuQixFQUFFNnBCLEVBQUV2d0IsS0FBSzBHLEVBQUVtQixLQUFLMm9CLEVBQUVydUIsZUFBZTBGLEtBQUtELEVBQUVDLFFBQUcsSUFBU25CLEVBQUVtQixTQUFJLElBQVM5RyxFQUFFQSxFQUFFOEcsR0FBR25CLEVBQUVtQixJQUFJLElBQUlBLEVBQUU3RCxVQUFVM0UsT0FBTyxFQUFFLEdBQUcsSUFBSXdJLEVBQUVELEVBQUU4RyxTQUFTL0gsT0FBTyxHQUFHLEVBQUVrQixFQUFFLENBQUM5RyxFQUFFc08sTUFBTXhILEdBQUcsSUFBSSxJQUFJdkIsRUFBRSxFQUFFQSxFQUFFdUIsRUFBRXZCLElBQUl2RixFQUFFdUYsR0FBR3RDLFVBQVVzQyxFQUFFLEdBQUdzQixFQUFFOEcsU0FBUzNOLEVBQUUsTUFBTSxDQUFDcUwsU0FBU25KLEVBQUVrRixLQUFLMUIsRUFBRTBCLEtBQ3hmbEUsSUFBSTBELEVBQUU2d0IsSUFBSTVzQixFQUFFckgsTUFBTXFELEVBQUU2d0IsT0FBTzVzQixJQUFJL0wsRUFBUXF3QyxjQUFjLFNBQVMxcEMsRUFBRUMsR0FBOEssWUFBM0ssSUFBU0EsSUFBSUEsRUFBRSxPQUFNRCxFQUFFLENBQUMyRixTQUFTN0YsRUFBRTZsQyxzQkFBc0IxbEMsRUFBRTR0QixjQUFjN3RCLEVBQUUycEMsZUFBZTNwQyxFQUFFNHBDLGFBQWEsRUFBRUMsU0FBUyxLQUFLQyxTQUFTLE9BQVFELFNBQVMsQ0FBQ2xrQyxTQUFTOGhCLEVBQUU3aEIsU0FBUzVGLEdBQVVBLEVBQUU4cEMsU0FBUzlwQyxHQUFHM0csRUFBUXVILGNBQWNxbkIsRUFBRTV1QixFQUFRMHdDLGNBQWMsU0FBUy9wQyxHQUFHLElBQUlDLEVBQUVnb0IsRUFBRTlRLEtBQUssS0FBS25YLEdBQVksT0FBVEMsRUFBRXlCLEtBQUsxQixFQUFTQyxHQUFHNUcsRUFBUTJ3QyxVQUFVLFdBQVcsTUFBTSxDQUFDejRCLFFBQVEsT0FBT2xZLEVBQVE0d0MsV0FBVyxTQUFTanFDLEdBQUcsTUFBTSxDQUFDMkYsU0FBUytoQixFQUFFbGlCLE9BQU94RixJQUFJM0csRUFBUTZ3QyxlQUFlOWhCLEVBQzNlL3VCLEVBQVE4d0MsS0FBSyxTQUFTbnFDLEdBQUcsTUFBTSxDQUFDMkYsU0FBU2dpQixFQUFFOWhCLFNBQVMsQ0FBQ29qQyxTQUFTLEVBQUVDLFFBQVFscEMsR0FBRzhGLE1BQU1xaUIsSUFBSTl1QixFQUFRK3dDLEtBQUssU0FBU3BxQyxFQUFFQyxHQUFHLE1BQU0sQ0FBQzBGLFNBQVM2aEIsRUFBRTlsQixLQUFLMUIsRUFBRSs1QixhQUFRLElBQVM5NUIsRUFBRSxLQUFLQSxJQUFJNUcsRUFBUXEvQixZQUFZLFNBQVMxNEIsRUFBRUMsR0FBRyxPQUFPazFCLElBQUl1RCxZQUFZMTRCLEVBQUVDLElBQUk1RyxFQUFRcy9CLFdBQVcsU0FBUzM0QixFQUFFQyxHQUFHLE9BQU9rMUIsSUFBSXdELFdBQVczNEIsRUFBRUMsSUFBSTVHLEVBQVE0L0IsY0FBYyxhQUFhNS9CLEVBQVE4OUIsVUFBVSxTQUFTbjNCLEVBQUVDLEdBQUcsT0FBT2sxQixJQUFJZ0MsVUFBVW4zQixFQUFFQyxJQUFJNUcsRUFBUXUvQixvQkFBb0IsU0FBUzU0QixFQUFFQyxFQUFFQyxHQUFHLE9BQU9pMUIsSUFBSXlELG9CQUFvQjU0QixFQUFFQyxFQUFFQyxJQUM5YzdHLEVBQVF3L0IsZ0JBQWdCLFNBQVM3NEIsRUFBRUMsR0FBRyxPQUFPazFCLElBQUkwRCxnQkFBZ0I3NEIsRUFBRUMsSUFBSTVHLEVBQVF5L0IsUUFBUSxTQUFTOTRCLEVBQUVDLEdBQUcsT0FBT2sxQixJQUFJMkQsUUFBUTk0QixFQUFFQyxJQUFJNUcsRUFBUTAvQixXQUFXLFNBQVMvNEIsRUFBRUMsRUFBRUMsR0FBRyxPQUFPaTFCLElBQUk0RCxXQUFXLzRCLEVBQUVDLEVBQUVDLElBQUk3RyxFQUFRMi9CLE9BQU8sU0FBU2g1QixHQUFHLE9BQU9tMUIsSUFBSTZELE9BQU9oNUIsSUFBSTNHLEVBQVEyOUIsU0FBUyxTQUFTaDNCLEdBQUcsT0FBT20xQixJQUFJNkIsU0FBU2gzQixJQUFJM0csRUFBUW10QyxRQUFRLFUsMkJDbkJuVHB0QyxFQUFPQyxRQUFVLEVBQWpCLE0sd0JDS1csSUFBSStILEVBQUU5RyxFQUFFOEssRUFBRUQsRUFBRSxHQUFHLGlCQUFrQmtsQyxhQUFhLG1CQUFvQkEsWUFBWWh4QixJQUFJLENBQUMsSUFBSWxKLEVBQUVrNkIsWUFBWWh4QyxFQUFRZ2MsYUFBYSxXQUFXLE9BQU9sRixFQUFFa0osV0FBVyxDQUFDLElBQUl1VyxFQUFFeFcsS0FBS3FPLEVBQUVtSSxFQUFFdlcsTUFBTWhnQixFQUFRZ2MsYUFBYSxXQUFXLE9BQU91YSxFQUFFdlcsTUFBTW9PLEdBQzNPLEdBQUcsb0JBQXFCOW1CLFFBQVEsbUJBQW9CMnBDLGVBQWUsQ0FBQyxJQUFJNWlCLEVBQUUsS0FBS0YsRUFBRSxLQUFLRixFQUFFLFdBQVcsR0FBRyxPQUFPSSxFQUFFLElBQUksSUFBSTFuQixFQUFFM0csRUFBUWdjLGVBQWVxUyxHQUFFLEVBQUcxbkIsR0FBRzBuQixFQUFFLEtBQUssTUFBTXpuQixHQUFHLE1BQU1wRixXQUFXeXNCLEVBQUUsR0FBR3JuQixJQUFLbUIsRUFBRSxTQUFTcEIsR0FBRyxPQUFPMG5CLEVBQUU3c0IsV0FBV3VHLEVBQUUsRUFBRXBCLElBQUkwbkIsRUFBRTFuQixFQUFFbkYsV0FBV3lzQixFQUFFLEtBQUtodEIsRUFBRSxTQUFTMEYsRUFBRUMsR0FBR3VuQixFQUFFM3NCLFdBQVdtRixFQUFFQyxJQUFJbUYsRUFBRSxXQUFXbkssYUFBYXVzQixJQUFJbnVCLEVBQVFteUIscUJBQXFCLFdBQVcsT0FBTSxHQUFJcm1CLEVBQUU5TCxFQUFRa3hDLHdCQUF3QixpQkFBaUIsQ0FBQyxJQUFJbGpCLEVBQUUxbUIsT0FBTzlGLFdBQVdrRixFQUFFWSxPQUFPMUYsYUFBYSxHQUFHLG9CQUFxQnFpQyxRQUFRLENBQUMsSUFBSS9WLEVBQzdmNW1CLE9BQU82cEMscUJBQXFCLG1CQUFvQjdwQyxPQUFPOHBDLHVCQUF1Qm5OLFFBQVE5akMsTUFBTSxzSkFBc0osbUJBQW9CK3RCLEdBQUcrVixRQUFROWpDLE1BQU0scUpBQXFKLElBQUltMkIsR0FBRSxFQUFHMXVCLEVBQUUsS0FBSzR1QixHQUFHLEVBQUVodUIsRUFBRSxFQUFFc0MsRUFBRSxFQUFFOUssRUFBUW15QixxQkFBcUIsV0FBVyxPQUFPbnlCLEVBQVFnYyxnQkFDaGdCbFIsR0FBR2dCLEVBQUUsYUFBYTlMLEVBQVFreEMsd0JBQXdCLFNBQVN2cUMsR0FBRyxFQUFFQSxHQUFHLElBQUlBLEVBQUVzOUIsUUFBUTlqQyxNQUFNLG1IQUFtSHFJLEVBQUUsRUFBRTdCLEVBQUVzVyxLQUFLbzBCLE1BQU0sSUFBSTFxQyxHQUFHLEdBQUcsSUFBSXNWLEVBQUUsSUFBSWcxQixlQUFlNWpCLEVBQUVwUixFQUFFcTFCLE1BQU1yMUIsRUFBRXMxQixNQUFNQyxVQUFVLFdBQVcsR0FBRyxPQUFPNXBDLEVBQUUsQ0FBQyxJQUFJakIsRUFBRTNHLEVBQVFnYyxlQUFlbFIsRUFBRW5FLEVBQUU2QixFQUFFLElBQUlaLEdBQUUsRUFBR2pCLEdBQUcwbUIsRUFBRW9rQixZQUFZLE9BQU9uYixHQUFFLEVBQUcxdUIsRUFBRSxNQUFNLE1BQU1oQixHQUFHLE1BQU15bUIsRUFBRW9rQixZQUFZLE1BQU03cUMsUUFBUzB2QixHQUFFLEdBQUl2dUIsRUFBRSxTQUFTcEIsR0FBR2lCLEVBQUVqQixFQUFFMnZCLElBQUlBLEdBQUUsRUFBR2pKLEVBQUVva0IsWUFBWSxRQUFReHdDLEVBQUUsU0FBUzBGLEVBQUVDLEdBQUc0dkIsRUFDdGZ4SSxHQUFFLFdBQVdybkIsRUFBRTNHLEVBQVFnYyxrQkFBaUJwVixJQUFJbUYsRUFBRSxXQUFXckYsRUFBRTh2QixHQUFHQSxHQUFHLEdBQUcsU0FBUy9GLEVBQUU5cEIsRUFBRUMsR0FBRyxJQUFJQyxFQUFFRixFQUFFcEgsT0FBT29ILEVBQUV0RyxLQUFLdUcsR0FBR0QsRUFBRSxPQUFPLENBQUMsSUFBSWtCLEVBQUVoQixFQUFFLElBQUksRUFBRWlCLEVBQUVuQixFQUFFa0IsR0FBRyxVQUFHLElBQVNDLEdBQUcsRUFBRTRvQixFQUFFNW9CLEVBQUVsQixJQUEwQixNQUFNRCxFQUE3QkEsRUFBRWtCLEdBQUdqQixFQUFFRCxFQUFFRSxHQUFHaUIsRUFBRWpCLEVBQUVnQixHQUFnQixTQUFTK21CLEVBQUVqb0IsR0FBVSxZQUFPLEtBQWRBLEVBQUVBLEVBQUUsSUFBcUIsS0FBS0EsRUFDaFAsU0FBU2tvQixFQUFFbG9CLEdBQUcsSUFBSUMsRUFBRUQsRUFBRSxHQUFHLFFBQUcsSUFBU0MsRUFBRSxDQUFDLElBQUlDLEVBQUVGLEVBQUUvRyxNQUFNLEdBQUdpSCxJQUFJRCxFQUFFLENBQUNELEVBQUUsR0FBR0UsRUFBRUYsRUFBRSxJQUFJLElBQUlrQixFQUFFLEVBQUVDLEVBQUVuQixFQUFFcEgsT0FBT3NJLEVBQUVDLEdBQUcsQ0FBQyxJQUFJdEIsRUFBRSxHQUFHcUIsRUFBRSxHQUFHLEVBQUUxRSxFQUFFd0QsRUFBRUgsR0FBRzhuQixFQUFFOW5CLEVBQUUsRUFBRUMsRUFBRUUsRUFBRTJuQixHQUFHLFFBQUcsSUFBU25yQixHQUFHLEVBQUV1dEIsRUFBRXZ0QixFQUFFMEQsUUFBRyxJQUFTSixHQUFHLEVBQUVpcUIsRUFBRWpxQixFQUFFdEQsSUFBSXdELEVBQUVrQixHQUFHcEIsRUFBRUUsRUFBRTJuQixHQUFHem5CLEVBQUVnQixFQUFFeW1CLElBQUkzbkIsRUFBRWtCLEdBQUcxRSxFQUFFd0QsRUFBRUgsR0FBR0ssRUFBRWdCLEVBQUVyQixPQUFRLFdBQUcsSUFBU0MsR0FBRyxFQUFFaXFCLEVBQUVqcUIsRUFBRUksSUFBMEIsTUFBTUYsRUFBN0JBLEVBQUVrQixHQUFHcEIsRUFBRUUsRUFBRTJuQixHQUFHem5CLEVBQUVnQixFQUFFeW1CLElBQWdCLE9BQU8xbkIsRUFBRSxPQUFPLEtBQUssU0FBUzhwQixFQUFFL3BCLEVBQUVDLEdBQUcsSUFBSUMsRUFBRUYsRUFBRStxQyxVQUFVOXFDLEVBQUU4cUMsVUFBVSxPQUFPLElBQUk3cUMsRUFBRUEsRUFBRUYsRUFBRWtYLEdBQUdqWCxFQUFFaVgsR0FBRyxJQUFJa1IsRUFBRSxHQUFHNkIsRUFBRSxHQUFHQyxFQUFFLEVBQUUwQyxFQUFFLEtBQUtnSCxFQUFFLEVBQUV6TCxHQUFFLEVBQUcrTSxHQUFFLEVBQUdDLEdBQUUsRUFDamEsU0FBU0MsRUFBRXAxQixHQUFHLElBQUksSUFBSUMsRUFBRWdvQixFQUFFZ0MsR0FBRyxPQUFPaHFCLEdBQUcsQ0FBQyxHQUFHLE9BQU9BLEVBQUV0RixTQUFTdXRCLEVBQUUrQixPQUFRLE1BQUdocUIsRUFBRStxQyxXQUFXaHJDLEdBQWdELE1BQTlDa29CLEVBQUUrQixHQUFHaHFCLEVBQUU4cUMsVUFBVTlxQyxFQUFFZ3JDLGVBQWVuaEIsRUFBRTFCLEVBQUVub0IsR0FBY0EsRUFBRWdvQixFQUFFZ0MsSUFBSSxTQUFTOE0sRUFBRS8yQixHQUFhLEdBQVZtMUIsR0FBRSxFQUFHQyxFQUFFcDFCLElBQU9rMUIsRUFBRSxHQUFHLE9BQU9qTixFQUFFRyxHQUFHOE0sR0FBRSxFQUFHOXpCLEVBQUV3N0IsT0FBTyxDQUFDLElBQUkzOEIsRUFBRWdvQixFQUFFZ0MsR0FBRyxPQUFPaHFCLEdBQUczRixFQUFFeThCLEVBQUU5MkIsRUFBRStxQyxVQUFVaHJDLElBQ3RQLFNBQVM0OEIsRUFBRTU4QixFQUFFQyxHQUFHaTFCLEdBQUUsRUFBR0MsSUFBSUEsR0FBRSxFQUFHL3ZCLEtBQUsraUIsR0FBRSxFQUFHLElBQUlqb0IsRUFBRTB6QixFQUFFLElBQVMsSUFBTHdCLEVBQUVuMUIsR0FBTzJzQixFQUFFM0UsRUFBRUcsR0FBRyxPQUFPd0UsTUFBTUEsRUFBRXFlLGVBQWVockMsSUFBSUQsSUFBSTNHLEVBQVFteUIseUJBQXlCLENBQUMsSUFBSXRxQixFQUFFMHJCLEVBQUVqeUIsU0FBUyxHQUFHLG1CQUFvQnVHLEVBQUUsQ0FBQzByQixFQUFFanlCLFNBQVMsS0FBS2k1QixFQUFFaEgsRUFBRXNlLGNBQWMsSUFBSS9wQyxFQUFFRCxFQUFFMHJCLEVBQUVxZSxnQkFBZ0JockMsR0FBR0EsRUFBRTVHLEVBQVFnYyxlQUFlLG1CQUFvQmxVLEVBQUV5ckIsRUFBRWp5QixTQUFTd0csRUFBRXlyQixJQUFJM0UsRUFBRUcsSUFBSUYsRUFBRUUsR0FBR2dOLEVBQUVuMUIsUUFBUWlvQixFQUFFRSxHQUFHd0UsRUFBRTNFLEVBQUVHLEdBQUcsR0FBRyxPQUFPd0UsRUFBRSxJQUFJL3NCLEdBQUUsTUFBTyxDQUFDLElBQUlyRCxFQUFFeXJCLEVBQUVnQyxHQUFHLE9BQU96dEIsR0FBR2xDLEVBQUV5OEIsRUFBRXY2QixFQUFFd3VDLFVBQVUvcUMsR0FBR0osR0FBRSxFQUFHLE9BQU9BLEVBQUUsUUFBUStzQixFQUFFLEtBQUtnSCxFQUFFMXpCLEVBQUVpb0IsR0FBRSxHQUFJLElBQUk0VSxFQUFFNTNCLEVBQUU5TCxFQUFRZ3pCLHNCQUFzQixFQUN0ZWh6QixFQUFRMHlCLDJCQUEyQixFQUFFMXlCLEVBQVE4eUIscUJBQXFCLEVBQUU5eUIsRUFBUTBhLHdCQUF3QixFQUFFMWEsRUFBUTh4QyxtQkFBbUIsS0FBSzl4QyxFQUFRd2QsOEJBQThCLEVBQUV4ZCxFQUFRaXlCLHdCQUF3QixTQUFTdHJCLEdBQUdBLEVBQUVyRixTQUFTLE1BQU10QixFQUFRK3hDLDJCQUEyQixXQUFXbFcsR0FBRy9NLElBQUkrTSxHQUFFLEVBQUc5ekIsRUFBRXc3QixLQUFLdmpDLEVBQVF3eUIsaUNBQWlDLFdBQVcsT0FBTytILEdBQUd2NkIsRUFBUWd5Qyw4QkFBOEIsV0FBVyxPQUFPcGpCLEVBQUVHLElBQ3BhL3VCLEVBQVFpeUMsY0FBYyxTQUFTdHJDLEdBQUcsT0FBTzR6QixHQUFHLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUkzekIsRUFBRSxFQUFFLE1BQU0sUUFBUUEsRUFBRTJ6QixFQUFFLElBQUkxekIsRUFBRTB6QixFQUFFQSxFQUFFM3pCLEVBQUUsSUFBSSxPQUFPRCxJQUFJLFFBQVE0ekIsRUFBRTF6QixJQUFJN0csRUFBUWt5Qyx3QkFBd0IsYUFBYWx5QyxFQUFRcXlCLHNCQUFzQnFSLEVBQUUxakMsRUFBUWdhLHlCQUF5QixTQUFTclQsRUFBRUMsR0FBRyxPQUFPRCxHQUFHLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsTUFBTSxRQUFRQSxFQUFFLEVBQUUsSUFBSUUsRUFBRTB6QixFQUFFQSxFQUFFNXpCLEVBQUUsSUFBSSxPQUFPQyxJQUFJLFFBQVEyekIsRUFBRTF6QixJQUNwVzdHLEVBQVF5YSwwQkFBMEIsU0FBUzlULEVBQUVDLEVBQUVDLEdBQUcsSUFBSWdCLEVBQUU3SCxFQUFRZ2MsZUFBOEYsT0FBdENuVixFQUF6QyxpQkFBa0JBLEdBQUcsT0FBT0EsR0FBZSxpQkFBWkEsRUFBRUEsRUFBRXNyQyxRQUE2QixFQUFFdHJDLEVBQUVnQixFQUFFaEIsRUFBT2dCLEVBQVNsQixHQUFHLEtBQUssRUFBRSxJQUFJbUIsR0FBRyxFQUFFLE1BQU0sS0FBSyxFQUFFQSxFQUFFLElBQUksTUFBTSxLQUFLLEVBQUVBLEVBQUUsV0FBVyxNQUFNLEtBQUssRUFBRUEsRUFBRSxJQUFJLE1BQU0sUUFBUUEsRUFBRSxJQUEyTSxPQUFqTW5CLEVBQUUsQ0FBQ2tYLEdBQUdnVCxJQUFJdnZCLFNBQVNzRixFQUFFaXJDLGNBQWNsckMsRUFBRWdyQyxVQUFVOXFDLEVBQUUrcUMsZUFBdkQ5cEMsRUFBRWpCLEVBQUVpQixFQUFvRTRwQyxXQUFXLEdBQUc3cUMsRUFBRWdCLEdBQUdsQixFQUFFK3FDLFVBQVU3cUMsRUFBRTRwQixFQUFFRyxFQUFFanFCLEdBQUcsT0FBT2lvQixFQUFFRyxJQUFJcG9CLElBQUlpb0IsRUFBRWdDLEtBQUtrTCxFQUFFL3ZCLElBQUkrdkIsR0FBRSxFQUFHNzZCLEVBQUV5OEIsRUFBRTcyQixFQUFFZ0IsTUFBTWxCLEVBQUUrcUMsVUFBVTVwQyxFQUFFMm9CLEVBQUUxQixFQUFFcG9CLEdBQUdrMUIsR0FBRy9NLElBQUkrTSxHQUFFLEVBQUc5ekIsRUFBRXc3QixLQUFZNThCLEdBQzFkM0csRUFBUW95QyxzQkFBc0IsU0FBU3pyQyxHQUFHLElBQUlDLEVBQUUyekIsRUFBRSxPQUFPLFdBQVcsSUFBSTF6QixFQUFFMHpCLEVBQUVBLEVBQUUzekIsRUFBRSxJQUFJLE9BQU9ELEVBQUVvUSxNQUFNalgsS0FBS29FLFdBQVcsUUFBUXEyQixFQUFFMXpCLE0sMkJDaEIzSDlHLEVBQU9DLFFBQVUsRUFBakIsSyxxQkNhRkQsRUFBT0MsUUFkUCxTQUFjcXlDLEdBSVosSUFIQSxJQUFJQyxFQUFPLEtBQ1B0dkMsRUFBT3F2QyxFQUFJOXlDLE9BRVR5RCxHQUNKc3ZDLEVBQWUsR0FBUEEsRUFBYUQsRUFBSUUsYUFBYXZ2QyxHQU14QyxPQUFPc3ZDLElBQVMsS0NaZEUsRUFBMkIsR0FHL0IsU0FBU0MsRUFBb0JDLEdBRTVCLEdBQUdGLEVBQXlCRSxHQUMzQixPQUFPRixFQUF5QkUsR0FBVTF5QyxRQUczQyxJQUFJRCxFQUFTeXlDLEVBQXlCRSxHQUFZLENBR2pEMXlDLFFBQVMsSUFPVixPQUhBMnlDLEVBQW9CRCxHQUFVM3lDLEVBQVFBLEVBQU9DLFFBQVN5eUMsR0FHL0MxeUMsRUFBT0MsUUNuQmZ5eUMsRUFBb0J0dkMsRUFBS3BELElBQ3hCLElBQUk2eUMsRUFBUzd5QyxHQUFVQSxFQUFPOHlDLFdBQzdCLElBQU85eUMsRUFBaUIsUUFDeEIsSUFBTSxFQUVQLE9BREEweUMsRUFBb0I1cUMsRUFBRStxQyxFQUFRLENBQUVqc0MsRUFBR2lzQyxJQUM1QkEsR0NMUkgsRUFBb0I1cUMsRUFBSSxDQUFDN0gsRUFBUzh5QyxLQUNqQyxJQUFJLElBQUkzdUMsS0FBTzJ1QyxFQUNYTCxFQUFvQk0sRUFBRUQsRUFBWTN1QyxLQUFTc3VDLEVBQW9CTSxFQUFFL3lDLEVBQVNtRSxJQUM1RS9CLE9BQU9zSixlQUFlMUwsRUFBU21FLEVBQUssQ0FBRWdKLFlBQVksRUFBTUYsSUFBSzZsQyxFQUFXM3VDLE1DSjNFc3VDLEVBQW9CeHhDLEVBQUksV0FDdkIsR0FBMEIsaUJBQWYreEMsV0FBeUIsT0FBT0EsV0FDM0MsSUFDQyxPQUFPbHpDLE1BQVEsSUFBSW16QyxTQUFTLGNBQWIsR0FDZCxNQUFPbnJDLEdBQ1IsR0FBc0IsaUJBQVhSLE9BQXFCLE9BQU9BLFFBTGpCLEdDQXhCbXJDLEVBQW9CTSxFQUFJLENBQUNHLEVBQUtDLElBQVUvd0MsT0FBT25DLFVBQVVvQyxlQUFlbkMsS0FBS2d6QyxFQUFLQyxHLE1DQWxGLElBQUlDLEVBQ0FYLEVBQW9CeHhDLEVBQUVveUMsZ0JBQWVELEVBQVlYLEVBQW9CeHhDLEVBQUUyRCxTQUFXLElBQ3RGLElBQUk5QyxFQUFXMndDLEVBQW9CeHhDLEVBQUVhLFNBQ3JDLElBQUtzeEMsR0FBYXR4QyxJQUNiQSxFQUFTd3hDLGdCQUNaRixFQUFZdHhDLEVBQVN3eEMsY0FBY0MsTUFDL0JILEdBQVcsQ0FDZixJQUFJSSxFQUFVMXhDLEVBQVMyeEMscUJBQXFCLFVBQ3pDRCxFQUFRajBDLFNBQVE2ekMsRUFBWUksRUFBUUEsRUFBUWowQyxPQUFTLEdBQUdnMEMsS0FLN0QsSUFBS0gsRUFBVyxNQUFNLElBQUlydUMsTUFBTSx5REFDaENxdUMsRUFBWUEsRUFBVTdwQyxRQUFRLE9BQVEsSUFBSUEsUUFBUSxRQUFTLElBQUlBLFFBQVEsWUFBYSxLQUNwRmtwQyxFQUFvQmxjLEVBQUk2YyxHLDRDQ2Z4QixRQUFlLElBQTBCLHVDLHdDQ0d6QyxTQUFTTSxFQUFRUixHQVdmLE9BVEVRLEVBRG9CLG1CQUFYOW9DLFFBQW9ELGlCQUFwQkEsT0FBT0ssU0FDdEMsU0FBVWlvQyxHQUNsQixjQUFjQSxHQUdOLFNBQVVBLEdBQ2xCLE9BQU9BLEdBQXlCLG1CQUFYdG9DLFFBQXlCc29DLEVBQUlsbUMsY0FBZ0JwQyxRQUFVc29DLElBQVF0b0MsT0FBTzNLLFVBQVksZ0JBQWtCaXpDLElBSTlHQSxHQUdqQixTQUFTUyxFQUFnQlQsRUFBSy91QyxFQUFLdUosR0FZakMsT0FYSXZKLEtBQU8rdUMsRUFDVDl3QyxPQUFPc0osZUFBZXduQyxFQUFLL3VDLEVBQUssQ0FDOUJ1SixNQUFPQSxFQUNQUCxZQUFZLEVBQ1pELGNBQWMsRUFDZDBtQyxVQUFVLElBR1pWLEVBQUkvdUMsR0FBT3VKLEVBR053bEMsRUFHVCxTQUFTVyxFQUFjandDLEdBQ3JCLElBQUssSUFBSVosRUFBSSxFQUFHQSxFQUFJa0IsVUFBVTNFLE9BQVF5RCxJQUFLLENBQ3pDLElBQUlhLEVBQXlCLE1BQWhCSyxVQUFVbEIsR0FBYWtCLFVBQVVsQixHQUFLLEdBQy9DOHdDLEVBQVUxeEMsT0FBT3FCLEtBQUtJLEdBRWtCLG1CQUFqQ3pCLE9BQU9ELHdCQUNoQjJ4QyxFQUFVQSxFQUFROW1CLE9BQU81cUIsT0FBT0Qsc0JBQXNCMEIsR0FBUWt3QyxRQUFPLFNBQVVDLEdBQzdFLE9BQU81eEMsT0FBTzJLLHlCQUF5QmxKLEVBQVFtd0MsR0FBSzdtQyxnQkFJeEQybUMsRUFBUXZ3QyxTQUFRLFNBQVVZLEdBQ3hCd3ZDLEVBQWdCL3ZDLEVBQVFPLEVBQUtOLEVBQU9NLE9BSXhDLE9BQU9QLEVBR1QsU0FBU3F3QyxFQUFtQkMsR0FDMUIsT0FHRixTQUE0QkEsR0FDMUIsR0FBSTNrQyxNQUFNQyxRQUFRMGtDLEdBQU0sQ0FDdEIsSUFBSyxJQUFJbHhDLEVBQUksRUFBR214QyxFQUFPLElBQUk1a0MsTUFBTTJrQyxFQUFJMzBDLFFBQVN5RCxFQUFJa3hDLEVBQUkzMEMsT0FBUXlELElBQUtteEMsRUFBS254QyxHQUFLa3hDLEVBQUlseEMsR0FFakYsT0FBT214QyxHQVBGQyxDQUFtQkYsSUFXNUIsU0FBMEJHLEdBQ3hCLEdBQUl6cEMsT0FBT0ssWUFBWTdJLE9BQU9peUMsSUFBa0QsdUJBQXpDanlDLE9BQU9uQyxVQUFVbVEsU0FBU2xRLEtBQUttMEMsR0FBZ0MsT0FBTzlrQyxNQUFNekwsS0FBS3V3QyxHQVp0RkMsQ0FBaUJKLElBZXJELFdBQ0UsTUFBTSxJQUFJeHhDLFVBQVUsbURBaEJ1QzZ4QyxHQXdCN0QsSUFBSUMsRUFBZSxXQUVmQyxFQUF3QixTQUErQm5wQyxHQUd6RCxNQUVFLElBQUkwaEIsT0FBTzFoQixFQUFNN0MsZ0JBc0JqQmlzQyxFQUFtQixDQUNyQjNqQyx5QkFBeUIsRUFDekJDLG1CQUFtQixFQUNuQkMsa0JBQWtCLEVBQ2xCQyxrQkFBa0IsRUFDbEJDLFNBQVMsRUFDVEMsY0FBYyxFQUNkQyxpQkFBaUIsRUFDakJDLGFBQWEsRUFDYkUsTUFBTSxFQUNOQyxVQUFVLEVBQ1ZDLGNBQWMsRUFDZEMsWUFBWSxFQUNaQyxjQUFjLEVBQ2RDLFdBQVcsRUFDWEUsU0FBUyxFQUNUSSxZQUFZLEVBQ1pJLFlBQVksRUFDWkMsV0FBVyxFQUNYQyxZQUFZLEVBQ1pDLFNBQVMsRUFDVEMsT0FBTyxFQUNQQyxTQUFTLEVBQ1RDLFNBQVMsRUFDVEMsUUFBUSxFQUNSQyxRQUFRLEVBQ1JDLE1BQU0sRUFFTkMsYUFBYSxFQUNiQyxjQUFjLEVBQ2RDLGFBQWEsRUFDYkMsaUJBQWlCLEVBQ2pCQyxrQkFBa0IsRUFDbEJDLGtCQUFrQixFQUNsQkMsZUFBZSxFQUNmQyxhQUFhLEdBcUJYbWhDLEVBQVcsQ0FBQyxTQUFVLEtBQU0sTUFBTyxLQUl2Q3Z5QyxPQUFPcUIsS0FBS2l4QyxHQUFrQm54QyxTQUFRLFNBQVU0dkMsR0FDOUN3QixFQUFTcHhDLFNBQVEsU0FBVXF4QyxHQUN6QkYsRUFoQkosU0FBbUJFLEVBQVF6d0MsR0FDekIsT0FBT3l3QyxFQUFTendDLEVBQUk0UCxPQUFPLEdBQUduTCxjQUFnQnpFLEVBQUk2UCxVQUFVLEdBZXpDNmdDLENBQVVELEVBQVF6QixJQUFTdUIsRUFBaUJ2QixTQUdqRSxJQUFJMkIsRUFBaUIsU0FBd0Izd0MsRUFFM0NndkMsR0FLQSxNQUFvQixpQkFBVEEsRUFDTHVCLEVBQWlCdndDLEdBQ1osR0FBS2d2QyxFQUVMQSxFQUFPLEtBR1QsR0FBS0EsR0FHWjRCLEVBQWdDLFNBQXVDNXdDLEVBRXpFZ3ZDLEdBR0EsT0FFRTZCLEVBQWFGLEVBQWUzd0MsRUFBS2d2QyxLQUtqQzhCLEVBQWEsU0FBb0J4dkMsRUFFbkN0QixHQUdBLE9BRUUsSUFBV3NCLEdBQVEySyxTQUFTLEtBcUI1QjRrQyxFQUFlLFNBQXNCdnZDLEdBR3ZDLE1BT2lDLE1BQS9CQSxFQUFPQSxFQUFPbEcsT0FBUyxLQUFxQyxnQkFBdEJrRyxFQUFPcUQsT0FBTyxJQUF3QnJELEVBQVMsR0FBR3VuQixPQUFPdm5CLEVBQVEsZ0JBS3ZHeXZDLEVBQTRCLG9CQUFSbjhCLElBRXBCbzhCLEVBRUosV0FLRSxTQUFTQSxJQUNQcjFDLEtBQUtzMUMsU0FBVyxHQUNoQnQxQyxLQUFLdTFDLFNBQVcsR0FHbEIsSUFBSUMsRUFBU0gsRUFBZ0JsMUMsVUFnRzdCLE9BOUZBcTFDLEVBQU8veEMsUUFBVSxTQUFpQmpDLEdBR2hDLElBQUssSUFBSTBCLEVBQUksRUFBR0EsRUFBSWxELEtBQUt1MUMsU0FBUzkxQyxPQUFReUQsSUFFeEMxQixFQUFTeEIsS0FBS3MxQyxTQUFTdDFDLEtBQUt1MUMsU0FBU3J5QyxJQUFLbEQsS0FBS3UxQyxTQUFTcnlDLEtBSTVEc3lDLEVBQU8zcEMsSUFBTSxTQUFheEgsRUFFeEJ1SixFQUVBNm5DLEdBR0EsR0FBS3oxQyxLQUFLczFDLFNBQVMveUMsZUFBZThCLElBRTNCLEdBQUlveEMsRUFBZSxDQUN4QixJQUFJLzBDLEVBQVFWLEtBQUt1MUMsU0FBU3hoQyxRQUFRMVAsR0FDbENyRSxLQUFLdTFDLFNBQVNHLE9BQU9oMUMsRUFBTyxHQUM1QlYsS0FBS3UxQyxTQUFTaDFDLEtBQUs4RCxTQUpuQnJFLEtBQUt1MUMsU0FBU2gxQyxLQUFLOEQsR0FPckIsR0FBYSxNQUFUdUosRUFBSixDQUtBLEdBQUl3bkMsR0FBY3huQyxhQUFpQnFMLEtBQU9yTCxhQUFpQnluQyxFQUFpQixDQUcxRSxJQUFJTSxFQUFTMzFDLEtBQUtzMUMsU0FBUy95QyxlQUFlOEIsR0FBT3JFLEtBQUtzMUMsU0FBU2p4QyxHQUFPLElBQUlneEMsRUFLMUUsT0FKQXpuQyxFQUFNbkssU0FBUSxTQUFVbUssRUFBT3ZKLEdBQzdCc3hDLEVBQU85cEMsSUFBSXhILEVBQUt1SixFQUFPNm5DLFdBRXpCejFDLEtBQUtzMUMsU0FBU2p4QyxHQUFPc3hDLEdBSXZCLEdBQUtsbUMsTUFBTUMsUUFBUTlCLElBQTZCLFdBQW5CZ21DLEVBQVFobUMsR0FlckM1TixLQUFLczFDLFNBQVNqeEMsR0FBT3VKLE1BZnJCLENBT0UsSUFKQSxJQUFJZ29DLEVBQVU1MUMsS0FBS3MxQyxTQUFTL3lDLGVBQWU4QixHQUFPckUsS0FBS3MxQyxTQUFTanhDLEdBQU8sSUFBSWd4QyxFQUV2RTF4QyxFQUFPckIsT0FBT3FCLEtBQUtpSyxHQUVkMUssRUFBSSxFQUFHQSxFQUFJUyxFQUFLbEUsT0FBUXlELEdBQUssRUFDcEMweUMsRUFBUS9wQyxJQUFJbEksRUFBS1QsR0FBSTBLLEVBQU1qSyxFQUFLVCxJQUFLdXlDLEdBR3ZDejFDLEtBQUtzMUMsU0FBU2p4QyxHQUFPdXhDLFFBMUJyQjUxQyxLQUFLczFDLFNBQVNqeEMsR0FBT3VKLEdBaUN6QjRuQyxFQUFPcm9DLElBQU0sU0FBYTlJLEdBS3hCLE9BQU9yRSxLQUFLczFDLFNBQVNqeEMsSUFHdkJteEMsRUFBTy9uQixJQUFNLFNBQWFwcEIsR0FLeEIsT0FBT3JFLEtBQUtzMUMsU0FBUy95QyxlQUFlOEIsSUFHdENteEMsRUFBT0ssYUFBZSxTQUFzQkMsR0FLMUMsSUFBSUMsRUFBUS8xQyxLQUVaLEdBQUlvMUMsR0FBY1UsYUFBcUI3OEIsS0FBTzY4QixhQUFxQlQsRUFDakVTLEVBQVVyeUMsU0FBUSxTQUFVbUssRUFBT3ZKLEdBQ2pDMHhDLEVBQU1scUMsSUFBSXhILEVBQUt1SixHQUFPLFdBS3hCLElBRkEsSUFBSWpLLEVBQU9yQixPQUFPcUIsS0FBS215QyxHQUVkNXlDLEVBQUksRUFBR0EsRUFBSVMsRUFBS2xFLE9BQVF5RCxJQUMvQmxELEtBQUs2TCxJQUFJbEksRUFBS1QsR0FBSTR5QyxFQUFVbnlDLEVBQUtULEtBQUssSUFLckNteUMsRUExR1QsR0E2R0EsU0FBU1csRUFBZTluQixHQUN2QixPQUFPQSxHQUFLQSxFQUFFNmtCLFlBQWN6d0MsT0FBT25DLFVBQVVvQyxlQUFlbkMsS0FBSzh0QixFQUFHLFdBQWFBLEVBQUU4aEIsUUFBVTloQixFQUc5RixTQUFTK25CLEVBQXFCQyxFQUFJajJDLEdBQ2pDLE9BQWlDaTJDLEVBQTFCajJDLEVBQVMsQ0FBRUMsUUFBUyxJQUFpQkQsRUFBT0MsU0FBVUQsRUFBT0MsUUFPckUsSUFBSWkyQyxFQUFxQkYsR0FBcUIsU0FBVWgyQyxFQUFRQyxHQUVoRW9DLE9BQU9zSixlQUFlMUwsRUFBUyxhQUFjLENBQzNDME4sT0FBTyxJQUVUMU4sRUFBUTh2QyxRQUNSLFNBQTBCdUMsR0FDeEIsT0FBT0EsRUFBSXQrQixPQUFPLEdBQUduTCxjQUFnQnlwQyxFQUFJdnBDLE1BQU0sT0FJakRndEMsRUFBY0csR0FFZCxJQUFJQyxFQUFtQkgsR0FBcUIsU0FBVWgyQyxFQUFRQyxHQUU5RG9DLE9BQU9zSixlQUFlMUwsRUFBUyxhQUFjLENBQzNDME4sT0FBTyxJQUVUMU4sRUFBUTh2QyxRQVFSLFNBQXdCcUcsRUFBa0JDLEVBQVV4aUMsR0FDbEQsR0FBSXVpQyxFQUFpQjl6QyxlQUFlK3pDLEdBQVcsQ0FLN0MsSUFKQSxJQUFJQyxFQUFXLEdBQ1hDLEVBQW1CSCxFQUFpQkMsR0FDcENHLEdBQXNCLEVBQUlDLEVBQW1CMUcsU0FBU3NHLEdBQ3REM3lDLEVBQU9yQixPQUFPcUIsS0FBS21RLEdBQ2Q1USxFQUFJLEVBQUdBLEVBQUlTLEVBQUtsRSxPQUFReUQsSUFBSyxDQUNwQyxJQUFJeXpDLEVBQWdCaHpDLEVBQUtULEdBQ3pCLEdBQUl5ekMsSUFBa0JMLEVBQ3BCLElBQUssSUFBSU0sRUFBSSxFQUFHQSxFQUFJSixFQUFpQi8yQyxPQUFRbTNDLElBQzNDTCxFQUFTQyxFQUFpQkksR0FBS0gsR0FBdUIzaUMsRUFBTXdpQyxHQUdoRUMsRUFBU0ksR0FBaUI3aUMsRUFBTTZpQyxHQUVsQyxPQUFPSixFQUVULE9BQU96aUMsR0FyQlQsSUFFZ0NzL0IsRUFGNUJzRCxHQUU0QnRELEVBRmdCK0MsSUFFSy9DLEVBQUlMLFdBQWFLLEVBQU0sQ0FBRXBELFFBQVNvRCxNQXVCdkY0QyxFQUFjSSxHQUVkLElBQUlTLEVBQWdCWixHQUFxQixTQUFVaDJDLEVBQVFDLEdBRTNEb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBQ1IsU0FBcUI4RyxFQUFTUixFQUFVMW9DLEVBQU9rRyxFQUFPaWpDLEdBQ3BELElBQUssSUFBSTd6QyxFQUFJLEVBQUc4ekMsRUFBTUYsRUFBUXIzQyxPQUFReUQsRUFBSTh6QyxJQUFPOXpDLEVBQUcsQ0FDbEQsSUFBSSt6QyxFQUFpQkgsRUFBUTV6QyxHQUFHb3pDLEVBQVUxb0MsRUFBT2tHLEVBQU9pakMsR0FJeEQsR0FBSUUsRUFDRixPQUFPQSxPQU1iakIsRUFBY2EsR0FFZCxJQUFJSyxFQUFxQmpCLEdBQXFCLFNBQVVoMkMsRUFBUUMsR0FNaEUsU0FBU2kzQyxFQUFTQyxFQUFNeHBDLElBQ08sSUFBekJ3cEMsRUFBS3JqQyxRQUFRbkcsSUFDZndwQyxFQUFLNzJDLEtBQUtxTixHQU5kdEwsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBT1IsU0FBMEJvSCxFQUFNQyxHQUM5QixHQUFJNW5DLE1BQU1DLFFBQVEybkMsR0FDaEIsSUFBSyxJQUFJbjBDLEVBQUksRUFBRzh6QyxFQUFNSyxFQUFPNTNDLE9BQVF5RCxFQUFJOHpDLElBQU85ekMsRUFDOUNpMEMsRUFBU0MsRUFBTUMsRUFBT24wQyxTQUd4QmkwQyxFQUFTQyxFQUFNQyxPQUtuQnJCLEVBQWNrQixHQUVkLElBQUlJLEVBQWFyQixHQUFxQixTQUFVaDJDLEVBQVFDLEdBRXhEb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBQ1IsU0FBa0JwaUMsR0FDaEIsT0FBT0EsYUFBaUJ0TCxTQUFXbU4sTUFBTUMsUUFBUTlCLE9BSW5Eb29DLEVBQWNzQixHQUVkLElBb0VJQyxFQUFpQnZCLEVBcEVFQyxHQUFxQixTQUFVaDJDLEVBQVFDLEdBRTlEb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBb0JSLFNBQXdCd0gsR0FDdEIsSUFBSUMsRUFBWUQsRUFBS0MsVUFDakJYLEVBQVVVLEVBQUtWLFFBRW5CLE9BQU8sU0FBU2hDLEVBQU9oaEMsR0FDckIsSUFBSyxJQUFJd2lDLEtBQVl4aUMsRUFBTyxDQUMxQixJQUFJbEcsRUFBUWtHLEVBQU13aUMsR0FHbEIsSUFBSSxFQUFJb0IsRUFBVzFILFNBQVNwaUMsR0FDMUJrRyxFQUFNd2lDLEdBQVl4QixFQUFPbG5DLFFBRXBCLEdBQUk2QixNQUFNQyxRQUFROUIsR0FBUSxDQUcvQixJQUZBLElBQUkrcEMsRUFBZ0IsR0FFWHowQyxFQUFJLEVBQUc4ekMsRUFBTXBwQyxFQUFNbk8sT0FBUXlELEVBQUk4ekMsSUFBTzl6QyxFQUFHLENBQ2hELElBQUkrekMsR0FBaUIsRUFBSVcsRUFBYzVILFNBQVM4RyxFQUFTUixFQUFVMW9DLEVBQU0xSyxHQUFJNFEsRUFBTzJqQyxJQUNwRixFQUFJSSxFQUFtQjdILFNBQVMySCxFQUFlVixHQUFrQnJwQyxFQUFNMUssSUFLckV5MEMsRUFBY2w0QyxPQUFTLElBQ3pCcVUsRUFBTXdpQyxHQUFZcUIsT0FFZixDQUNMLElBQUlHLEdBQWtCLEVBQUlGLEVBQWM1SCxTQUFTOEcsRUFBU1IsRUFBVTFvQyxFQUFPa0csRUFBTzJqQyxHQUk5RUssSUFDRmhrQyxFQUFNd2lDLEdBQVl3QixHQUdwQmhrQyxHQUFRLEVBQUlpa0MsRUFBaUIvSCxTQUFTeUgsRUFBV25CLEVBQVV4aUMsSUFJL0QsT0FBT0EsSUF0RFgsSUFBSWlrQyxFQUFtQkMsRUFBdUI1QixHQUkxQ3dCLEVBQWdCSSxFQUF1Qm5CLEdBSXZDZ0IsRUFBcUJHLEVBQXVCZCxHQUk1Q1EsRUFBYU0sRUFBdUJWLEdBRXhDLFNBQVNVLEVBQXVCNUUsR0FBTyxPQUFPQSxHQUFPQSxFQUFJTCxXQUFhSyxFQUFNLENBQUVwRCxRQUFTb0QsUUE4RG5GNkUsRUFBaUJqQyxFQWZFQyxHQUFxQixTQUFVaDJDLEVBQVFDLEdBRTlEb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBR1IsU0FBd0JzRyxFQUFVMW9DLEdBQ2hDLEdBQXFCLGlCQUFWQSxHQUFnQyxTQUFWQSxFQUMvQixNQUFPLENBQUMsZUFBZ0IsYUFPeEJzcUMsRUFBb0JqQyxHQUFxQixTQUFVaDJDLEVBQVFDLEdBRS9Eb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBR1IsU0FBeUJwaUMsR0FDdkIsTUFBd0IsaUJBQVZBLEdBQXNCdXFDLEVBQU0vdUMsS0FBS3dFLElBSGpELElBQUl1cUMsRUFBUSxzQkFLWmw0QyxFQUFPQyxRQUFVQSxFQUFpQixXQUdsQzgxQyxFQUFja0MsR0FFZCxJQXVCSUUsRUFBT3BDLEVBdkJFQyxHQUFxQixTQUFVaDJDLEVBQVFDLEdBRXBEb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBU1IsU0FBY3NHLEVBQVUxb0MsR0FDdEIsR0FBcUIsaUJBQVZBLEtBQXVCLEVBQUl5cUMsRUFBa0JySSxTQUFTcGlDLElBQVVBLEVBQU1tRyxRQUFRLFVBQVksRUFDbkcsT0FBTzhnQyxFQUFTenhDLEtBQUksU0FBVTB4QyxHQUM1QixPQUFPbG5DLEVBQU1uRSxRQUFRLFVBQVdxckMsRUFBUyxhQVIvQyxJQUVnQzFCLEVBRjVCaUYsR0FFNEJqRixFQUZlOEUsSUFFTTlFLEVBQUlMLFdBQWFLLEVBQU0sQ0FBRXBELFFBQVNvRCxHQUVuRnlCLEVBQVcsQ0FBQyxXQUFZLFFBQVMsUUFvQ2pDeUQsRUFBWXRDLEVBeEJFQyxHQUFxQixTQUFVaDJDLEVBQVFDLEdBRXpEb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBVVIsU0FBbUJzRyxFQUFVMW9DLEdBQzNCLEdBQXFCLGlCQUFWQSxLQUF1QixFQUFJeXFDLEVBQWtCckksU0FBU3BpQyxJQUFVQSxFQUFNbUcsUUFBUSxnQkFBa0IsRUFDekcsT0FBTzhnQyxFQUFTenhDLEtBQUksU0FBVTB4QyxHQUM1QixPQUFPbG5DLEVBQU1uRSxRQUFRLGdCQUFpQnFyQyxFQUFTLG1CQVRyRCxJQUVnQzFCLEVBRjVCaUYsR0FFNEJqRixFQUZlOEUsSUFFTTlFLEVBQUlMLFdBQWFLLEVBQU0sQ0FBRXBELFFBQVNvRCxHQUduRnlCLEVBQVcsQ0FBQyxXQUFZLFFBb0N4QjBELEVBQVN2QyxFQXhCRUMsR0FBcUIsU0FBVWgyQyxFQUFRQyxHQUV0RG9DLE9BQU9zSixlQUFlMUwsRUFBUyxhQUFjLENBQzNDME4sT0FBTyxJQUVUMU4sRUFBUTh2QyxRQVVSLFNBQWdCc0csRUFBVTFvQyxHQUN4QixHQUFpQixXQUFiMG9DLEdBQXlCZSxFQUFPOTBDLGVBQWVxTCxHQUNqRCxPQUFPaW5DLEVBQVN6eEMsS0FBSSxTQUFVMHhDLEdBQzVCLE9BQU9BLEVBQVNsbkMsTUFadEIsSUFBSWluQyxFQUFXLENBQUMsV0FBWSxRQUFTLElBRWpDd0MsRUFBUyxDQUNYLFdBQVcsRUFDWCxZQUFZLEVBQ1ptQixNQUFNLEVBQ05DLFVBQVUsT0FzQ1J4RSxFQUFTK0IsRUF4QkVDLEdBQXFCLFNBQVVoMkMsRUFBUUMsR0FFdERvQyxPQUFPc0osZUFBZTFMLEVBQVMsYUFBYyxDQUMzQzBOLE9BQU8sSUFFVDFOLEVBQVE4dkMsUUFVUixTQUFnQnNHLEVBQVUxb0MsR0FDeEIsR0FBcUIsaUJBQVZBLEtBQXVCLEVBQUl5cUMsRUFBa0JySSxTQUFTcGlDLElBQVVBLEVBQU1tRyxRQUFRLFlBQWMsRUFDckcsT0FBTzhnQyxFQUFTenhDLEtBQUksU0FBVTB4QyxHQUM1QixPQUFPbG5DLEVBQU1uRSxRQUFRLFlBQWFxckMsRUFBUyxlQVRqRCxJQUVnQzFCLEVBRjVCaUYsR0FFNEJqRixFQUZlOEUsSUFFTTlFLEVBQUlMLFdBQWFLLEVBQU0sQ0FBRXBELFFBQVNvRCxHQUduRnlCLEVBQVcsQ0FBQyxXQUFZLFFBOEJ4Qm5qQyxFQUFPc2tDLEVBbEJFQyxHQUFxQixTQUFVaDJDLEVBQVFDLEdBRXBEb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBTVIsU0FBY3NHLEVBQVUxb0MsR0FDdEIsR0FBaUIsWUFBYjBvQyxHQUEwQmUsRUFBTzkwQyxlQUFlcUwsR0FDbEQsT0FBT3lwQyxFQUFPenBDLElBUGxCLElBQUl5cEMsRUFBUyxDQUNYM2xDLEtBQU0sQ0FBQyxjQUFlLFdBQVksY0FBZSxlQUFnQixRQUNqRSxjQUFlLENBQUMscUJBQXNCLGtCQUFtQixxQkFBc0Isc0JBQXVCLG9CQXVGcEdnbkMsRUFBWTFDLEVBM0VFQyxHQUFxQixTQUFVaDJDLEVBQVFDLEdBRXpEb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBMEJSLFNBQW1Cc0csRUFBVTFvQyxFQUFPa0csR0FJbEMsR0FISXhSLE9BQU9uQyxVQUFVb0MsZUFBZW5DLEtBQUt1NEMsRUFBa0JyQyxLQUN6RHhpQyxFQUFNNmtDLEVBQWlCckMsSUFBYXNDLEVBQWtCaHJDLElBQVVBLEdBRWpELFNBQWIwb0MsRUFBcUIsQ0FHdkIsR0FBSWgwQyxPQUFPbkMsVUFBVW9DLGVBQWVuQyxLQUFLeTRDLEVBQXVCanJDLEdBRTlELFlBREFrRyxFQUFNZ2xDLE9BQVNELEVBQXNCanJDLElBS3ZDLEdBQUlnbkMsRUFBaUJ4ckMsS0FBS3dFLEdBRXhCLFlBREFrRyxFQUFNZ2xDLE9BQVNsckMsRUFBUSxTQUt6QixJQUFJbXJDLEVBQWFuckMsRUFBTXBLLE1BQU0sTUFHN0IsT0FBUXUxQyxFQUFXdDVDLFFBQ2pCLEtBQUssRUFFSCxZQURBcVUsRUFBTWdsQyxPQUFTLE9BQVNsckMsR0FFMUIsS0FBSyxFQVVILFlBTElnbkMsRUFBaUJ4ckMsS0FBSzJ2QyxFQUFXLElBQ25DamxDLEVBQU1nbEMsT0FBU0MsRUFBVyxHQUFLLElBQU1BLEVBQVcsR0FBSyxNQUVyRGpsQyxFQUFNZ2xDLE9BQVNDLEVBQVcsR0FBSyxNQUFRQSxFQUFXLElBR3RELFFBQ0VqbEMsRUFBTWdsQyxPQUFTbHJDLEtBL0R2QixJQUFJZ3JDLEVBQW9CLENBQ3RCLGVBQWdCLGFBQ2hCLGdCQUFpQixVQUNqQixhQUFjLFFBQ2QsV0FBWSxPQUVWRCxFQUFtQixDQUNyQkssYUFBYyxpQkFDZEMsVUFBVyxrQkFDWEMsV0FBWSxjQUNaQyxlQUFnQixhQUNoQnRtQyxNQUFPLGNBQ1BsQixTQUFVLGlCQUNWRSxXQUFZLGlCQUNadW5DLFVBQVcsdUJBRVBQLEVBQXdCLENBQzVCUSxLQUFNLFdBQ05DLFFBQVMsVUFDVEMsUUFBUyxXQUNUQyxLQUFNLFdBQ05DLE1BQU8sU0FFTDdFLEVBQW1CLG9CQXlGbkI4RSxFQUFhMUQsRUF6Q0VDLEdBQXFCLFNBQVVoMkMsRUFBUUMsR0FFMURvQyxPQUFPc0osZUFBZTFMLEVBQVMsYUFBYyxDQUMzQzBOLE9BQU8sSUFFVDFOLEVBQVE4dkMsUUFpQlIsU0FBb0JzRyxFQUFVMW9DLEVBQU9rRyxHQUNsQixrQkFBYndpQyxHQUFpRCxpQkFBVjFvQyxJQUNyQ0EsRUFBTW1HLFFBQVEsV0FBYSxFQUM3QkQsRUFBTTZsQyxnQkFBa0IsV0FFeEI3bEMsRUFBTTZsQyxnQkFBa0IsYUFFdEIvckMsRUFBTW1HLFFBQVEsWUFBYyxFQUM5QkQsRUFBTThsQyxtQkFBcUIsVUFFM0I5bEMsRUFBTThsQyxtQkFBcUIsVUFHM0JqQixFQUFpQnAyQyxlQUFlK3pDLEtBQ2xDeGlDLEVBQU02a0MsRUFBaUJyQyxJQUFhc0MsRUFBa0JockMsSUFBVUEsSUE5QnBFLElBQUlnckMsRUFBb0IsQ0FDdEIsZUFBZ0IsVUFDaEIsZ0JBQWlCLFVBQ2pCLGFBQWMsUUFDZCxXQUFZLE1BQ1osZUFBZ0IsV0FDaEJpQixLQUFNLFlBR0psQixFQUFtQixDQUNyQk8sV0FBWSxpQkFDWkMsZUFBZ0IsZ0JBQ2hCVyxTQUFVLGlCQUNWbm9DLFNBQVUscUJBb0RSb29DLEVBQVcvRCxFQTVCRUMsR0FBcUIsU0FBVWgyQyxFQUFRQyxHQUV4RG9DLE9BQU9zSixlQUFlMUwsRUFBUyxhQUFjLENBQzNDME4sT0FBTyxJQUVUMU4sRUFBUTh2QyxRQVlSLFNBQWtCc0csRUFBVTFvQyxHQUMxQixHQUFxQixpQkFBVkEsS0FBdUIsRUFBSXlxQyxFQUFrQnJJLFNBQVNwaUMsSUFBVXlwQyxFQUFPanVDLEtBQUt3RSxHQUNyRixPQUFPaW5DLEVBQVN6eEMsS0FBSSxTQUFVMHhDLEdBQzVCLE9BQU9sbkMsRUFBTW5FLFFBQVE0dEMsR0FBUSxTQUFVMkMsR0FDckMsT0FBT2xGLEVBQVNrRixTQVp4QixJQUVnQzVHLEVBRjVCaUYsR0FFNEJqRixFQUZlOEUsSUFFTTlFLEVBQUlMLFdBQWFLLEVBQU0sQ0FBRXBELFFBQVNvRCxHQUVuRnlCLEVBQVcsQ0FBQyxXQUFZLFFBQVMsSUFFakN3QyxFQUFTLDRGQWlJVDRDLEVBQU9qRSxFQWxIRUMsR0FBcUIsU0FBVWgyQyxFQUFRQyxHQUVwRG9DLE9BQU9zSixlQUFlMUwsRUFBUyxhQUFjLENBQzNDME4sT0FBTyxJQUdULElBQUlzc0MsRUFBZ2IsU0FBVTlGLEVBQUtseEMsR0FBSyxHQUFJdU0sTUFBTUMsUUFBUTBrQyxHQUFRLE9BQU9BLEVBQVksR0FBSXRwQyxPQUFPSyxZQUFZN0ksT0FBTzh4QyxHQUFRLE9BQXhmLFNBQXVCQSxFQUFLbHhDLEdBQUssSUFBSWkzQyxFQUFPLEdBQVFDLEdBQUssRUFBVUMsR0FBSyxFQUFXQyxPQUFLQyxFQUFXLElBQU0sSUFBSyxJQUFpQ0MsRUFBN0JDLEVBQUtyRyxFQUFJdHBDLE9BQU9LLGNBQW1CaXZDLEdBQU1JLEVBQUtDLEVBQUdwbEIsUUFBUXNFLFFBQW9Cd2dCLEVBQUs1NUMsS0FBS2k2QyxFQUFHNXNDLFFBQVkxSyxHQUFLaTNDLEVBQUsxNkMsU0FBV3lELEdBQTNEazNDLEdBQUssSUFBb0UsTUFBT3gyQyxHQUFPeTJDLEdBQUssRUFBTUMsRUFBSzEyQyxFQUFPLFFBQVUsS0FBV3cyQyxHQUFNSyxFQUFXLFFBQUdBLEVBQVcsU0FBTyxRQUFVLEdBQUlKLEVBQUksTUFBTUMsR0FBUSxPQUFPSCxFQUE2SE8sQ0FBY3RHLEVBQUtseEMsR0FBYSxNQUFNLElBQUlOLFVBQVUseURBR3RsQixTQUFTKzNDLEVBQXNCL3NDLEdBQzdCLE1BQXdCLGlCQUFWQSxJQUF1QjFFLE1BQU0wRSxHQUY3QzFOLEVBQVE4dkMsUUE4RlIsU0FBY3NHLEVBQVUxb0MsRUFBT2tHLEdBQzdCLEdBQWlCLFlBQWJ3aUMsR0FBMEIxb0MsS0FBU2d0QyxFQUNyQyxPQUFPQSxFQUFjaHRDLEdBR25CMG9DLEtBQVl1RSxJQUVkQyxFQUR3QkQsRUFBbUJ2RSxJQUN6QjFvQyxFQUFPa0csSUFoRzdCLElBQUlpbkMsRUFBa0IsQ0FBQyxTQUFVLE1BQU8sUUFBUyxXQUU3Q0gsRUFBZ0IsQ0FDbEIsY0FBZSxDQUFDLGtCQUFtQixlQUNuQ1gsS0FBTSxDQUFDLFdBQVksU0FHakJZLEVBQXFCLENBQ3ZCNUIsVUFBVyxTQUFtQnJyQyxFQUFPa0csR0FDL0JpbkMsRUFBZ0JobkMsUUFBUW5HLElBQVUsSUFDcENrRyxFQUFNa25DLGVBQWlCcHRDLElBSTNCeUUsV0FBWSxTQUFvQnpFLEVBQU9rRyxHQUNyQyxHQUFJNm1DLEVBQXNCL3NDLEdBQ3hCa0csRUFBTW1uQyxhQUFlcnRDLE1BQ2hCLENBQ0wsSUFBSXN0QyxFQUFtQnR0QyxFQUFNcEssTUFBTSxLQUFLSixLQUFJLFNBQVUrM0MsR0FDcEQsT0FBUUEsS0FFTkMsRUFBb0JsQixFQUFlZ0IsRUFBa0IsR0FDckQ5dUIsRUFBUWd2QixFQUFrQixHQUMxQjl1QixFQUFNOHVCLEVBQWtCLEdBRTVCUCxFQUFtQnJvQyxnQkFBZ0I0WixFQUFPdFksR0FDMUMrbUMsRUFBbUJ2b0MsY0FBY2dhLEVBQUt4WSxLQUkxQ3hCLGNBQWUsU0FBdUIxRSxFQUFPa0csR0FDM0MsSUFBSW1uQyxFQUFlbm5DLEVBQU1tbkMsYUFFckJOLEVBQXNCL3NDLElBQVUrc0MsRUFBc0JNLEtBQ3hEbm5DLEVBQU11bkMsaUJBQW1CenRDLEVBQVFxdEMsSUFJckN6b0MsZ0JBQWlCLFNBQXlCNUUsRUFBT2tHLEdBQzNDNm1DLEVBQXNCL3NDLEtBQ3hCa0csRUFBTW1uQyxhQUFlcnRDLElBSXpCcUUsUUFBUyxTQUFpQnJFLEVBQU9rRyxHQUMvQixHQUFJNm1DLEVBQXNCL3NDLEdBQ3hCa0csRUFBTXduQyxVQUFZMXRDLE1BQ2IsQ0FDTCxJQUFJMnRDLEVBQW9CM3RDLEVBQU1wSyxNQUFNLEtBQUtKLEtBQUksU0FBVSszQyxHQUNyRCxPQUFRQSxLQUVOSyxFQUFvQnRCLEVBQWVxQixFQUFtQixHQUN0RG52QixFQUFRb3ZCLEVBQWtCLEdBQzFCbHZCLEVBQU1rdkIsRUFBa0IsR0FFNUJYLEVBQW1Cem9DLGFBQWFnYSxFQUFPdFksR0FDdkMrbUMsRUFBbUIzb0MsV0FBV29hLEVBQUt4WSxLQUl2QzVCLFdBQVksU0FBb0J0RSxFQUFPa0csR0FDckMsSUFBSXduQyxFQUFZeG5DLEVBQU13bkMsVUFFbEJYLEVBQXNCL3NDLElBQVUrc0MsRUFBc0JXLEtBQ3hEeG5DLEVBQU0ybkMsY0FBZ0I3dEMsRUFBUTB0QyxJQUlsQ2xwQyxhQUFjLFNBQXNCeEUsRUFBT2tHLEdBQ3JDNm1DLEVBQXNCL3NDLEtBQ3hCa0csRUFBTXduQyxVQUFZMXRDLElBSXRCOHRDLG9CQUFxQixTQUE2Qjl0QyxFQUFPa0csR0FDdkRBLEVBQU02bkMsY0FBZ0IvdEMsR0FHeEJndUMsaUJBQWtCLFNBQTBCaHVDLEVBQU9rRyxHQUNqREEsRUFBTStuQyxXQUFhanVDLEdBR3JCa3VDLFlBQWEsU0FBcUJsdUMsRUFBT2tHLEdBQ25DaW5DLEVBQWdCaG5DLFFBQVFuRyxJQUFVLElBQ3BDa0csRUFBTWlvQyxrQkFBb0JudUMsU0EyQzVCb3VDLEVBQVdoRyxFQXhCRUMsR0FBcUIsU0FBVWgyQyxFQUFRQyxHQUV4RG9DLE9BQU9zSixlQUFlMUwsRUFBUyxhQUFjLENBQzNDME4sT0FBTyxJQUVUMU4sRUFBUTh2QyxRQVVSLFNBQWtCc0csRUFBVTFvQyxHQUMxQixHQUFxQixpQkFBVkEsS0FBdUIsRUFBSXlxQyxFQUFrQnJJLFNBQVNwaUMsSUFBVUEsRUFBTW1HLFFBQVEsZUFBaUIsRUFDeEcsT0FBTzhnQyxFQUFTenhDLEtBQUksU0FBVTB4QyxHQUM1QixPQUFPbG5DLEVBQU1uRSxRQUFRLGVBQWdCcXJDLEVBQVMsa0JBVHBELElBRWdDMUIsRUFGNUJpRixHQUU0QmpGLEVBRmU4RSxJQUVNOUUsRUFBSUwsV0FBYUssRUFBTSxDQUFFcEQsUUFBU29ELEdBR25GeUIsRUFBVyxDQUFDLFdBQVksUUF1RHhCb0gsRUFBVWpHLEVBM0NFQyxHQUFxQixTQUFVaDJDLEVBQVFDLEdBRXZEb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBNEJSLFNBQWlCc0csRUFBVTFvQyxFQUFPa0csR0FDaEMsR0FBSXhSLE9BQU9uQyxVQUFVb0MsZUFBZW5DLEtBQUt1NEMsRUFBa0JyQyxHQUV6RCxJQURBLElBQUk0RixFQUFzQnZELEVBQWlCckMsR0FDbENwekMsRUFBSSxFQUFHOHpDLEVBQU1rRixFQUFvQno4QyxPQUFReUQsRUFBSTh6QyxJQUFPOXpDLEVBQzNENFEsRUFBTW9vQyxFQUFvQmg1QyxJQUFNMEssR0EvQnRDLElBQUkrcUMsRUFBbUIsQ0FDckJ3RCxpQkFBa0IsQ0FBQyxzQkFDbkJDLGVBQWdCLENBQUMscUJBQ2pCQyxrQkFBbUIsQ0FBQyxvQkFBcUIsa0JBQ3pDQyxnQkFBaUIsQ0FBQyxrQkFBbUIsZ0JBQ3JDQyxrQkFBbUIsQ0FBQyx1QkFDcEJDLGdCQUFpQixDQUFDLHNCQUNsQkMsbUJBQW9CLENBQUMscUJBQXNCLG1CQUMzQ0MsaUJBQWtCLENBQUMsbUJBQW9CLGlCQUN2Q0MsaUJBQWtCLENBQUMsc0JBQ25CQyxzQkFBdUIsQ0FBQywyQkFDeEJDLHNCQUF1QixDQUFDLDJCQUN4QkMsc0JBQXVCLENBQUMsMkJBQ3hCQyxlQUFnQixDQUFDLHFCQUNqQkMsb0JBQXFCLENBQUMsMEJBQ3RCQyxvQkFBcUIsQ0FBQywwQkFDdEJDLG9CQUFxQixDQUFDLDBCQUN0QkMsa0JBQW1CLENBQUMsb0JBQXFCLGtCQUN6Q0MsdUJBQXdCLENBQUMseUJBQTBCLHVCQUNuREMsdUJBQXdCLENBQUMseUJBQTBCLHVCQUNuREMsdUJBQXdCLENBQUMseUJBQTBCLHVCQUNuREMsZ0JBQWlCLENBQUMsa0JBQW1CLGdCQUNyQ0MscUJBQXNCLENBQUMsdUJBQXdCLHFCQUMvQ0MscUJBQXNCLENBQUMsdUJBQXdCLHFCQUMvQ0MscUJBQXNCLENBQUMsdUJBQXdCLDBCQTRCN0N2QyxFQUFXbkYsRUFiRUMsR0FBcUIsU0FBVWgyQyxFQUFRQyxHQUV4RG9DLE9BQU9zSixlQUFlMUwsRUFBUyxhQUFjLENBQzNDME4sT0FBTyxJQUVUMU4sRUFBUTh2QyxRQUNSLFNBQWtCc0csRUFBVTFvQyxHQUMxQixHQUFpQixhQUFiMG9DLEdBQXFDLFdBQVYxb0MsRUFDN0IsTUFBTyxDQUFDLGlCQUFrQixlQXlDMUIrdkMsRUFBUzNILEVBbENFQyxHQUFxQixTQUFVaDJDLEVBQVFDLEdBRXREb0MsT0FBT3NKLGVBQWUxTCxFQUFTLGFBQWMsQ0FDM0MwTixPQUFPLElBRVQxTixFQUFROHZDLFFBb0JSLFNBQWdCc0csRUFBVTFvQyxHQUN4QixHQUFJZ3dDLEVBQVdyN0MsZUFBZSt6QyxJQUFhZSxFQUFPOTBDLGVBQWVxTCxHQUMvRCxPQUFPaW5DLEVBQVN6eEMsS0FBSSxTQUFVMHhDLEdBQzVCLE9BQU9BLEVBQVNsbkMsTUF0QnRCLElBQUlpbkMsRUFBVyxDQUFDLFdBQVksUUFBUyxJQUVqQytJLEVBQWEsQ0FDZkMsV0FBVyxFQUNYQyxVQUFVLEVBQ1Z4M0IsT0FBTyxFQUNQQyxRQUFRLEVBQ1J3M0IsYUFBYSxFQUNiQyxVQUFVLEVBQ1ZDLFdBQVcsR0FFVDVHLEVBQVMsQ0FDWCxlQUFlLEVBQ2YsZUFBZSxFQUNmLGtCQUFrQixFQUNsQixlQUFlLEVBQ2Ysa0JBQWtCLE9BZWhCNkcsRUFBbUIsU0FDbkJDLEVBQVksT0FDWkMsRUFBUSxHQUVaLFNBQVNDLEVBQWM3eUMsR0FDckIsTUFBTyxJQUFNQSxFQUFNN0MsY0FZckIsSUF4dUJvQ3RGLEVBNHVCaENpN0MsR0E1dUJnQ2o3QyxFQXd1QklmLE9BQU9pOEMsT0FBTyxDQUNwRHZPLFFBVkYsU0FBNEI5cUMsR0FDMUIsR0FBSWs1QyxFQUFNNzdDLGVBQWUyQyxHQUN2QixPQUFPazVDLEVBQU1sNUMsR0FHZixJQUFJczVDLEVBQVF0NUMsRUFBS3VFLFFBQVF5MEMsRUFBa0JHLEdBQzNDLE9BQVFELEVBQU1sNUMsR0FBUWk1QyxFQUFVLzBDLEtBQUtvMUMsR0FBUyxJQUFNQSxFQUFRQSxPQXB1QmpEbjdDLEVBQUUyc0MsU0FBVzNzQyxFQTZ1QnRCbzdDLEVBQXNCeEksR0FBcUIsU0FBVWgyQyxFQUFRQyxHQUVqRW9DLE9BQU9zSixlQUFlMUwsRUFBUyxhQUFjLENBQzNDME4sT0FBTyxJQUVUMU4sRUFBUTh2QyxRQVFSLFNBQTJCc0csR0FDekIsT0FBTyxFQUFJb0ksRUFBcUIxTyxTQUFTc0csSUFMM0MsSUFFZ0NsRCxFQUY1QnNMLEdBRTRCdEwsRUFGa0JrTCxJQUVHbEwsRUFBSUwsV0FBYUssRUFBTSxDQUFFcEQsUUFBU29ELEdBS3ZGbnpDLEVBQU9DLFFBQVVBLEVBQWlCLFdBR2xDODFDLEVBQWN5SSxHQUVkLElBZ0dJdHdCLEVBQUksQ0FBQyxVQUNMem5CLEVBQUksQ0FBQyxPQUNMaTRDLEdBQUssQ0FBQyxNQUNOQyxHQUFLLENBQUMsU0FBVSxPQUNoQkMsR0FBTSxDQUFDLFNBQVUsTUFDakJDLEdBQU8sQ0FBQyxTQUFVLE1BQU8sTUFtSHpCQyxHQUFZeEgsRUFsSEMsQ0FDZlQsUUFBUyxDQUFDbUIsRUFBZ0JHLEVBQU1FLEVBQVdDLEVBQVF0RSxFQUFRdmlDLEVBQU1nbkMsRUFBV2dCLEVBQVlLLEVBQVVFLEVBQU0rQixFQUFVQyxFQUFTZCxFQUFVd0MsRUFUdEgzSCxFQTlGRUMsR0FBcUIsU0FBVWgyQyxFQUFRQyxHQUUxRG9DLE9BQU9zSixlQUFlMUwsRUFBUyxhQUFjLENBQzNDME4sT0FBTyxJQUVUMU4sRUFBUTh2QyxRQTZEUixTQUFvQnNHLEVBQVUxb0MsRUFBT2tHLEVBQU9rckMsR0FFMUMsR0FBcUIsaUJBQVZweEMsR0FBc0Jnd0MsRUFBV3I3QyxlQUFlK3pDLEdBQVcsQ0FDcEUsSUFBSTJJLEVBaENSLFNBQXFCcnhDLEVBQU9veEMsR0FDMUIsSUFBSSxFQUFJM0csRUFBa0JySSxTQUFTcGlDLEdBQ2pDLE9BQU9BLEVBTVQsSUFGQSxJQUFJc3hDLEVBQWlCdHhDLEVBQU1wSyxNQUFNLGlDQUV4Qk4sRUFBSSxFQUFHOHpDLEVBQU1rSSxFQUFlei9DLE9BQVF5RCxFQUFJOHpDLElBQU85ekMsRUFBRyxDQUN6RCxJQUFJaThDLEVBQWNELEVBQWVoOEMsR0FDN0JtMEMsRUFBUyxDQUFDOEgsR0FDZCxJQUFLLElBQUk3SSxLQUFZMEksRUFBbUIsQ0FDdEMsSUFBSUksR0FBbUIsRUFBSUMsRUFBb0JyUCxTQUFTc0csR0FFeEQsR0FBSTZJLEVBQVlwckMsUUFBUXFyQyxJQUFxQixHQUEwQixVQUFyQkEsRUFFaEQsSUFEQSxJQUFJdkssRUFBV21LLEVBQWtCMUksR0FDeEJNLEVBQUksRUFBRzBJLEVBQU96SyxFQUFTcDFDLE9BQVFtM0MsRUFBSTBJLElBQVExSSxFQUVsRFMsRUFBT2hvQixRQUFROHZCLEVBQVkxMUMsUUFBUTIxQyxFQUFrQkcsRUFBYzFLLEVBQVMrQixJQUFNd0ksSUFLeEZGLEVBQWVoOEMsR0FBS20wQyxFQUFPL3pDLEtBQUssS0FHbEMsT0FBTzQ3QyxFQUFlNTdDLEtBQUssS0FNUGs4QyxDQUFZNXhDLEVBQU9veEMsR0FFakNTLEVBQWVSLEVBQVl6N0MsTUFBTSxpQ0FBaUN5d0MsUUFBTyxTQUFVdHhDLEdBQ3JGLE9BQVEsYUFBYXlHLEtBQUt6RyxNQUN6QlcsS0FBSyxLQUVSLEdBQUlnekMsRUFBU3ZpQyxRQUFRLFdBQWEsRUFDaEMsT0FBTzByQyxFQUdULElBQUlDLEVBQVlULEVBQVl6N0MsTUFBTSxpQ0FBaUN5d0MsUUFBTyxTQUFVdHhDLEdBQ2xGLE9BQVEsZ0JBQWdCeUcsS0FBS3pHLE1BQzVCVyxLQUFLLEtBRVIsT0FBSWd6QyxFQUFTdmlDLFFBQVEsUUFBVSxFQUN0QjJyQyxHQUdUNXJDLEVBQU0sVUFBVyxFQUFJNGlDLEVBQW1CMUcsU0FBU3NHLElBQWFtSixFQUM5RDNyQyxFQUFNLE9BQVEsRUFBSTRpQyxFQUFtQjFHLFNBQVNzRyxJQUFhb0osRUFDcERULEtBaEZYLElBQUlJLEVBQXNCckgsRUFBdUJ5RyxHQUk3Q3BHLEVBQW9CTCxFQUF1QkUsR0FJM0N4QixFQUFxQnNCLEVBQXVCN0IsR0FFaEQsU0FBUzZCLEVBQXVCNUUsR0FBTyxPQUFPQSxHQUFPQSxFQUFJTCxXQUFhSyxFQUFNLENBQUVwRCxRQUFTb0QsR0FFdkYsSUFBSXdLLEVBQWEsQ0FDZnBpQyxZQUFZLEVBQ1pta0Msb0JBQW9CLEVBQ3BCQyxrQkFBa0IsRUFDbEJDLDBCQUEwQixFQUMxQkMsZUFBZSxFQUNmQyx1QkFBdUIsR0FJckJSLEVBQWdCLENBQ2xCUyxPQUFRLFdBQ1JDLElBQUssUUFDTHRCLEdBQUksYUFzRUpsSCxVQUFXLENBQ1QsVUFBYW9ILEdBQ2IsZ0JBQW1CQSxHQUNuQixpQkFBb0JBLEdBQ3BCLGlCQUFvQkEsR0FDcEIsbUJBQXNCMXdCLEVBQ3RCLFlBQWVBLEVBQ2Ysa0JBQXFCQSxFQUNyQixlQUFrQkEsRUFDbEIsaUJBQW9CQSxFQUNwQixVQUFhQSxFQUNiLGVBQWtCQSxFQUNsQixtQkFBc0JBLEVBQ3RCLGtCQUFxQkEsRUFDckIsa0JBQXFCQSxFQUNyQix3QkFBMkJBLEVBQzNCLGNBQWlCQSxFQUNqQixtQkFBc0JBLEVBQ3RCLHdCQUEyQkEsRUFDM0IsV0FBY3l3QixHQUNkLFdBQWNFLEdBQ2QsWUFBZTN3QixFQUNmLHFCQUF3QkEsRUFDeEIsYUFBZ0JBLEVBQ2hCLGtCQUFxQkEsRUFDckIsa0JBQXFCQSxFQUNyQixtQkFBc0JBLEVBQ3RCLFNBQVlBLEVBQ1osVUFBYUEsRUFDYixTQUFZQSxFQUNaLFdBQWNBLEVBQ2QsYUFBZ0JBLEVBQ2hCLFNBQVlBLEVBQ1osV0FBY0EsRUFDZCxTQUFZQSxFQUNaLGNBQWlCQSxFQUNqQixLQUFRQSxFQUNSLGlCQUFvQkEsRUFDcEIsZUFBa0JBLEVBQ2xCLGdCQUFtQkEsRUFDbkIsZ0JBQW1CQSxFQUNuQixpQkFBb0JBLEVBQ3BCLGlCQUFvQkEsRUFDcEIsV0FBY0EsRUFDZCxTQUFZQSxFQUNaLG9CQUF1Qnl3QixHQUN2QixtQkFBc0JBLEdBQ3RCLG1CQUFzQkEsR0FDdEIsb0JBQXVCQSxHQUN2QixPQUFVendCLEVBQ1Ysb0JBQXVCeXdCLEdBQ3ZCLFdBQWNFLEdBQ2QsWUFBZUEsR0FDZixZQUFlQSxHQUNmLFlBQWVGLEdBQ2YsV0FBY0EsR0FDZCxVQUFhQSxHQUNiLFdBQWNBLEdBQ2QsZ0JBQW1CQSxHQUNuQixnQkFBbUJBLEdBQ25CLGdCQUFtQkEsR0FDbkIsUUFBV0EsR0FDWCxXQUFjQSxHQUNkLFlBQWVBLEdBQ2YsWUFBZUMsR0FDZixLQUFRQSxHQUNSLFVBQWExd0IsRUFDYixjQUFpQjB3QixHQUNqQixTQUFZMXdCLEVBQ1osU0FBWTB3QixHQUNaLFdBQWMxd0IsRUFDZCxTQUFZMHdCLEdBQ1osYUFBZ0Ixd0IsRUFDaEIsV0FBY0EsRUFDZCxVQUFhQSxFQUNiLGVBQWtCQSxFQUNsQixNQUFTQSxFQUNULGdCQUFtQkEsRUFDbkIsbUJBQXNCQSxFQUN0QixtQkFBc0JBLEVBQ3RCLHlCQUE0QkEsRUFDNUIsZUFBa0JBLEVBQ2xCLGVBQWtCMHdCLEdBQ2xCLGtCQUFxQkEsR0FDckIsa0JBQXFCQSxHQUNyQixzQkFBeUJBLEdBQ3pCLHFCQUF3QkEsR0FDeEIsb0JBQXVCMXdCLEVBQ3ZCLGlCQUFvQkEsRUFDcEIsa0JBQXFCQSxFQUNyQixRQUFXMndCLEdBQ1gsU0FBWUQsR0FDWixTQUFZQSxHQUNaLGVBQWtCQSxHQUNsQixnQkFBbUIxd0IsRUFDbkIsVUFBYXpuQixFQUNiLGNBQWlCQSxFQUNqQixRQUFXQSxFQUNYLFNBQVlpNEMsR0FDWixZQUFlQSxHQUNmLFdBQWNBLEdBQ2QsWUFBZUEsR0FDZixlQUFrQkUsR0FDbEIsWUFBZTF3QixFQUNmLGtCQUFxQkEsRUFDckIsa0JBQXFCQSxFQUNyQixpQkFBb0JBLEVBQ3BCLGtCQUFxQkEsRUFDckIsaUJBQW9CQSxLQWtFcEIreEIsR0FFRixDQUNGLFNBQXlCQyxFQUFVQyxFQUFjQyxHQUMvQyxNQUFvQixNQUFoQkYsRUFBUyxHQUNKLEtBR0ZFLEVBQXNCRCxFQUFlRCxJQUU5QyxTQUFzQkEsRUFBVUMsRUFBY0MsR0FDNUMsR0FBb0IsTUFBaEJGLEVBQVMsR0FDWCxPQUFPLEtBSVQsSUFBSUcsRUFBWUQsRUFBc0JELEdBQ3RDLE1BQU8sQ0FBQyxHQUFHbHpCLE9BQU9pekIsRUFBVSxLQUFLanpCLE9BQU9vekIsRUFBVWg5QyxLQUFLLElBQUssUUE4QzFEaTlDLEdBQWMsU0FBU0EsRUFBWUosRUFFckNLLEVBRUFDLEVBRUFDLEVBRUFDLEdBT0EsSUFGQSxJQUFJQyxFQUFTLElBQUl2TCxFQUVSbnlDLEVBQUksRUFBR0EsRUFBSXM5QyxFQUFXL2dELE9BQVF5RCxJQUNyQzA5QyxFQUFPL0ssYUFBYTJLLEVBQVd0OUMsSUFHakMsSUFBSTI5QyxFQUFvQixJQUFJeEwsRUFDeEJ5TCxFQUFrQixHQUV0QkYsRUFBT245QyxTQUFRLFNBQVVkLEVBQUswQixHQUdUbzhDLEVBQWlCTSxNQUFLLFNBQVVDLEdBQ2pELElBQUlDLEVBQVNELEVBQVEzOEMsRUFBSzg3QyxHQUFVLFNBQVVlLEdBQzVDLE9BQU9YLEVBQVlXLEVBQWEsQ0FBQ3YrQyxHQUFNODlDLEVBQWtCQyxFQUFnQkMsTUFHM0UsR0FBYyxNQUFWTSxFQVdGLE9BUkl4eEMsTUFBTUMsUUFBUXV4QyxHQUNoQkgsRUFBZ0J2Z0QsS0FBSzBXLE1BQU02cEMsRUFBaUIzTSxFQUFtQjhNLEtBRy9EOWMsUUFBUWdkLEtBQUsseUhBQStISCxHQUM1SUYsRUFBZ0J2Z0QsS0FBSyxlQUFlMnNCLE9BQU8rekIsRUFBUSxRQUc5QyxNQU1USixFQUFrQmgxQyxJQUFJeEgsRUFBSzFCLEdBQUssTUFHcEMsSUFBSXkrQyxFQUFtQkMsR0FBbUJsQixFQUFVVSxFQUFtQkgsRUFBZ0JDLEVBQWNGLEdBTXJHLE9BSklXLEdBQ0ZOLEVBQWdCenhCLFFBQVEreEIsR0FHbkJOLEdBNkNMUSxHQUFnQixTQUF1Qmo5QyxFQUV6Q3VKLEVBRUEyekMsR0FHQSxNQUVFLEdBQUdyMEIsUUExOUM0Q3ZuQixFQTA5Q25CdEIsRUFyOUMxQjQ4QyxFQUFTdDdDLEVBQU84RCxRQUFRaXJDLEVBQWNDLEdBRXhCLE1BQWRzTSxFQUFPLElBQTRCLE1BQWRBLEVBQU8sSUFBNEIsTUFBZEEsRUFBTyxHQUM1QyxJQUFJL3pCLE9BQU8rekIsR0FHYkEsR0ErOEM2QixLQUFLL3pCLE9BQU9xMEIsRUFBZWw5QyxFQUFLdUosR0FBUSxLQTE5Q3RELElBQTJCakksRUFLN0NzN0MsR0F5OUNGTyxHQUEyQixTQUFrQ0MsRUFBSzkrQyxHQUVwRSxPQURBOCtDLEVBQUk5K0MsSUFBTyxFQUNKOCtDLEdBbUNMSixHQUFxQixTQUE0QmxCLEVBRW5EdUIsRUFFQWhCLEVBRUFDLEVBRUFGLElBOUZzQixTQUEyQmlCLEVBRWpEaEIsRUFFQUQsR0FLQSxHQUFLQyxFQU1MLElBRkEsSUFBSWlCLEVBQW9Cci9DLE9BQU9xQixLQUFLKzhDLEdBRTNCeDlDLEVBQUksRUFBR0EsRUFBSXkrQyxFQUFrQmxpRCxPQUFReUQsSUFBSyxDQUNqRCxJQUFJbUIsRUFBTXM5QyxFQUFrQnorQyxHQUV4QncrQyxFQUFhajBCLElBQUlwcEIsSUFVbkJxOUMsRUFBYTcxQyxJQUFJeEgsRUFBS3E4QyxFQUFlcjhDLEdBQUtxOUMsRUFBYXYwQyxJQUFJOUksR0FBTW84QyxJQUdqRSxJQXFFSm1CLENBQWtCRixFQUFjaEIsRUFBZ0JELEdBQ2hELElBQUlvQixFQUFtQnYvQyxPQUFPcUIsS0FBSys5QyxFQUFhcE0sVUFBVXdNLE9BQU9OLEdBQTBCbC9DLE9BQU9nOEIsT0FBTyxPQUVyR3lqQixFQUFtQmhELEdBQVUyQyxFQUFhcE0sVUFDMUMwTSxFQUFlMS9DLE9BQU9xQixLQUFLbytDLEdBRS9CLEdBQUlDLEVBQWF2aUQsU0FBV2lpRCxFQUFhbk0sU0FBUzkxQyxPQU9oRCxJQUFLLElBQUl5RCxFQUFJLEVBQUdBLEVBQUk4K0MsRUFBYXZpRCxPQUFReUQsSUFDdkMsSUFBSzIrQyxFQUFpQkcsRUFBYTkrQyxJQUFLLENBSXRDLElBQUkrK0MsRUFpQkosSUFaRUEsRUFIeUIsTUFBdkJELEVBQWE5K0MsR0FBRyxHQUdGOCtDLEVBQWE5K0MsR0FBRyxHQUFHeUYsY0FBZ0JxNUMsRUFBYTkrQyxHQUFHOEYsTUFBTSxHQUN6QyxNQUF2Qmc1QyxFQUFhOStDLEdBQUcsR0FJVDgrQyxFQUFhOStDLEdBQUcsR0FBR3lGLGNBQWdCcTVDLEVBQWE5K0MsR0FBRzhGLE1BQU0sR0FJekRnNUMsRUFBYTkrQyxHQUFHLEdBQUd5RixjQUFnQnE1QyxFQUFhOStDLEdBQUc4RixNQUFNLEtBR3RENjRDLEVBQWlCSSxHQUFnQixDQUNwRCxJQUFJQyxFQUFnQlIsRUFBYW5NLFNBQVN4aEMsUUFBUWt1QyxHQUNsRFAsRUFBYW5NLFNBQVNHLE9BQU93TSxFQUFlLEVBQUdGLEVBQWE5K0MsU0FLNUR3K0MsRUFBYW5NLFNBQVNsbUIsUUFBUTJ5QixFQUFhOStDLElBU25ELElBSEEsSUFBSXErQyxHQUFrQyxJQUFqQlosRUFBeUIzTCxFQUFpQkMsRUFDM0RrTixFQUFRLEdBRUgxSCxFQUFLLEVBQUdBLEVBQUtpSCxFQUFhbk0sU0FBUzkxQyxPQUFRZzdDLElBQU0sQ0FDeEQsSUFBSXAyQyxFQUFNcTlDLEVBQWFuTSxTQUFTa0YsR0FDNUI3c0MsRUFBUW0wQyxFQUFpQjE5QyxHQUU3QixHQUFJb0wsTUFBTUMsUUFBUTlCLEdBSWhCLElBQUssSUFBSWdwQyxFQUFJLEVBQUdBLEVBQUlocEMsRUFBTW5PLE9BQVFtM0MsSUFDaEN1TCxFQUFNNWhELEtBQUsrZ0QsR0FBY2o5QyxFQUFLdUosRUFBTWdwQyxHQUFJMkssU0FHMUNZLEVBQU01aEQsS0FBSytnRCxHQUFjajlDLEVBQUt1SixFQUFPMnpDLElBSXpDLE9BQUlZLEVBQU0xaUQsT0FDRCxHQUFHeXRCLE9BQU9pekIsRUFBVSxLQUFLanpCLE9BQU9pMUIsRUFBTTcrQyxLQUFLLElBQUssS0FFaEQsSUFjUDgrQyxHQUVGLEtBK0NFMUIsR0FBaUIsQ0FLbkIyQixXQUFZLFNBQVNBLEVBQVcxL0MsR0FDOUIsR0FBSThNLE1BQU1DLFFBQVEvTSxHQUFNLENBQ3RCLElBQUkyL0MsRUFBVSxHQUlkLE9BSEEzL0MsRUFBSWMsU0FBUSxTQUFVK3FCLEdBQ3BCOHpCLEVBQVFELEVBQVc3ekIsS0FBTSxLQUVwQmxzQixPQUFPcUIsS0FBSzIrQyxHQUFTaC9DLEtBQUssS0FDNUIsTUFBcUIsV0FBakJzd0MsRUFBUWp4QyxJQUNqQjQvQyxHQUFnQjUvQyxFQUFJOHdDLElBQUssYUFBYyxDQUFDOXdDLElBQU0sR0FDdkMsSUFBS3VxQixPQUFPdnFCLEVBQUkwL0MsV0FBWSxNQUU1QjEvQyxHQXVCWHVmLGNBQWUsU0FBU0EsRUFBY3ZmLEVBQUs4OUMsR0FDekMsR0FBSWh4QyxNQUFNQyxRQUFRL00sR0FDaEIsT0FBT0EsRUFBSVMsS0FBSSxTQUFVb3JCLEdBQ3ZCLE9BQU90TSxFQUFjc00sRUFBR2l5QixNQUN2Qm45QyxLQUFLLEtBQ0gsR0FBcUIsV0FBakJzd0MsRUFBUWp4QyxHQUFtQixDQUtwQyxJQUFJdUMsRUFBTyxZQUFZZ29CLFFBcmtEUXhuQixFQXFrRFUvQyxFQWhrRDNDd3lDLEVBQVd2SSxLQUFLQyxVQUFVbm5DLE1BbWtEcEI4OEMsRUFBVyxjQUFjdDFCLE9BQU9ob0IsRUFBTSxLQWtCMUMsT0FaSXZDLGFBQWUweUMsRUFDakIxeUMsRUFBSWMsU0FBUSxTQUFVZy9DLEVBQVFDLEdBQzVCRixHQUFZakMsR0FBWW1DLEVBQVEsQ0FBQ0QsR0FBU2hDLEVBQWtCQyxJQUFnQixHQUFPcDlDLEtBQUssT0FHMUZoQixPQUFPcUIsS0FBS2hCLEdBQUtjLFNBQVEsU0FBVVksR0FDakNtK0MsR0FBWWpDLEdBQVlsOEMsRUFBSyxDQUFDMUIsRUFBSTBCLElBQU9vOEMsRUFBa0JDLElBQWdCLEdBQU9wOUMsS0FBSyxPQUszRnEvQyxHQUF1Qno5QyxFQUFNLENBRDdCczlDLEdBQVksTUFFTHQ5QyxFQUVQLE9BQU92QyxFQTVsREksSUFBb0IrQyxJQWttRGpDazlDLEdBQWtCLEdBRWxCQyxHQUVGLEdBSUVDLElBQWMsRUFFZEgsR0FBeUIsU0FBZ0N0K0MsRUFBSzArQyxHQUNoRSxJQUFJQyxFQUVKLElBQUlKLEdBQWdCditDLEdBQXBCLENBSUEsSUFBS3krQyxHQUFhLENBR2hCLEdBQXdCLG9CQUFiOWdELFNBQ1QsTUFBTSxJQUFJaUQsTUFBTSxrREFLbEI2OUMsSUFBYyxFQUNkLElBQUtHLEtBR05ELEVBQW1CSCxJQUFpQnRpRCxLQUFLMFcsTUFBTStyQyxFQUFrQjdPLEVBQW1CNE8sSUFFckZILEdBQWdCditDLElBQU8sSUFHckJrK0MsR0FBa0IsU0FBeUJsK0MsRUFFN0M4N0MsRUFFQStDLEVBRUF2QyxHQUdBLElBQUlGLEVBRUZyOEMsVUFBVTNFLE9BQVMsUUFBc0I4NkMsSUFBakJuMkMsVUFBVSxHQUFtQkEsVUFBVSxHQUFLLEdBRXRFLElBQUl3K0MsR0FBZ0J2K0MsR0FBcEIsQ0FJQSxJQUFJaThDLEVBQVlDLEdBQVlKLEVBQVUrQyxFQUFhekMsRUFBa0JDLEdBQWdCQyxHQUNyRmdDLEdBQXVCdCtDLEVBQUtpOEMsS0FFMUIsR0FBUSxXQUNWdUMsR0FBa0IsR0FDbEJELEdBQWtCLEdBQ2xCRSxJQUFjLEVBQ2RWLEdBQVcsTUFFVGUsR0FBcUIsU0FBNEI5K0MsVUFHNUN1K0MsR0FBZ0J2K0MsSUFhckIrK0MsR0FBZSxXQUNqQk4sSUFBYyxFQUNkLElBQUlPLEVBQU1SLEdBRVYsT0FEQUEsR0FBa0IsR0FDWFEsR0FNTEosR0FBa0IsV0FDcEIsSUFBSUssRUFBV0YsS0FFWEUsRUFBUzdqRCxPQUFTLEdBak5ILFNBQXdCNmpELEdBRzNDLEdBQWdCLE1BQVpsQixJQU1jLE9BSmhCQSxHQUFXcGdELFNBQVN1aEQsY0FBYywwQkFJWixDQUdwQixJQUFJQyxFQUFPeGhELFNBQVN3aEQsTUFBUXhoRCxTQUFTMnhDLHFCQUFxQixRQUFRLElBQ2xFeU8sR0FBV3BnRCxTQUFTeUYsY0FBYyxVQUN6QmMsS0FBTyxXQUNoQjY1QyxHQUFTNzRDLGFBQWEsaUJBQWtCLElBQ3hDaTZDLEVBQUsveUMsWUFBWTJ4QyxJQUtyQixJQUFJcUIsRUFBUXJCLEdBQVNzQixZQUFjdEIsR0FBU3FCLE1BSTVDLEdBQUlBLEVBQU1FLFdBQVksQ0FDcEIsSUFBSUMsRUFBV0gsRUFBTUgsU0FBUzdqRCxPQUM5QjZqRCxFQUFTNy9DLFNBQVEsU0FBVW9nRCxHQUN6QixJQUNFSixFQUFNRSxXQUFXRSxFQUFNRCxHQUN2QkEsR0FBWSxFQUNaLE1BQU81N0MsYUFJWG82QyxHQUFTMEIsV0FBYTFCLEdBQVMwQixXQUFhLElBQU1SLEVBQVNoZ0QsS0FBSyxJQStLaEV5Z0QsQ0FBZVQsSUFRZlUsR0FBd0IsU0FBK0JDLEdBR3pEQSxFQUFXeGdELFNBQVEsU0FBVXlnRCxHQUMzQnRCLEdBQWdCc0IsSUFBYSxNQVU3QkMsR0FBMEIsU0FBU0EsRUFBd0JDLEVBRTdEQyxFQUVBQyxFQUVBN2tELEdBS0EsSUFBSyxJQUFJeUQsRUFBSSxFQUFHQSxFQUFJa2hELEVBQWlCM2tELE9BQVF5RCxHQUFLLEVBR2hELEdBQUlraEQsRUFBaUJsaEQsR0FDbkIsR0FBSXVNLE1BQU1DLFFBQVEwMEMsRUFBaUJsaEQsSUFFakN6RCxHQUFVMGtELEVBQXdCQyxFQUFpQmxoRCxHQUFJbWhELEVBQWVDLEVBQWdCN2tELE9BQ2pGLE1BckJKLGdCQUhvRDhrRCxFQXdCckJILEVBQWlCbGhELEtBckJ4QixVQUFXcWhELEdBQU8sU0FBVUEsR0EwQnJELE1BQU0sSUFBSXQvQyxNQUFNLDBGQUpoQm8vQyxFQUFjOWpELEtBQUs2akQsRUFBaUJsaEQsR0FBR3NoRCxPQUN2Q0YsRUFBZS9qRCxLQUFLNmpELEVBQWlCbGhELEdBQUd1aEQsYUFDeENobEQsR0FBVTJrRCxFQUFpQmxoRCxHQUFHd2hELEtBM0JULElBQWdDSCxFQWtDM0QsT0FBTzlrRCxHQWNMa2xELEdBQXdCLFNBQStCaEUsRUFFekR5RCxFQUVBM0QsR0FLQSxJQVVJeUQsRUFWQUcsRUFBZ0IsR0FDaEJDLEVBQWlCLEdBR2pCN2tELEVBQVMwa0QsR0FBd0JDLEVBQWtCQyxFQUFlQyxFQUFnQixHQUV0RixPQUE2QixJQUF6QkQsRUFBYzVrRCxPQUNULElBTVB5a0QsRUFBcUMsSUFBekJHLEVBQWM1a0QsT0FBZSxJQUFJeXRCLE9BQU9tM0IsRUFBYyxJQUFNLElBQUluM0IsT0FBT2lvQixFQUFXa1AsRUFBYy9nRCxTQUFTNHBCLFFBQVF6dEIsRUFBUyxJQUFJNlEsU0FBUyxLQUtySml5QyxHQUFnQjJCLEVBQVcsSUFBSWgzQixPQUFPZzNCLEdBQVlJLEVBQWdCM0QsRUFBY0YsR0FDekV5RCxJQWNMVSxHQUFtQixTQUEwQnJTLEVBRS9DbHVDLEdBR0EsTUFBTyxHQUFHNm9CLE9BQU83b0IsRUFBSyxLQUFLNm9CLE9BQU9pb0IsRUFBVzVDLEtBVzNDc1MsR0FGNkMxUCxFQUc3QzJQLEdBQWEsQ0FDZnhtQixPQUFRLFNBQWdCeW1CLEdBUXRCLElBSEEsSUFBSUMsRUFBd0IsR0FDeEJyaEQsRUFBT3JCLE9BQU9xQixLQUFLb2hELEdBRWQ3aEQsRUFBSSxFQUFHQSxFQUFJUyxFQUFLbEUsT0FBUXlELEdBQUssRUFBRyxDQUN2QyxJQUFJbUIsRUFBTVYsRUFBS1QsR0FDWFAsRUFBTW9pRCxFQUFnQjFnRCxHQUN0QjRnRCxFQUFZclksS0FBS0MsVUFBVWxxQyxHQUMvQnFpRCxFQUFzQjNnRCxHQUFPLENBQzNCcWdELEtBQU1PLEVBQVV4bEQsT0FDaEIra0QsTUFBT0ssR0FBT0ksRUFBVzVnRCxHQUN6Qm9nRCxZQUFhOWhELEdBSWpCLE9BQU9xaUQsR0FFVEUsVUFBVyxXQUNULElBQUlDLEVBRUYvZ0QsVUFBVTNFLE9BQVMsUUFBc0I4NkMsSUFBakJuMkMsVUFBVSxHQUFtQkEsVUFBVSxHQUFLLEdBQ3RFNC9DLEdBQXNCbUIsS0FjdEJDLEdBQXFDLG9CQUFYNTlDLE9BQXlCLEtBQU8sQ0FDNUQ2OUMsYUFBYyxTQUFzQkMsR0FPbEMsT0FKQSxLQTdMaUIsV0FDbkIsR0FBSXhDLEdBQ0YsTUFBTSxJQUFJNzlDLE1BQU0seUNBR2xCNjlDLElBQWMsRUF5TFp5QyxHQUdPLENBQ0xDLEtBSFNGLElBSVRHLElBQUssQ0FDSEMsUUFwTEN0QyxLQUFlOS9DLEtBQUssSUFxTHJCNmhELG1CQXpLQzdpRCxPQUFPcUIsS0FBS2kvQyxRQ3Q1RGpCK0MsR0RnbkVKLFNBQVNDLEVBQVlqRixHQUduQixJQUFJRixFQUVGcjhDLFVBQVUzRSxPQUFTLFFBQXNCODZDLElBQWpCbjJDLFVBQVUsR0FBbUJBLFVBQVUsR0FBSzg3QyxHQUN0RSxNQUFPLENBQ0w0RSxXQUFZL1EsRUFBYyxHQUFJK1EsR0FBWSxDQWlCeEN2YSxPQUFRLFNBQWdCc2IsR0FHdEIsSUFBSUMsRUFBNEJELEVBQy9CemlELEtBQUksU0FBVTJpRCxHQUNiLE9BQU9BLEVBQVVDLG1CQUVsQi9SLFFBQU8sU0FBVStNLEdBQ2hCLE9BQU9BLEtBRVQsT0FBTzRFLEVBQVlqRixFQUFjRixFQUFpQnZ6QixPQUFPNDRCLE9BRzdEVixpQkFBa0JBLEdBQ2xCYSxvQkE1RThELEtBNkU5REMsT0FBUSxTQUFnQkMsR0FHdEJ0QixHQUFTc0IsRUFBZWhSLEVBQWF5UCxJQUV2Q2EsSUFBSyxXQUdILElBQUssSUFBSWYsRUFBT3RnRCxVQUFVM0UsT0FBUTJrRCxFQUFtQixJQUFJMzBDLE1BQU1pMUMsR0FBTzBCLEVBQU8sRUFBR0EsRUFBTzFCLEVBQU0wQixJQUMzRmhDLEVBQWlCZ0MsR0FBUWhpRCxVQUFVZ2lELEdBR3JDLE9BQU96QixHQUFzQmhFLEVBQWN5RCxFQUFrQjNELElBRS9Ed0MsZ0JBQWlCQSxHQUNqQjBCLHNCQUF1QkEsR0FDdkJ6RSx3QkFBeUJBLEdBQ3pCbUcsTUFBTyxHQUNQbEQsbUJBQW9CQSxJQ3pxRVJ5QyxFQUZHLEdBR2YsR0FBYUQsR0FBVWIsV0FHdkJXLElBRm1CRSxHQUFVUCxpQkFDUE8sR0FBVU0sb0JBQzFCTixHQUFVRixLQ1JQYSxJRFNBWCxHQUFVTyxPQUNEUCxHQUFVMUMsZ0JBQ0owQyxHQUFVaEIsc0JBQ1JnQixHQUFVekYsd0JBQzVCeUYsR0FBVVUsTUFDR1YsR0FBVXhDLG1CQ2RmLENBQ2xCeDZCLE1BQU8sR0FDUEUsU0FBVSxHQUNWMDlCLFlBQVksSUFLREMsR0FBYUMsZ0JBQW9CLENBQUVILFFBQU1JLE9BRmhDLGUsNjZCQ0hoQkMsRyxzcEJBQ0osV0FBWWhpRCxHQUFPLE8sNEZBQUEscUJBQ1hBLEcsbUNBR1IsV0FBUyxNQUNrQjNFLEtBQUttMUIsUUFBdEJteEIsRUFERCxFQUNDQSxLQUFNSSxFQURQLEVBQ09BLE9BRWQsT0FDRSwwQkFBUXhDLFVBQVd1QixHQUFJbUIsR0FBT0MsU0FDNUIsdUJBQUszQyxVQUFXdUIsR0FBSW1CLEdBQU9FLE1BQU9yVCxJQUFLcVQsRUFBTUMsSUFBSSxTQUNqRCxzQkFBSTdDLFVBQVd1QixHQUFJbUIsR0FBT0ksUUFBMUIsb0JBQ0NWLEVBQUtDLFlBQ0oscUJBQUd4b0MsR0FBRyxnQkFBZ0JtbUMsVUFBV3VCLEdBQUltQixHQUFPSyxnQkFBNUMsV0FDVSxtQ0FBT1gsRUFBSzM5QixNQUFaLE1BQ1Isd0JBQU0wYSxRQUFTcWpCLEVBQVF4QyxVQUFXdUIsR0FBSW1CLEdBQU9NLG9CQUE3QyxtQixxQkFmU3B3QixhQXlCZnF3QixHQUNHLHVDQUdIUCxHQUFTOUIsVUFBa0IsQ0FDL0IrQixPQUFRLENBQ05yaEIsUUFBUyxPQUNUaGQsTUFBTyxVQUNQMHdCLFdBQVksU0FDWmtPLGFBQWMsc0JBQ2Q5Z0MsTUFBTyxPQUNQNjBCLFNBQVUsU0FFWjJMLEtBQU0sSUFDSnhnQyxNQUFPLFNBQ042Z0MsR0FBbUIsQ0FDbEI3Z0MsTUFBTyxVQUdYMGdDLE1BQU8sSUFDTEssT0FBUSxHQUNQRixHQUFtQixDQUNsQkcsU0FBVSxTQUdkTCxjQUFlLENBQ2J6K0IsTUFBTyxRQUNQMnlCLFNBQVUsV0FDVm9NLE1BQU8sRUFDUEMsYUFBYyxPQUNkdk8sVUFBVyxZQUViaU8sa0JBQW1CLENBQ2pCTyxVQUFXLFNBQ1hsUCxPQUFRLGFBSVpvTyxHQUFPN3VCLFlBQWMwdUIsR0FFckIsWSxrN0JDbkVNa0IsRyxzcEJBQ0osV0FBWS9pRCxHQUFPLGEsNEZBQUEsVUFDakIsY0FBTUEsSUFDRG96QixNQUFRLENBQ1hwUCxNQUFPLEdBQ1BFLFNBQVUsR0FDVjgrQixjQUFjLEdBRWhCLEVBQUtDLGtCQUFvQixFQUFLQSxrQkFBa0I1cEMsS0FBdkIsT0FDekIsRUFBSzZwQyxrQkFBb0IsRUFBS0Esa0JBQWtCN3BDLEtBQXZCLE9BQ3pCLEVBQUs4cEMscUJBQXVCLEVBQUtBLHFCQUFxQjlwQyxLQUExQixPQVRYLEUsOENBWW5CLFNBQWtCaFcsR0FDaEJBLEVBQUVvWCxpQkFEaUIsTUFFU3BmLEtBQUsrM0IsTUFBekJwUCxFQUZXLEVBRVhBLE1BQU9FLEVBRkksRUFFSkEsU0FDZjdvQixLQUFLMkUsTUFBTW9qRCxNQUFNcC9CLEVBQU9FLEssK0JBRzFCLFNBQWtCN2dCLEdBQUcsSUFDWDRGLEVBQVU1RixFQUFFbEUsT0FBWjhKLE1BQ0FpYixFQUFhN29CLEtBQUsrM0IsTUFBbEJsUCxTQUVNLEtBQVZqYixHQUE2QixLQUFiaWIsRUFBaUI3b0IsS0FBS3l2QyxTQUFTLENBQUVrWSxjQUFjLElBQzlEM25ELEtBQUt5dkMsU0FBUyxDQUFFa1ksY0FBYyxJQUVuQzNuRCxLQUFLeXZDLFNBQVMsQ0FBRTltQixNQUFPM2dCLEVBQUVsRSxPQUFPOEosVSxrQ0FHbEMsU0FBcUI1RixHQUFHLElBQ2Q0RixFQUFVNUYsRUFBRWxFLE9BQVo4SixNQUdNLEtBRkk1TixLQUFLKzNCLE1BQWZwUCxPQUVzQixLQUFWL2EsRUFBYzVOLEtBQUt5dkMsU0FBUyxDQUFFa1ksY0FBYyxJQUMzRDNuRCxLQUFLeXZDLFNBQVMsQ0FBRWtZLGNBQWMsSUFFbkMzbkQsS0FBS3l2QyxTQUFTLENBQUU1bUIsU0FBVTdnQixFQUFFbEUsT0FBTzhKLFUsb0JBR3JDLFdBQ0UsT0FDRSx3QkFBTW82QyxLQUFLLE9BQU85RCxVQUFXdUIsR0FBSW1CLEdBQU9xQixRQUN0QywrREFDQSx3QkFBTWhyQixPQUFPLEdBQUdpckIsU0FBVWxvRCxLQUFLNG5ELG1CQUM3Qix5QkFBT08sUUFBUSxTQUFmLFVBQ0EseUJBQ0U1L0MsS0FBSyxRQUNMd1YsR0FBRyxRQUNIN1ksS0FBSyxRQUNMZy9DLFVBQVd1QixHQUFJbUIsR0FBT3dCLEtBQ3RCeDZDLE1BQU81TixLQUFLKzNCLE1BQU1wUCxNQUNsQjAvQixTQUFVcm9ELEtBQUs2bkQsb0JBRWpCLHlCQUFPTSxRQUFRLFlBQWYsYUFDQSx5QkFDRTUvQyxLQUFLLFdBQ0x3VixHQUFHLFdBQ0g3WSxLQUFLLFdBQ0xnL0MsVUFBV3VCLEdBQUltQixHQUFPd0IsS0FDdEJ4NkMsTUFBTzVOLEtBQUsrM0IsTUFBTWxQLFNBQ2xCdy9CLFNBQVVyb0QsS0FBSzhuRCx1QkFFakIsMEJBQ0V2L0MsS0FBSyxTQUNMMjdDLFVBQVd1QixHQUFJbUIsR0FBTzBCLEtBQ3RCajVDLFVBQVdyUCxLQUFLKzNCLE1BQU00dkIsY0FIeEIsYSxxQkE5RFU3d0IsYUE2RmRxd0IsR0FDRyx1Q0FHSFAsR0FBUzlCLFVBQWtCLENBQy9CbUQsTUFBTyxJQUNMTSxRQUFTLGFBQ1JwQixHQUFtQixDQUNsQjdnQyxNQUFPLE1BQ1BpaUMsUUFBUyxJQUdiSCxJQUFLLElBQ0hmLE9BQVEsT0FDUEYsR0FBbUIsQ0FDbEIzaEIsUUFBUyxRQUNUZ2pCLE9BQVEsT0FDUm5CLE9BQVEsSUFHWmlCLElBQUssSUFDSGpCLE9BQVEsTUFDUjlPLE9BQVEsV0FDUDRPLEdBQW1CLENBQ2xCN2dDLE1BQU8sT0FDUGtmLFFBQVMsUUFDVDZoQixPQUFRLE1BS2QsWUNsSEEsR0FWQSxXQUNFLE9BQ0UsOEJBQ0UsdUNDTEcsSUFBSXBuQyxNQUFPd29DLGNES2QsTUNDTyxzQkNQYixHQUFlLElBQTBCLHVDLHM4QkNJbkNDLEcsc3BCQUNKLFdBQVkvakQsR0FBTyxPLDRGQUFBLHFCQUNYQSxHLG1DQUVSLFdBQVMsTUFDdUMzRSxLQUFLMkUsTUFBM0M0RCxFQURELEVBQ0NBLEtBQU1pOUMsRUFEUCxFQUNPQSxLQUFNNTNDLEVBRGIsRUFDYUEsTUFBTys2QyxFQURwQixFQUNvQkEsV0FBWTVxQyxFQURoQyxFQUNnQ0EsR0FDakN5SyxFQUFRaTlCLEdBQWEsV0FBVGw5QyxFQUFvQnErQyxHQUFPZ0MsT0FBU2hDLEdBQU0sU0FzQjVELE9BbkJBaDVDLEVBRU0sc0JBQ0VzMkMsVUFBVzE3QixFQUNYcWdDLHlCQUF3QnRnRCxFQUN4Qjg2QixRQUFTLGtCQUFNc2xCLEVBQVc1cUMsS0FFekJuUSxHQUlILHNCQUNFczJDLFVBQVcxN0IsRUFDWHFnQyx5QkFBd0J0Z0QsRUFDeEJnSCx3QkFBeUJpMkMsRUFDekJuaUIsUUFBUyxrQkFBTXNsQixFQUFXNXFDLFcscUJBeEJQMG9DLGlCQWdDL0JpQyxHQUFpQnYwQixhQUFlLENBQzlCNXJCLEtBQU0sVUFDTmk5QyxLQUFNLEdBQ041M0MsTUFBTyxHQUNQKzZDLFdBQVksYUFDWjVxQyxHQUFJK3FDLEtBR05KLEdBQWlCSyxVQUFZLENBQzNCeGdELEtBQU0vQixZQUNOZy9DLEtBQU1oL0MsV0FBZ0IsQ0FDcEJvcEIsT0FBUXBwQixjQUVWb0gsTUFBT3BILFlBQ1BtaUQsV0FBWW5pRCxVQUNadVgsR0FBSXZYLGFBR04sSUFBTTJnRCxHQUNHLHVDQUdINkIsR0FBVSxDQUNkMUIsU0FBVSxPQUNWaUIsUUFBUyxXQUNUbkIsYUFBYyxrQkFDZDZCLFVBQVcsUUFHUHJDLEdBQVM5QixVQUFrQixDQUMvQjlVLFFBQUEsSUFDRXhuQixNQUFPLFFBQ04yK0IsR0FBbUI2QixJQUd0QkosT0FBUSxJQUNOcGdDLE1BQU8sT0FDTjIrQixHQUFtQjZCLE1BSXhCLFlDbEVBLEdBVDhCeGlELFdBQWdCLENBQzVDdVgsR0FBSXZYLHVCQUNKZy9DLEtBQU1oL0MsV0FBZ0IsQ0FDcEJvcEIsT0FBUXBwQixjQUVWK0IsS0FBTS9CLHVCQUNOb0gsTUFBT3BILGMsazdCQ0RIMGlELEcsc3BCQUNKLFdBQVl2a0QsR0FBTyxhLDRGQUFBLFVBQ2pCLGNBQU1BLElBQ0Rna0QsV0FBYSxFQUFLQSxXQUFXM3FDLEtBQWhCLE9BRkQsRSx1Q0FJbkIsU0FBV0QsR0FDVG9tQixRQUFRNW1CLElBQVIsdUJBQTRCUSxFQUE1QiwrQixtQ0FFRixTQUFzQm9yQyxHQUNwQixPQUNFQSxFQUFVQyxrQkFBa0IzcEQsT0FDMUJPLEtBQUsyRSxNQUFNeWtELGtCQUFrQjNwRCxRQUMvQjBwRCxFQUFVRSxnQkFBa0JycEQsS0FBSzJFLE1BQU0wa0QsZ0Isb0JBSTNDLFdBQVMsYUFNSHJwRCxLQUFLMkUsTUFKUDBrRCxFQUZLLEVBRUxBLGNBQ0FELEVBSEssRUFHTEEsa0JBQ0FFLEVBSkssRUFJTEEsb0JBQ0FDLEVBTEssRUFLTEEsaUJBRUlDLEVBQU8vRCxHQUFJNEQsRUFBZ0J6QyxHQUFPNkMsUUFBVTdDLEdBQU84QyxRQUN6RCxPQUNFLGdCQUFDLEVBQUFyYSxTQUFELEtBQ0UsdUJBQ0U2VSxVQUFXdUIsR0FBSW1CLEdBQU8rQyxVQUN0QnRtQixRQUFTaW1CLEVBQ1R2ckMsR0FBRyxZQUVILHFCQUFHbW1DLFVBQVdzRixHQUFkLHVCQUVESCxHQUNDLHVCQUFLbkYsVUFBV3VCLEdBQUltQixHQUFPZ0QsZ0JBQ3pCLDhEQUNBLDBCQUNnQyxJQUE3QlIsRUFBa0IzcEQsUUFDakIsZ0JBQUMsR0FBRCxDQUFrQm1PLE1BQU0sZ0NBRXpCdzdDLEVBQWtCaG1ELEtBQUksU0FBQ3ltRCxHQUFELE9BQ3JCLGdCQUFDLEdBQUQsQ0FDRXhsRCxJQUFLd2xELEVBQWE5ckMsR0FDbEJ4VixLQUFNc2hELEVBQWF0aEQsS0FDbkJxRixNQUFPaThDLEVBQWFqOEMsTUFDcEI0M0MsS0FBTXFFLEVBQWFyRSxLQUNuQm1ELFdBQVksRUFBS0EsaUJBSXZCLDBCQUNFcGdELEtBQUssU0FDTHVoRCxhQUFXLFFBQ1h6bUIsUUFBU2ttQixFQUNUeHJDLEdBQUcsUUFDSGpLLE1BQU8sQ0FDTDB4QixRQUFTLGVBQ1QyVixTQUFVLFdBQ1ZwUSxJQUFLLE9BQ0x3YyxNQUFPLE9BQ1B3QyxXQUFZLEVBQ1p2QixPQUFRLEVBQ1J3QixRQUFTLE9BQ1R6UixPQUFRLFVBQ1J0bEMsT0FBUSxJQUdWLHVCQUNFd2dDLElBQUt3VyxHQUNMbEQsSUFBSSxHQUNKanpDLE1BQU8sQ0FBRXdTLE1BQU8sTUFBT0MsT0FBUSxpQixxQkF0RW5CdVEsYUFnRjVCb3lCLEdBQWMvMEIsYUFBZSxDQUMzQmsxQixlQUFlLEVBQ2ZELGtCQUFtQixHQUNuQkUsb0JBQXFCLGFBQ3JCQyxpQkFBa0IsY0FHcEJMLEdBQWNILFVBQVksQ0FDeEJNLGNBQWU3aUQsVUFDZjRpRCxrQkFBbUI1aUQsYUFBa0IwakQsSUFDckNaLG9CQUFxQjlpRCxVQUNyQitpRCxpQkFBa0IvaUQsV0FHcEIsSUFBTTJnRCxHQUNHLHVDQXlDSFAsR0FBUzlCLFVBQWtCLENBQy9COEUsY0FBZSxJQUNidEMsU0FBVSxPQUNWa0IsT0FBUSxzQkFDUkQsUUFBUyxXQUNUNEIsTUFBTyxRQUNQam9DLGNBQWUsQ0FoQkYsQ0FDZixLQUFNLENBQ0pzbUMsT0FBUSxtQkFHVixPQUFRLENBQ05BLE9BQVEsd0JBV1I0QixrQkFBbUIsT0FDbkJuNUMsd0JBQXlCLEVBQ3pCbzVDLGtCQUFtQixZQUNsQmxELEdBQW1CLENBQ2xCN2dDLE1BQU8sTUFDUGtpQyxPQUFRLE9BQ1I4QixnQkFBaUIsVUFHckJYLFNBQVUsQ0FDUlksVUFBVyxRQUNYQyxZQUFhLE9BQ2IsU0FBVSxDQUNSalMsT0FBUSxVQUNScjJCLGNBQWUsQ0EzREgsQ0FDaEJsZSxLQUFNLENBQ0o0TyxRQUFTLElBR1gxTyxHQUFJLENBQ0YwTyxRQUFTLElBSVEsQ0FDbkIsS0FBTSxDQUNKNjNDLFVBQVcsaUJBR2IsTUFBTyxDQUNMQSxVQUFXLG9CQUdiLE1BQU8sQ0FDTEEsVUFBVyxtQkFHYixPQUFRLENBQ05BLFVBQVcsbUJBb0NUTCxrQkFBbUIsV0FDbkJuNUMsd0JBQXlCLElBRzdCdzRDLFFBQVMsSUFDUGUsWUFBYSxPQUNackQsR0FBbUIsQ0FDbEIzaEIsUUFBUyxTQUlia2tCLE9BQVEsQ0FDTmMsWUFBYSxTQUlqQixZQ2pMQSxJQUFNRSxHQUFnQixTQUFDLEdBQWdELElBQTlDQyxFQUE4QyxFQUE5Q0EsU0FBVUMsRUFBb0MsRUFBcENBLGNBQWVDLEVBQXFCLEVBQXJCQSxlQUc1Q0MsT0FBVXZRLEVBQ1ZtTCxPQUFVbkwsRUF5QmQsT0F2QmlCLElBQWJvUSxJQUNGRyxFQUxlLENBQUVSLGdCQUFpQixhQU9oQzVFLEVBRHFCLE9BQW5CbUYsRUFDUSxzQkFBSUUsUUFBUSxLQUFLSCxHQUd6QixnQkFBQyxFQUFBdmIsU0FBRCxLQUNFLHNCQUFJNlUsVUFBV3VCLEdBQUltQixHQUFPcHJCLEtBQU1vdkIsR0FDaEMsc0JBQUkxRyxVQUFXdUIsR0FBSW1CLEdBQU9wckIsS0FBTXF2QixNQUt2QixJQUFiRixJQUNGRyxFQW5CZSxDQUFFUixnQkFBaUIsYUFvQmxDNUUsRUFDRSxnQkFBQyxFQUFBclcsU0FBRCxLQUNFLDBCQUFLdWIsR0FDTCwwQkFBS0MsS0FLSixzQkFBSS8yQyxNQUFPZzNDLEdBQVVwRixJQUc5QmdGLEdBQWN2MkIsYUFBZSxDQUMzQncyQixVQUFVLEVBQ1ZFLGVBQWdCLE1BR2xCSCxHQUFjM0IsVUFBWSxDQUN4QjRCLFNBQVVua0QsVUFDVm9rRCxjQUFlcGtELHVCQUNmcWtELGVBQWdCcmtELGVBQW9CLENBQUNBLFlBQWtCQSxlQUd6RCxJQUFNb2dELEdBQVM5QixVQUFrQixDQUMvQnRwQixHQUFJLENBQ0YrdUIsVUFBVyxPQUNYUyxVQUFXLGlCQUNYNUQsYUFBYyxvQkFJbEIsWUMvQ0EsR0FOb0I1Z0QsV0FBZ0IsQ0FDbEN1WCxHQUFJdlgsWUFDSnRCLEtBQU1zQixZQUNOeWtELE9BQVF6a0QsY0NDVixJQUFNMGtELEdBQWEsU0FBQyxHQUFvQixJQUFsQkMsRUFBa0IsRUFBbEJBLFlBQ3BCLE9BQ0UseUJBQU9qSCxVQUFXdUIsR0FBSW1CLEdBQU93RSxhQUMzQiw2QkFDRSxnQkFBQyxHQUFELENBQWVSLGNBQWMsb0JBQW9CRCxVQUFVLElBQzNELGdCQUFDLEdBQUQsQ0FDRUMsY0FBYyxjQUNkQyxlQUFlLFNBQ2ZGLFVBQVUsS0FHZCw2QkFDMEIsSUFBdkJRLEVBQVkxckQsUUFDWCxnQkFBQyxHQUFELENBQ0VtckQsY0FBYywwQkFDZEQsVUFBVSxJQUliUSxFQUFZL25ELEtBQUksU0FBQ2lvRCxHQUFELE9BQ2YsZ0JBQUMsR0FBRCxDQUNFaG5ELElBQUtnbkQsRUFBT3R0QyxHQUNaNnNDLGNBQWVTLEVBQU9ubUQsS0FDdEIybEQsZUFBZ0JRLEVBQU9KLE9BQ3ZCTixVQUFVLFVBUXRCTyxHQUFXLzJCLGFBQWUsQ0FDeEJnM0IsWUFBYSxJQUdmRCxHQUFXbkMsVUFBWSxDQUNyQm9DLFlBQWEza0QsYUFBa0I4a0QsS0FHakMsSUFBTTFFLEdBQVM5QixVQUFrQixDQUMvQnNHLFdBQVksQ0FDVjlrQyxNQUFPLE1BQ1ArZ0MsT0FBUSxPQUNSbUIsT0FBUSxpQkFDUitDLGVBQWdCLGNBSXBCLFksb3pCQ25ETUMsRyxzcEJBQ0osV0FBWTdtRCxHQUFPLE8sNEZBQUEscUJBQ1hBLEcsbUNBR1IsV0FBUyxNQUNxQjNFLEtBQUsyRSxNQUF6Qm1LLEVBREQsRUFDQ0EsU0FBVWs0QyxFQURYLEVBQ1dBLE1BQ2xCLE9BQ0UsdUJBQUs5QyxVQUFXdUIsR0FBSW1CLEdBQU82RSxjQUN6QixzQkFBSXZILFVBQVd1QixHQUFJbUIsR0FBTzhFLFVBQVcxRSxHQUNwQ2w0QyxRLHFCQVZpQmdvQixhQWdCMUIwMEIsR0FBWXIzQixhQUFlLENBQ3pCNnlCLE1BQU8sSUFHVHdFLEdBQVl6QyxVQUFZLENBQ3RCL0IsTUFBT3hnRCxhQUdULEksU0FJTW9nRCxHQUFTOUIsVUFBa0IsQ0FDL0IyRyxhLEdBQWEsQ0FDWG5sQyxNQUFPLE9BQ1BxbEMsVUFBVyxRQUNYbm1CLFFBQVMsT0FDVHNVLFNBQVUsT0FDVnlPLFFBQVMsUSxHQVRKLHVDLEdBVWUsQ0FDbEJsQixPQUFRLGlCQUNSa0IsUUFBUyxRLHlHQUdibUQsUUFBUyxDQUNQcGxDLE1BQU8sVUFJWCxZLG96QkM1Q01zbEMsRyxzcEJBQ0osV0FBWWpuRCxHQUFPLE8sNEZBQUEscUJBQ1hBLEcsbUNBR1IsV0FDRSxPQUNFLHVCQUFLdS9DLFVBQVd1QixHQUFJbUIsR0FBT2lGLHdCQUN6QixnQkFBQyxHQUFnQjdyRCxLQUFLMkUsYSxxQkFSWW15QixhQWMxQzgwQixHQUE0QnozQixhQUFlLENBQ3pDNnlCLE1BQU8sSUFHVDRFLEdBQTRCN0MsVUFBWSxDQUN0Qy9CLE1BQU94Z0QsYUFHVCxJQUFNb2dELEdBQVM5QixVQUFrQixDQUMvQmdILHFCQUFzQixDQUNwQnhsQyxNQUFPLFVBSVgsWSx5ekJDcEJNeWxDLEcsc3BCQUNKLFdBQVlwbkQsR0FBTyxhLDRGQUFBLFVBQ2pCLGNBQU1BLElBQ0RxbkQsYUFBZSxFQUFLQSxhQUFhaHVDLEtBQWxCLE9BQ3BCLEVBQUtzckMsb0JBQXNCLEVBQUtBLG9CQUFvQnRyQyxLQUF6QixPQUMzQixFQUFLdXJDLGlCQUFtQixFQUFLQSxpQkFBaUJ2ckMsS0FBdEIsT0FDeEIsRUFBSytwQyxNQUFRLEVBQUtBLE1BQU0vcEMsS0FBWCxPQUNiLEVBQUswb0MsT0FBUyxFQUFLQSxPQUFPMW9DLEtBQVosT0FDZCxFQUFLK1osTUFBUSxDQUFFc3hCLGVBQWUsRUFBTy9DLFFBQU1JLE9BQVEsRUFBS0EsUUFQdkMsRSw4Q0FTbkIsV0FDRWwvQyxPQUFPcVAsaUJBQWlCLFVBQVc3VyxLQUFLZ3NELGdCLGtDQUUxQyxXQUNFeGtELE9BQU9zUCxvQkFBb0IsVUFBVzlXLEtBQUtnc0QsZ0IsMEJBRTdDLFNBQWFoa0QsR0FDUEEsRUFBRWdaLFNBQXFCLE1BQVZoWixFQUFFM0QsTUFDakIyRCxFQUFFb1gsaUJBQ0Y2c0MsTUFBTSxtQkFDTmpzRCxLQUFLMkUsTUFBTStoRCxZLGlDQUdmLFdBQ0UxbUQsS0FBS3l2QyxTQUFTLENBQUU0WixlQUFlLE0sOEJBR2pDLFdBQ0VycEQsS0FBS3l2QyxTQUFTLENBQUU0WixlQUFlLE0sbUJBRWpDLFNBQU0xZ0MsRUFBT0UsR0FDWDdvQixLQUFLeXZDLFNBQVMsQ0FDWjZXLEtBQU0sQ0FDSjM5QixRQUNBRSxXQUNBMDlCLFlBQVksTyxvQkFJbEIsV0FDRXZtRCxLQUFLeXZDLFNBQVMsQ0FBRTZXLFksb0JBRWxCLFdBQ0UsSUFETyxFQWdCSHRtRCxLQUFLKzNCLE1BSEN3dUIsR0FiSCxFQVlMRCxLQVpLLEVBYUxBLEtBQVFDLFlBRVI4QyxHQWZLLEVBY0wzQyxPQWRLLEVBZUwyQyxlQUdGLE9BQ0UsZ0JBQUMsRUFBQWhhLFNBQUQsS0FDRSxnQkFBQyxHQUFELENBQ0UrWixrQkFmb0IsQ0FDeEIsQ0FBRXJyQyxHQUFJLEVBQUd4VixLQUFNLFVBQVdxRixNQUFPLHdCQUNqQyxDQUFFbVEsR0FBSSxFQUFHeFYsS0FBTSxTQUFVcUYsTUFBTyx3QkFDaEMsQ0FBRW1RLEdBQUksRUFBR3hWLEtBQU0sU0FBVWk5QyxLQUFNLENBQUU1MUIsT1ZuRHJDLDJEVWdFUXk1QixjQUFlQSxFQUNmQyxvQkFBcUJ0cEQsS0FBS3NwRCxvQkFDMUJDLGlCQUFrQnZwRCxLQUFLdXBELG1CQUV6QixnQkFBQyxHQUFELE1BQ0NoRCxFQUNDLGdCQUFDLEdBQUQsQ0FBNkJTLE1BQU0sZUFDakMsZ0JBQUMsR0FBRCxDQUFZbUUsWUE1QkEsQ0FDbEIsQ0FBRXB0QyxHQUFJLEVBQUc3WSxLQUFNLE1BQU8rbEQsT0FBUSxJQUM5QixDQUFFbHRDLEdBQUksRUFBRzdZLEtBQU0sVUFBVytsRCxPQUFRLElBQ2xDLENBQUVsdEMsR0FBSSxFQUFHN1ksS0FBTSxRQUFTK2xELE9BQVEsUUE0QjVCLGdCQUFDLEdBQUQsQ0FBNkJqRSxNQUFNLHNCQUNqQyxnQkFBQyxHQUFELE9BR0osZ0JBQUMsR0FBRCxDQUFhQSxNQUFNLHdCQUNqQixxQkFBRzlDLFVBQVd1QixHQUFJbUIsR0FBT253QixJQUF6Qix5UEFPRix1QkFBS3l0QixVQUFXdUIsR0FBSW1CLEdBQU9zRixTQUN6QixnQkFBQyxHQUFELGEscUJBdkZRcDFCLGFBOEZsQmkxQixHQUFJNTNCLGFBQWUsR0FFbkI0M0IsR0FBSWhELFVBQVksR0FFaEIsSUFBTW5DLEdBQVM5QixVQUFrQixDQUMvQm9ILE9BQVEsQ0FDTjVsQyxNQUFPLE9BQ1A2MEIsU0FBVSxRQUNWZ1IsT0FBUSxFQUNSNUIsVUFBVyxTQUNYOUMsVUFBVyxTQUNYdUQsVUFBVyx1QkFFYnYwQixFQUFHLENBQ0RrMUIsVUFBVyxLQUlmLFlDekhBUyxTQUNFLGdCQUFDLGFBQUQsS0FDRSxnQkFBQyxHQUFELE9BRUZwcUQsU0FBU3FxRCxlQUFlLFUiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8vIHJhd0FzYXAgcHJvdmlkZXMgZXZlcnl0aGluZyB3ZSBuZWVkIGV4Y2VwdCBleGNlcHRpb24gbWFuYWdlbWVudC5cbnZhciByYXdBc2FwID0gcmVxdWlyZShcIi4vcmF3XCIpO1xuLy8gUmF3VGFza3MgYXJlIHJlY3ljbGVkIHRvIHJlZHVjZSBHQyBjaHVybi5cbnZhciBmcmVlVGFza3MgPSBbXTtcbi8vIFdlIHF1ZXVlIGVycm9ycyB0byBlbnN1cmUgdGhleSBhcmUgdGhyb3duIGluIHJpZ2h0IG9yZGVyIChGSUZPKS5cbi8vIEFycmF5LWFzLXF1ZXVlIGlzIGdvb2QgZW5vdWdoIGhlcmUsIHNpbmNlIHdlIGFyZSBqdXN0IGRlYWxpbmcgd2l0aCBleGNlcHRpb25zLlxudmFyIHBlbmRpbmdFcnJvcnMgPSBbXTtcbnZhciByZXF1ZXN0RXJyb3JUaHJvdyA9IHJhd0FzYXAubWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKHRocm93Rmlyc3RFcnJvcik7XG5cbmZ1bmN0aW9uIHRocm93Rmlyc3RFcnJvcigpIHtcbiAgICBpZiAocGVuZGluZ0Vycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgcGVuZGluZ0Vycm9ycy5zaGlmdCgpO1xuICAgIH1cbn1cblxuLyoqXG4gKiBDYWxscyBhIHRhc2sgYXMgc29vbiBhcyBwb3NzaWJsZSBhZnRlciByZXR1cm5pbmcsIGluIGl0cyBvd24gZXZlbnQsIHdpdGggcHJpb3JpdHlcbiAqIG92ZXIgb3RoZXIgZXZlbnRzIGxpa2UgYW5pbWF0aW9uLCByZWZsb3csIGFuZCByZXBhaW50LiBBbiBlcnJvciB0aHJvd24gZnJvbSBhblxuICogZXZlbnQgd2lsbCBub3QgaW50ZXJydXB0LCBub3IgZXZlbiBzdWJzdGFudGlhbGx5IHNsb3cgZG93biB0aGUgcHJvY2Vzc2luZyBvZlxuICogb3RoZXIgZXZlbnRzLCBidXQgd2lsbCBiZSByYXRoZXIgcG9zdHBvbmVkIHRvIGEgbG93ZXIgcHJpb3JpdHkgZXZlbnQuXG4gKiBAcGFyYW0ge3tjYWxsfX0gdGFzayBBIGNhbGxhYmxlIG9iamVjdCwgdHlwaWNhbGx5IGEgZnVuY3Rpb24gdGhhdCB0YWtlcyBub1xuICogYXJndW1lbnRzLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGFzYXA7XG5mdW5jdGlvbiBhc2FwKHRhc2spIHtcbiAgICB2YXIgcmF3VGFzaztcbiAgICBpZiAoZnJlZVRhc2tzLmxlbmd0aCkge1xuICAgICAgICByYXdUYXNrID0gZnJlZVRhc2tzLnBvcCgpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHJhd1Rhc2sgPSBuZXcgUmF3VGFzaygpO1xuICAgIH1cbiAgICByYXdUYXNrLnRhc2sgPSB0YXNrO1xuICAgIHJhd0FzYXAocmF3VGFzayk7XG59XG5cbi8vIFdlIHdyYXAgdGFza3Mgd2l0aCByZWN5Y2xhYmxlIHRhc2sgb2JqZWN0cy4gIEEgdGFzayBvYmplY3QgaW1wbGVtZW50c1xuLy8gYGNhbGxgLCBqdXN0IGxpa2UgYSBmdW5jdGlvbi5cbmZ1bmN0aW9uIFJhd1Rhc2soKSB7XG4gICAgdGhpcy50YXNrID0gbnVsbDtcbn1cblxuLy8gVGhlIHNvbGUgcHVycG9zZSBvZiB3cmFwcGluZyB0aGUgdGFzayBpcyB0byBjYXRjaCB0aGUgZXhjZXB0aW9uIGFuZCByZWN5Y2xlXG4vLyB0aGUgdGFzayBvYmplY3QgYWZ0ZXIgaXRzIHNpbmdsZSB1c2UuXG5SYXdUYXNrLnByb3RvdHlwZS5jYWxsID0gZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIHRoaXMudGFzay5jYWxsKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGFzYXAub25lcnJvcikge1xuICAgICAgICAgICAgLy8gVGhpcyBob29rIGV4aXN0cyBwdXJlbHkgZm9yIHRlc3RpbmcgcHVycG9zZXMuXG4gICAgICAgICAgICAvLyBJdHMgbmFtZSB3aWxsIGJlIHBlcmlvZGljYWxseSByYW5kb21pemVkIHRvIGJyZWFrIGFueSBjb2RlIHRoYXRcbiAgICAgICAgICAgIC8vIGRlcGVuZHMgb24gaXRzIGV4aXN0ZW5jZS5cbiAgICAgICAgICAgIGFzYXAub25lcnJvcihlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAvLyBJbiBhIHdlYiBicm93c2VyLCBleGNlcHRpb25zIGFyZSBub3QgZmF0YWwuIEhvd2V2ZXIsIHRvIGF2b2lkXG4gICAgICAgICAgICAvLyBzbG93aW5nIGRvd24gdGhlIHF1ZXVlIG9mIHBlbmRpbmcgdGFza3MsIHdlIHJldGhyb3cgdGhlIGVycm9yIGluIGFcbiAgICAgICAgICAgIC8vIGxvd2VyIHByaW9yaXR5IHR1cm4uXG4gICAgICAgICAgICBwZW5kaW5nRXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgcmVxdWVzdEVycm9yVGhyb3coKTtcbiAgICAgICAgfVxuICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRoaXMudGFzayA9IG51bGw7XG4gICAgICAgIGZyZWVUYXNrc1tmcmVlVGFza3MubGVuZ3RoXSA9IHRoaXM7XG4gICAgfVxufTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vLyBVc2UgdGhlIGZhc3Rlc3QgbWVhbnMgcG9zc2libGUgdG8gZXhlY3V0ZSBhIHRhc2sgaW4gaXRzIG93biB0dXJuLCB3aXRoXG4vLyBwcmlvcml0eSBvdmVyIG90aGVyIGV2ZW50cyBpbmNsdWRpbmcgSU8sIGFuaW1hdGlvbiwgcmVmbG93LCBhbmQgcmVkcmF3XG4vLyBldmVudHMgaW4gYnJvd3NlcnMuXG4vL1xuLy8gQW4gZXhjZXB0aW9uIHRocm93biBieSBhIHRhc2sgd2lsbCBwZXJtYW5lbnRseSBpbnRlcnJ1cHQgdGhlIHByb2Nlc3Npbmcgb2Zcbi8vIHN1YnNlcXVlbnQgdGFza3MuIFRoZSBoaWdoZXIgbGV2ZWwgYGFzYXBgIGZ1bmN0aW9uIGVuc3VyZXMgdGhhdCBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93biBieSBhIHRhc2ssIHRoYXQgdGhlIHRhc2sgcXVldWUgd2lsbCBjb250aW51ZSBmbHVzaGluZyBhc1xuLy8gc29vbiBhcyBwb3NzaWJsZSwgYnV0IGlmIHlvdSB1c2UgYHJhd0FzYXBgIGRpcmVjdGx5LCB5b3UgYXJlIHJlc3BvbnNpYmxlIHRvXG4vLyBlaXRoZXIgZW5zdXJlIHRoYXQgbm8gZXhjZXB0aW9ucyBhcmUgdGhyb3duIGZyb20geW91ciB0YXNrLCBvciB0byBtYW51YWxseVxuLy8gY2FsbCBgcmF3QXNhcC5yZXF1ZXN0Rmx1c2hgIGlmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24uXG5tb2R1bGUuZXhwb3J0cyA9IHJhd0FzYXA7XG5mdW5jdGlvbiByYXdBc2FwKHRhc2spIHtcbiAgICBpZiAoIXF1ZXVlLmxlbmd0aCkge1xuICAgICAgICByZXF1ZXN0Rmx1c2goKTtcbiAgICAgICAgZmx1c2hpbmcgPSB0cnVlO1xuICAgIH1cbiAgICAvLyBFcXVpdmFsZW50IHRvIHB1c2gsIGJ1dCBhdm9pZHMgYSBmdW5jdGlvbiBjYWxsLlxuICAgIHF1ZXVlW3F1ZXVlLmxlbmd0aF0gPSB0YXNrO1xufVxuXG52YXIgcXVldWUgPSBbXTtcbi8vIE9uY2UgYSBmbHVzaCBoYXMgYmVlbiByZXF1ZXN0ZWQsIG5vIGZ1cnRoZXIgY2FsbHMgdG8gYHJlcXVlc3RGbHVzaGAgYXJlXG4vLyBuZWNlc3NhcnkgdW50aWwgdGhlIG5leHQgYGZsdXNoYCBjb21wbGV0ZXMuXG52YXIgZmx1c2hpbmcgPSBmYWxzZTtcbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGFuIGltcGxlbWVudGF0aW9uLXNwZWNpZmljIG1ldGhvZCB0aGF0IGF0dGVtcHRzIHRvIGtpY2tcbi8vIG9mZiBhIGBmbHVzaGAgZXZlbnQgYXMgcXVpY2tseSBhcyBwb3NzaWJsZS4gYGZsdXNoYCB3aWxsIGF0dGVtcHQgdG8gZXhoYXVzdFxuLy8gdGhlIGV2ZW50IHF1ZXVlIGJlZm9yZSB5aWVsZGluZyB0byB0aGUgYnJvd3NlcidzIG93biBldmVudCBsb29wLlxudmFyIHJlcXVlc3RGbHVzaDtcbi8vIFRoZSBwb3NpdGlvbiBvZiB0aGUgbmV4dCB0YXNrIHRvIGV4ZWN1dGUgaW4gdGhlIHRhc2sgcXVldWUuIFRoaXMgaXNcbi8vIHByZXNlcnZlZCBiZXR3ZWVuIGNhbGxzIHRvIGBmbHVzaGAgc28gdGhhdCBpdCBjYW4gYmUgcmVzdW1lZCBpZlxuLy8gYSB0YXNrIHRocm93cyBhbiBleGNlcHRpb24uXG52YXIgaW5kZXggPSAwO1xuLy8gSWYgYSB0YXNrIHNjaGVkdWxlcyBhZGRpdGlvbmFsIHRhc2tzIHJlY3Vyc2l2ZWx5LCB0aGUgdGFzayBxdWV1ZSBjYW4gZ3Jvd1xuLy8gdW5ib3VuZGVkLiBUbyBwcmV2ZW50IG1lbW9yeSBleGhhdXN0aW9uLCB0aGUgdGFzayBxdWV1ZSB3aWxsIHBlcmlvZGljYWxseVxuLy8gdHJ1bmNhdGUgYWxyZWFkeS1jb21wbGV0ZWQgdGFza3MuXG52YXIgY2FwYWNpdHkgPSAxMDI0O1xuXG4vLyBUaGUgZmx1c2ggZnVuY3Rpb24gcHJvY2Vzc2VzIGFsbCB0YXNrcyB0aGF0IGhhdmUgYmVlbiBzY2hlZHVsZWQgd2l0aFxuLy8gYHJhd0FzYXBgIHVubGVzcyBhbmQgdW50aWwgb25lIG9mIHRob3NlIHRhc2tzIHRocm93cyBhbiBleGNlcHRpb24uXG4vLyBJZiBhIHRhc2sgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgYGZsdXNoYCBlbnN1cmVzIHRoYXQgaXRzIHN0YXRlIHdpbGwgcmVtYWluXG4vLyBjb25zaXN0ZW50IGFuZCB3aWxsIHJlc3VtZSB3aGVyZSBpdCBsZWZ0IG9mZiB3aGVuIGNhbGxlZCBhZ2Fpbi5cbi8vIEhvd2V2ZXIsIGBmbHVzaGAgZG9lcyBub3QgbWFrZSBhbnkgYXJyYW5nZW1lbnRzIHRvIGJlIGNhbGxlZCBhZ2FpbiBpZiBhblxuLy8gZXhjZXB0aW9uIGlzIHRocm93bi5cbmZ1bmN0aW9uIGZsdXNoKCkge1xuICAgIHdoaWxlIChpbmRleCA8IHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICB2YXIgY3VycmVudEluZGV4ID0gaW5kZXg7XG4gICAgICAgIC8vIEFkdmFuY2UgdGhlIGluZGV4IGJlZm9yZSBjYWxsaW5nIHRoZSB0YXNrLiBUaGlzIGVuc3VyZXMgdGhhdCB3ZSB3aWxsXG4gICAgICAgIC8vIGJlZ2luIGZsdXNoaW5nIG9uIHRoZSBuZXh0IHRhc2sgdGhlIHRhc2sgdGhyb3dzIGFuIGVycm9yLlxuICAgICAgICBpbmRleCA9IGluZGV4ICsgMTtcbiAgICAgICAgcXVldWVbY3VycmVudEluZGV4XS5jYWxsKCk7XG4gICAgICAgIC8vIFByZXZlbnQgbGVha2luZyBtZW1vcnkgZm9yIGxvbmcgY2hhaW5zIG9mIHJlY3Vyc2l2ZSBjYWxscyB0byBgYXNhcGAuXG4gICAgICAgIC8vIElmIHdlIGNhbGwgYGFzYXBgIHdpdGhpbiB0YXNrcyBzY2hlZHVsZWQgYnkgYGFzYXBgLCB0aGUgcXVldWUgd2lsbFxuICAgICAgICAvLyBncm93LCBidXQgdG8gYXZvaWQgYW4gTyhuKSB3YWxrIGZvciBldmVyeSB0YXNrIHdlIGV4ZWN1dGUsIHdlIGRvbid0XG4gICAgICAgIC8vIHNoaWZ0IHRhc2tzIG9mZiB0aGUgcXVldWUgYWZ0ZXIgdGhleSBoYXZlIGJlZW4gZXhlY3V0ZWQuXG4gICAgICAgIC8vIEluc3RlYWQsIHdlIHBlcmlvZGljYWxseSBzaGlmdCAxMDI0IHRhc2tzIG9mZiB0aGUgcXVldWUuXG4gICAgICAgIGlmIChpbmRleCA+IGNhcGFjaXR5KSB7XG4gICAgICAgICAgICAvLyBNYW51YWxseSBzaGlmdCBhbGwgdmFsdWVzIHN0YXJ0aW5nIGF0IHRoZSBpbmRleCBiYWNrIHRvIHRoZVxuICAgICAgICAgICAgLy8gYmVnaW5uaW5nIG9mIHRoZSBxdWV1ZS5cbiAgICAgICAgICAgIGZvciAodmFyIHNjYW4gPSAwLCBuZXdMZW5ndGggPSBxdWV1ZS5sZW5ndGggLSBpbmRleDsgc2NhbiA8IG5ld0xlbmd0aDsgc2NhbisrKSB7XG4gICAgICAgICAgICAgICAgcXVldWVbc2Nhbl0gPSBxdWV1ZVtzY2FuICsgaW5kZXhdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcXVldWUubGVuZ3RoIC09IGluZGV4O1xuICAgICAgICAgICAgaW5kZXggPSAwO1xuICAgICAgICB9XG4gICAgfVxuICAgIHF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgaW5kZXggPSAwO1xuICAgIGZsdXNoaW5nID0gZmFsc2U7XG59XG5cbi8vIGByZXF1ZXN0Rmx1c2hgIGlzIGltcGxlbWVudGVkIHVzaW5nIGEgc3RyYXRlZ3kgYmFzZWQgb24gZGF0YSBjb2xsZWN0ZWQgZnJvbVxuLy8gZXZlcnkgYXZhaWxhYmxlIFNhdWNlTGFicyBTZWxlbml1bSB3ZWIgZHJpdmVyIHdvcmtlciBhdCB0aW1lIG9mIHdyaXRpbmcuXG4vLyBodHRwczovL2RvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xbUctNVVZR3VwNXF4R2RFTVdraFA2QldDejA1M05VYjJFMVFvVVRVMTZ1QS9lZGl0I2dpZD03ODM3MjQ1OTNcblxuLy8gU2FmYXJpIDYgYW5kIDYuMSBmb3IgZGVza3RvcCwgaVBhZCwgYW5kIGlQaG9uZSBhcmUgdGhlIG9ubHkgYnJvd3NlcnMgdGhhdFxuLy8gaGF2ZSBXZWJLaXRNdXRhdGlvbk9ic2VydmVyIGJ1dCBub3QgdW4tcHJlZml4ZWQgTXV0YXRpb25PYnNlcnZlci5cbi8vIE11c3QgdXNlIGBnbG9iYWxgIG9yIGBzZWxmYCBpbnN0ZWFkIG9mIGB3aW5kb3dgIHRvIHdvcmsgaW4gYm90aCBmcmFtZXMgYW5kIHdlYlxuLy8gd29ya2Vycy4gYGdsb2JhbGAgaXMgYSBwcm92aXNpb24gb2YgQnJvd3NlcmlmeSwgTXIsIE1ycywgb3IgTW9wLlxuXG4vKiBnbG9iYWxzIHNlbGYgKi9cbnZhciBzY29wZSA9IHR5cGVvZiBnbG9iYWwgIT09IFwidW5kZWZpbmVkXCIgPyBnbG9iYWwgOiBzZWxmO1xudmFyIEJyb3dzZXJNdXRhdGlvbk9ic2VydmVyID0gc2NvcGUuTXV0YXRpb25PYnNlcnZlciB8fCBzY29wZS5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xuXG4vLyBNdXRhdGlvbk9ic2VydmVycyBhcmUgZGVzaXJhYmxlIGJlY2F1c2UgdGhleSBoYXZlIGhpZ2ggcHJpb3JpdHkgYW5kIHdvcmtcbi8vIHJlbGlhYmx5IGV2ZXJ5d2hlcmUgdGhleSBhcmUgaW1wbGVtZW50ZWQuXG4vLyBUaGV5IGFyZSBpbXBsZW1lbnRlZCBpbiBhbGwgbW9kZXJuIGJyb3dzZXJzLlxuLy9cbi8vIC0gQW5kcm9pZCA0LTQuM1xuLy8gLSBDaHJvbWUgMjYtMzRcbi8vIC0gRmlyZWZveCAxNC0yOVxuLy8gLSBJbnRlcm5ldCBFeHBsb3JlciAxMVxuLy8gLSBpUGFkIFNhZmFyaSA2LTcuMVxuLy8gLSBpUGhvbmUgU2FmYXJpIDctNy4xXG4vLyAtIFNhZmFyaSA2LTdcbmlmICh0eXBlb2YgQnJvd3Nlck11dGF0aW9uT2JzZXJ2ZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHJlcXVlc3RGbHVzaCA9IG1ha2VSZXF1ZXN0Q2FsbEZyb21NdXRhdGlvbk9ic2VydmVyKGZsdXNoKTtcblxuLy8gTWVzc2FnZUNoYW5uZWxzIGFyZSBkZXNpcmFibGUgYmVjYXVzZSB0aGV5IGdpdmUgZGlyZWN0IGFjY2VzcyB0byB0aGUgSFRNTFxuLy8gdGFzayBxdWV1ZSwgYXJlIGltcGxlbWVudGVkIGluIEludGVybmV0IEV4cGxvcmVyIDEwLCBTYWZhcmkgNS4wLTEsIGFuZCBPcGVyYVxuLy8gMTEtMTIsIGFuZCBpbiB3ZWIgd29ya2VycyBpbiBtYW55IGVuZ2luZXMuXG4vLyBBbHRob3VnaCBtZXNzYWdlIGNoYW5uZWxzIHlpZWxkIHRvIGFueSBxdWV1ZWQgcmVuZGVyaW5nIGFuZCBJTyB0YXNrcywgdGhleVxuLy8gd291bGQgYmUgYmV0dGVyIHRoYW4gaW1wb3NpbmcgdGhlIDRtcyBkZWxheSBvZiB0aW1lcnMuXG4vLyBIb3dldmVyLCB0aGV5IGRvIG5vdCB3b3JrIHJlbGlhYmx5IGluIEludGVybmV0IEV4cGxvcmVyIG9yIFNhZmFyaS5cblxuLy8gSW50ZXJuZXQgRXhwbG9yZXIgMTAgaXMgdGhlIG9ubHkgYnJvd3NlciB0aGF0IGhhcyBzZXRJbW1lZGlhdGUgYnV0IGRvZXNcbi8vIG5vdCBoYXZlIE11dGF0aW9uT2JzZXJ2ZXJzLlxuLy8gQWx0aG91Z2ggc2V0SW1tZWRpYXRlIHlpZWxkcyB0byB0aGUgYnJvd3NlcidzIHJlbmRlcmVyLCBpdCB3b3VsZCBiZVxuLy8gcHJlZmVycmFibGUgdG8gZmFsbGluZyBiYWNrIHRvIHNldFRpbWVvdXQgc2luY2UgaXQgZG9lcyBub3QgaGF2ZVxuLy8gdGhlIG1pbmltdW0gNG1zIHBlbmFsdHkuXG4vLyBVbmZvcnR1bmF0ZWx5IHRoZXJlIGFwcGVhcnMgdG8gYmUgYSBidWcgaW4gSW50ZXJuZXQgRXhwbG9yZXIgMTAgTW9iaWxlIChhbmRcbi8vIERlc2t0b3AgdG8gYSBsZXNzZXIgZXh0ZW50KSB0aGF0IHJlbmRlcnMgYm90aCBzZXRJbW1lZGlhdGUgYW5kXG4vLyBNZXNzYWdlQ2hhbm5lbCB1c2VsZXNzIGZvciB0aGUgcHVycG9zZXMgb2YgQVNBUC5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9rcmlza293YWwvcS9pc3N1ZXMvMzk2XG5cbi8vIFRpbWVycyBhcmUgaW1wbGVtZW50ZWQgdW5pdmVyc2FsbHkuXG4vLyBXZSBmYWxsIGJhY2sgdG8gdGltZXJzIGluIHdvcmtlcnMgaW4gbW9zdCBlbmdpbmVzLCBhbmQgaW4gZm9yZWdyb3VuZFxuLy8gY29udGV4dHMgaW4gdGhlIGZvbGxvd2luZyBicm93c2Vycy5cbi8vIEhvd2V2ZXIsIG5vdGUgdGhhdCBldmVuIHRoaXMgc2ltcGxlIGNhc2UgcmVxdWlyZXMgbnVhbmNlcyB0byBvcGVyYXRlIGluIGFcbi8vIGJyb2FkIHNwZWN0cnVtIG9mIGJyb3dzZXJzLlxuLy9cbi8vIC0gRmlyZWZveCAzLTEzXG4vLyAtIEludGVybmV0IEV4cGxvcmVyIDYtOVxuLy8gLSBpUGFkIFNhZmFyaSA0LjNcbi8vIC0gTHlueCAyLjguN1xufSBlbHNlIHtcbiAgICByZXF1ZXN0Rmx1c2ggPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXIoZmx1c2gpO1xufVxuXG4vLyBgcmVxdWVzdEZsdXNoYCByZXF1ZXN0cyB0aGF0IHRoZSBoaWdoIHByaW9yaXR5IGV2ZW50IHF1ZXVlIGJlIGZsdXNoZWQgYXNcbi8vIHNvb24gYXMgcG9zc2libGUuXG4vLyBUaGlzIGlzIHVzZWZ1bCB0byBwcmV2ZW50IGFuIGVycm9yIHRocm93biBpbiBhIHRhc2sgZnJvbSBzdGFsbGluZyB0aGUgZXZlbnRcbi8vIHF1ZXVlIGlmIHRoZSBleGNlcHRpb24gaGFuZGxlZCBieSBOb2RlLmpz4oCZc1xuLy8gYHByb2Nlc3Mub24oXCJ1bmNhdWdodEV4Y2VwdGlvblwiKWAgb3IgYnkgYSBkb21haW4uXG5yYXdBc2FwLnJlcXVlc3RGbHVzaCA9IHJlcXVlc3RGbHVzaDtcblxuLy8gVG8gcmVxdWVzdCBhIGhpZ2ggcHJpb3JpdHkgZXZlbnQsIHdlIGluZHVjZSBhIG11dGF0aW9uIG9ic2VydmVyIGJ5IHRvZ2dsaW5nXG4vLyB0aGUgdGV4dCBvZiBhIHRleHQgbm9kZSBiZXR3ZWVuIFwiMVwiIGFuZCBcIi0xXCIuXG5mdW5jdGlvbiBtYWtlUmVxdWVzdENhbGxGcm9tTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjaykge1xuICAgIHZhciB0b2dnbGUgPSAxO1xuICAgIHZhciBvYnNlcnZlciA9IG5ldyBCcm93c2VyTXV0YXRpb25PYnNlcnZlcihjYWxsYmFjayk7XG4gICAgdmFyIG5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKG5vZGUsIHtjaGFyYWN0ZXJEYXRhOiB0cnVlfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICB0b2dnbGUgPSAtdG9nZ2xlO1xuICAgICAgICBub2RlLmRhdGEgPSB0b2dnbGU7XG4gICAgfTtcbn1cblxuLy8gVGhlIG1lc3NhZ2UgY2hhbm5lbCB0ZWNobmlxdWUgd2FzIGRpc2NvdmVyZWQgYnkgTWFsdGUgVWJsIGFuZCB3YXMgdGhlXG4vLyBvcmlnaW5hbCBmb3VuZGF0aW9uIGZvciB0aGlzIGxpYnJhcnkuXG4vLyBodHRwOi8vd3d3Lm5vbmJsb2NraW5nLmlvLzIwMTEvMDYvd2luZG93bmV4dHRpY2suaHRtbFxuXG4vLyBTYWZhcmkgNi4wLjUgKGF0IGxlYXN0KSBpbnRlcm1pdHRlbnRseSBmYWlscyB0byBjcmVhdGUgbWVzc2FnZSBwb3J0cyBvbiBhXG4vLyBwYWdlJ3MgZmlyc3QgbG9hZC4gVGhhbmtmdWxseSwgdGhpcyB2ZXJzaW9uIG9mIFNhZmFyaSBzdXBwb3J0c1xuLy8gTXV0YXRpb25PYnNlcnZlcnMsIHNvIHdlIGRvbid0IG5lZWQgdG8gZmFsbCBiYWNrIGluIHRoYXQgY2FzZS5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbU1lc3NhZ2VDaGFubmVsKGNhbGxiYWNrKSB7XG4vLyAgICAgdmFyIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbi8vICAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGNhbGxiYWNrO1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgY2hhbm5lbC5wb3J0Mi5wb3N0TWVzc2FnZSgwKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBGb3IgcmVhc29ucyBleHBsYWluZWQgYWJvdmUsIHdlIGFyZSBhbHNvIHVuYWJsZSB0byB1c2UgYHNldEltbWVkaWF0ZWBcbi8vIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLlxuLy8gRXZlbiBpZiB3ZSB3ZXJlLCB0aGVyZSBpcyBhbm90aGVyIGJ1ZyBpbiBJbnRlcm5ldCBFeHBsb3JlciAxMC5cbi8vIEl0IGlzIG5vdCBzdWZmaWNpZW50IHRvIGFzc2lnbiBgc2V0SW1tZWRpYXRlYCB0byBgcmVxdWVzdEZsdXNoYCBiZWNhdXNlXG4vLyBgc2V0SW1tZWRpYXRlYCBtdXN0IGJlIGNhbGxlZCAqYnkgbmFtZSogYW5kIHRoZXJlZm9yZSBtdXN0IGJlIHdyYXBwZWQgaW4gYVxuLy8gY2xvc3VyZS5cbi8vIE5ldmVyIGZvcmdldC5cblxuLy8gZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVNldEltbWVkaWF0ZShjYWxsYmFjaykge1xuLy8gICAgIHJldHVybiBmdW5jdGlvbiByZXF1ZXN0Q2FsbCgpIHtcbi8vICAgICAgICAgc2V0SW1tZWRpYXRlKGNhbGxiYWNrKTtcbi8vICAgICB9O1xuLy8gfVxuXG4vLyBTYWZhcmkgNi4wIGhhcyBhIHByb2JsZW0gd2hlcmUgdGltZXJzIHdpbGwgZ2V0IGxvc3Qgd2hpbGUgdGhlIHVzZXIgaXNcbi8vIHNjcm9sbGluZy4gVGhpcyBwcm9ibGVtIGRvZXMgbm90IGltcGFjdCBBU0FQIGJlY2F1c2UgU2FmYXJpIDYuMCBzdXBwb3J0c1xuLy8gbXV0YXRpb24gb2JzZXJ2ZXJzLCBzbyB0aGF0IGltcGxlbWVudGF0aW9uIGlzIHVzZWQgaW5zdGVhZC5cbi8vIEhvd2V2ZXIsIGlmIHdlIGV2ZXIgZWxlY3QgdG8gdXNlIHRpbWVycyBpbiBTYWZhcmksIHRoZSBwcmV2YWxlbnQgd29yay1hcm91bmRcbi8vIGlzIHRvIGFkZCBhIHNjcm9sbCBldmVudCBsaXN0ZW5lciB0aGF0IGNhbGxzIGZvciBhIGZsdXNoLlxuXG4vLyBgc2V0VGltZW91dGAgZG9lcyBub3QgY2FsbCB0aGUgcGFzc2VkIGNhbGxiYWNrIGlmIHRoZSBkZWxheSBpcyBsZXNzIHRoYW5cbi8vIGFwcHJveGltYXRlbHkgNyBpbiB3ZWIgd29ya2VycyBpbiBGaXJlZm94IDggdGhyb3VnaCAxOCwgYW5kIHNvbWV0aW1lcyBub3Rcbi8vIGV2ZW4gdGhlbi5cblxuZnVuY3Rpb24gbWFrZVJlcXVlc3RDYWxsRnJvbVRpbWVyKGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlcXVlc3RDYWxsKCkge1xuICAgICAgICAvLyBXZSBkaXNwYXRjaCBhIHRpbWVvdXQgd2l0aCBhIHNwZWNpZmllZCBkZWxheSBvZiAwIGZvciBlbmdpbmVzIHRoYXRcbiAgICAgICAgLy8gY2FuIHJlbGlhYmx5IGFjY29tbW9kYXRlIHRoYXQgcmVxdWVzdC4gVGhpcyB3aWxsIHVzdWFsbHkgYmUgc25hcHBlZFxuICAgICAgICAvLyB0byBhIDQgbWlsaXNlY29uZCBkZWxheSwgYnV0IG9uY2Ugd2UncmUgZmx1c2hpbmcsIHRoZXJlJ3Mgbm8gZGVsYXlcbiAgICAgICAgLy8gYmV0d2VlbiBldmVudHMuXG4gICAgICAgIHZhciB0aW1lb3V0SGFuZGxlID0gc2V0VGltZW91dChoYW5kbGVUaW1lciwgMCk7XG4gICAgICAgIC8vIEhvd2V2ZXIsIHNpbmNlIHRoaXMgdGltZXIgZ2V0cyBmcmVxdWVudGx5IGRyb3BwZWQgaW4gRmlyZWZveFxuICAgICAgICAvLyB3b3JrZXJzLCB3ZSBlbmxpc3QgYW4gaW50ZXJ2YWwgaGFuZGxlIHRoYXQgd2lsbCB0cnkgdG8gZmlyZVxuICAgICAgICAvLyBhbiBldmVudCAyMCB0aW1lcyBwZXIgc2Vjb25kIHVudGlsIGl0IHN1Y2NlZWRzLlxuICAgICAgICB2YXIgaW50ZXJ2YWxIYW5kbGUgPSBzZXRJbnRlcnZhbChoYW5kbGVUaW1lciwgNTApO1xuXG4gICAgICAgIGZ1bmN0aW9uIGhhbmRsZVRpbWVyKCkge1xuICAgICAgICAgICAgLy8gV2hpY2hldmVyIHRpbWVyIHN1Y2NlZWRzIHdpbGwgY2FuY2VsIGJvdGggdGltZXJzIGFuZFxuICAgICAgICAgICAgLy8gZXhlY3V0ZSB0aGUgY2FsbGJhY2suXG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dEhhbmRsZSk7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSGFuZGxlKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG4vLyBUaGlzIGlzIGZvciBgYXNhcC5qc2Agb25seS5cbi8vIEl0cyBuYW1lIHdpbGwgYmUgcGVyaW9kaWNhbGx5IHJhbmRvbWl6ZWQgdG8gYnJlYWsgYW55IGNvZGUgdGhhdCBkZXBlbmRzIG9uXG4vLyBpdHMgZXhpc3RlbmNlLlxucmF3QXNhcC5tYWtlUmVxdWVzdENhbGxGcm9tVGltZXIgPSBtYWtlUmVxdWVzdENhbGxGcm9tVGltZXI7XG5cbi8vIEFTQVAgd2FzIG9yaWdpbmFsbHkgYSBuZXh0VGljayBzaGltIGluY2x1ZGVkIGluIFEuIFRoaXMgd2FzIGZhY3RvcmVkIG91dFxuLy8gaW50byB0aGlzIEFTQVAgcGFja2FnZS4gSXQgd2FzIGxhdGVyIGFkYXB0ZWQgdG8gUlNWUCB3aGljaCBtYWRlIGZ1cnRoZXJcbi8vIGFtZW5kbWVudHMuIFRoZXNlIGRlY2lzaW9ucywgcGFydGljdWxhcmx5IHRvIG1hcmdpbmFsaXplIE1lc3NhZ2VDaGFubmVsIGFuZFxuLy8gdG8gY2FwdHVyZSB0aGUgTXV0YXRpb25PYnNlcnZlciBpbXBsZW1lbnRhdGlvbiBpbiBhIGNsb3N1cmUsIHdlcmUgaW50ZWdyYXRlZFxuLy8gYmFjayBpbnRvIEFTQVAgcHJvcGVyLlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RpbGRlaW8vcnN2cC5qcy9ibG9iL2NkZGY3MjMyNTQ2YTljZjg1ODUyNGI3NWNkZTZmOWVkZjcyNjIwYTcvbGliL3JzdnAvYXNhcC5qc1xuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShSZWFjdElzLmlzRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMVxuICogcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwicmVhY3RcIiksbT1yZXF1aXJlKFwib2JqZWN0LWFzc2lnblwiKSxyPXJlcXVpcmUoXCJzY2hlZHVsZXJcIik7ZnVuY3Rpb24geShhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1pZighYWEpdGhyb3cgRXJyb3IoeSgyMjcpKTt2YXIgYmE9bmV3IFNldCxjYT17fTtmdW5jdGlvbiBkYShhLGIpe2VhKGEsYik7ZWEoYStcIkNhcHR1cmVcIixiKX1cbmZ1bmN0aW9uIGVhKGEsYil7Y2FbYV09Yjtmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKWJhLmFkZChiW2FdKX1cbnZhciBmYT0hKFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudHx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCksaGE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLGlhPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksXG5qYT17fSxrYT17fTtmdW5jdGlvbiBsYShhKXtpZihpYS5jYWxsKGthLGEpKXJldHVybiEwO2lmKGlhLmNhbGwoamEsYSkpcmV0dXJuITE7aWYoaGEudGVzdChhKSlyZXR1cm4ga2FbYV09ITA7amFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gbWEoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBuYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxtYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIEIoYSxiLGMsZCxlLGYsZyl7dGhpcy5hY2NlcHRzQm9vbGVhbnM9Mj09PWJ8fDM9PT1ifHw0PT09Yjt0aGlzLmF0dHJpYnV0ZU5hbWU9ZDt0aGlzLmF0dHJpYnV0ZU5hbWVzcGFjZT1lO3RoaXMubXVzdFVzZVByb3BlcnR5PWM7dGhpcy5wcm9wZXJ0eU5hbWU9YTt0aGlzLnR5cGU9Yjt0aGlzLnNhbml0aXplVVJMPWY7dGhpcy5yZW1vdmVFbXB0eVN0cmluZz1nfXZhciBEPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMCwhMSxhLG51bGwsITEsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0RbYl09bmV3IEIoYiwxLCExLGFbMV0sbnVsbCwhMSwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMiwhMSxhLG51bGwsITEsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZGlzYWJsZVJlbW90ZVBsYXliYWNrIGZvcm1Ob1ZhbGlkYXRlIGhpZGRlbiBsb29wIG5vTW9kdWxlIG5vVmFsaWRhdGUgb3BlbiBwbGF5c0lubGluZSByZWFkT25seSByZXF1aXJlZCByZXZlcnNlZCBzY29wZWQgc2VhbWxlc3MgaXRlbVNjb3BlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDMsITAsYSxudWxsLCExLCExKX0pO1tcImNhcHR1cmVcIixcImRvd25sb2FkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDQsITEsYSxudWxsLCExLCExKX0pO1tcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNiwhMSxhLG51bGwsITEsITEpfSk7W1wicm93U3BhblwiLFwic3RhcnRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsNSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTt2YXIgb2E9L1tcXC06XShbYS16XSkvZztmdW5jdGlvbiBwYShhKXtyZXR1cm4gYVsxXS50b1VwcGVyQ2FzZSgpfVxuXCJhY2NlbnQtaGVpZ2h0IGFsaWdubWVudC1iYXNlbGluZSBhcmFiaWMtZm9ybSBiYXNlbGluZS1zaGlmdCBjYXAtaGVpZ2h0IGNsaXAtcGF0aCBjbGlwLXJ1bGUgY29sb3ItaW50ZXJwb2xhdGlvbiBjb2xvci1pbnRlcnBvbGF0aW9uLWZpbHRlcnMgY29sb3ItcHJvZmlsZSBjb2xvci1yZW5kZXJpbmcgZG9taW5hbnQtYmFzZWxpbmUgZW5hYmxlLWJhY2tncm91bmQgZmlsbC1vcGFjaXR5IGZpbGwtcnVsZSBmbG9vZC1jb2xvciBmbG9vZC1vcGFjaXR5IGZvbnQtZmFtaWx5IGZvbnQtc2l6ZSBmb250LXNpemUtYWRqdXN0IGZvbnQtc3RyZXRjaCBmb250LXN0eWxlIGZvbnQtdmFyaWFudCBmb250LXdlaWdodCBnbHlwaC1uYW1lIGdseXBoLW9yaWVudGF0aW9uLWhvcml6b250YWwgZ2x5cGgtb3JpZW50YXRpb24tdmVydGljYWwgaG9yaXotYWR2LXggaG9yaXotb3JpZ2luLXggaW1hZ2UtcmVuZGVyaW5nIGxldHRlci1zcGFjaW5nIGxpZ2h0aW5nLWNvbG9yIG1hcmtlci1lbmQgbWFya2VyLW1pZCBtYXJrZXItc3RhcnQgb3ZlcmxpbmUtcG9zaXRpb24gb3ZlcmxpbmUtdGhpY2tuZXNzIHBhaW50LW9yZGVyIHBhbm9zZS0xIHBvaW50ZXItZXZlbnRzIHJlbmRlcmluZy1pbnRlbnQgc2hhcGUtcmVuZGVyaW5nIHN0b3AtY29sb3Igc3RvcC1vcGFjaXR5IHN0cmlrZXRocm91Z2gtcG9zaXRpb24gc3RyaWtldGhyb3VnaC10aGlja25lc3Mgc3Ryb2tlLWRhc2hhcnJheSBzdHJva2UtZGFzaG9mZnNldCBzdHJva2UtbGluZWNhcCBzdHJva2UtbGluZWpvaW4gc3Ryb2tlLW1pdGVybGltaXQgc3Ryb2tlLW9wYWNpdHkgc3Ryb2tlLXdpZHRoIHRleHQtYW5jaG9yIHRleHQtZGVjb3JhdGlvbiB0ZXh0LXJlbmRlcmluZyB1bmRlcmxpbmUtcG9zaXRpb24gdW5kZXJsaW5lLXRoaWNrbmVzcyB1bmljb2RlLWJpZGkgdW5pY29kZS1yYW5nZSB1bml0cy1wZXItZW0gdi1hbHBoYWJldGljIHYtaGFuZ2luZyB2LWlkZW9ncmFwaGljIHYtbWF0aGVtYXRpY2FsIHZlY3Rvci1lZmZlY3QgdmVydC1hZHYteSB2ZXJ0LW9yaWdpbi14IHZlcnQtb3JpZ2luLXkgd29yZC1zcGFjaW5nIHdyaXRpbmctbW9kZSB4bWxuczp4bGluayB4LWhlaWdodFwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShvYSxcbnBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLG51bGwsITEsITEpfSk7XCJ4bGluazphY3R1YXRlIHhsaW5rOmFyY3JvbGUgeGxpbms6cm9sZSB4bGluazpzaG93IHhsaW5rOnRpdGxlIHhsaW5rOnR5cGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITEsITEpfSk7W1wieG1sOmJhc2VcIixcInhtbDpsYW5nXCIsXCJ4bWw6c3BhY2VcIl0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EscGEpO0RbYl09bmV3IEIoYiwxLCExLGEsXCJodHRwOi8vd3d3LnczLm9yZy9YTUwvMTk5OC9uYW1lc3BhY2VcIiwhMSwhMSl9KTtbXCJ0YWJJbmRleFwiLFwiY3Jvc3NPcmlnaW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSwhMSl9KTtcbkQueGxpbmtIcmVmPW5ldyBCKFwieGxpbmtIcmVmXCIsMSwhMSxcInhsaW5rOmhyZWZcIixcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMCwhMSk7W1wic3JjXCIsXCJocmVmXCIsXCJhY3Rpb25cIixcImZvcm1BY3Rpb25cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtEW2FdPW5ldyBCKGEsMSwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMCwhMCl9KTtcbmZ1bmN0aW9uIHFhKGEsYixjLGQpe3ZhciBlPUQuaGFzT3duUHJvcGVydHkoYik/RFtiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KG5hKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9sYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIHJhPWFhLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVELHNhPTYwMTAzLHRhPTYwMTA2LHVhPTYwMTA3LHdhPTYwMTA4LHhhPTYwMTE0LHlhPTYwMTA5LHphPTYwMTEwLEFhPTYwMTEyLEJhPTYwMTEzLENhPTYwMTIwLERhPTYwMTE1LEVhPTYwMTE2LEZhPTYwMTIxLEdhPTYwMTI4LEhhPTYwMTI5LElhPTYwMTMwLEphPTYwMTMxO1xuaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcil7dmFyIEU9U3ltYm9sLmZvcjtzYT1FKFwicmVhY3QuZWxlbWVudFwiKTt0YT1FKFwicmVhY3QucG9ydGFsXCIpO3VhPUUoXCJyZWFjdC5mcmFnbWVudFwiKTt3YT1FKFwicmVhY3Quc3RyaWN0X21vZGVcIik7eGE9RShcInJlYWN0LnByb2ZpbGVyXCIpO3lhPUUoXCJyZWFjdC5wcm92aWRlclwiKTt6YT1FKFwicmVhY3QuY29udGV4dFwiKTtBYT1FKFwicmVhY3QuZm9yd2FyZF9yZWZcIik7QmE9RShcInJlYWN0LnN1c3BlbnNlXCIpO0NhPUUoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpO0RhPUUoXCJyZWFjdC5tZW1vXCIpO0VhPUUoXCJyZWFjdC5sYXp5XCIpO0ZhPUUoXCJyZWFjdC5ibG9ja1wiKTtFKFwicmVhY3Quc2NvcGVcIik7R2E9RShcInJlYWN0Lm9wYXF1ZS5pZFwiKTtIYT1FKFwicmVhY3QuZGVidWdfdHJhY2VfbW9kZVwiKTtJYT1FKFwicmVhY3Qub2Zmc2NyZWVuXCIpO0phPUUoXCJyZWFjdC5sZWdhY3lfaGlkZGVuXCIpfVxudmFyIEthPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBMYShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9S2EmJmFbS2FdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9dmFyIE1hO2Z1bmN0aW9uIE5hKGEpe2lmKHZvaWQgMD09PU1hKXRyeXt0aHJvdyBFcnJvcigpO31jYXRjaChjKXt2YXIgYj1jLnN0YWNrLnRyaW0oKS5tYXRjaCgvXFxuKCAqKGF0ICk/KS8pO01hPWImJmJbMV18fFwiXCJ9cmV0dXJuXCJcXG5cIitNYSthfXZhciBPYT0hMTtcbmZ1bmN0aW9uIFBhKGEsYil7aWYoIWF8fE9hKXJldHVyblwiXCI7T2E9ITA7dmFyIGM9RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U7RXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9dm9pZCAwO3RyeXtpZihiKWlmKGI9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcigpO30sT2JqZWN0LmRlZmluZVByb3BlcnR5KGIucHJvdG90eXBlLFwicHJvcHNcIix7c2V0OmZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9fSksXCJvYmplY3RcIj09PXR5cGVvZiBSZWZsZWN0JiZSZWZsZWN0LmNvbnN0cnVjdCl7dHJ5e1JlZmxlY3QuY29uc3RydWN0KGIsW10pfWNhdGNoKGspe3ZhciBkPWt9UmVmbGVjdC5jb25zdHJ1Y3QoYSxbXSxiKX1lbHNle3RyeXtiLmNhbGwoKX1jYXRjaChrKXtkPWt9YS5jYWxsKGIucHJvdG90eXBlKX1lbHNle3RyeXt0aHJvdyBFcnJvcigpO31jYXRjaChrKXtkPWt9YSgpfX1jYXRjaChrKXtpZihrJiZkJiZcInN0cmluZ1wiPT09dHlwZW9mIGsuc3RhY2spe2Zvcih2YXIgZT1rLnN0YWNrLnNwbGl0KFwiXFxuXCIpLFxuZj1kLnN0YWNrLnNwbGl0KFwiXFxuXCIpLGc9ZS5sZW5ndGgtMSxoPWYubGVuZ3RoLTE7MTw9ZyYmMDw9aCYmZVtnXSE9PWZbaF07KWgtLTtmb3IoOzE8PWcmJjA8PWg7Zy0tLGgtLSlpZihlW2ddIT09ZltoXSl7aWYoMSE9PWd8fDEhPT1oKXtkbyBpZihnLS0saC0tLDA+aHx8ZVtnXSE9PWZbaF0pcmV0dXJuXCJcXG5cIitlW2ddLnJlcGxhY2UoXCIgYXQgbmV3IFwiLFwiIGF0IFwiKTt3aGlsZSgxPD1nJiYwPD1oKX1icmVha319fWZpbmFsbHl7T2E9ITEsRXJyb3IucHJlcGFyZVN0YWNrVHJhY2U9Y31yZXR1cm4oYT1hP2EuZGlzcGxheU5hbWV8fGEubmFtZTpcIlwiKT9OYShhKTpcIlwifVxuZnVuY3Rpb24gUWEoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDU6cmV0dXJuIE5hKGEudHlwZSk7Y2FzZSAxNjpyZXR1cm4gTmEoXCJMYXp5XCIpO2Nhc2UgMTM6cmV0dXJuIE5hKFwiU3VzcGVuc2VcIik7Y2FzZSAxOTpyZXR1cm4gTmEoXCJTdXNwZW5zZUxpc3RcIik7Y2FzZSAwOmNhc2UgMjpjYXNlIDE1OnJldHVybiBhPVBhKGEudHlwZSwhMSksYTtjYXNlIDExOnJldHVybiBhPVBhKGEudHlwZS5yZW5kZXIsITEpLGE7Y2FzZSAyMjpyZXR1cm4gYT1QYShhLnR5cGUuX3JlbmRlciwhMSksYTtjYXNlIDE6cmV0dXJuIGE9UGEoYS50eXBlLCEwKSxhO2RlZmF1bHQ6cmV0dXJuXCJcIn19XG5mdW5jdGlvbiBSYShhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKXJldHVybiBhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fG51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKXJldHVybiBhO3N3aXRjaChhKXtjYXNlIHVhOnJldHVyblwiRnJhZ21lbnRcIjtjYXNlIHRhOnJldHVyblwiUG9ydGFsXCI7Y2FzZSB4YTpyZXR1cm5cIlByb2ZpbGVyXCI7Y2FzZSB3YTpyZXR1cm5cIlN0cmljdE1vZGVcIjtjYXNlIEJhOnJldHVyblwiU3VzcGVuc2VcIjtjYXNlIENhOnJldHVyblwiU3VzcGVuc2VMaXN0XCJ9aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHphOnJldHVybihhLmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuQ29uc3VtZXJcIjtjYXNlIHlhOnJldHVybihhLl9jb250ZXh0LmRpc3BsYXlOYW1lfHxcIkNvbnRleHRcIikrXCIuUHJvdmlkZXJcIjtjYXNlIEFhOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO1xucmV0dXJuIGEuZGlzcGxheU5hbWV8fChcIlwiIT09Yj9cIkZvcndhcmRSZWYoXCIrYitcIilcIjpcIkZvcndhcmRSZWZcIik7Y2FzZSBEYTpyZXR1cm4gUmEoYS50eXBlKTtjYXNlIEZhOnJldHVybiBSYShhLl9yZW5kZXIpO2Nhc2UgRWE6Yj1hLl9wYXlsb2FkO2E9YS5faW5pdDt0cnl7cmV0dXJuIFJhKGEoYikpfWNhdGNoKGMpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gU2EoYSl7c3dpdGNoKHR5cGVvZiBhKXtjYXNlIFwiYm9vbGVhblwiOmNhc2UgXCJudW1iZXJcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJ1bmRlZmluZWRcIjpyZXR1cm4gYTtkZWZhdWx0OnJldHVyblwiXCJ9fWZ1bmN0aW9uIFRhKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBVYShhKXt2YXIgYj1UYShhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gVmEoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPVVhKGEpKX1mdW5jdGlvbiBXYShhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9VGEoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1mdW5jdGlvbiBYYShhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19XG5mdW5jdGlvbiBZYShhLGIpe3ZhciBjPWIuY2hlY2tlZDtyZXR1cm4gbSh7fSxiLHtkZWZhdWx0Q2hlY2tlZDp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCx2YWx1ZTp2b2lkIDAsY2hlY2tlZDpudWxsIT1jP2M6YS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkfSl9ZnVuY3Rpb24gWmEoYSxiKXt2YXIgYz1udWxsPT1iLmRlZmF1bHRWYWx1ZT9cIlwiOmIuZGVmYXVsdFZhbHVlLGQ9bnVsbCE9Yi5jaGVja2VkP2IuY2hlY2tlZDpiLmRlZmF1bHRDaGVja2VkO2M9U2EobnVsbCE9Yi52YWx1ZT9iLnZhbHVlOmMpO2EuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbENoZWNrZWQ6ZCxpbml0aWFsVmFsdWU6Yyxjb250cm9sbGVkOlwiY2hlY2tib3hcIj09PWIudHlwZXx8XCJyYWRpb1wiPT09Yi50eXBlP251bGwhPWIuY2hlY2tlZDpudWxsIT1iLnZhbHVlfX1mdW5jdGlvbiAkYShhLGIpe2I9Yi5jaGVja2VkO251bGwhPWImJnFhKGEsXCJjaGVja2VkXCIsYiwhMSl9XG5mdW5jdGlvbiBhYihhLGIpeyRhKGEsYik7dmFyIGM9U2EoYi52YWx1ZSksZD1iLnR5cGU7aWYobnVsbCE9YylpZihcIm51bWJlclwiPT09ZCl7aWYoMD09PWMmJlwiXCI9PT1hLnZhbHVlfHxhLnZhbHVlIT1jKWEudmFsdWU9XCJcIitjfWVsc2UgYS52YWx1ZSE9PVwiXCIrYyYmKGEudmFsdWU9XCJcIitjKTtlbHNlIGlmKFwic3VibWl0XCI9PT1kfHxcInJlc2V0XCI9PT1kKXthLnJlbW92ZUF0dHJpYnV0ZShcInZhbHVlXCIpO3JldHVybn1iLmhhc093blByb3BlcnR5KFwidmFsdWVcIik/YmIoYSxiLnR5cGUsYyk6Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSYmYmIoYSxiLnR5cGUsU2EoYi5kZWZhdWx0VmFsdWUpKTtudWxsPT1iLmNoZWNrZWQmJm51bGwhPWIuZGVmYXVsdENoZWNrZWQmJihhLmRlZmF1bHRDaGVja2VkPSEhYi5kZWZhdWx0Q2hlY2tlZCl9XG5mdW5jdGlvbiBjYihhLGIsYyl7aWYoYi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpfHxiLmhhc093blByb3BlcnR5KFwiZGVmYXVsdFZhbHVlXCIpKXt2YXIgZD1iLnR5cGU7aWYoIShcInN1Ym1pdFwiIT09ZCYmXCJyZXNldFwiIT09ZHx8dm9pZCAwIT09Yi52YWx1ZSYmbnVsbCE9PWIudmFsdWUpKXJldHVybjtiPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTtjfHxiPT09YS52YWx1ZXx8KGEudmFsdWU9Yik7YS5kZWZhdWx0VmFsdWU9Yn1jPWEubmFtZTtcIlwiIT09YyYmKGEubmFtZT1cIlwiKTthLmRlZmF1bHRDaGVja2VkPSEhYS5fd3JhcHBlclN0YXRlLmluaXRpYWxDaGVja2VkO1wiXCIhPT1jJiYoYS5uYW1lPWMpfVxuZnVuY3Rpb24gYmIoYSxiLGMpe2lmKFwibnVtYmVyXCIhPT1ifHxYYShhLm93bmVyRG9jdW1lbnQpIT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9ZnVuY3Rpb24gZGIoYSl7dmFyIGI9XCJcIjthYS5DaGlsZHJlbi5mb3JFYWNoKGEsZnVuY3Rpb24oYSl7bnVsbCE9YSYmKGIrPWEpfSk7cmV0dXJuIGJ9ZnVuY3Rpb24gZWIoYSxiKXthPW0oe2NoaWxkcmVuOnZvaWQgMH0sYik7aWYoYj1kYihiLmNoaWxkcmVuKSlhLmNoaWxkcmVuPWI7cmV0dXJuIGF9XG5mdW5jdGlvbiBmYihhLGIsYyxkKXthPWEub3B0aW9ucztpZihiKXtiPXt9O2Zvcih2YXIgZT0wO2U8Yy5sZW5ndGg7ZSsrKWJbXCIkXCIrY1tlXV09ITA7Zm9yKGM9MDtjPGEubGVuZ3RoO2MrKyllPWIuaGFzT3duUHJvcGVydHkoXCIkXCIrYVtjXS52YWx1ZSksYVtjXS5zZWxlY3RlZCE9PWUmJihhW2NdLnNlbGVjdGVkPWUpLGUmJmQmJihhW2NdLmRlZmF1bHRTZWxlY3RlZD0hMCl9ZWxzZXtjPVwiXCIrU2EoYyk7Yj1udWxsO2ZvcihlPTA7ZTxhLmxlbmd0aDtlKyspe2lmKGFbZV0udmFsdWU9PT1jKXthW2VdLnNlbGVjdGVkPSEwO2QmJihhW2VdLmRlZmF1bHRTZWxlY3RlZD0hMCk7cmV0dXJufW51bGwhPT1ifHxhW2VdLmRpc2FibGVkfHwoYj1hW2VdKX1udWxsIT09YiYmKGIuc2VsZWN0ZWQ9ITApfX1cbmZ1bmN0aW9uIGdiKGEsYil7aWYobnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCl0aHJvdyBFcnJvcih5KDkxKSk7cmV0dXJuIG0oe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24gaGIoYSxiKXt2YXIgYz1iLnZhbHVlO2lmKG51bGw9PWMpe2M9Yi5jaGlsZHJlbjtiPWIuZGVmYXVsdFZhbHVlO2lmKG51bGwhPWMpe2lmKG51bGwhPWIpdGhyb3cgRXJyb3IoeSg5MikpO2lmKEFycmF5LmlzQXJyYXkoYykpe2lmKCEoMT49Yy5sZW5ndGgpKXRocm93IEVycm9yKHkoOTMpKTtjPWNbMF19Yj1jfW51bGw9PWImJihiPVwiXCIpO2M9Yn1hLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpTYShjKX19XG5mdW5jdGlvbiBpYihhLGIpe3ZhciBjPVNhKGIudmFsdWUpLGQ9U2EoYi5kZWZhdWx0VmFsdWUpO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJmEuZGVmYXVsdFZhbHVlIT09YyYmKGEuZGVmYXVsdFZhbHVlPWMpKTtudWxsIT1kJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitkKX1mdW5jdGlvbiBqYihhKXt2YXIgYj1hLnRleHRDb250ZW50O2I9PT1hLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlJiZcIlwiIT09YiYmbnVsbCE9PWImJihhLnZhbHVlPWIpfXZhciBrYj17aHRtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIixtYXRobWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCIsc3ZnOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIn07XG5mdW5jdGlvbiBsYihhKXtzd2l0Y2goYSl7Y2FzZSBcInN2Z1wiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIjtjYXNlIFwibWF0aFwiOnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiO2RlZmF1bHQ6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCJ9fWZ1bmN0aW9uIG1iKGEsYil7cmV0dXJuIG51bGw9PWF8fFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiPT09YT9sYihiKTpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI9PT1hJiZcImZvcmVpZ25PYmplY3RcIj09PWI/XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI6YX1cbnZhciBuYixvYj1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1rYi5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtuYj1uYnx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtuYi5pbm5lckhUTUw9XCI8c3ZnPlwiK2IudmFsdWVPZigpLnRvU3RyaW5nKCkrXCI8L3N2Zz5cIjtmb3IoYj1uYi5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBwYihhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIHFiPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRBcmVhOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxcbmZsb29kT3BhY2l0eTohMCxzdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LHJiPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhxYikuZm9yRWFjaChmdW5jdGlvbihhKXtyYi5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO3FiW2JdPXFiW2FdfSl9KTtmdW5jdGlvbiBzYihhLGIsYyl7cmV0dXJuIG51bGw9PWJ8fFwiYm9vbGVhblwiPT09dHlwZW9mIGJ8fFwiXCI9PT1iP1wiXCI6Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBifHwwPT09Ynx8cWIuaGFzT3duUHJvcGVydHkoYSkmJnFiW2FdPyhcIlwiK2IpLnRyaW0oKTpiK1wicHhcIn1cbmZ1bmN0aW9uIHRiKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKSxlPXNiKGMsYltjXSxkKTtcImZsb2F0XCI9PT1jJiYoYz1cImNzc0Zsb2F0XCIpO2Q/YS5zZXRQcm9wZXJ0eShjLGUpOmFbY109ZX19dmFyIHViPW0oe21lbnVpdGVtOiEwfSx7YXJlYTohMCxiYXNlOiEwLGJyOiEwLGNvbDohMCxlbWJlZDohMCxocjohMCxpbWc6ITAsaW5wdXQ6ITAsa2V5Z2VuOiEwLGxpbms6ITAsbWV0YTohMCxwYXJhbTohMCxzb3VyY2U6ITAsdHJhY2s6ITAsd2JyOiEwfSk7XG5mdW5jdGlvbiB2YihhLGIpe2lmKGIpe2lmKHViW2FdJiYobnVsbCE9Yi5jaGlsZHJlbnx8bnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSgxMzcsYSkpO2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpe2lmKG51bGwhPWIuY2hpbGRyZW4pdGhyb3cgRXJyb3IoeSg2MCkpO2lmKCEoXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTCkpdGhyb3cgRXJyb3IoeSg2MSkpO31pZihudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGUpdGhyb3cgRXJyb3IoeSg2MikpO319XG5mdW5jdGlvbiB3YihhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19ZnVuY3Rpb24geGIoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfXZhciB5Yj1udWxsLHpiPW51bGwsQWI9bnVsbDtcbmZ1bmN0aW9uIEJiKGEpe2lmKGE9Q2IoYSkpe2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiB5Yil0aHJvdyBFcnJvcih5KDI4MCkpO3ZhciBiPWEuc3RhdGVOb2RlO2ImJihiPURiKGIpLHliKGEuc3RhdGVOb2RlLGEudHlwZSxiKSl9fWZ1bmN0aW9uIEViKGEpe3piP0FiP0FiLnB1c2goYSk6QWI9W2FdOnpiPWF9ZnVuY3Rpb24gRmIoKXtpZih6Yil7dmFyIGE9emIsYj1BYjtBYj16Yj1udWxsO0JiKGEpO2lmKGIpZm9yKGE9MDthPGIubGVuZ3RoO2ErKylCYihiW2FdKX19ZnVuY3Rpb24gR2IoYSxiKXtyZXR1cm4gYShiKX1mdW5jdGlvbiBIYihhLGIsYyxkLGUpe3JldHVybiBhKGIsYyxkLGUpfWZ1bmN0aW9uIEliKCl7fXZhciBKYj1HYixLYj0hMSxMYj0hMTtmdW5jdGlvbiBNYigpe2lmKG51bGwhPT16Ynx8bnVsbCE9PUFiKUliKCksRmIoKX1cbmZ1bmN0aW9uIE5iKGEsYixjKXtpZihMYilyZXR1cm4gYShiLGMpO0xiPSEwO3RyeXtyZXR1cm4gSmIoYSxiLGMpfWZpbmFsbHl7TGI9ITEsTWIoKX19XG5mdW5jdGlvbiBPYihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2lmKG51bGw9PT1jKXJldHVybiBudWxsO3ZhciBkPURiKGMpO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2M9ZFtiXTthOnN3aXRjaChiKXtjYXNlIFwib25DbGlja1wiOmNhc2UgXCJvbkNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbkRvdWJsZUNsaWNrXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VEb3duXCI6Y2FzZSBcIm9uTW91c2VEb3duQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlTW92ZVwiOmNhc2UgXCJvbk1vdXNlTW92ZUNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZVVwXCI6Y2FzZSBcIm9uTW91c2VVcENhcHR1cmVcIjpjYXNlIFwib25Nb3VzZUVudGVyXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtpZihjJiZcImZ1bmN0aW9uXCIhPT1cbnR5cGVvZiBjKXRocm93IEVycm9yKHkoMjMxLGIsdHlwZW9mIGMpKTtyZXR1cm4gY312YXIgUGI9ITE7aWYoZmEpdHJ5e3ZhciBRYj17fTtPYmplY3QuZGVmaW5lUHJvcGVydHkoUWIsXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe1BiPSEwfX0pO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLFFiLFFiKTt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYil9Y2F0Y2goYSl7UGI9ITF9ZnVuY3Rpb24gUmIoYSxiLGMsZCxlLGYsZyxoLGspe3ZhciBsPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywzKTt0cnl7Yi5hcHBseShjLGwpfWNhdGNoKG4pe3RoaXMub25FcnJvcihuKX19dmFyIFNiPSExLFRiPW51bGwsVWI9ITEsVmI9bnVsbCxXYj17b25FcnJvcjpmdW5jdGlvbihhKXtTYj0hMDtUYj1hfX07ZnVuY3Rpb24gWGIoYSxiLGMsZCxlLGYsZyxoLGspe1NiPSExO1RiPW51bGw7UmIuYXBwbHkoV2IsYXJndW1lbnRzKX1cbmZ1bmN0aW9uIFliKGEsYixjLGQsZSxmLGcsaCxrKXtYYi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoU2Ipe2lmKFNiKXt2YXIgbD1UYjtTYj0hMTtUYj1udWxsfWVsc2UgdGhyb3cgRXJyb3IoeSgxOTgpKTtVYnx8KFViPSEwLFZiPWwpfX1mdW5jdGlvbiBaYihhKXt2YXIgYj1hLGM9YTtpZihhLmFsdGVybmF0ZSlmb3IoO2IucmV0dXJuOyliPWIucmV0dXJuO2Vsc2V7YT1iO2RvIGI9YSwwIT09KGIuZmxhZ3MmMTAyNikmJihjPWIucmV0dXJuKSxhPWIucmV0dXJuO3doaWxlKGEpfXJldHVybiAzPT09Yi50YWc/YzpudWxsfWZ1bmN0aW9uICRiKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09YiYmKGE9YS5hbHRlcm5hdGUsbnVsbCE9PWEmJihiPWEubWVtb2l6ZWRTdGF0ZSkpO2lmKG51bGwhPT1iKXJldHVybiBiLmRlaHlkcmF0ZWR9cmV0dXJuIG51bGx9ZnVuY3Rpb24gYWMoYSl7aWYoWmIoYSkhPT1hKXRocm93IEVycm9yKHkoMTg4KSk7fVxuZnVuY3Rpb24gYmMoYSl7dmFyIGI9YS5hbHRlcm5hdGU7aWYoIWIpe2I9WmIoYSk7aWYobnVsbD09PWIpdGhyb3cgRXJyb3IoeSgxODgpKTtyZXR1cm4gYiE9PWE/bnVsbDphfWZvcih2YXIgYz1hLGQ9Yjs7KXt2YXIgZT1jLnJldHVybjtpZihudWxsPT09ZSlicmVhazt2YXIgZj1lLmFsdGVybmF0ZTtpZihudWxsPT09Zil7ZD1lLnJldHVybjtpZihudWxsIT09ZCl7Yz1kO2NvbnRpbnVlfWJyZWFrfWlmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IoZj1lLmNoaWxkO2Y7KXtpZihmPT09YylyZXR1cm4gYWMoZSksYTtpZihmPT09ZClyZXR1cm4gYWMoZSksYjtmPWYuc2libGluZ310aHJvdyBFcnJvcih5KDE4OCkpO31pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtmb3IodmFyIGc9ITEsaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1cbmMpe2c9ITA7Yz1mO2Q9ZTticmVha31pZihoPT09ZCl7Zz0hMDtkPWY7Yz1lO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXRocm93IEVycm9yKHkoMTg5KSk7fX1pZihjLmFsdGVybmF0ZSE9PWQpdGhyb3cgRXJyb3IoeSgxOTApKTt9aWYoMyE9PWMudGFnKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBjYyhhKXthPWJjKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gZGMoYSxiKXtmb3IodmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWI7KXtpZihiPT09YXx8Yj09PWMpcmV0dXJuITA7Yj1iLnJldHVybn1yZXR1cm4hMX12YXIgZWMsZmMsZ2MsaGMsaWM9ITEsamM9W10sa2M9bnVsbCxsYz1udWxsLG1jPW51bGwsbmM9bmV3IE1hcCxvYz1uZXcgTWFwLHBjPVtdLHFjPVwibW91c2Vkb3duIG1vdXNldXAgdG91Y2hjYW5jZWwgdG91Y2hlbmQgdG91Y2hzdGFydCBhdXhjbGljayBkYmxjbGljayBwb2ludGVyY2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJ1cCBkcmFnZW5kIGRyYWdzdGFydCBkcm9wIGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9uc3RhcnQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBpbnB1dCB0ZXh0SW5wdXQgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKTtcbmZ1bmN0aW9uIHJjKGEsYixjLGQsZSl7cmV0dXJue2Jsb2NrZWRPbjphLGRvbUV2ZW50TmFtZTpiLGV2ZW50U3lzdGVtRmxhZ3M6Y3wxNixuYXRpdmVFdmVudDplLHRhcmdldENvbnRhaW5lcnM6W2RdfX1mdW5jdGlvbiBzYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmNhc2UgXCJmb2N1c291dFwiOmtjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpsYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjptYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6bmMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6b2MuZGVsZXRlKGIucG9pbnRlcklkKX19XG5mdW5jdGlvbiB0YyhhLGIsYyxkLGUsZil7aWYobnVsbD09PWF8fGEubmF0aXZlRXZlbnQhPT1mKXJldHVybiBhPXJjKGIsYyxkLGUsZiksbnVsbCE9PWImJihiPUNiKGIpLG51bGwhPT1iJiZmYyhiKSksYTthLmV2ZW50U3lzdGVtRmxhZ3N8PWQ7Yj1hLnRhcmdldENvbnRhaW5lcnM7bnVsbCE9PWUmJi0xPT09Yi5pbmRleE9mKGUpJiZiLnB1c2goZSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB1YyhhLGIsYyxkLGUpe3N3aXRjaChiKXtjYXNlIFwiZm9jdXNpblwiOnJldHVybiBrYz10YyhrYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJkcmFnZW50ZXJcIjpyZXR1cm4gbGM9dGMobGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwibW91c2VvdmVyXCI6cmV0dXJuIG1jPXRjKG1jLGEsYixjLGQsZSksITA7Y2FzZSBcInBvaW50ZXJvdmVyXCI6dmFyIGY9ZS5wb2ludGVySWQ7bmMuc2V0KGYsdGMobmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpO3JldHVybiEwO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOnJldHVybiBmPWUucG9pbnRlcklkLG9jLnNldChmLHRjKG9jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKSwhMH1yZXR1cm4hMX1cbmZ1bmN0aW9uIHZjKGEpe3ZhciBiPXdjKGEudGFyZ2V0KTtpZihudWxsIT09Yil7dmFyIGM9WmIoYik7aWYobnVsbCE9PWMpaWYoYj1jLnRhZywxMz09PWIpe2lmKGI9JGIoYyksbnVsbCE9PWIpe2EuYmxvY2tlZE9uPWI7aGMoYS5sYW5lUHJpb3JpdHksZnVuY3Rpb24oKXtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7Z2MoYyl9KX0pO3JldHVybn19ZWxzZSBpZigzPT09YiYmYy5zdGF0ZU5vZGUuaHlkcmF0ZSl7YS5ibG9ja2VkT249Mz09PWMudGFnP2Muc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtyZXR1cm59fWEuYmxvY2tlZE9uPW51bGx9XG5mdW5jdGlvbiB4YyhhKXtpZihudWxsIT09YS5ibG9ja2VkT24pcmV0dXJuITE7Zm9yKHZhciBiPWEudGFyZ2V0Q29udGFpbmVyczswPGIubGVuZ3RoOyl7dmFyIGM9eWMoYS5kb21FdmVudE5hbWUsYS5ldmVudFN5c3RlbUZsYWdzLGJbMF0sYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWMpcmV0dXJuIGI9Q2IoYyksbnVsbCE9PWImJmZjKGIpLGEuYmxvY2tlZE9uPWMsITE7Yi5zaGlmdCgpfXJldHVybiEwfWZ1bmN0aW9uIHpjKGEsYixjKXt4YyhhKSYmYy5kZWxldGUoYil9XG5mdW5jdGlvbiBBYygpe2ZvcihpYz0hMTswPGpjLmxlbmd0aDspe3ZhciBhPWpjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1DYihhLmJsb2NrZWRPbik7bnVsbCE9PWEmJmVjKGEpO2JyZWFrfWZvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXthLmJsb2NrZWRPbj1jO2JyZWFrfWIuc2hpZnQoKX1udWxsPT09YS5ibG9ja2VkT24mJmpjLnNoaWZ0KCl9bnVsbCE9PWtjJiZ4YyhrYykmJihrYz1udWxsKTtudWxsIT09bGMmJnhjKGxjKSYmKGxjPW51bGwpO251bGwhPT1tYyYmeGMobWMpJiYobWM9bnVsbCk7bmMuZm9yRWFjaCh6Yyk7b2MuZm9yRWFjaCh6Yyl9XG5mdW5jdGlvbiBCYyhhLGIpe2EuYmxvY2tlZE9uPT09YiYmKGEuYmxvY2tlZE9uPW51bGwsaWN8fChpYz0hMCxyLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2soci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxBYykpKX1cbmZ1bmN0aW9uIENjKGEpe2Z1bmN0aW9uIGIoYil7cmV0dXJuIEJjKGIsYSl9aWYoMDxqYy5sZW5ndGgpe0JjKGpjWzBdLGEpO2Zvcih2YXIgYz0xO2M8amMubGVuZ3RoO2MrKyl7dmFyIGQ9amNbY107ZC5ibG9ja2VkT249PT1hJiYoZC5ibG9ja2VkT249bnVsbCl9fW51bGwhPT1rYyYmQmMoa2MsYSk7bnVsbCE9PWxjJiZCYyhsYyxhKTtudWxsIT09bWMmJkJjKG1jLGEpO25jLmZvckVhY2goYik7b2MuZm9yRWFjaChiKTtmb3IoYz0wO2M8cGMubGVuZ3RoO2MrKylkPXBjW2NdLGQuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpO2Zvcig7MDxwYy5sZW5ndGgmJihjPXBjWzBdLG51bGw9PT1jLmJsb2NrZWRPbik7KXZjKGMpLG51bGw9PT1jLmJsb2NrZWRPbiYmcGMuc2hpZnQoKX1cbmZ1bmN0aW9uIERjKGEsYil7dmFyIGM9e307Y1thLnRvTG93ZXJDYXNlKCldPWIudG9Mb3dlckNhc2UoKTtjW1wiV2Via2l0XCIrYV09XCJ3ZWJraXRcIitiO2NbXCJNb3pcIithXT1cIm1velwiK2I7cmV0dXJuIGN9dmFyIEVjPXthbmltYXRpb25lbmQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkVuZFwiKSxhbmltYXRpb25pdGVyYXRpb246RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvbkl0ZXJhdGlvblwiKSxhbmltYXRpb25zdGFydDpEYyhcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uU3RhcnRcIiksdHJhbnNpdGlvbmVuZDpEYyhcIlRyYW5zaXRpb25cIixcIlRyYW5zaXRpb25FbmRcIil9LEZjPXt9LEdjPXt9O1xuZmEmJihHYz1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLnN0eWxlLFwiQW5pbWF0aW9uRXZlbnRcImluIHdpbmRvd3x8KGRlbGV0ZSBFYy5hbmltYXRpb25lbmQuYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25pdGVyYXRpb24uYW5pbWF0aW9uLGRlbGV0ZSBFYy5hbmltYXRpb25zdGFydC5hbmltYXRpb24pLFwiVHJhbnNpdGlvbkV2ZW50XCJpbiB3aW5kb3d8fGRlbGV0ZSBFYy50cmFuc2l0aW9uZW5kLnRyYW5zaXRpb24pO2Z1bmN0aW9uIEhjKGEpe2lmKEZjW2FdKXJldHVybiBGY1thXTtpZighRWNbYV0pcmV0dXJuIGE7dmFyIGI9RWNbYV0sYztmb3IoYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykmJmMgaW4gR2MpcmV0dXJuIEZjW2FdPWJbY107cmV0dXJuIGF9XG52YXIgSWM9SGMoXCJhbmltYXRpb25lbmRcIiksSmM9SGMoXCJhbmltYXRpb25pdGVyYXRpb25cIiksS2M9SGMoXCJhbmltYXRpb25zdGFydFwiKSxMYz1IYyhcInRyYW5zaXRpb25lbmRcIiksTWM9bmV3IE1hcCxOYz1uZXcgTWFwLE9jPVtcImFib3J0XCIsXCJhYm9ydFwiLEljLFwiYW5pbWF0aW9uRW5kXCIsSmMsXCJhbmltYXRpb25JdGVyYXRpb25cIixLYyxcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcblwibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIixcInBsYXlpbmdcIixcInBsYXlpbmdcIixcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiLFwic2Vla2luZ1wiLFwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLExjLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBQYyhhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXTtlPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO05jLnNldChkLGIpO01jLnNldChkLGUpO2RhKGUsW2RdKX19dmFyIFFjPXIudW5zdGFibGVfbm93O1FjKCk7dmFyIEY9ODtcbmZ1bmN0aW9uIFJjKGEpe2lmKDAhPT0oMSZhKSlyZXR1cm4gRj0xNSwxO2lmKDAhPT0oMiZhKSlyZXR1cm4gRj0xNCwyO2lmKDAhPT0oNCZhKSlyZXR1cm4gRj0xMyw0O3ZhciBiPTI0JmE7aWYoMCE9PWIpcmV0dXJuIEY9MTIsYjtpZigwIT09KGEmMzIpKXJldHVybiBGPTExLDMyO2I9MTkyJmE7aWYoMCE9PWIpcmV0dXJuIEY9MTAsYjtpZigwIT09KGEmMjU2KSlyZXR1cm4gRj05LDI1NjtiPTM1ODQmYTtpZigwIT09YilyZXR1cm4gRj04LGI7aWYoMCE9PShhJjQwOTYpKXJldHVybiBGPTcsNDA5NjtiPTQxODYxMTImYTtpZigwIT09YilyZXR1cm4gRj02LGI7Yj02MjkxNDU2MCZhO2lmKDAhPT1iKXJldHVybiBGPTUsYjtpZihhJjY3MTA4ODY0KXJldHVybiBGPTQsNjcxMDg4NjQ7aWYoMCE9PShhJjEzNDIxNzcyOCkpcmV0dXJuIEY9MywxMzQyMTc3Mjg7Yj04MDUzMDYzNjgmYTtpZigwIT09YilyZXR1cm4gRj0yLGI7aWYoMCE9PSgxMDczNzQxODI0JmEpKXJldHVybiBGPTEsMTA3Mzc0MTgyNDtcbkY9ODtyZXR1cm4gYX1mdW5jdGlvbiBTYyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gMTU7Y2FzZSA5ODpyZXR1cm4gMTA7Y2FzZSA5NzpjYXNlIDk2OnJldHVybiA4O2Nhc2UgOTU6cmV0dXJuIDI7ZGVmYXVsdDpyZXR1cm4gMH19ZnVuY3Rpb24gVGMoYSl7c3dpdGNoKGEpe2Nhc2UgMTU6Y2FzZSAxNDpyZXR1cm4gOTk7Y2FzZSAxMzpjYXNlIDEyOmNhc2UgMTE6Y2FzZSAxMDpyZXR1cm4gOTg7Y2FzZSA5OmNhc2UgODpjYXNlIDc6Y2FzZSA2OmNhc2UgNDpjYXNlIDU6cmV0dXJuIDk3O2Nhc2UgMzpjYXNlIDI6Y2FzZSAxOnJldHVybiA5NTtjYXNlIDA6cmV0dXJuIDkwO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzNTgsYSkpO319XG5mdW5jdGlvbiBVYyhhLGIpe3ZhciBjPWEucGVuZGluZ0xhbmVzO2lmKDA9PT1jKXJldHVybiBGPTA7dmFyIGQ9MCxlPTAsZj1hLmV4cGlyZWRMYW5lcyxnPWEuc3VzcGVuZGVkTGFuZXMsaD1hLnBpbmdlZExhbmVzO2lmKDAhPT1mKWQ9ZixlPUY9MTU7ZWxzZSBpZihmPWMmMTM0MjE3NzI3LDAhPT1mKXt2YXIgaz1mJn5nOzAhPT1rPyhkPVJjKGspLGU9Rik6KGgmPWYsMCE9PWgmJihkPVJjKGgpLGU9RikpfWVsc2UgZj1jJn5nLDAhPT1mPyhkPVJjKGYpLGU9Rik6MCE9PWgmJihkPVJjKGgpLGU9Rik7aWYoMD09PWQpcmV0dXJuIDA7ZD0zMS1WYyhkKTtkPWMmKCgwPmQ/MDoxPDxkKTw8MSktMTtpZigwIT09YiYmYiE9PWQmJjA9PT0oYiZnKSl7UmMoYik7aWYoZTw9RilyZXR1cm4gYjtGPWV9Yj1hLmVudGFuZ2xlZExhbmVzO2lmKDAhPT1iKWZvcihhPWEuZW50YW5nbGVtZW50cyxiJj1kOzA8YjspYz0zMS1WYyhiKSxlPTE8PGMsZHw9YVtjXSxiJj1+ZTtyZXR1cm4gZH1cbmZ1bmN0aW9uIFdjKGEpe2E9YS5wZW5kaW5nTGFuZXMmLTEwNzM3NDE4MjU7cmV0dXJuIDAhPT1hP2E6YSYxMDczNzQxODI0PzEwNzM3NDE4MjQ6MH1mdW5jdGlvbiBYYyhhLGIpe3N3aXRjaChhKXtjYXNlIDE1OnJldHVybiAxO2Nhc2UgMTQ6cmV0dXJuIDI7Y2FzZSAxMjpyZXR1cm4gYT1ZYygyNCZ+YiksMD09PWE/WGMoMTAsYik6YTtjYXNlIDEwOnJldHVybiBhPVljKDE5MiZ+YiksMD09PWE/WGMoOCxiKTphO2Nhc2UgODpyZXR1cm4gYT1ZYygzNTg0Jn5iKSwwPT09YSYmKGE9WWMoNDE4NjExMiZ+YiksMD09PWEmJihhPTUxMikpLGE7Y2FzZSAyOnJldHVybiBiPVljKDgwNTMwNjM2OCZ+YiksMD09PWImJihiPTI2ODQzNTQ1NiksYn10aHJvdyBFcnJvcih5KDM1OCxhKSk7fWZ1bmN0aW9uIFljKGEpe3JldHVybiBhJi1hfWZ1bmN0aW9uIFpjKGEpe2Zvcih2YXIgYj1bXSxjPTA7MzE+YztjKyspYi5wdXNoKGEpO3JldHVybiBifVxuZnVuY3Rpb24gJGMoYSxiLGMpe2EucGVuZGluZ0xhbmVzfD1iO3ZhciBkPWItMTthLnN1c3BlbmRlZExhbmVzJj1kO2EucGluZ2VkTGFuZXMmPWQ7YT1hLmV2ZW50VGltZXM7Yj0zMS1WYyhiKTthW2JdPWN9dmFyIFZjPU1hdGguY2x6MzI/TWF0aC5jbHozMjphZCxiZD1NYXRoLmxvZyxjZD1NYXRoLkxOMjtmdW5jdGlvbiBhZChhKXtyZXR1cm4gMD09PWE/MzI6MzEtKGJkKGEpL2NkfDApfDB9dmFyIGRkPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksZWQ9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksZmQ9ITA7ZnVuY3Rpb24gZ2QoYSxiLGMsZCl7S2J8fEliKCk7dmFyIGU9aGQsZj1LYjtLYj0hMDt0cnl7SGIoZSxhLGIsYyxkKX1maW5hbGx5eyhLYj1mKXx8TWIoKX19ZnVuY3Rpb24gaWQoYSxiLGMsZCl7ZWQoZGQsaGQuYmluZChudWxsLGEsYixjLGQpKX1cbmZ1bmN0aW9uIGhkKGEsYixjLGQpe2lmKGZkKXt2YXIgZTtpZigoZT0wPT09KGImNCkpJiYwPGpjLmxlbmd0aCYmLTE8cWMuaW5kZXhPZihhKSlhPXJjKG51bGwsYSxiLGMsZCksamMucHVzaChhKTtlbHNle3ZhciBmPXljKGEsYixjLGQpO2lmKG51bGw9PT1mKWUmJnNjKGEsZCk7ZWxzZXtpZihlKXtpZigtMTxxYy5pbmRleE9mKGEpKXthPXJjKGYsYSxiLGMsZCk7amMucHVzaChhKTtyZXR1cm59aWYodWMoZixhLGIsYyxkKSlyZXR1cm47c2MoYSxkKX1qZChhLGIsZCxudWxsLGMpfX19fVxuZnVuY3Rpb24geWMoYSxiLGMsZCl7dmFyIGU9eGIoZCk7ZT13YyhlKTtpZihudWxsIT09ZSl7dmFyIGY9WmIoZSk7aWYobnVsbD09PWYpZT1udWxsO2Vsc2V7dmFyIGc9Zi50YWc7aWYoMTM9PT1nKXtlPSRiKGYpO2lmKG51bGwhPT1lKXJldHVybiBlO2U9bnVsbH1lbHNlIGlmKDM9PT1nKXtpZihmLnN0YXRlTm9kZS5oeWRyYXRlKXJldHVybiAzPT09Zi50YWc/Zi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbzpudWxsO2U9bnVsbH1lbHNlIGYhPT1lJiYoZT1udWxsKX19amQoYSxiLGQsZSxjKTtyZXR1cm4gbnVsbH12YXIga2Q9bnVsbCxsZD1udWxsLG1kPW51bGw7XG5mdW5jdGlvbiBuZCgpe2lmKG1kKXJldHVybiBtZDt2YXIgYSxiPWxkLGM9Yi5sZW5ndGgsZCxlPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGY9ZS5sZW5ndGg7Zm9yKGE9MDthPGMmJmJbYV09PT1lW2FdO2ErKyk7dmFyIGc9Yy1hO2ZvcihkPTE7ZDw9ZyYmYltjLWRdPT09ZVtmLWRdO2QrKyk7cmV0dXJuIG1kPWUuc2xpY2UoYSwxPGQ/MS1kOnZvaWQgMCl9ZnVuY3Rpb24gb2QoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9ZnVuY3Rpb24gcGQoKXtyZXR1cm4hMH1mdW5jdGlvbiBxZCgpe3JldHVybiExfVxuZnVuY3Rpb24gcmQoYSl7ZnVuY3Rpb24gYihiLGQsZSxmLGcpe3RoaXMuX3JlYWN0TmFtZT1iO3RoaXMuX3RhcmdldEluc3Q9ZTt0aGlzLnR5cGU9ZDt0aGlzLm5hdGl2ZUV2ZW50PWY7dGhpcy50YXJnZXQ9Zzt0aGlzLmN1cnJlbnRUYXJnZXQ9bnVsbDtmb3IodmFyIGMgaW4gYSlhLmhhc093blByb3BlcnR5KGMpJiYoYj1hW2NdLHRoaXNbY109Yj9iKGYpOmZbY10pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1mLmRlZmF1bHRQcmV2ZW50ZWQ/Zi5kZWZhdWx0UHJldmVudGVkOiExPT09Zi5yZXR1cm5WYWx1ZSk/cGQ6cWQ7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1xZDtyZXR1cm4gdGhpc31tKGIucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiZcbihhLnJldHVyblZhbHVlPSExKSx0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1wZCl9LHN0b3BQcm9wYWdhdGlvbjpmdW5jdGlvbigpe3ZhciBhPXRoaXMubmF0aXZlRXZlbnQ7YSYmKGEuc3RvcFByb3BhZ2F0aW9uP2Euc3RvcFByb3BhZ2F0aW9uKCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5jYW5jZWxCdWJibGUmJihhLmNhbmNlbEJ1YmJsZT0hMCksdGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD1wZCl9LHBlcnNpc3Q6ZnVuY3Rpb24oKXt9LGlzUGVyc2lzdGVudDpwZH0pO3JldHVybiBifVxudmFyIHNkPXtldmVudFBoYXNlOjAsYnViYmxlczowLGNhbmNlbGFibGU6MCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOjAsaXNUcnVzdGVkOjB9LHRkPXJkKHNkKSx1ZD1tKHt9LHNkLHt2aWV3OjAsZGV0YWlsOjB9KSx2ZD1yZCh1ZCksd2QseGQseWQsQWQ9bSh7fSx1ZCx7c2NyZWVuWDowLHNjcmVlblk6MCxjbGllbnRYOjAsY2xpZW50WTowLHBhZ2VYOjAscGFnZVk6MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxidXR0b246MCxidXR0b25zOjAscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gdm9pZCAwPT09YS5yZWxhdGVkVGFyZ2V0P2EuZnJvbUVsZW1lbnQ9PT1hLnNyY0VsZW1lbnQ/YS50b0VsZW1lbnQ6YS5mcm9tRWxlbWVudDphLnJlbGF0ZWRUYXJnZXR9LG1vdmVtZW50WDpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WFwiaW5cbmEpcmV0dXJuIGEubW92ZW1lbnRYO2EhPT15ZCYmKHlkJiZcIm1vdXNlbW92ZVwiPT09YS50eXBlPyh3ZD1hLnNjcmVlblgteWQuc2NyZWVuWCx4ZD1hLnNjcmVlblkteWQuc2NyZWVuWSk6eGQ9d2Q9MCx5ZD1hKTtyZXR1cm4gd2R9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtyZXR1cm5cIm1vdmVtZW50WVwiaW4gYT9hLm1vdmVtZW50WTp4ZH19KSxCZD1yZChBZCksQ2Q9bSh7fSxBZCx7ZGF0YVRyYW5zZmVyOjB9KSxEZD1yZChDZCksRWQ9bSh7fSx1ZCx7cmVsYXRlZFRhcmdldDowfSksRmQ9cmQoRWQpLEdkPW0oe30sc2Qse2FuaW1hdGlvbk5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLEhkPXJkKEdkKSxJZD1tKHt9LHNkLHtjbGlwYm9hcmREYXRhOmZ1bmN0aW9uKGEpe3JldHVyblwiY2xpcGJvYXJkRGF0YVwiaW4gYT9hLmNsaXBib2FyZERhdGE6d2luZG93LmNsaXBib2FyZERhdGF9fSksSmQ9cmQoSWQpLEtkPW0oe30sc2Qse2RhdGE6MH0pLExkPXJkKEtkKSxNZD17RXNjOlwiRXNjYXBlXCIsXG5TcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxOZD17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIiwxMTY6XCJGNVwiLDExNzpcIkY2XCIsMTE4OlwiRjdcIixcbjExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0sT2Q9e0FsdDpcImFsdEtleVwiLENvbnRyb2w6XCJjdHJsS2V5XCIsTWV0YTpcIm1ldGFLZXlcIixTaGlmdDpcInNoaWZ0S2V5XCJ9O2Z1bmN0aW9uIFBkKGEpe3ZhciBiPXRoaXMubmF0aXZlRXZlbnQ7cmV0dXJuIGIuZ2V0TW9kaWZpZXJTdGF0ZT9iLmdldE1vZGlmaWVyU3RhdGUoYSk6KGE9T2RbYV0pPyEhYlthXTohMX1mdW5jdGlvbiB6ZCgpe3JldHVybiBQZH1cbnZhciBRZD1tKHt9LHVkLHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPU1kW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9kKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9OZFthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGNvZGU6MCxsb2NhdGlvbjowLGN0cmxLZXk6MCxzaGlmdEtleTowLGFsdEtleTowLG1ldGFLZXk6MCxyZXBlYXQ6MCxsb2NhbGU6MCxnZXRNb2RpZmllclN0YXRlOnpkLGNoYXJDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9vZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PVxuYS50eXBlP29kKGEpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9fSksUmQ9cmQoUWQpLFNkPW0oe30sQWQse3BvaW50ZXJJZDowLHdpZHRoOjAsaGVpZ2h0OjAscHJlc3N1cmU6MCx0YW5nZW50aWFsUHJlc3N1cmU6MCx0aWx0WDowLHRpbHRZOjAsdHdpc3Q6MCxwb2ludGVyVHlwZTowLGlzUHJpbWFyeTowfSksVGQ9cmQoU2QpLFVkPW0oe30sdWQse3RvdWNoZXM6MCx0YXJnZXRUb3VjaGVzOjAsY2hhbmdlZFRvdWNoZXM6MCxhbHRLZXk6MCxtZXRhS2V5OjAsY3RybEtleTowLHNoaWZ0S2V5OjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZH0pLFZkPXJkKFVkKSxXZD1tKHt9LHNkLHtwcm9wZXJ0eU5hbWU6MCxlbGFwc2VkVGltZTowLHBzZXVkb0VsZW1lbnQ6MH0pLFhkPXJkKFdkKSxZZD1tKHt9LEFkLHtkZWx0YVg6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVhcImluIGE/YS5kZWx0YVg6XCJ3aGVlbERlbHRhWFwiaW4gYT8tYS53aGVlbERlbHRhWDowfSxcbmRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjowLGRlbHRhTW9kZTowfSksWmQ9cmQoWWQpLCRkPVs5LDEzLDI3LDMyXSxhZT1mYSYmXCJDb21wb3NpdGlvbkV2ZW50XCJpbiB3aW5kb3csYmU9bnVsbDtmYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYoYmU9ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKTt2YXIgY2U9ZmEmJlwiVGV4dEV2ZW50XCJpbiB3aW5kb3cmJiFiZSxkZT1mYSYmKCFhZXx8YmUmJjg8YmUmJjExPj1iZSksZWU9U3RyaW5nLmZyb21DaGFyQ29kZSgzMiksZmU9ITE7XG5mdW5jdGlvbiBnZShhLGIpe3N3aXRjaChhKXtjYXNlIFwia2V5dXBcIjpyZXR1cm4tMSE9PSRkLmluZGV4T2YoYi5rZXlDb2RlKTtjYXNlIFwia2V5ZG93blwiOnJldHVybiAyMjkhPT1iLmtleUNvZGU7Y2FzZSBcImtleXByZXNzXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJmb2N1c291dFwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIGhlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIGllPSExO2Z1bmN0aW9uIGplKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBoZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7ZmU9ITA7cmV0dXJuIGVlO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PWVlJiZmZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBrZShhLGIpe2lmKGllKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFhZSYmZ2UoYSxiKT8oYT1uZCgpLG1kPWxkPWtkPW51bGwsaWU9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIGRlJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciBsZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiBtZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIWxlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1mdW5jdGlvbiBuZShhLGIsYyxkKXtFYihkKTtiPW9lKGIsXCJvbkNoYW5nZVwiKTswPGIubGVuZ3RoJiYoYz1uZXcgdGQoXCJvbkNoYW5nZVwiLFwiY2hhbmdlXCIsbnVsbCxjLGQpLGEucHVzaCh7ZXZlbnQ6YyxsaXN0ZW5lcnM6Yn0pKX12YXIgcGU9bnVsbCxxZT1udWxsO2Z1bmN0aW9uIHJlKGEpe3NlKGEsMCl9ZnVuY3Rpb24gdGUoYSl7dmFyIGI9dWUoYSk7aWYoV2EoYikpcmV0dXJuIGF9XG5mdW5jdGlvbiB2ZShhLGIpe2lmKFwiY2hhbmdlXCI9PT1hKXJldHVybiBifXZhciB3ZT0hMTtpZihmYSl7dmFyIHhlO2lmKGZhKXt2YXIgeWU9XCJvbmlucHV0XCJpbiBkb2N1bWVudDtpZigheWUpe3ZhciB6ZT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3plLnNldEF0dHJpYnV0ZShcIm9uaW5wdXRcIixcInJldHVybjtcIik7eWU9XCJmdW5jdGlvblwiPT09dHlwZW9mIHplLm9uaW5wdXR9eGU9eWV9ZWxzZSB4ZT0hMTt3ZT14ZSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKX1mdW5jdGlvbiBBZSgpe3BlJiYocGUuZGV0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpLHFlPXBlPW51bGwpfWZ1bmN0aW9uIEJlKGEpe2lmKFwidmFsdWVcIj09PWEucHJvcGVydHlOYW1lJiZ0ZShxZSkpe3ZhciBiPVtdO25lKGIscWUsYSx4YihhKSk7YT1yZTtpZihLYilhKGIpO2Vsc2V7S2I9ITA7dHJ5e0diKGEsYil9ZmluYWxseXtLYj0hMSxNYigpfX19fVxuZnVuY3Rpb24gQ2UoYSxiLGMpe1wiZm9jdXNpblwiPT09YT8oQWUoKSxwZT1iLHFlPWMscGUuYXR0YWNoRXZlbnQoXCJvbnByb3BlcnR5Y2hhbmdlXCIsQmUpKTpcImZvY3Vzb3V0XCI9PT1hJiZBZSgpfWZ1bmN0aW9uIERlKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIHRlKHFlKX1mdW5jdGlvbiBFZShhLGIpe2lmKFwiY2xpY2tcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEZlKGEsYil7aWYoXCJpbnB1dFwiPT09YXx8XCJjaGFuZ2VcIj09PWEpcmV0dXJuIHRlKGIpfWZ1bmN0aW9uIEdlKGEsYil7cmV0dXJuIGE9PT1iJiYoMCE9PWF8fDEvYT09PTEvYil8fGEhPT1hJiZiIT09Yn12YXIgSGU9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6R2UsSWU9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbmZ1bmN0aW9uIEplKGEsYil7aWYoSGUoYSxiKSlyZXR1cm4hMDtpZihcIm9iamVjdFwiIT09dHlwZW9mIGF8fG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGJ8fG51bGw9PT1iKXJldHVybiExO3ZhciBjPU9iamVjdC5rZXlzKGEpLGQ9T2JqZWN0LmtleXMoYik7aWYoYy5sZW5ndGghPT1kLmxlbmd0aClyZXR1cm4hMTtmb3IoZD0wO2Q8Yy5sZW5ndGg7ZCsrKWlmKCFJZS5jYWxsKGIsY1tkXSl8fCFIZShhW2NbZF1dLGJbY1tkXV0pKXJldHVybiExO3JldHVybiEwfWZ1bmN0aW9uIEtlKGEpe2Zvcig7YSYmYS5maXJzdENoaWxkOylhPWEuZmlyc3RDaGlsZDtyZXR1cm4gYX1cbmZ1bmN0aW9uIExlKGEsYil7dmFyIGM9S2UoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9S2UoYyl9fWZ1bmN0aW9uIE1lKGEsYil7cmV0dXJuIGEmJmI/YT09PWI/ITA6YSYmMz09PWEubm9kZVR5cGU/ITE6YiYmMz09PWIubm9kZVR5cGU/TWUoYSxiLnBhcmVudE5vZGUpOlwiY29udGFpbnNcImluIGE/YS5jb250YWlucyhiKTphLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uPyEhKGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24oYikmMTYpOiExOiExfVxuZnVuY3Rpb24gTmUoKXtmb3IodmFyIGE9d2luZG93LGI9WGEoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9WGEoYS5kb2N1bWVudCl9cmV0dXJuIGJ9ZnVuY3Rpb24gT2UoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVybiBiJiYoXCJpbnB1dFwiPT09YiYmKFwidGV4dFwiPT09YS50eXBlfHxcInNlYXJjaFwiPT09YS50eXBlfHxcInRlbFwiPT09YS50eXBlfHxcInVybFwiPT09YS50eXBlfHxcInBhc3N3b3JkXCI9PT1hLnR5cGUpfHxcInRleHRhcmVhXCI9PT1ifHxcInRydWVcIj09PWEuY29udGVudEVkaXRhYmxlKX1cbnZhciBQZT1mYSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLFFlPW51bGwsUmU9bnVsbCxTZT1udWxsLFRlPSExO1xuZnVuY3Rpb24gVWUoYSxiLGMpe3ZhciBkPWMud2luZG93PT09Yz9jLmRvY3VtZW50Ojk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O1RlfHxudWxsPT1RZXx8UWUhPT1YYShkKXx8KGQ9UWUsXCJzZWxlY3Rpb25TdGFydFwiaW4gZCYmT2UoZCk/ZD17c3RhcnQ6ZC5zZWxlY3Rpb25TdGFydCxlbmQ6ZC5zZWxlY3Rpb25FbmR9OihkPShkLm93bmVyRG9jdW1lbnQmJmQub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxkPXthbmNob3JOb2RlOmQuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6ZC5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmQuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmQuZm9jdXNPZmZzZXR9KSxTZSYmSmUoU2UsZCl8fChTZT1kLGQ9b2UoUmUsXCJvblNlbGVjdFwiKSwwPGQubGVuZ3RoJiYoYj1uZXcgdGQoXCJvblNlbGVjdFwiLFwic2VsZWN0XCIsbnVsbCxiLGMpLGEucHVzaCh7ZXZlbnQ6YixsaXN0ZW5lcnM6ZH0pLGIudGFyZ2V0PVFlKSkpfVxuUGMoXCJjYW5jZWwgY2FuY2VsIGNsaWNrIGNsaWNrIGNsb3NlIGNsb3NlIGNvbnRleHRtZW51IGNvbnRleHRNZW51IGNvcHkgY29weSBjdXQgY3V0IGF1eGNsaWNrIGF1eENsaWNrIGRibGNsaWNrIGRvdWJsZUNsaWNrIGRyYWdlbmQgZHJhZ0VuZCBkcmFnc3RhcnQgZHJhZ1N0YXJ0IGRyb3AgZHJvcCBmb2N1c2luIGZvY3VzIGZvY3Vzb3V0IGJsdXIgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSxcbjApO1BjKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO1BjKE9jLDIpO2Zvcih2YXIgVmU9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLFdlPTA7V2U8VmUubGVuZ3RoO1dlKyspTmMuc2V0KFZlW1dlXSwwKTtlYShcIm9uTW91c2VFbnRlclwiLFtcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl0pO1xuZWEoXCJvbk1vdXNlTGVhdmVcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtlYShcIm9uUG9pbnRlckVudGVyXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2VhKFwib25Qb2ludGVyTGVhdmVcIixbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXSk7ZGEoXCJvbkNoYW5nZVwiLFwiY2hhbmdlIGNsaWNrIGZvY3VzaW4gZm9jdXNvdXQgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25TZWxlY3RcIixcImZvY3Vzb3V0IGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXNpbiBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkJlZm9yZUlucHV0XCIsW1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdKTtkYShcIm9uQ29tcG9zaXRpb25FbmRcIixcImNvbXBvc2l0aW9uZW5kIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtcbmRhKFwib25Db21wb3NpdGlvblN0YXJ0XCIsXCJjb21wb3NpdGlvbnN0YXJ0IGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uQ29tcG9zaXRpb25VcGRhdGVcIixcImNvbXBvc2l0aW9udXBkYXRlIGZvY3Vzb3V0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpKTt2YXIgWGU9XCJhYm9ydCBjYW5wbGF5IGNhbnBsYXl0aHJvdWdoIGR1cmF0aW9uY2hhbmdlIGVtcHRpZWQgZW5jcnlwdGVkIGVuZGVkIGVycm9yIGxvYWRlZGRhdGEgbG9hZGVkbWV0YWRhdGEgbG9hZHN0YXJ0IHBhdXNlIHBsYXkgcGxheWluZyBwcm9ncmVzcyByYXRlY2hhbmdlIHNlZWtlZCBzZWVraW5nIHN0YWxsZWQgc3VzcGVuZCB0aW1ldXBkYXRlIHZvbHVtZWNoYW5nZSB3YWl0aW5nXCIuc3BsaXQoXCIgXCIpLFllPW5ldyBTZXQoXCJjYW5jZWwgY2xvc2UgaW52YWxpZCBsb2FkIHNjcm9sbCB0b2dnbGVcIi5zcGxpdChcIiBcIikuY29uY2F0KFhlKSk7XG5mdW5jdGlvbiBaZShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9YztZYihkLGIsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gc2UoYSxiKXtiPTAhPT0oYiY0KTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXSxlPWQuZXZlbnQ7ZD1kLmxpc3RlbmVyczthOnt2YXIgZj12b2lkIDA7aWYoYilmb3IodmFyIGc9ZC5sZW5ndGgtMTswPD1nO2ctLSl7dmFyIGg9ZFtnXSxrPWguaW5zdGFuY2UsbD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfWVsc2UgZm9yKGc9MDtnPGQubGVuZ3RoO2crKyl7aD1kW2ddO2s9aC5pbnN0YW5jZTtsPWguY3VycmVudFRhcmdldDtoPWgubGlzdGVuZXI7aWYoayE9PWYmJmUuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSlicmVhayBhO1plKGUsaCxsKTtmPWt9fX1pZihVYil0aHJvdyBhPVZiLFViPSExLFZiPW51bGwsYTt9XG5mdW5jdGlvbiBHKGEsYil7dmFyIGM9JGUoYiksZD1hK1wiX19idWJibGVcIjtjLmhhcyhkKXx8KGFmKGIsYSwyLCExKSxjLmFkZChkKSl9dmFyIGJmPVwiX3JlYWN0TGlzdGVuaW5nXCIrTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc2xpY2UoMik7ZnVuY3Rpb24gY2YoYSl7YVtiZl18fChhW2JmXT0hMCxiYS5mb3JFYWNoKGZ1bmN0aW9uKGIpe1llLmhhcyhiKXx8ZGYoYiwhMSxhLG51bGwpO2RmKGIsITAsYSxudWxsKX0pKX1cbmZ1bmN0aW9uIGRmKGEsYixjLGQpe3ZhciBlPTQ8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzRdP2FyZ3VtZW50c1s0XTowLGY9YztcInNlbGVjdGlvbmNoYW5nZVwiPT09YSYmOSE9PWMubm9kZVR5cGUmJihmPWMub3duZXJEb2N1bWVudCk7aWYobnVsbCE9PWQmJiFiJiZZZS5oYXMoYSkpe2lmKFwic2Nyb2xsXCIhPT1hKXJldHVybjtlfD0yO2Y9ZH12YXIgZz0kZShmKSxoPWErXCJfX1wiKyhiP1wiY2FwdHVyZVwiOlwiYnViYmxlXCIpO2cuaGFzKGgpfHwoYiYmKGV8PTQpLGFmKGYsYSxlLGIpLGcuYWRkKGgpKX1cbmZ1bmN0aW9uIGFmKGEsYixjLGQpe3ZhciBlPU5jLmdldChiKTtzd2l0Y2godm9pZCAwPT09ZT8yOmUpe2Nhc2UgMDplPWdkO2JyZWFrO2Nhc2UgMTplPWlkO2JyZWFrO2RlZmF1bHQ6ZT1oZH1jPWUuYmluZChudWxsLGIsYyxhKTtlPXZvaWQgMDshUGJ8fFwidG91Y2hzdGFydFwiIT09YiYmXCJ0b3VjaG1vdmVcIiE9PWImJlwid2hlZWxcIiE9PWJ8fChlPSEwKTtkP3ZvaWQgMCE9PWU/YS5hZGRFdmVudExpc3RlbmVyKGIsYyx7Y2FwdHVyZTohMCxwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCEwKTp2b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse3Bhc3NpdmU6ZX0pOmEuYWRkRXZlbnRMaXN0ZW5lcihiLGMsITEpfVxuZnVuY3Rpb24gamQoYSxiLGMsZCxlKXt2YXIgZj1kO2lmKDA9PT0oYiYxKSYmMD09PShiJjIpJiZudWxsIT09ZClhOmZvcig7Oyl7aWYobnVsbD09PWQpcmV0dXJuO3ZhciBnPWQudGFnO2lmKDM9PT1nfHw0PT09Zyl7dmFyIGg9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZihoPT09ZXx8OD09PWgubm9kZVR5cGUmJmgucGFyZW50Tm9kZT09PWUpYnJlYWs7aWYoND09PWcpZm9yKGc9ZC5yZXR1cm47bnVsbCE9PWc7KXt2YXIgaz1nLnRhZztpZigzPT09a3x8ND09PWspaWYoaz1nLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLGs9PT1lfHw4PT09ay5ub2RlVHlwZSYmay5wYXJlbnROb2RlPT09ZSlyZXR1cm47Zz1nLnJldHVybn1mb3IoO251bGwhPT1oOyl7Zz13YyhoKTtpZihudWxsPT09ZylyZXR1cm47az1nLnRhZztpZig1PT09a3x8Nj09PWspe2Q9Zj1nO2NvbnRpbnVlIGF9aD1oLnBhcmVudE5vZGV9fWQ9ZC5yZXR1cm59TmIoZnVuY3Rpb24oKXt2YXIgZD1mLGU9eGIoYyksZz1bXTtcbmE6e3ZhciBoPU1jLmdldChhKTtpZih2b2lkIDAhPT1oKXt2YXIgaz10ZCx4PWE7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1vZChjKSlicmVhayBhO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6az1SZDticmVhaztjYXNlIFwiZm9jdXNpblwiOng9XCJmb2N1c1wiO2s9RmQ7YnJlYWs7Y2FzZSBcImZvY3Vzb3V0XCI6eD1cImJsdXJcIjtrPUZkO2JyZWFrO2Nhc2UgXCJiZWZvcmVibHVyXCI6Y2FzZSBcImFmdGVyYmx1clwiOms9RmQ7YnJlYWs7Y2FzZSBcImNsaWNrXCI6aWYoMj09PWMuYnV0dG9uKWJyZWFrIGE7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjprPUJkO2JyZWFrO2Nhc2UgXCJkcmFnXCI6Y2FzZSBcImRyYWdlbmRcIjpjYXNlIFwiZHJhZ2VudGVyXCI6Y2FzZSBcImRyYWdleGl0XCI6Y2FzZSBcImRyYWdsZWF2ZVwiOmNhc2UgXCJkcmFnb3ZlclwiOmNhc2UgXCJkcmFnc3RhcnRcIjpjYXNlIFwiZHJvcFwiOms9XG5EZDticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjprPVZkO2JyZWFrO2Nhc2UgSWM6Y2FzZSBKYzpjYXNlIEtjOms9SGQ7YnJlYWs7Y2FzZSBMYzprPVhkO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjprPXZkO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOms9WmQ7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6az1KZDticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjprPVRkfXZhciB3PTAhPT0oYiY0KSx6PSF3JiZcInNjcm9sbFwiPT09YSx1PXc/bnVsbCE9PWg/aCtcIkNhcHR1cmVcIjpudWxsOmg7dz1bXTtmb3IodmFyIHQ9ZCxxO251bGwhPT1cbnQ7KXtxPXQ7dmFyIHY9cS5zdGF0ZU5vZGU7NT09PXEudGFnJiZudWxsIT09diYmKHE9dixudWxsIT09dSYmKHY9T2IodCx1KSxudWxsIT12JiZ3LnB1c2goZWYodCx2LHEpKSkpO2lmKHopYnJlYWs7dD10LnJldHVybn0wPHcubGVuZ3RoJiYoaD1uZXcgayhoLHgsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6aCxsaXN0ZW5lcnM6d30pKX19aWYoMD09PShiJjcpKXthOntoPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hO2s9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGgmJjA9PT0oYiYxNikmJih4PWMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCkmJih3Yyh4KXx8eFtmZl0pKWJyZWFrIGE7aWYoa3x8aCl7aD1lLndpbmRvdz09PWU/ZTooaD1lLm93bmVyRG9jdW1lbnQpP2guZGVmYXVsdFZpZXd8fGgucGFyZW50V2luZG93OndpbmRvdztpZihrKXtpZih4PWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQsaz1kLHg9eD93Yyh4KTpudWxsLG51bGwhPT1cbngmJih6PVpiKHgpLHghPT16fHw1IT09eC50YWcmJjYhPT14LnRhZykpeD1udWxsfWVsc2Ugaz1udWxsLHg9ZDtpZihrIT09eCl7dz1CZDt2PVwib25Nb3VzZUxlYXZlXCI7dT1cIm9uTW91c2VFbnRlclwiO3Q9XCJtb3VzZVwiO2lmKFwicG9pbnRlcm91dFwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YSl3PVRkLHY9XCJvblBvaW50ZXJMZWF2ZVwiLHU9XCJvblBvaW50ZXJFbnRlclwiLHQ9XCJwb2ludGVyXCI7ej1udWxsPT1rP2g6dWUoayk7cT1udWxsPT14P2g6dWUoeCk7aD1uZXcgdyh2LHQrXCJsZWF2ZVwiLGssYyxlKTtoLnRhcmdldD16O2gucmVsYXRlZFRhcmdldD1xO3Y9bnVsbDt3YyhlKT09PWQmJih3PW5ldyB3KHUsdCtcImVudGVyXCIseCxjLGUpLHcudGFyZ2V0PXEsdy5yZWxhdGVkVGFyZ2V0PXosdj13KTt6PXY7aWYoayYmeCliOnt3PWs7dT14O3Q9MDtmb3IocT13O3E7cT1nZihxKSl0Kys7cT0wO2Zvcih2PXU7djt2PWdmKHYpKXErKztmb3IoOzA8dC1xOyl3PWdmKHcpLHQtLTtmb3IoOzA8cS10Oyl1PVxuZ2YodSkscS0tO2Zvcig7dC0tOyl7aWYodz09PXV8fG51bGwhPT11JiZ3PT09dS5hbHRlcm5hdGUpYnJlYWsgYjt3PWdmKHcpO3U9Z2YodSl9dz1udWxsfWVsc2Ugdz1udWxsO251bGwhPT1rJiZoZihnLGgsayx3LCExKTtudWxsIT09eCYmbnVsbCE9PXomJmhmKGcseix4LHcsITApfX19YTp7aD1kP3VlKGQpOndpbmRvdztrPWgubm9kZU5hbWUmJmgubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtpZihcInNlbGVjdFwiPT09a3x8XCJpbnB1dFwiPT09ayYmXCJmaWxlXCI9PT1oLnR5cGUpdmFyIEo9dmU7ZWxzZSBpZihtZShoKSlpZih3ZSlKPUZlO2Vsc2V7Sj1EZTt2YXIgSz1DZX1lbHNlKGs9aC5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWsudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWgudHlwZXx8XCJyYWRpb1wiPT09aC50eXBlKSYmKEo9RWUpO2lmKEomJihKPUooYSxkKSkpe25lKGcsSixjLGUpO2JyZWFrIGF9SyYmSyhhLGgsZCk7XCJmb2N1c291dFwiPT09YSYmKEs9aC5fd3JhcHBlclN0YXRlKSYmXG5LLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1oLnR5cGUmJmJiKGgsXCJudW1iZXJcIixoLnZhbHVlKX1LPWQ/dWUoZCk6d2luZG93O3N3aXRjaChhKXtjYXNlIFwiZm9jdXNpblwiOmlmKG1lKEspfHxcInRydWVcIj09PUsuY29udGVudEVkaXRhYmxlKVFlPUssUmU9ZCxTZT1udWxsO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOlNlPVJlPVFlPW51bGw7YnJlYWs7Y2FzZSBcIm1vdXNlZG93blwiOlRlPSEwO2JyZWFrO2Nhc2UgXCJjb250ZXh0bWVudVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcImRyYWdlbmRcIjpUZT0hMTtVZShnLGMsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdGlvbmNoYW5nZVwiOmlmKFBlKWJyZWFrO2Nhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6VWUoZyxjLGUpfXZhciBRO2lmKGFlKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBMPVwib25Db21wb3NpdGlvblN0YXJ0XCI7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpMPVwib25Db21wb3NpdGlvbkVuZFwiO2JyZWFrIGI7XG5jYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjpMPVwib25Db21wb3NpdGlvblVwZGF0ZVwiO2JyZWFrIGJ9TD12b2lkIDB9ZWxzZSBpZT9nZShhLGMpJiYoTD1cIm9uQ29tcG9zaXRpb25FbmRcIik6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihMPVwib25Db21wb3NpdGlvblN0YXJ0XCIpO0wmJihkZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihpZXx8XCJvbkNvbXBvc2l0aW9uU3RhcnRcIiE9PUw/XCJvbkNvbXBvc2l0aW9uRW5kXCI9PT1MJiZpZSYmKFE9bmQoKSk6KGtkPWUsbGQ9XCJ2YWx1ZVwiaW4ga2Q/a2QudmFsdWU6a2QudGV4dENvbnRlbnQsaWU9ITApKSxLPW9lKGQsTCksMDxLLmxlbmd0aCYmKEw9bmV3IExkKEwsYSxudWxsLGMsZSksZy5wdXNoKHtldmVudDpMLGxpc3RlbmVyczpLfSksUT9MLmRhdGE9UTooUT1oZShjKSxudWxsIT09USYmKEwuZGF0YT1RKSkpKTtpZihRPWNlP2plKGEsYyk6a2UoYSxjKSlkPW9lKGQsXCJvbkJlZm9yZUlucHV0XCIpLDA8ZC5sZW5ndGgmJihlPW5ldyBMZChcIm9uQmVmb3JlSW5wdXRcIixcblwiYmVmb3JlaW5wdXRcIixudWxsLGMsZSksZy5wdXNoKHtldmVudDplLGxpc3RlbmVyczpkfSksZS5kYXRhPVEpfXNlKGcsYil9KX1mdW5jdGlvbiBlZihhLGIsYyl7cmV0dXJue2luc3RhbmNlOmEsbGlzdGVuZXI6YixjdXJyZW50VGFyZ2V0OmN9fWZ1bmN0aW9uIG9lKGEsYil7Zm9yKHZhciBjPWIrXCJDYXB0dXJlXCIsZD1bXTtudWxsIT09YTspe3ZhciBlPWEsZj1lLnN0YXRlTm9kZTs1PT09ZS50YWcmJm51bGwhPT1mJiYoZT1mLGY9T2IoYSxjKSxudWxsIT1mJiZkLnVuc2hpZnQoZWYoYSxmLGUpKSxmPU9iKGEsYiksbnVsbCE9ZiYmZC5wdXNoKGVmKGEsZixlKSkpO2E9YS5yZXR1cm59cmV0dXJuIGR9ZnVuY3Rpb24gZ2YoYSl7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIGhmKGEsYixjLGQsZSl7Zm9yKHZhciBmPWIuX3JlYWN0TmFtZSxnPVtdO251bGwhPT1jJiZjIT09ZDspe3ZhciBoPWMsaz1oLmFsdGVybmF0ZSxsPWguc3RhdGVOb2RlO2lmKG51bGwhPT1rJiZrPT09ZClicmVhazs1PT09aC50YWcmJm51bGwhPT1sJiYoaD1sLGU/KGs9T2IoYyxmKSxudWxsIT1rJiZnLnVuc2hpZnQoZWYoYyxrLGgpKSk6ZXx8KGs9T2IoYyxmKSxudWxsIT1rJiZnLnB1c2goZWYoYyxrLGgpKSkpO2M9Yy5yZXR1cm59MCE9PWcubGVuZ3RoJiZhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmd9KX1mdW5jdGlvbiBqZigpe312YXIga2Y9bnVsbCxsZj1udWxsO2Z1bmN0aW9uIG1mKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJidXR0b25cIjpjYXNlIFwiaW5wdXRcIjpjYXNlIFwic2VsZWN0XCI6Y2FzZSBcInRleHRhcmVhXCI6cmV0dXJuISFiLmF1dG9Gb2N1c31yZXR1cm4hMX1cbmZ1bmN0aW9uIG5mKGEsYil7cmV0dXJuXCJ0ZXh0YXJlYVwiPT09YXx8XCJvcHRpb25cIj09PWF8fFwibm9zY3JpcHRcIj09PWF8fFwic3RyaW5nXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJudW1iZXJcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm9iamVjdFwiPT09dHlwZW9mIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgb2Y9XCJmdW5jdGlvblwiPT09dHlwZW9mIHNldFRpbWVvdXQ/c2V0VGltZW91dDp2b2lkIDAscGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGNsZWFyVGltZW91dD9jbGVhclRpbWVvdXQ6dm9pZCAwO2Z1bmN0aW9uIHFmKGEpezE9PT1hLm5vZGVUeXBlP2EudGV4dENvbnRlbnQ9XCJcIjo5PT09YS5ub2RlVHlwZSYmKGE9YS5ib2R5LG51bGwhPWEmJihhLnRleHRDb250ZW50PVwiXCIpKX1cbmZ1bmN0aW9uIHJmKGEpe2Zvcig7bnVsbCE9YTthPWEubmV4dFNpYmxpbmcpe3ZhciBiPWEubm9kZVR5cGU7aWYoMT09PWJ8fDM9PT1iKWJyZWFrfXJldHVybiBhfWZ1bmN0aW9uIHNmKGEpe2E9YS5wcmV2aW91c1NpYmxpbmc7Zm9yKHZhciBiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIkXCI9PT1jfHxcIiQhXCI9PT1jfHxcIiQ/XCI9PT1jKXtpZigwPT09YilyZXR1cm4gYTtiLS19ZWxzZVwiLyRcIj09PWMmJmIrK31hPWEucHJldmlvdXNTaWJsaW5nfXJldHVybiBudWxsfXZhciB0Zj0wO2Z1bmN0aW9uIHVmKGEpe3JldHVybnskJHR5cGVvZjpHYSx0b1N0cmluZzphLHZhbHVlT2Y6YX19dmFyIHZmPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLHdmPVwiX19yZWFjdEZpYmVyJFwiK3ZmLHhmPVwiX19yZWFjdFByb3BzJFwiK3ZmLGZmPVwiX19yZWFjdENvbnRhaW5lciRcIit2Zix5Zj1cIl9fcmVhY3RFdmVudHMkXCIrdmY7XG5mdW5jdGlvbiB3YyhhKXt2YXIgYj1hW3dmXTtpZihiKXJldHVybiBiO2Zvcih2YXIgYz1hLnBhcmVudE5vZGU7Yzspe2lmKGI9Y1tmZl18fGNbd2ZdKXtjPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1iLmNoaWxkfHxudWxsIT09YyYmbnVsbCE9PWMuY2hpbGQpZm9yKGE9c2YoYSk7bnVsbCE9PWE7KXtpZihjPWFbd2ZdKXJldHVybiBjO2E9c2YoYSl9cmV0dXJuIGJ9YT1jO2M9YS5wYXJlbnROb2RlfXJldHVybiBudWxsfWZ1bmN0aW9uIENiKGEpe2E9YVt3Zl18fGFbZmZdO3JldHVybiFhfHw1IT09YS50YWcmJjYhPT1hLnRhZyYmMTMhPT1hLnRhZyYmMyE9PWEudGFnP251bGw6YX1mdW5jdGlvbiB1ZShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7dGhyb3cgRXJyb3IoeSgzMykpO31mdW5jdGlvbiBEYihhKXtyZXR1cm4gYVt4Zl18fG51bGx9XG5mdW5jdGlvbiAkZShhKXt2YXIgYj1hW3lmXTt2b2lkIDA9PT1iJiYoYj1hW3lmXT1uZXcgU2V0KTtyZXR1cm4gYn12YXIgemY9W10sQWY9LTE7ZnVuY3Rpb24gQmYoYSl7cmV0dXJue2N1cnJlbnQ6YX19ZnVuY3Rpb24gSChhKXswPkFmfHwoYS5jdXJyZW50PXpmW0FmXSx6ZltBZl09bnVsbCxBZi0tKX1mdW5jdGlvbiBJKGEsYil7QWYrKzt6ZltBZl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBDZj17fSxNPUJmKENmKSxOPUJmKCExKSxEZj1DZjtcbmZ1bmN0aW9uIEVmKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gQ2Y7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gRmYoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1mdW5jdGlvbiBHZigpe0goTik7SChNKX1mdW5jdGlvbiBIZihhLGIsYyl7aWYoTS5jdXJyZW50IT09Q2YpdGhyb3cgRXJyb3IoeSgxNjgpKTtJKE0sYik7SShOLGMpfVxuZnVuY3Rpb24gSWYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih5KDEwOCxSYShiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBtKHt9LGMsZCl9ZnVuY3Rpb24gSmYoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fENmO0RmPU0uY3VycmVudDtJKE0sYSk7SShOLE4uY3VycmVudCk7cmV0dXJuITB9ZnVuY3Rpb24gS2YoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2lmKCFkKXRocm93IEVycm9yKHkoMTY5KSk7Yz8oYT1JZihhLGIsRGYpLGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ9YSxIKE4pLEgoTSksSShNLGEpKTpIKE4pO0koTixjKX1cbnZhciBMZj1udWxsLE1mPW51bGwsTmY9ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHksT2Y9ci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrLFBmPXIudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2ssUWY9ci51bnN0YWJsZV9zaG91bGRZaWVsZCxSZj1yLnVuc3RhYmxlX3JlcXVlc3RQYWludCxTZj1yLnVuc3RhYmxlX25vdyxUZj1yLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsLFVmPXIudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHksVmY9ci51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSxXZj1yLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5LFhmPXIudW5zdGFibGVfTG93UHJpb3JpdHksWWY9ci51bnN0YWJsZV9JZGxlUHJpb3JpdHksWmY9e30sJGY9dm9pZCAwIT09UmY/UmY6ZnVuY3Rpb24oKXt9LGFnPW51bGwsYmc9bnVsbCxjZz0hMSxkZz1TZigpLE89MUU0PmRnP1NmOmZ1bmN0aW9uKCl7cmV0dXJuIFNmKCktZGd9O1xuZnVuY3Rpb24gZWcoKXtzd2l0Y2goVGYoKSl7Y2FzZSBVZjpyZXR1cm4gOTk7Y2FzZSBWZjpyZXR1cm4gOTg7Y2FzZSBXZjpyZXR1cm4gOTc7Y2FzZSBYZjpyZXR1cm4gOTY7Y2FzZSBZZjpyZXR1cm4gOTU7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMzMikpO319ZnVuY3Rpb24gZmcoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIFVmO2Nhc2UgOTg6cmV0dXJuIFZmO2Nhc2UgOTc6cmV0dXJuIFdmO2Nhc2UgOTY6cmV0dXJuIFhmO2Nhc2UgOTU6cmV0dXJuIFlmO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGdnKGEsYil7YT1mZyhhKTtyZXR1cm4gTmYoYSxiKX1mdW5jdGlvbiBoZyhhLGIsYyl7YT1mZyhhKTtyZXR1cm4gT2YoYSxiLGMpfWZ1bmN0aW9uIGlnKCl7aWYobnVsbCE9PWJnKXt2YXIgYT1iZztiZz1udWxsO1BmKGEpfWpnKCl9XG5mdW5jdGlvbiBqZygpe2lmKCFjZyYmbnVsbCE9PWFnKXtjZz0hMDt2YXIgYT0wO3RyeXt2YXIgYj1hZztnZyg5OSxmdW5jdGlvbigpe2Zvcig7YTxiLmxlbmd0aDthKyspe3ZhciBjPWJbYV07ZG8gYz1jKCEwKTt3aGlsZShudWxsIT09Yyl9fSk7YWc9bnVsbH1jYXRjaChjKXt0aHJvdyBudWxsIT09YWcmJihhZz1hZy5zbGljZShhKzEpKSxPZihVZixpZyksYzt9ZmluYWxseXtjZz0hMX19fXZhciBrZz1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZztmdW5jdGlvbiBsZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW0oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKTtyZXR1cm4gYn1yZXR1cm4gYn12YXIgbWc9QmYobnVsbCksbmc9bnVsbCxvZz1udWxsLHBnPW51bGw7ZnVuY3Rpb24gcWcoKXtwZz1vZz1uZz1udWxsfVxuZnVuY3Rpb24gcmcoYSl7dmFyIGI9bWcuY3VycmVudDtIKG1nKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHNnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKChhLmNoaWxkTGFuZXMmYik9PT1iKWlmKG51bGw9PT1jfHwoYy5jaGlsZExhbmVzJmIpPT09YilicmVhaztlbHNlIGMuY2hpbGRMYW5lc3w9YjtlbHNlIGEuY2hpbGRMYW5lc3w9YixudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9Yik7YT1hLnJldHVybn19ZnVuY3Rpb24gdGcoYSxiKXtuZz1hO3BnPW9nPW51bGw7YT1hLmRlcGVuZGVuY2llcztudWxsIT09YSYmbnVsbCE9PWEuZmlyc3RDb250ZXh0JiYoMCE9PShhLmxhbmVzJmIpJiYodWc9ITApLGEuZmlyc3RDb250ZXh0PW51bGwpfVxuZnVuY3Rpb24gdmcoYSxiKXtpZihwZyE9PWEmJiExIT09YiYmMCE9PWIpe2lmKFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MTA3Mzc0MTgyMz09PWIpcGc9YSxiPTEwNzM3NDE4MjM7Yj17Y29udGV4dDphLG9ic2VydmVkQml0czpiLG5leHQ6bnVsbH07aWYobnVsbD09PW9nKXtpZihudWxsPT09bmcpdGhyb3cgRXJyb3IoeSgzMDgpKTtvZz1iO25nLmRlcGVuZGVuY2llcz17bGFuZXM6MCxmaXJzdENvbnRleHQ6YixyZXNwb25kZXJzOm51bGx9fWVsc2Ugb2c9b2cubmV4dD1ifXJldHVybiBhLl9jdXJyZW50VmFsdWV9dmFyIHdnPSExO2Z1bmN0aW9uIHhnKGEpe2EudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLm1lbW9pemVkU3RhdGUsZmlyc3RCYXNlVXBkYXRlOm51bGwsbGFzdEJhc2VVcGRhdGU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHlnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0QmFzZVVwZGF0ZTphLmZpcnN0QmFzZVVwZGF0ZSxsYXN0QmFzZVVwZGF0ZTphLmxhc3RCYXNlVXBkYXRlLHNoYXJlZDphLnNoYXJlZCxlZmZlY3RzOmEuZWZmZWN0c30pfWZ1bmN0aW9uIHpnKGEsYil7cmV0dXJue2V2ZW50VGltZTphLGxhbmU6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9fWZ1bmN0aW9uIEFnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1hKXthPWEuc2hhcmVkO3ZhciBjPWEucGVuZGluZztudWxsPT09Yz9iLm5leHQ9YjooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yik7YS5wZW5kaW5nPWJ9fVxuZnVuY3Rpb24gQmcoYSxiKXt2YXIgYz1hLnVwZGF0ZVF1ZXVlLGQ9YS5hbHRlcm5hdGU7aWYobnVsbCE9PWQmJihkPWQudXBkYXRlUXVldWUsYz09PWQpKXt2YXIgZT1udWxsLGY9bnVsbDtjPWMuZmlyc3RCYXNlVXBkYXRlO2lmKG51bGwhPT1jKXtkb3t2YXIgZz17ZXZlbnRUaW1lOmMuZXZlbnRUaW1lLGxhbmU6Yy5sYW5lLHRhZzpjLnRhZyxwYXlsb2FkOmMucGF5bG9hZCxjYWxsYmFjazpjLmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PWY/ZT1mPWc6Zj1mLm5leHQ9ZztjPWMubmV4dH13aGlsZShudWxsIT09Yyk7bnVsbD09PWY/ZT1mPWI6Zj1mLm5leHQ9Yn1lbHNlIGU9Zj1iO2M9e2Jhc2VTdGF0ZTpkLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6ZSxsYXN0QmFzZVVwZGF0ZTpmLHNoYXJlZDpkLnNoYXJlZCxlZmZlY3RzOmQuZWZmZWN0c307YS51cGRhdGVRdWV1ZT1jO3JldHVybn1hPWMubGFzdEJhc2VVcGRhdGU7bnVsbD09PWE/Yy5maXJzdEJhc2VVcGRhdGU9YjphLm5leHQ9XG5iO2MubGFzdEJhc2VVcGRhdGU9Yn1cbmZ1bmN0aW9uIENnKGEsYixjLGQpe3ZhciBlPWEudXBkYXRlUXVldWU7d2c9ITE7dmFyIGY9ZS5maXJzdEJhc2VVcGRhdGUsZz1lLmxhc3RCYXNlVXBkYXRlLGg9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09aCl7ZS5zaGFyZWQucGVuZGluZz1udWxsO3ZhciBrPWgsbD1rLm5leHQ7ay5uZXh0PW51bGw7bnVsbD09PWc/Zj1sOmcubmV4dD1sO2c9azt2YXIgbj1hLmFsdGVybmF0ZTtpZihudWxsIT09bil7bj1uLnVwZGF0ZVF1ZXVlO3ZhciBBPW4ubGFzdEJhc2VVcGRhdGU7QSE9PWcmJihudWxsPT09QT9uLmZpcnN0QmFzZVVwZGF0ZT1sOkEubmV4dD1sLG4ubGFzdEJhc2VVcGRhdGU9ayl9fWlmKG51bGwhPT1mKXtBPWUuYmFzZVN0YXRlO2c9MDtuPWw9az1udWxsO2Rve2g9Zi5sYW5lO3ZhciBwPWYuZXZlbnRUaW1lO2lmKChkJmgpPT09aCl7bnVsbCE9PW4mJihuPW4ubmV4dD17ZXZlbnRUaW1lOnAsbGFuZTowLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLFxubmV4dDpudWxsfSk7YTp7dmFyIEM9YSx4PWY7aD1iO3A9Yztzd2l0Y2goeC50YWcpe2Nhc2UgMTpDPXgucGF5bG9hZDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyl7QT1DLmNhbGwocCxBLGgpO2JyZWFrIGF9QT1DO2JyZWFrIGE7Y2FzZSAzOkMuZmxhZ3M9Qy5mbGFncyYtNDA5N3w2NDtjYXNlIDA6Qz14LnBheWxvYWQ7aD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQz9DLmNhbGwocCxBLGgpOkM7aWYobnVsbD09PWh8fHZvaWQgMD09PWgpYnJlYWsgYTtBPW0oe30sQSxoKTticmVhayBhO2Nhc2UgMjp3Zz0hMH19bnVsbCE9PWYuY2FsbGJhY2smJihhLmZsYWdzfD0zMixoPWUuZWZmZWN0cyxudWxsPT09aD9lLmVmZmVjdHM9W2ZdOmgucHVzaChmKSl9ZWxzZSBwPXtldmVudFRpbWU6cCxsYW5lOmgsdGFnOmYudGFnLHBheWxvYWQ6Zi5wYXlsb2FkLGNhbGxiYWNrOmYuY2FsbGJhY2ssbmV4dDpudWxsfSxudWxsPT09bj8obD1uPXAsaz1BKTpuPW4ubmV4dD1wLGd8PWg7Zj1mLm5leHQ7aWYobnVsbD09PVxuZilpZihoPWUuc2hhcmVkLnBlbmRpbmcsbnVsbD09PWgpYnJlYWs7ZWxzZSBmPWgubmV4dCxoLm5leHQ9bnVsbCxlLmxhc3RCYXNlVXBkYXRlPWgsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpO251bGw9PT1uJiYoaz1BKTtlLmJhc2VTdGF0ZT1rO2UuZmlyc3RCYXNlVXBkYXRlPWw7ZS5sYXN0QmFzZVVwZGF0ZT1uO0RnfD1nO2EubGFuZXM9ZzthLm1lbW9pemVkU3RhdGU9QX19ZnVuY3Rpb24gRWcoYSxiLGMpe2E9Yi5lZmZlY3RzO2IuZWZmZWN0cz1udWxsO2lmKG51bGwhPT1hKWZvcihiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBkPWFbYl0sZT1kLmNhbGxiYWNrO2lmKG51bGwhPT1lKXtkLmNhbGxiYWNrPW51bGw7ZD1jO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlKXRocm93IEVycm9yKHkoMTkxLGUpKTtlLmNhbGwoZCl9fX12YXIgRmc9KG5ldyBhYS5Db21wb25lbnQpLnJlZnM7XG5mdW5jdGlvbiBHZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bSh7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmxhbmVzJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgS2c9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFscyk/WmIoYSk9PT1hOiExfSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9emcoZCxlKTtmLnRhZz0xO2YucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZi5jYWxsYmFjaz1jKTtBZyhhLGYpO0pnKGEsZSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsczt2YXIgYz1IZygpLGQ9SWcoYSksZT16ZyhjLGQpO2UudGFnPTI7dm9pZCAwIT09YiYmbnVsbCE9PWImJihlLmNhbGxiYWNrPVxuYik7QWcoYSxlKTtKZyhhLGQsYyl9fTtmdW5jdGlvbiBMZyhhLGIsYyxkLGUsZixnKXthPWEuc3RhdGVOb2RlO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnNob3VsZENvbXBvbmVudFVwZGF0ZT9hLnNob3VsZENvbXBvbmVudFVwZGF0ZShkLGYsZyk6Yi5wcm90b3R5cGUmJmIucHJvdG90eXBlLmlzUHVyZVJlYWN0Q29tcG9uZW50PyFKZShjLGQpfHwhSmUoZSxmKTohMH1cbmZ1bmN0aW9uIE1nKGEsYixjKXt2YXIgZD0hMSxlPUNmO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9mPXZnKGYpOihlPUZmKGIpP0RmOk0uY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0VmKGEsZSk6Q2YpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1LZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxzPWE7ZCYmKGE9YS5zdGF0ZU5vZGUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PWUsYS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dD1mKTtyZXR1cm4gYn1cbmZ1bmN0aW9uIE5nKGEsYixjLGQpe2E9Yi5zdGF0ZTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZiLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhjLGQpO2Iuc3RhdGUhPT1hJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGIsYi5zdGF0ZSxudWxsKX1cbmZ1bmN0aW9uIE9nKGEsYixjLGQpe3ZhciBlPWEuc3RhdGVOb2RlO2UucHJvcHM9YztlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtlLnJlZnM9Rmc7eGcoYSk7dmFyIGY9Yi5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mP2UuY29udGV4dD12ZyhmKTooZj1GZihiKT9EZjpNLmN1cnJlbnQsZS5jb250ZXh0PUVmKGEsZikpO0NnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihHZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZLZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSxDZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmZsYWdzfD00KX12YXIgUGc9QXJyYXkuaXNBcnJheTtcbmZ1bmN0aW9uIFFnKGEsYixjKXthPWMucmVmO2lmKG51bGwhPT1hJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmXCJvYmplY3RcIiE9PXR5cGVvZiBhKXtpZihjLl9vd25lcil7Yz1jLl9vd25lcjtpZihjKXtpZigxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgzMDkpKTt2YXIgZD1jLnN0YXRlTm9kZX1pZighZCl0aHJvdyBFcnJvcih5KDE0NyxhKSk7dmFyIGU9XCJcIithO2lmKG51bGwhPT1iJiZudWxsIT09Yi5yZWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLnJlZiYmYi5yZWYuX3N0cmluZ1JlZj09PWUpcmV0dXJuIGIucmVmO2I9ZnVuY3Rpb24oYSl7dmFyIGI9ZC5yZWZzO2I9PT1GZyYmKGI9ZC5yZWZzPXt9KTtudWxsPT09YT9kZWxldGUgYltlXTpiW2VdPWF9O2IuX3N0cmluZ1JlZj1lO3JldHVybiBifWlmKFwic3RyaW5nXCIhPT10eXBlb2YgYSl0aHJvdyBFcnJvcih5KDI4NCkpO2lmKCFjLl9vd25lcil0aHJvdyBFcnJvcih5KDI5MCxhKSk7fXJldHVybiBhfVxuZnVuY3Rpb24gUmcoYSxiKXtpZihcInRleHRhcmVhXCIhPT1hLnR5cGUpdGhyb3cgRXJyb3IoeSgzMSxcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIpKTt9XG5mdW5jdGlvbiBTZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmZsYWdzPTh9fWZ1bmN0aW9uIGMoYyxkKXtpZighYSlyZXR1cm4gbnVsbDtmb3IoO251bGwhPT1kOyliKGMsZCksZD1kLnNpYmxpbmc7cmV0dXJuIG51bGx9ZnVuY3Rpb24gZChhLGIpe2ZvcihhPW5ldyBNYXA7bnVsbCE9PWI7KW51bGwhPT1iLmtleT9hLnNldChiLmtleSxiKTphLnNldChiLmluZGV4LGIpLGI9Yi5zaWJsaW5nO3JldHVybiBhfWZ1bmN0aW9uIGUoYSxiKXthPVRnKGEsYik7YS5pbmRleD0wO2Euc2libGluZz1udWxsO3JldHVybiBhfWZ1bmN0aW9uIGYoYixjLGQpe2IuaW5kZXg9ZDtpZighYSlyZXR1cm4gYztkPWIuYWx0ZXJuYXRlO2lmKG51bGwhPT1kKXJldHVybiBkPWQuaW5kZXgsZDxjPyhiLmZsYWdzPTIsXG5jKTpkO2IuZmxhZ3M9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZmxhZ3M9Mik7cmV0dXJuIGJ9ZnVuY3Rpb24gaChhLGIsYyxkKXtpZihudWxsPT09Ynx8NiE9PWIudGFnKXJldHVybiBiPVVnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIGsoYSxiLGMsZCl7aWYobnVsbCE9PWImJmIuZWxlbWVudFR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMpLGQucmVmPVFnKGEsYixjKSxkLnJldHVybj1hLGQ7ZD1WZyhjLnR5cGUsYy5rZXksYy5wcm9wcyxudWxsLGEubW9kZSxkKTtkLnJlZj1RZyhhLGIsYyk7ZC5yZXR1cm49YTtyZXR1cm4gZH1mdW5jdGlvbiBsKGEsYixjLGQpe2lmKG51bGw9PT1ifHw0IT09Yi50YWd8fGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8hPT1jLmNvbnRhaW5lckluZm98fGIuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uIT09Yy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1cbldnKGMsYS5tb2RlLGQpLGIucmV0dXJuPWEsYjtiPWUoYixjLmNoaWxkcmVufHxbXSk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBuKGEsYixjLGQsZil7aWYobnVsbD09PWJ8fDchPT1iLnRhZylyZXR1cm4gYj1YZyhjLGEubW9kZSxkLGYpLGIucmV0dXJuPWEsYjtiPWUoYixjKTtiLnJldHVybj1hO3JldHVybiBifWZ1bmN0aW9uIEEoYSxiLGMpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYnx8XCJudW1iZXJcIj09PXR5cGVvZiBiKXJldHVybiBiPVVnKFwiXCIrYixhLm1vZGUsYyksYi5yZXR1cm49YSxiO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYiYmbnVsbCE9PWIpe3N3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjPVZnKGIudHlwZSxiLmtleSxiLnByb3BzLG51bGwsYS5tb2RlLGMpLGMucmVmPVFnKGEsbnVsbCxiKSxjLnJldHVybj1hLGM7Y2FzZSB0YTpyZXR1cm4gYj1XZyhiLGEubW9kZSxjKSxiLnJldHVybj1hLGJ9aWYoUGcoYil8fExhKGIpKXJldHVybiBiPVhnKGIsXG5hLm1vZGUsYyxudWxsKSxiLnJldHVybj1hLGI7UmcoYSxiKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBwKGEsYixjLGQpe3ZhciBlPW51bGwhPT1iP2Iua2V5Om51bGw7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBjfHxcIm51bWJlclwiPT09dHlwZW9mIGMpcmV0dXJuIG51bGwhPT1lP251bGw6aChhLGIsXCJcIitjLGQpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWMpe3N3aXRjaChjLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBjLmtleT09PWU/Yy50eXBlPT09dWE/bihhLGIsYy5wcm9wcy5jaGlsZHJlbixkLGUpOmsoYSxiLGMsZCk6bnVsbDtjYXNlIHRhOnJldHVybiBjLmtleT09PWU/bChhLGIsYyxkKTpudWxsfWlmKFBnKGMpfHxMYShjKSlyZXR1cm4gbnVsbCE9PWU/bnVsbDpuKGEsYixjLGQsbnVsbCk7UmcoYSxjKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDKGEsYixjLGQsZSl7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkfHxcIm51bWJlclwiPT09dHlwZW9mIGQpcmV0dXJuIGE9YS5nZXQoYyl8fFxubnVsbCxoKGIsYSxcIlwiK2QsZSk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCl7c3dpdGNoKGQuJCR0eXBlb2Ype2Nhc2Ugc2E6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLGQudHlwZT09PXVhP24oYixhLGQucHJvcHMuY2hpbGRyZW4sZSxkLmtleSk6ayhiLGEsZCxlKTtjYXNlIHRhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxsKGIsYSxkLGUpfWlmKFBnKGQpfHxMYShkKSlyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxuKGIsYSxkLGUsbnVsbCk7UmcoYixkKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiB4KGUsZyxoLGspe2Zvcih2YXIgbD1udWxsLHQ9bnVsbCx1PWcsej1nPTAscT1udWxsO251bGwhPT11JiZ6PGgubGVuZ3RoO3orKyl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgbj1wKGUsdSxoW3pdLGspO2lmKG51bGw9PT1uKXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PVxubi5hbHRlcm5hdGUmJmIoZSx1KTtnPWYobixnLHopO251bGw9PT10P2w9bjp0LnNpYmxpbmc9bjt0PW47dT1xfWlmKHo9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHUpLGw7aWYobnVsbD09PXUpe2Zvcig7ejxoLmxlbmd0aDt6KyspdT1BKGUsaFt6XSxrKSxudWxsIT09dSYmKGc9Zih1LGcseiksbnVsbD09PXQ/bD11OnQuc2libGluZz11LHQ9dSk7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpO3o8aC5sZW5ndGg7eisrKXE9Qyh1LGUseixoW3pdLGspLG51bGwhPT1xJiYoYSYmbnVsbCE9PXEuYWx0ZXJuYXRlJiZ1LmRlbGV0ZShudWxsPT09cS5rZXk/ejpxLmtleSksZz1mKHEsZyx6KSxudWxsPT09dD9sPXE6dC5zaWJsaW5nPXEsdD1xKTthJiZ1LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBsfWZ1bmN0aW9uIHcoZSxnLGgsayl7dmFyIGw9TGEoaCk7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGwpdGhyb3cgRXJyb3IoeSgxNTApKTtoPWwuY2FsbChoKTtpZihudWxsPT1cbmgpdGhyb3cgRXJyb3IoeSgxNTEpKTtmb3IodmFyIHQ9bD1udWxsLHU9Zyx6PWc9MCxxPW51bGwsbj1oLm5leHQoKTtudWxsIT09dSYmIW4uZG9uZTt6Kyssbj1oLm5leHQoKSl7dS5pbmRleD56PyhxPXUsdT1udWxsKTpxPXUuc2libGluZzt2YXIgdz1wKGUsdSxuLnZhbHVlLGspO2lmKG51bGw9PT13KXtudWxsPT09dSYmKHU9cSk7YnJlYWt9YSYmdSYmbnVsbD09PXcuYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKHcsZyx6KTtudWxsPT09dD9sPXc6dC5zaWJsaW5nPXc7dD13O3U9cX1pZihuLmRvbmUpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1BKGUsbi52YWx1ZSxrKSxudWxsIT09biYmKGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7cmV0dXJuIGx9Zm9yKHU9ZChlLHUpOyFuLmRvbmU7eisrLG49aC5uZXh0KCkpbj1DKHUsZSx6LG4udmFsdWUsayksbnVsbCE9PW4mJihhJiZudWxsIT09bi5hbHRlcm5hdGUmJlxudS5kZWxldGUobnVsbD09PW4ua2V5P3o6bi5rZXkpLGc9ZihuLGcseiksbnVsbD09PXQ/bD1uOnQuc2libGluZz1uLHQ9bik7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09dWEmJm51bGw9PT1mLmtleTtrJiYoZj1mLnByb3BzLmNoaWxkcmVuKTt2YXIgbD1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mO2lmKGwpc3dpdGNoKGYuJCR0eXBlb2Ype2Nhc2Ugc2E6YTp7bD1mLmtleTtmb3Ioaz1kO251bGwhPT1rOyl7aWYoay5rZXk9PT1sKXtzd2l0Y2goay50YWcpe2Nhc2UgNzppZihmLnR5cGU9PT11YSl7YyhhLGsuc2libGluZyk7ZD1lKGssZi5wcm9wcy5jaGlsZHJlbik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1icmVhaztkZWZhdWx0OmlmKGsuZWxlbWVudFR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO1xuZD1lKGssZi5wcm9wcyk7ZC5yZWY9UWcoYSxrLGYpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9fWMoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT11YT8oZD1YZyhmLnByb3BzLmNoaWxkcmVuLGEubW9kZSxoLGYua2V5KSxkLnJldHVybj1hLGE9ZCk6KGg9VmcoZi50eXBlLGYua2V5LGYucHJvcHMsbnVsbCxhLm1vZGUsaCksaC5yZWY9UWcoYSxkLGYpLGgucmV0dXJuPWEsYT1oKX1yZXR1cm4gZyhhKTtjYXNlIHRhOmE6e2ZvcihrPWYua2V5O251bGwhPT1kOyl7aWYoZC5rZXk9PT1rKWlmKDQ9PT1kLnRhZyYmZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbz09PWYuY29udGFpbmVySW5mbyYmZC5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb249PT1mLmltcGxlbWVudGF0aW9uKXtjKGEsZC5zaWJsaW5nKTtkPWUoZCxmLmNoaWxkcmVufHxbXSk7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxkKTticmVha31lbHNlIGIoYSxkKTtkPWQuc2libGluZ31kPVxuV2coZixhLm1vZGUsaCk7ZC5yZXR1cm49YTthPWR9cmV0dXJuIGcoYSl9aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBmfHxcIm51bWJlclwiPT09dHlwZW9mIGYpcmV0dXJuIGY9XCJcIitmLG51bGwhPT1kJiY2PT09ZC50YWc/KGMoYSxkLnNpYmxpbmcpLGQ9ZShkLGYpLGQucmV0dXJuPWEsYT1kKTooYyhhLGQpLGQ9VWcoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYoUGcoZikpcmV0dXJuIHgoYSxkLGYsaCk7aWYoTGEoZikpcmV0dXJuIHcoYSxkLGYsaCk7bCYmUmcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMjI6Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTp0aHJvdyBFcnJvcih5KDE1MixSYShhLnR5cGUpfHxcIkNvbXBvbmVudFwiKSk7fXJldHVybiBjKGEsZCl9fXZhciBZZz1TZyghMCksWmc9U2coITEpLCRnPXt9LGFoPUJmKCRnKSxiaD1CZigkZyksY2g9QmYoJGcpO1xuZnVuY3Rpb24gZGgoYSl7aWYoYT09PSRnKXRocm93IEVycm9yKHkoMTc0KSk7cmV0dXJuIGF9ZnVuY3Rpb24gZWgoYSxiKXtJKGNoLGIpO0koYmgsYSk7SShhaCwkZyk7YT1iLm5vZGVUeXBlO3N3aXRjaChhKXtjYXNlIDk6Y2FzZSAxMTpiPShiPWIuZG9jdW1lbnRFbGVtZW50KT9iLm5hbWVzcGFjZVVSSTptYihudWxsLFwiXCIpO2JyZWFrO2RlZmF1bHQ6YT04PT09YT9iLnBhcmVudE5vZGU6YixiPWEubmFtZXNwYWNlVVJJfHxudWxsLGE9YS50YWdOYW1lLGI9bWIoYixhKX1IKGFoKTtJKGFoLGIpfWZ1bmN0aW9uIGZoKCl7SChhaCk7SChiaCk7SChjaCl9ZnVuY3Rpb24gZ2goYSl7ZGgoY2guY3VycmVudCk7dmFyIGI9ZGgoYWguY3VycmVudCk7dmFyIGM9bWIoYixhLnR5cGUpO2IhPT1jJiYoSShiaCxhKSxJKGFoLGMpKX1mdW5jdGlvbiBoaChhKXtiaC5jdXJyZW50PT09YSYmKEgoYWgpLEgoYmgpKX12YXIgUD1CZigwKTtcbmZ1bmN0aW9uIGloKGEpe2Zvcih2YXIgYj1hO251bGwhPT1iOyl7aWYoMTM9PT1iLnRhZyl7dmFyIGM9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1jJiYoYz1jLmRlaHlkcmF0ZWQsbnVsbD09PWN8fFwiJD9cIj09PWMuZGF0YXx8XCIkIVwiPT09Yy5kYXRhKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYn1lbHNlIGlmKG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9cmV0dXJuIG51bGx9dmFyIGpoPW51bGwsa2g9bnVsbCxsaD0hMTtcbmZ1bmN0aW9uIG1oKGEsYil7dmFyIGM9bmgoNSxudWxsLG51bGwsMCk7Yy5lbGVtZW50VHlwZT1cIkRFTEVURURcIjtjLnR5cGU9XCJERUxFVEVEXCI7Yy5zdGF0ZU5vZGU9YjtjLnJldHVybj1hO2MuZmxhZ3M9ODtudWxsIT09YS5sYXN0RWZmZWN0PyhhLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGEubGFzdEVmZmVjdD1jKTphLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1jfWZ1bmN0aW9uIG9oKGEsYil7c3dpdGNoKGEudGFnKXtjYXNlIDU6dmFyIGM9YS50eXBlO2I9MSE9PWIubm9kZVR5cGV8fGMudG9Mb3dlckNhc2UoKSE9PWIubm9kZU5hbWUudG9Mb3dlckNhc2UoKT9udWxsOmI7cmV0dXJuIG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDY6cmV0dXJuIGI9XCJcIj09PWEucGVuZGluZ1Byb3BzfHwzIT09Yi5ub2RlVHlwZT9udWxsOmIsbnVsbCE9PWI/KGEuc3RhdGVOb2RlPWIsITApOiExO2Nhc2UgMTM6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBwaChhKXtpZihsaCl7dmFyIGI9a2g7aWYoYil7dmFyIGM9YjtpZighb2goYSxiKSl7Yj1yZihjLm5leHRTaWJsaW5nKTtpZighYnx8IW9oKGEsYikpe2EuZmxhZ3M9YS5mbGFncyYtMTAyNXwyO2xoPSExO2poPWE7cmV0dXJufW1oKGpoLGMpfWpoPWE7a2g9cmYoYi5maXJzdENoaWxkKX1lbHNlIGEuZmxhZ3M9YS5mbGFncyYtMTAyNXwyLGxoPSExLGpoPWF9fWZ1bmN0aW9uIHFoKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZyYmMTMhPT1hLnRhZzspYT1hLnJldHVybjtqaD1hfVxuZnVuY3Rpb24gcmgoYSl7aWYoYSE9PWpoKXJldHVybiExO2lmKCFsaClyZXR1cm4gcWgoYSksbGg9ITAsITE7dmFyIGI9YS50eXBlO2lmKDUhPT1hLnRhZ3x8XCJoZWFkXCIhPT1iJiZcImJvZHlcIiE9PWImJiFuZihiLGEubWVtb2l6ZWRQcm9wcykpZm9yKGI9a2g7YjspbWgoYSxiKSxiPXJmKGIubmV4dFNpYmxpbmcpO3FoKGEpO2lmKDEzPT09YS50YWcpe2E9YS5tZW1vaXplZFN0YXRlO2E9bnVsbCE9PWE/YS5kZWh5ZHJhdGVkOm51bGw7aWYoIWEpdGhyb3cgRXJyb3IoeSgzMTcpKTthOnthPWEubmV4dFNpYmxpbmc7Zm9yKGI9MDthOyl7aWYoOD09PWEubm9kZVR5cGUpe3ZhciBjPWEuZGF0YTtpZihcIi8kXCI9PT1jKXtpZigwPT09Yil7a2g9cmYoYS5uZXh0U2libGluZyk7YnJlYWsgYX1iLS19ZWxzZVwiJFwiIT09YyYmXCIkIVwiIT09YyYmXCIkP1wiIT09Y3x8YisrfWE9YS5uZXh0U2libGluZ31raD1udWxsfX1lbHNlIGtoPWpoP3JmKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gc2goKXtraD1qaD1udWxsO2xoPSExfXZhciB0aD1bXTtmdW5jdGlvbiB1aCgpe2Zvcih2YXIgYT0wO2E8dGgubGVuZ3RoO2ErKyl0aFthXS5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1udWxsO3RoLmxlbmd0aD0wfXZhciB2aD1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHdoPXJhLlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnLHhoPTAsUj1udWxsLFM9bnVsbCxUPW51bGwseWg9ITEsemg9ITE7ZnVuY3Rpb24gQWgoKXt0aHJvdyBFcnJvcih5KDMyMSkpO31mdW5jdGlvbiBCaChhLGIpe2lmKG51bGw9PT1iKXJldHVybiExO2Zvcih2YXIgYz0wO2M8Yi5sZW5ndGgmJmM8YS5sZW5ndGg7YysrKWlmKCFIZShhW2NdLGJbY10pKXJldHVybiExO3JldHVybiEwfVxuZnVuY3Rpb24gQ2goYSxiLGMsZCxlLGYpe3hoPWY7Uj1iO2IubWVtb2l6ZWRTdGF0ZT1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtiLmxhbmVzPTA7dmguY3VycmVudD1udWxsPT09YXx8bnVsbD09PWEubWVtb2l6ZWRTdGF0ZT9EaDpFaDthPWMoZCxlKTtpZih6aCl7Zj0wO2Rve3poPSExO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IoeSgzMDEpKTtmKz0xO1Q9Uz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDt2aC5jdXJyZW50PUZoO2E9YyhkLGUpfXdoaWxlKHpoKX12aC5jdXJyZW50PUdoO2I9bnVsbCE9PVMmJm51bGwhPT1TLm5leHQ7eGg9MDtUPVM9Uj1udWxsO3loPSExO2lmKGIpdGhyb3cgRXJyb3IoeSgzMDApKTtyZXR1cm4gYX1mdW5jdGlvbiBIaCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1UP1IubWVtb2l6ZWRTdGF0ZT1UPWE6VD1ULm5leHQ9YTtyZXR1cm4gVH1cbmZ1bmN0aW9uIEloKCl7aWYobnVsbD09PVMpe3ZhciBhPVIuYWx0ZXJuYXRlO2E9bnVsbCE9PWE/YS5tZW1vaXplZFN0YXRlOm51bGx9ZWxzZSBhPVMubmV4dDt2YXIgYj1udWxsPT09VD9SLm1lbW9pemVkU3RhdGU6VC5uZXh0O2lmKG51bGwhPT1iKVQ9YixTPWE7ZWxzZXtpZihudWxsPT09YSl0aHJvdyBFcnJvcih5KDMxMCkpO1M9YTthPXttZW1vaXplZFN0YXRlOlMubWVtb2l6ZWRTdGF0ZSxiYXNlU3RhdGU6Uy5iYXNlU3RhdGUsYmFzZVF1ZXVlOlMuYmFzZVF1ZXVlLHF1ZXVlOlMucXVldWUsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWF9cmV0dXJuIFR9ZnVuY3Rpb24gSmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiBLaChhKXt2YXIgYj1JaCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih5KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPVMsZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5sYW5lO2lmKCh4aCZsKT09PWwpbnVsbCE9PWgmJihoPWgubmV4dD17bGFuZTowLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfSksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7ZWxzZXt2YXIgbj17bGFuZTpsLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsXG5lYWdlclN0YXRlOmsuZWFnZXJTdGF0ZSxuZXh0Om51bGx9O251bGw9PT1oPyhnPWg9bixmPWQpOmg9aC5uZXh0PW47Ui5sYW5lc3w9bDtEZ3w9bH1rPWsubmV4dH13aGlsZShudWxsIT09ayYmayE9PWUpO251bGw9PT1oP2Y9ZDpoLm5leHQ9ZztIZShkLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWQ7Yi5iYXNlU3RhdGU9ZjtiLmJhc2VRdWV1ZT1oO2MubGFzdFJlbmRlcmVkU3RhdGU9ZH1yZXR1cm5bYi5tZW1vaXplZFN0YXRlLGMuZGlzcGF0Y2hdfVxuZnVuY3Rpb24gTGgoYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1jLmRpc3BhdGNoLGU9Yy5wZW5kaW5nLGY9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1lKXtjLnBlbmRpbmc9bnVsbDt2YXIgZz1lPWUubmV4dDtkbyBmPWEoZixnLmFjdGlvbiksZz1nLm5leHQ7d2hpbGUoZyE9PWUpO0hlKGYsYi5tZW1vaXplZFN0YXRlKXx8KHVnPSEwKTtiLm1lbW9pemVkU3RhdGU9ZjtudWxsPT09Yi5iYXNlUXVldWUmJihiLmJhc2VTdGF0ZT1mKTtjLmxhc3RSZW5kZXJlZFN0YXRlPWZ9cmV0dXJuW2YsZF19XG5mdW5jdGlvbiBNaChhLGIsYyl7dmFyIGQ9Yi5fZ2V0VmVyc2lvbjtkPWQoYi5fc291cmNlKTt2YXIgZT1iLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5O2lmKG51bGwhPT1lKWE9ZT09PWQ7ZWxzZSBpZihhPWEubXV0YWJsZVJlYWRMYW5lcyxhPSh4aCZhKT09PWEpYi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeT1kLHRoLnB1c2goYik7aWYoYSlyZXR1cm4gYyhiLl9zb3VyY2UpO3RoLnB1c2goYik7dGhyb3cgRXJyb3IoeSgzNTApKTt9XG5mdW5jdGlvbiBOaChhLGIsYyxkKXt2YXIgZT1VO2lmKG51bGw9PT1lKXRocm93IEVycm9yKHkoMzQ5KSk7dmFyIGY9Yi5fZ2V0VmVyc2lvbixnPWYoYi5fc291cmNlKSxoPXZoLmN1cnJlbnQsaz1oLnVzZVN0YXRlKGZ1bmN0aW9uKCl7cmV0dXJuIE1oKGUsYixjKX0pLGw9a1sxXSxuPWtbMF07az1UO3ZhciBBPWEubWVtb2l6ZWRTdGF0ZSxwPUEucmVmcyxDPXAuZ2V0U25hcHNob3QseD1BLnNvdXJjZTtBPUEuc3Vic2NyaWJlO3ZhciB3PVI7YS5tZW1vaXplZFN0YXRlPXtyZWZzOnAsc291cmNlOmIsc3Vic2NyaWJlOmR9O2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cC5nZXRTbmFwc2hvdD1jO3Auc2V0U25hcHNob3Q9bDt2YXIgYT1mKGIuX3NvdXJjZSk7aWYoIUhlKGcsYSkpe2E9YyhiLl9zb3VyY2UpO0hlKG4sYSl8fChsKGEpLGE9SWcodyksZS5tdXRhYmxlUmVhZExhbmVzfD1hJmUucGVuZGluZ0xhbmVzKTthPWUubXV0YWJsZVJlYWRMYW5lcztlLmVudGFuZ2xlZExhbmVzfD1hO2Zvcih2YXIgZD1cbmUuZW50YW5nbGVtZW50cyxoPWE7MDxoOyl7dmFyIGs9MzEtVmMoaCksdj0xPDxrO2Rba118PWE7aCY9fnZ9fX0sW2MsYixkXSk7aC51c2VFZmZlY3QoZnVuY3Rpb24oKXtyZXR1cm4gZChiLl9zb3VyY2UsZnVuY3Rpb24oKXt2YXIgYT1wLmdldFNuYXBzaG90LGM9cC5zZXRTbmFwc2hvdDt0cnl7YyhhKGIuX3NvdXJjZSkpO3ZhciBkPUlnKHcpO2UubXV0YWJsZVJlYWRMYW5lc3w9ZCZlLnBlbmRpbmdMYW5lc31jYXRjaChxKXtjKGZ1bmN0aW9uKCl7dGhyb3cgcTt9KX19KX0sW2IsZF0pO0hlKEMsYykmJkhlKHgsYikmJkhlKEEsZCl8fChhPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOm59LGEuZGlzcGF0Y2g9bD1PaC5iaW5kKG51bGwsUixhKSxrLnF1ZXVlPWEsay5iYXNlUXVldWU9bnVsbCxuPU1oKGUsYixjKSxrLm1lbW9pemVkU3RhdGU9ay5iYXNlU3RhdGU9bik7cmV0dXJuIG59XG5mdW5jdGlvbiBQaChhLGIsYyl7dmFyIGQ9SWgoKTtyZXR1cm4gTmgoZCxhLGIsYyl9ZnVuY3Rpb24gUWgoYSl7dmFyIGI9SGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6SmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19XG5mdW5jdGlvbiBSaChhLGIsYyxkKXthPXt0YWc6YSxjcmVhdGU6YixkZXN0cm95OmMsZGVwczpkLG5leHQ6bnVsbH07Yj1SLnVwZGF0ZVF1ZXVlO251bGw9PT1iPyhiPXtsYXN0RWZmZWN0Om51bGx9LFIudXBkYXRlUXVldWU9YixiLmxhc3RFZmZlY3Q9YS5uZXh0PWEpOihjPWIubGFzdEVmZmVjdCxudWxsPT09Yz9iLmxhc3RFZmZlY3Q9YS5uZXh0PWE6KGQ9Yy5uZXh0LGMubmV4dD1hLGEubmV4dD1kLGIubGFzdEVmZmVjdD1hKSk7cmV0dXJuIGF9ZnVuY3Rpb24gU2goYSl7dmFyIGI9SGgoKTthPXtjdXJyZW50OmF9O3JldHVybiBiLm1lbW9pemVkU3RhdGU9YX1mdW5jdGlvbiBUaCgpe3JldHVybiBJaCgpLm1lbW9pemVkU3RhdGV9ZnVuY3Rpb24gVWgoYSxiLGMsZCl7dmFyIGU9SGgoKTtSLmZsYWdzfD1hO2UubWVtb2l6ZWRTdGF0ZT1SaCgxfGIsYyx2b2lkIDAsdm9pZCAwPT09ZD9udWxsOmQpfVxuZnVuY3Rpb24gVmgoYSxiLGMsZCl7dmFyIGU9SWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Uyl7dmFyIGc9Uy5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZCaChkLGcuZGVwcykpe1JoKGIsYyxmLGQpO3JldHVybn19Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsZixkKX1mdW5jdGlvbiBXaChhLGIpe3JldHVybiBVaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFhoKGEsYil7cmV0dXJuIFZoKDUxNiw0LGEsYil9ZnVuY3Rpb24gWWgoYSxiKXtyZXR1cm4gVmgoNCwyLGEsYil9ZnVuY3Rpb24gWmgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1cbmZ1bmN0aW9uICRoKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVmgoNCwyLFpoLmJpbmQobnVsbCxiLGEpLGMpfWZ1bmN0aW9uIGFpKCl7fWZ1bmN0aW9uIGJpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfWZ1bmN0aW9uIGNpKGEsYil7dmFyIGM9SWgoKTtiPXZvaWQgMD09PWI/bnVsbDpiO3ZhciBkPWMubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZCYmbnVsbCE9PWImJkJoKGIsZFsxXSkpcmV0dXJuIGRbMF07YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfVxuZnVuY3Rpb24gZGkoYSxiKXt2YXIgYz1lZygpO2dnKDk4PmM/OTg6YyxmdW5jdGlvbigpe2EoITApfSk7Z2coOTc8Yz85NzpjLGZ1bmN0aW9uKCl7dmFyIGM9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2EoITEpLGIoKX1maW5hbGx5e3doLnRyYW5zaXRpb249Y319KX1cbmZ1bmN0aW9uIE9oKGEsYixjKXt2YXIgZD1IZygpLGU9SWcoYSksZj17bGFuZTplLGFjdGlvbjpjLGVhZ2VyUmVkdWNlcjpudWxsLGVhZ2VyU3RhdGU6bnVsbCxuZXh0Om51bGx9LGc9Yi5wZW5kaW5nO251bGw9PT1nP2YubmV4dD1mOihmLm5leHQ9Zy5uZXh0LGcubmV4dD1mKTtiLnBlbmRpbmc9ZjtnPWEuYWx0ZXJuYXRlO2lmKGE9PT1SfHxudWxsIT09ZyYmZz09PVIpemg9eWg9ITA7ZWxzZXtpZigwPT09YS5sYW5lcyYmKG51bGw9PT1nfHwwPT09Zy5sYW5lcykmJihnPWIubGFzdFJlbmRlcmVkUmVkdWNlcixudWxsIT09ZykpdHJ5e3ZhciBoPWIubGFzdFJlbmRlcmVkU3RhdGUsaz1nKGgsYyk7Zi5lYWdlclJlZHVjZXI9ZztmLmVhZ2VyU3RhdGU9aztpZihIZShrLGgpKXJldHVybn1jYXRjaChsKXt9ZmluYWxseXt9SmcoYSxlLGQpfX1cbnZhciBHaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6QWgsdXNlQ29udGV4dDpBaCx1c2VFZmZlY3Q6QWgsdXNlSW1wZXJhdGl2ZUhhbmRsZTpBaCx1c2VMYXlvdXRFZmZlY3Q6QWgsdXNlTWVtbzpBaCx1c2VSZWR1Y2VyOkFoLHVzZVJlZjpBaCx1c2VTdGF0ZTpBaCx1c2VEZWJ1Z1ZhbHVlOkFoLHVzZURlZmVycmVkVmFsdWU6QWgsdXNlVHJhbnNpdGlvbjpBaCx1c2VNdXRhYmxlU291cmNlOkFoLHVzZU9wYXF1ZUlkZW50aWZpZXI6QWgsdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxEaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6ZnVuY3Rpb24oYSxiKXtIaCgpLm1lbW9pemVkU3RhdGU9W2Esdm9pZCAwPT09Yj9udWxsOmJdO3JldHVybiBhfSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpXaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gVWgoNCwyLFpoLmJpbmQobnVsbCxcbmIsYSksYyl9LHVzZUxheW91dEVmZmVjdDpmdW5jdGlvbihhLGIpe3JldHVybiBVaCg0LDIsYSxiKX0sdXNlTWVtbzpmdW5jdGlvbihhLGIpe3ZhciBjPUhoKCk7Yj12b2lkIDA9PT1iP251bGw6YjthPWEoKTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPUhoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9T2guYmluZChudWxsLFIsYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOlNoLHVzZVN0YXRlOlFoLHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1RaChhKSxjPWJbMF0sZD1iWzFdO1doKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjtcbndoLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1RaCghMSksYj1hWzBdO2E9ZGkuYmluZChudWxsLGFbMV0pO1NoKGEpO3JldHVyblthLGJdfSx1c2VNdXRhYmxlU291cmNlOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2QubWVtb2l6ZWRTdGF0ZT17cmVmczp7Z2V0U25hcHNob3Q6YixzZXRTbmFwc2hvdDpudWxsfSxzb3VyY2U6YSxzdWJzY3JpYmU6Y307cmV0dXJuIE5oKGQsYSxiLGMpfSx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7aWYobGgpe3ZhciBhPSExLGI9dWYoZnVuY3Rpb24oKXthfHwoYT0hMCxjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKSk7dGhyb3cgRXJyb3IoeSgzNTUpKTt9KSxjPVFoKGIpWzFdOzA9PT0oUi5tb2RlJjIpJiYoUi5mbGFnc3w9NTE2LFJoKDUsZnVuY3Rpb24oKXtjKFwicjpcIisodGYrKykudG9TdHJpbmcoMzYpKX0sXG52b2lkIDAsbnVsbCkpO3JldHVybiBifWI9XCJyOlwiKyh0ZisrKS50b1N0cmluZygzNik7UWgoYik7cmV0dXJuIGJ9LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRWg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmJpLHVzZUNvbnRleHQ6dmcsdXNlRWZmZWN0OlhoLHVzZUltcGVyYXRpdmVIYW5kbGU6JGgsdXNlTGF5b3V0RWZmZWN0OlloLHVzZU1lbW86Y2ksdXNlUmVkdWNlcjpLaCx1c2VSZWY6VGgsdXNlU3RhdGU6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpfSx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9S2goSmgpLGM9YlswXSxkPWJbMV07WGgoZnVuY3Rpb24oKXt2YXIgYj13aC50cmFuc2l0aW9uO3doLnRyYW5zaXRpb249MTt0cnl7ZChhKX1maW5hbGx5e3doLnRyYW5zaXRpb249Yn19LFthXSk7cmV0dXJuIGN9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oKXt2YXIgYT1LaChKaClbMF07cmV0dXJuW1RoKCkuY3VycmVudCxcbmFdfSx1c2VNdXRhYmxlU291cmNlOlBoLHVzZU9wYXF1ZUlkZW50aWZpZXI6ZnVuY3Rpb24oKXtyZXR1cm4gS2goSmgpWzBdfSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEZoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6TGgsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUxoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9TGgoSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIExoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxlaT1yYS5SZWFjdEN1cnJlbnRPd25lcix1Zz0hMTtmdW5jdGlvbiBmaShhLGIsYyxkKXtiLmNoaWxkPW51bGw9PT1hP1pnKGIsbnVsbCxjLGQpOllnKGIsYS5jaGlsZCxjLGQpfWZ1bmN0aW9uIGdpKGEsYixjLGQsZSl7Yz1jLnJlbmRlcjt2YXIgZj1iLnJlZjt0ZyhiLGUpO2Q9Q2goYSxiLGMsZCxmLGUpO2lmKG51bGwhPT1hJiYhdWcpcmV0dXJuIGIudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZSxiLmZsYWdzJj0tNTE3LGEubGFuZXMmPX5lLGhpKGEsYixlKTtiLmZsYWdzfD0xO2ZpKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gaWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFqaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxraShhLGIsZyxkLGUsZik7YT1WZyhjLnR5cGUsbnVsbCxkLGIsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoMD09PShlJmYpJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOkplLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuIGhpKGEsYixmKTtiLmZsYWdzfD0xO2E9VGcoZyxkKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9XG5mdW5jdGlvbiBraShhLGIsYyxkLGUsZil7aWYobnVsbCE9PWEmJkplKGEubWVtb2l6ZWRQcm9wcyxkKSYmYS5yZWY9PT1iLnJlZilpZih1Zz0hMSwwIT09KGYmZSkpMCE9PShhLmZsYWdzJjE2Mzg0KSYmKHVnPSEwKTtlbHNlIHJldHVybiBiLmxhbmVzPWEubGFuZXMsaGkoYSxiLGYpO3JldHVybiBsaShhLGIsYyxkLGYpfVxuZnVuY3Rpb24gbWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5jaGlsZHJlbixmPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsO2lmKFwiaGlkZGVuXCI9PT1kLm1vZGV8fFwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIj09PWQubW9kZSlpZigwPT09KGIubW9kZSY0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLGMpO2Vsc2UgaWYoMCE9PShjJjEwNzM3NDE4MjQpKWIubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOjB9LG5pKGIsbnVsbCE9PWY/Zi5iYXNlTGFuZXM6Yyk7ZWxzZSByZXR1cm4gYT1udWxsIT09Zj9mLmJhc2VMYW5lc3xjOmMsYi5sYW5lcz1iLmNoaWxkTGFuZXM9MTA3Mzc0MTgyNCxiLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczphfSxuaShiLGEpLG51bGw7ZWxzZSBudWxsIT09Zj8oZD1mLmJhc2VMYW5lc3xjLGIubWVtb2l6ZWRTdGF0ZT1udWxsKTpkPWMsbmkoYixkKTtmaShhLGIsZSxjKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIG9pKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZmxhZ3N8PTEyOH1mdW5jdGlvbiBsaShhLGIsYyxkLGUpe3ZhciBmPUZmKGMpP0RmOk0uY3VycmVudDtmPUVmKGIsZik7dGcoYixlKTtjPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsYyxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIHBpKGEsYixjLGQsZSl7aWYoRmYoYykpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTt0ZyhiLGUpO2lmKG51bGw9PT1iLnN0YXRlTm9kZSludWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKSxNZyhiLGMsZCksT2coYixjLGQsZSksZD0hMDtlbHNlIGlmKG51bGw9PT1hKXt2YXIgZz1iLnN0YXRlTm9kZSxoPWIubWVtb2l6ZWRQcm9wcztnLnByb3BzPWg7dmFyIGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9dmcobCk6KGw9RmYoYyk/RGY6TS5jdXJyZW50LGw9RWYoYixsKSk7dmFyIG49Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMsQT1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygbnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGU7QXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlxuXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1kfHxrIT09bCkmJk5nKGIsZyxkLGwpO3dnPSExO3ZhciBwPWIubWVtb2l6ZWRTdGF0ZTtnLnN0YXRlPXA7Q2coYixkLGcsZSk7az1iLm1lbW9pemVkU3RhdGU7aCE9PWR8fHAhPT1rfHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbiYmKEdnKGIsYyxuLGQpLGs9Yi5tZW1vaXplZFN0YXRlKSwoaD13Z3x8TGcoYixjLGgsZCxwLGssbCkpPyhBfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnRXaWxsTW91bnQmJmcuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZy5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PVxudHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmZsYWdzfD00KSxkPSExKX1lbHNle2c9Yi5zdGF0ZU5vZGU7eWcoYSxiKTtoPWIubWVtb2l6ZWRQcm9wcztsPWIudHlwZT09PWIuZWxlbWVudFR5cGU/aDpsZyhiLnR5cGUsaCk7Zy5wcm9wcz1sO0E9Yi5wZW5kaW5nUHJvcHM7cD1nLmNvbnRleHQ7az1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWs/az12ZyhrKTooaz1GZihjKT9EZjpNLmN1cnJlbnQsaz1FZihiLGspKTt2YXIgQz1jLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczsobj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgQ3x8XG5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHwoaCE9PUF8fHAhPT1rKSYmTmcoYixnLGQsayk7d2c9ITE7cD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO3ZhciB4PWIubWVtb2l6ZWRTdGF0ZTtoIT09QXx8cCE9PXh8fE4uY3VycmVudHx8d2c/KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBDJiYoR2coYixjLEMsZCkseD1iLm1lbW9pemVkU3RhdGUpLChsPXdnfHxMZyhiLGMsbCxkLHAseCxrKSk/KG58fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5jb21wb25lbnRXaWxsVXBkYXRlKGQsXG54LGspLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZnLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlKGQseCxrKSksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlJiYoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUmJihiLmZsYWdzfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT14KSxnLnByb3BzPWQsZy5zdGF0ZT14LGcuY29udGV4dD1rLGQ9bCk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8XG5oPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJnA9PT1hLm1lbW9pemVkU3RhdGV8fChiLmZsYWdzfD0yNTYpLGQ9ITEpfXJldHVybiBxaShhLGIsYyxkLGYsZSl9XG5mdW5jdGlvbiBxaShhLGIsYyxkLGUsZil7b2koYSxiKTt2YXIgZz0wIT09KGIuZmxhZ3MmNjQpO2lmKCFkJiYhZylyZXR1cm4gZSYmS2YoYixjLCExKSxoaShhLGIsZik7ZD1iLnN0YXRlTm9kZTtlaS5jdXJyZW50PWI7dmFyIGg9ZyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yP251bGw6ZC5yZW5kZXIoKTtiLmZsYWdzfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVlnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WWcoYixudWxsLGgsZikpOmZpKGEsYixoLGYpO2IubWVtb2l6ZWRTdGF0ZT1kLnN0YXRlO2UmJktmKGIsYywhMCk7cmV0dXJuIGIuY2hpbGR9ZnVuY3Rpb24gcmkoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9IZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZIZihhLGIuY29udGV4dCwhMSk7ZWgoYSxiLmNvbnRhaW5lckluZm8pfVxudmFyIHNpPXtkZWh5ZHJhdGVkOm51bGwscmV0cnlMYW5lOjB9O1xuZnVuY3Rpb24gdGkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9UC5jdXJyZW50LGY9ITEsZzsoZz0wIT09KGIuZmxhZ3MmNjQpKXx8KGc9bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGU/ITE6MCE9PShlJjIpKTtnPyhmPSEwLGIuZmxhZ3MmPS02NSk6bnVsbCE9PWEmJm51bGw9PT1hLm1lbW9pemVkU3RhdGV8fHZvaWQgMD09PWQuZmFsbGJhY2t8fCEwPT09ZC51bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFja3x8KGV8PTEpO0koUCxlJjEpO2lmKG51bGw9PT1hKXt2b2lkIDAhPT1kLmZhbGxiYWNrJiZwaChiKTthPWQuY2hpbGRyZW47ZT1kLmZhbGxiYWNrO2lmKGYpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sYi5tZW1vaXplZFN0YXRlPXNpLGE7aWYoXCJudW1iZXJcIj09PXR5cGVvZiBkLnVuc3RhYmxlX2V4cGVjdGVkTG9hZFRpbWUpcmV0dXJuIGE9dWkoYixhLGUsYyksYi5jaGlsZC5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6Y30sXG5iLm1lbW9pemVkU3RhdGU9c2ksYi5sYW5lcz0zMzU1NDQzMixhO2M9dmkoe21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46YX0sYi5tb2RlLGMsbnVsbCk7Yy5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1jfWlmKG51bGwhPT1hLm1lbW9pemVkU3RhdGUpe2lmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306e2Jhc2VMYW5lczplLmJhc2VMYW5lc3xjfSxmLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzJn5jLGIubWVtb2l6ZWRTdGF0ZT1zaSxkO2M9eGkoYSxiLGQuY2hpbGRyZW4sYyk7Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGN9aWYoZilyZXR1cm4gZD13aShhLGIsZC5jaGlsZHJlbixkLmZhbGxiYWNrLGMpLGY9Yi5jaGlsZCxlPWEuY2hpbGQubWVtb2l6ZWRTdGF0ZSxmLm1lbW9pemVkU3RhdGU9bnVsbD09PWU/e2Jhc2VMYW5lczpjfTpcbntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWZ1bmN0aW9uIHVpKGEsYixjLGQpe3ZhciBlPWEubW9kZSxmPWEuY2hpbGQ7Yj17bW9kZTpcImhpZGRlblwiLGNoaWxkcmVuOmJ9OzA9PT0oZSYyKSYmbnVsbCE9PWY/KGYuY2hpbGRMYW5lcz0wLGYucGVuZGluZ1Byb3BzPWIpOmY9dmkoYixlLDAsbnVsbCk7Yz1YZyhjLGUsZCxudWxsKTtmLnJldHVybj1hO2MucmV0dXJuPWE7Zi5zaWJsaW5nPWM7YS5jaGlsZD1mO3JldHVybiBjfVxuZnVuY3Rpb24geGkoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDthPWUuc2libGluZztjPVRnKGUse21vZGU6XCJ2aXNpYmxlXCIsY2hpbGRyZW46Y30pOzA9PT0oYi5tb2RlJjIpJiYoYy5sYW5lcz1kKTtjLnJldHVybj1iO2Muc2libGluZz1udWxsO251bGwhPT1hJiYoYS5uZXh0RWZmZWN0PW51bGwsYS5mbGFncz04LGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWEpO3JldHVybiBiLmNoaWxkPWN9XG5mdW5jdGlvbiB3aShhLGIsYyxkLGUpe3ZhciBmPWIubW9kZSxnPWEuY2hpbGQ7YT1nLnNpYmxpbmc7dmFyIGg9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpjfTswPT09KGYmMikmJmIuY2hpbGQhPT1nPyhjPWIuY2hpbGQsYy5jaGlsZExhbmVzPTAsYy5wZW5kaW5nUHJvcHM9aCxnPWMubGFzdEVmZmVjdCxudWxsIT09Zz8oYi5maXJzdEVmZmVjdD1jLmZpcnN0RWZmZWN0LGIubGFzdEVmZmVjdD1nLGcubmV4dEVmZmVjdD1udWxsKTpiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsKTpjPVRnKGcsaCk7bnVsbCE9PWE/ZD1UZyhhLGQpOihkPVhnKGQsZixlLG51bGwpLGQuZmxhZ3N8PTIpO2QucmV0dXJuPWI7Yy5yZXR1cm49YjtjLnNpYmxpbmc9ZDtiLmNoaWxkPWM7cmV0dXJuIGR9ZnVuY3Rpb24geWkoYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7c2coYS5yZXR1cm4sYil9XG5mdW5jdGlvbiB6aShhLGIsYyxkLGUsZil7dmFyIGc9YS5tZW1vaXplZFN0YXRlO251bGw9PT1nP2EubWVtb2l6ZWRTdGF0ZT17aXNCYWNrd2FyZHM6YixyZW5kZXJpbmc6bnVsbCxyZW5kZXJpbmdTdGFydFRpbWU6MCxsYXN0OmQsdGFpbDpjLHRhaWxNb2RlOmUsbGFzdEVmZmVjdDpmfTooZy5pc0JhY2t3YXJkcz1iLGcucmVuZGVyaW5nPW51bGwsZy5yZW5kZXJpbmdTdGFydFRpbWU9MCxnLmxhc3Q9ZCxnLnRhaWw9YyxnLnRhaWxNb2RlPWUsZy5sYXN0RWZmZWN0PWYpfVxuZnVuY3Rpb24gQWkoYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzLGU9ZC5yZXZlYWxPcmRlcixmPWQudGFpbDtmaShhLGIsZC5jaGlsZHJlbixjKTtkPVAuY3VycmVudDtpZigwIT09KGQmMikpZD1kJjF8MixiLmZsYWdzfD02NDtlbHNle2lmKG51bGwhPT1hJiYwIT09KGEuZmxhZ3MmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmeWkoYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpeWkoYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShQLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1paChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO3ppKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWloKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX16aShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6emkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGhpKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTtEZ3w9Yi5sYW5lcztpZigwIT09KGMmYi5jaGlsZExhbmVzKSl7aWYobnVsbCE9PWEmJmIuY2hpbGQhPT1hLmNoaWxkKXRocm93IEVycm9yKHkoMTUzKSk7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDtjPVRnKGEsYS5wZW5kaW5nUHJvcHMpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz1UZyhhLGEucGVuZGluZ1Byb3BzKSxjLnJldHVybj1iO2Muc2libGluZz1udWxsfXJldHVybiBiLmNoaWxkfXJldHVybiBudWxsfXZhciBCaSxDaSxEaSxFaTtcbkJpPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPWIuY2hpbGQ7bnVsbCE9PWM7KXtpZig1PT09Yy50YWd8fDY9PT1jLnRhZylhLmFwcGVuZENoaWxkKGMuc3RhdGVOb2RlKTtlbHNlIGlmKDQhPT1jLnRhZyYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fTtDaT1mdW5jdGlvbigpe307XG5EaT1mdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1hLm1lbW9pemVkUHJvcHM7aWYoZSE9PWQpe2E9Yi5zdGF0ZU5vZGU7ZGgoYWguY3VycmVudCk7dmFyIGY9bnVsbDtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6ZT1ZYShhLGUpO2Q9WWEoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjplPWViKGEsZSk7ZD1lYihhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmU9bSh7fSxlLHt2YWx1ZTp2b2lkIDB9KTtkPW0oe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjplPWdiKGEsZSk7ZD1nYihhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgZS5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX12YihjLGQpO3ZhciBnO2M9bnVsbDtmb3IobCBpbiBlKWlmKCFkLmhhc093blByb3BlcnR5KGwpJiZlLmhhc093blByb3BlcnR5KGwpJiZudWxsIT1lW2xdKWlmKFwic3R5bGVcIj09PVxubCl7dmFyIGg9ZVtsXTtmb3IoZyBpbiBoKWguaGFzT3duUHJvcGVydHkoZykmJihjfHwoYz17fSksY1tnXT1cIlwiKX1lbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiIT09bCYmXCJjaGlsZHJlblwiIT09bCYmXCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiZcImF1dG9Gb2N1c1wiIT09bCYmKGNhLmhhc093blByb3BlcnR5KGwpP2Z8fChmPVtdKTooZj1mfHxbXSkucHVzaChsLG51bGwpKTtmb3IobCBpbiBkKXt2YXIgaz1kW2xdO2g9bnVsbCE9ZT9lW2xdOnZvaWQgMDtpZihkLmhhc093blByb3BlcnR5KGwpJiZrIT09aCYmKG51bGwhPWt8fG51bGwhPWgpKWlmKFwic3R5bGVcIj09PWwpaWYoaCl7Zm9yKGcgaW4gaCkhaC5oYXNPd25Qcm9wZXJ0eShnKXx8ayYmay5oYXNPd25Qcm9wZXJ0eShnKXx8KGN8fChjPXt9KSxjW2ddPVwiXCIpO2ZvcihnIGluIGspay5oYXNPd25Qcm9wZXJ0eShnKSYmaFtnXSE9PWtbZ10mJihjfHxcbihjPXt9KSxjW2ddPWtbZ10pfWVsc2UgY3x8KGZ8fChmPVtdKSxmLnB1c2gobCxjKSksYz1rO2Vsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1sPyhrPWs/ay5fX2h0bWw6dm9pZCAwLGg9aD9oLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmaCE9PWsmJihmPWZ8fFtdKS5wdXNoKGwsaykpOlwiY2hpbGRyZW5cIj09PWw/XCJzdHJpbmdcIiE9PXR5cGVvZiBrJiZcIm51bWJlclwiIT09dHlwZW9mIGt8fChmPWZ8fFtdKS5wdXNoKGwsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09bCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT8obnVsbCE9ayYmXCJvblNjcm9sbFwiPT09bCYmRyhcInNjcm9sbFwiLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOlwib2JqZWN0XCI9PT10eXBlb2YgayYmbnVsbCE9PWsmJmsuJCR0eXBlb2Y9PT1HYT9rLnRvU3RyaW5nKCk6KGY9Znx8W10pLnB1c2gobCxrKSl9YyYmKGY9Znx8W10pLnB1c2goXCJzdHlsZVwiLFxuYyk7dmFyIGw9ZjtpZihiLnVwZGF0ZVF1ZXVlPWwpYi5mbGFnc3w9NH19O0VpPWZ1bmN0aW9uKGEsYixjLGQpe2MhPT1kJiYoYi5mbGFnc3w9NCl9O2Z1bmN0aW9uIEZpKGEsYil7aWYoIWxoKXN3aXRjaChhLnRhaWxNb2RlKXtjYXNlIFwiaGlkZGVuXCI6Yj1hLnRhaWw7Zm9yKHZhciBjPW51bGw7bnVsbCE9PWI7KW51bGwhPT1iLmFsdGVybmF0ZSYmKGM9YiksYj1iLnNpYmxpbmc7bnVsbD09PWM/YS50YWlsPW51bGw6Yy5zaWJsaW5nPW51bGw7YnJlYWs7Y2FzZSBcImNvbGxhcHNlZFwiOmM9YS50YWlsO2Zvcih2YXIgZD1udWxsO251bGwhPT1jOyludWxsIT09Yy5hbHRlcm5hdGUmJihkPWMpLGM9Yy5zaWJsaW5nO251bGw9PT1kP2J8fG51bGw9PT1hLnRhaWw/YS50YWlsPW51bGw6YS50YWlsLnNpYmxpbmc9bnVsbDpkLnNpYmxpbmc9bnVsbH19XG5mdW5jdGlvbiBHaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHM7c3dpdGNoKGIudGFnKXtjYXNlIDI6Y2FzZSAxNjpjYXNlIDE1OmNhc2UgMDpjYXNlIDExOmNhc2UgNzpjYXNlIDg6Y2FzZSAxMjpjYXNlIDk6Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClyaChiKT9iLmZsYWdzfD00OmQuaHlkcmF0ZXx8KGIuZmxhZ3N8PTI1Nik7Q2koYik7cmV0dXJuIG51bGw7Y2FzZSA1OmhoKGIpO3ZhciBlPWRoKGNoLmN1cnJlbnQpO2M9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSlEaShhLGIsYyxkLGUpLGEucmVmIT09Yi5yZWYmJihiLmZsYWdzfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1cbmIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7cmV0dXJuIG51bGx9YT1kaChhaC5jdXJyZW50KTtpZihyaChiKSl7ZD1iLnN0YXRlTm9kZTtjPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFt3Zl09YjtkW3hmXT1mO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGQpO0coXCJjbG9zZVwiLGQpO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoYT0wO2E8WGUubGVuZ3RoO2ErKylHKFhlW2FdLGQpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixkKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixkKTtHKFwibG9hZFwiLGQpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RyhcInRvZ2dsZVwiLGQpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGQsZik7RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwic2VsZWN0XCI6ZC5fd3JhcHBlclN0YXRlPVxue3dhc011bHRpcGxlOiEhZi5tdWx0aXBsZX07RyhcImludmFsaWRcIixkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpoYihkLGYpLEcoXCJpbnZhbGlkXCIsZCl9dmIoYyxmKTthPW51bGw7Zm9yKHZhciBnIGluIGYpZi5oYXNPd25Qcm9wZXJ0eShnKSYmKGU9ZltnXSxcImNoaWxkcmVuXCI9PT1nP1wic3RyaW5nXCI9PT10eXBlb2YgZT9kLnRleHRDb250ZW50IT09ZSYmKGE9W1wiY2hpbGRyZW5cIixlXSk6XCJudW1iZXJcIj09PXR5cGVvZiBlJiZkLnRleHRDb250ZW50IT09XCJcIitlJiYoYT1bXCJjaGlsZHJlblwiLFwiXCIrZV0pOmNhLmhhc093blByb3BlcnR5KGcpJiZudWxsIT1lJiZcIm9uU2Nyb2xsXCI9PT1nJiZHKFwic2Nyb2xsXCIsZCkpO3N3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpWYShkKTtjYihkLGYsITApO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGQpO2piKGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoZC5vbmNsaWNrPVxuamYpfWQ9YTtiLnVwZGF0ZVF1ZXVlPWQ7bnVsbCE9PWQmJihiLmZsYWdzfD00KX1lbHNle2c9OT09PWUubm9kZVR5cGU/ZTplLm93bmVyRG9jdW1lbnQ7YT09PWtiLmh0bWwmJihhPWxiKGMpKTthPT09a2IuaHRtbD9cInNjcmlwdFwiPT09Yz8oYT1nLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiksYS5pbm5lckhUTUw9XCI8c2NyaXB0PlxceDNjL3NjcmlwdD5cIixhPWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKSk6XCJzdHJpbmdcIj09PXR5cGVvZiBkLmlzP2E9Zy5jcmVhdGVFbGVtZW50KGMse2lzOmQuaXN9KTooYT1nLmNyZWF0ZUVsZW1lbnQoYyksXCJzZWxlY3RcIj09PWMmJihnPWEsZC5tdWx0aXBsZT9nLm11bHRpcGxlPSEwOmQuc2l6ZSYmKGcuc2l6ZT1kLnNpemUpKSk6YT1nLmNyZWF0ZUVsZW1lbnROUyhhLGMpO2Fbd2ZdPWI7YVt4Zl09ZDtCaShhLGIsITEsITEpO2Iuc3RhdGVOb2RlPWE7Zz13YihjLGQpO3N3aXRjaChjKXtjYXNlIFwiZGlhbG9nXCI6RyhcImNhbmNlbFwiLGEpO0coXCJjbG9zZVwiLGEpO1xuZT1kO2JyZWFrO2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6Y2FzZSBcImVtYmVkXCI6RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGU9MDtlPFhlLmxlbmd0aDtlKyspRyhYZVtlXSxhKTtlPWQ7YnJlYWs7Y2FzZSBcInNvdXJjZVwiOkcoXCJlcnJvclwiLGEpO2U9ZDticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpHKFwiZXJyb3JcIixhKTtHKFwibG9hZFwiLGEpO2U9ZDticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImlucHV0XCI6WmEoYSxkKTtlPVlhKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07ZT1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoYSxkKTtlPVxuZ2IoYSxkKTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2RlZmF1bHQ6ZT1kfXZiKGMsZSk7dmFyIGg9ZTtmb3IoZiBpbiBoKWlmKGguaGFzT3duUHJvcGVydHkoZikpe3ZhciBrPWhbZl07XCJzdHlsZVwiPT09Zj90YihhLGspOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWY/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmb2IoYSxrKSk6XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWN8fFwiXCIhPT1rKSYmcGIoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJnBiKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09ZiYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWYmJlwiYXV0b0ZvY3VzXCIhPT1mJiYoY2EuaGFzT3duUHJvcGVydHkoZik/bnVsbCE9ayYmXCJvblNjcm9sbFwiPT09ZiYmRyhcInNjcm9sbFwiLGEpOm51bGwhPWsmJnFhKGEsZixrLGcpKX1zd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoYSk7Y2IoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOlZhKGEpO2piKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIitTYShkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2Y9ZC52YWx1ZTtudWxsIT1mP2ZiKGEsISFkLm11bHRpcGxlLGYsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZmYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5vbkNsaWNrJiYoYS5vbmNsaWNrPWpmKX1tZihjLGQpJiYoYi5mbGFnc3w9NCl9bnVsbCE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KX1yZXR1cm4gbnVsbDtjYXNlIDY6aWYoYSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRWkoYSxiLGEubWVtb2l6ZWRQcm9wcyxkKTtlbHNle2lmKFwic3RyaW5nXCIhPT10eXBlb2YgZCYmbnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTY2KSk7XG5jPWRoKGNoLmN1cnJlbnQpO2RoKGFoLmN1cnJlbnQpO3JoKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbd2ZdPWIsZC5ub2RlVmFsdWUhPT1jJiYoYi5mbGFnc3w9NCkpOihkPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksZFt3Zl09YixiLnN0YXRlTm9kZT1kKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmZsYWdzJjY0KSlyZXR1cm4gYi5sYW5lcz1jLGI7ZD1udWxsIT09ZDtjPSExO251bGw9PT1hP3ZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5mYWxsYmFjayYmcmgoYik6Yz1udWxsIT09YS5tZW1vaXplZFN0YXRlO2lmKGQmJiFjJiYwIT09KGIubW9kZSYyKSlpZihudWxsPT09YSYmITAhPT1iLm1lbW9pemVkUHJvcHMudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fDAhPT0oUC5jdXJyZW50JjEpKTA9PT1WJiYoVj0zKTtlbHNle2lmKDA9PT1WfHwzPT09VilWPVxuNDtudWxsPT09VXx8MD09PShEZyYxMzQyMTc3MjcpJiYwPT09KEhpJjEzNDIxNzcyNyl8fElpKFUsVyl9aWYoZHx8YyliLmZsYWdzfD00O3JldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxDaShiKSxudWxsPT09YSYmY2YoYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksbnVsbDtjYXNlIDEwOnJldHVybiByZyhiKSxudWxsO2Nhc2UgMTc6cmV0dXJuIEZmKGIudHlwZSkmJkdmKCksbnVsbDtjYXNlIDE5OkgoUCk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7Zj0wIT09KGIuZmxhZ3MmNjQpO2c9ZC5yZW5kZXJpbmc7aWYobnVsbD09PWcpaWYoZilGaShkLCExKTtlbHNle2lmKDAhPT1WfHxudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlmb3IoYT1iLmNoaWxkO251bGwhPT1hOyl7Zz1paChhKTtpZihudWxsIT09Zyl7Yi5mbGFnc3w9NjQ7RmkoZCwhMSk7Zj1nLnVwZGF0ZVF1ZXVlO251bGwhPT1mJiYoYi51cGRhdGVRdWV1ZT1mLGIuZmxhZ3N8PTQpO1xubnVsbD09PWQubGFzdEVmZmVjdCYmKGIuZmlyc3RFZmZlY3Q9bnVsbCk7Yi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdDtkPWM7Zm9yKGM9Yi5jaGlsZDtudWxsIT09YzspZj1jLGE9ZCxmLmZsYWdzJj0yLGYubmV4dEVmZmVjdD1udWxsLGYuZmlyc3RFZmZlY3Q9bnVsbCxmLmxhc3RFZmZlY3Q9bnVsbCxnPWYuYWx0ZXJuYXRlLG51bGw9PT1nPyhmLmNoaWxkTGFuZXM9MCxmLmxhbmVzPWEsZi5jaGlsZD1udWxsLGYubWVtb2l6ZWRQcm9wcz1udWxsLGYubWVtb2l6ZWRTdGF0ZT1udWxsLGYudXBkYXRlUXVldWU9bnVsbCxmLmRlcGVuZGVuY2llcz1udWxsLGYuc3RhdGVOb2RlPW51bGwpOihmLmNoaWxkTGFuZXM9Zy5jaGlsZExhbmVzLGYubGFuZXM9Zy5sYW5lcyxmLmNoaWxkPWcuY2hpbGQsZi5tZW1vaXplZFByb3BzPWcubWVtb2l6ZWRQcm9wcyxmLm1lbW9pemVkU3RhdGU9Zy5tZW1vaXplZFN0YXRlLGYudXBkYXRlUXVldWU9Zy51cGRhdGVRdWV1ZSxmLnR5cGU9Zy50eXBlLGE9Zy5kZXBlbmRlbmNpZXMsXG5mLmRlcGVuZGVuY2llcz1udWxsPT09YT9udWxsOntsYW5lczphLmxhbmVzLGZpcnN0Q29udGV4dDphLmZpcnN0Q29udGV4dH0pLGM9Yy5zaWJsaW5nO0koUCxQLmN1cnJlbnQmMXwyKTtyZXR1cm4gYi5jaGlsZH1hPWEuc2libGluZ31udWxsIT09ZC50YWlsJiZPKCk+SmkmJihiLmZsYWdzfD02NCxmPSEwLEZpKGQsITEpLGIubGFuZXM9MzM1NTQ0MzIpfWVsc2V7aWYoIWYpaWYoYT1paChnKSxudWxsIT09YSl7aWYoYi5mbGFnc3w9NjQsZj0hMCxjPWEudXBkYXRlUXVldWUsbnVsbCE9PWMmJihiLnVwZGF0ZVF1ZXVlPWMsYi5mbGFnc3w9NCksRmkoZCwhMCksbnVsbD09PWQudGFpbCYmXCJoaWRkZW5cIj09PWQudGFpbE1vZGUmJiFnLmFsdGVybmF0ZSYmIWxoKXJldHVybiBiPWIubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3QsbnVsbCE9PWImJihiLm5leHRFZmZlY3Q9bnVsbCksbnVsbH1lbHNlIDIqTygpLWQucmVuZGVyaW5nU3RhcnRUaW1lPkppJiYxMDczNzQxODI0IT09YyYmKGIuZmxhZ3N8PVxuNjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKTtkLmlzQmFja3dhcmRzPyhnLnNpYmxpbmc9Yi5jaGlsZCxiLmNoaWxkPWcpOihjPWQubGFzdCxudWxsIT09Yz9jLnNpYmxpbmc9ZzpiLmNoaWxkPWcsZC5sYXN0PWcpfXJldHVybiBudWxsIT09ZC50YWlsPyhjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT1PKCksYy5zaWJsaW5nPW51bGwsYj1QLmN1cnJlbnQsSShQLGY/YiYxfDI6YiYxKSxjKTpudWxsO2Nhc2UgMjM6Y2FzZSAyNDpyZXR1cm4gS2koKSxudWxsIT09YSYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSE9PShudWxsIT09Yi5tZW1vaXplZFN0YXRlKSYmXCJ1bnN0YWJsZS1kZWZlci13aXRob3V0LWhpZGluZ1wiIT09ZC5tb2RlJiYoYi5mbGFnc3w9NCksbnVsbH10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO31cbmZ1bmN0aW9uIExpKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkZmKGEudHlwZSkmJkdmKCk7dmFyIGI9YS5mbGFncztyZXR1cm4gYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDM6ZmgoKTtIKE4pO0goTSk7dWgoKTtiPWEuZmxhZ3M7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih5KDI4NSkpO2EuZmxhZ3M9YiYtNDA5N3w2NDtyZXR1cm4gYTtjYXNlIDU6cmV0dXJuIGhoKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gSChQKSxiPWEuZmxhZ3MsYiY0MDk2PyhhLmZsYWdzPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKFApLG51bGw7Y2FzZSA0OnJldHVybiBmaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYSksbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1cbmZ1bmN0aW9uIE1pKGEsYil7dHJ5e3ZhciBjPVwiXCIsZD1iO2RvIGMrPVFhKGQpLGQ9ZC5yZXR1cm47d2hpbGUoZCk7dmFyIGU9Y31jYXRjaChmKXtlPVwiXFxuRXJyb3IgZ2VuZXJhdGluZyBzdGFjazogXCIrZi5tZXNzYWdlK1wiXFxuXCIrZi5zdGFja31yZXR1cm57dmFsdWU6YSxzb3VyY2U6YixzdGFjazplfX1mdW5jdGlvbiBOaShhLGIpe3RyeXtjb25zb2xlLmVycm9yKGIudmFsdWUpfWNhdGNoKGMpe3NldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyBjO30pfX12YXIgT2k9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtNYXA/V2Vha01hcDpNYXA7ZnVuY3Rpb24gUGkoYSxiLGMpe2M9emcoLTEsYyk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7UWl8fChRaT0hMCxSaT1kKTtOaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uIFNpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7dmFyIGQ9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcjtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7dmFyIGU9Yi52YWx1ZTtjLnBheWxvYWQ9ZnVuY3Rpb24oKXtOaShhLGIpO3JldHVybiBkKGUpfX12YXIgZj1hLnN0YXRlTm9kZTtudWxsIT09ZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGYuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7XCJmdW5jdGlvblwiIT09dHlwZW9mIGQmJihudWxsPT09VGk/VGk9bmV3IFNldChbdGhpc10pOlRpLmFkZCh0aGlzKSxOaShhLGIpKTt2YXIgYz1iLnN0YWNrO3RoaXMuY29tcG9uZW50RGlkQ2F0Y2goYi52YWx1ZSx7Y29tcG9uZW50U3RhY2s6bnVsbCE9PWM/YzpcIlwifSl9KTtyZXR1cm4gY312YXIgVWk9XCJmdW5jdGlvblwiPT09dHlwZW9mIFdlYWtTZXQ/V2Vha1NldDpTZXQ7XG5mdW5jdGlvbiBWaShhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtXaShhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9ZnVuY3Rpb24gWGkoYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpyZXR1cm47Y2FzZSAxOmlmKGIuZmxhZ3MmMjU2JiZudWxsIT09YSl7dmFyIGM9YS5tZW1vaXplZFByb3BzLGQ9YS5tZW1vaXplZFN0YXRlO2E9Yi5zdGF0ZU5vZGU7Yj1hLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKGIuZWxlbWVudFR5cGU9PT1iLnR5cGU/YzpsZyhiLnR5cGUsYyksZCk7YS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1ifXJldHVybjtjYXNlIDM6Yi5mbGFncyYyNTYmJnFmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO3JldHVybjtjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31cbmZ1bmN0aW9uIFlpKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpiPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3tpZigzPT09KGEudGFnJjMpKXt2YXIgZD1hLmNyZWF0ZTthLmRlc3Ryb3k9ZCgpfWE9YS5uZXh0fXdoaWxlKGEhPT1iKX1iPWMudXBkYXRlUXVldWU7Yj1udWxsIT09Yj9iLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yil7YT1iPWIubmV4dDtkb3t2YXIgZT1hO2Q9ZS5uZXh0O2U9ZS50YWc7MCE9PShlJjQpJiYwIT09KGUmMSkmJihaaShjLGEpLCRpKGMsYSkpO2E9ZH13aGlsZShhIT09Yil9cmV0dXJuO2Nhc2UgMTphPWMuc3RhdGVOb2RlO2MuZmxhZ3MmNCYmKG51bGw9PT1iP2EuY29tcG9uZW50RGlkTW91bnQoKTooZD1jLmVsZW1lbnRUeXBlPT09Yy50eXBlP2IubWVtb2l6ZWRQcm9wczpsZyhjLnR5cGUsYi5tZW1vaXplZFByb3BzKSxhLmNvbXBvbmVudERpZFVwZGF0ZShkLFxuYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpKSk7Yj1jLnVwZGF0ZVF1ZXVlO251bGwhPT1iJiZFZyhjLGIsYSk7cmV0dXJuO2Nhc2UgMzpiPWMudXBkYXRlUXVldWU7aWYobnVsbCE9PWIpe2E9bnVsbDtpZihudWxsIT09Yy5jaGlsZClzd2l0Y2goYy5jaGlsZC50YWcpe2Nhc2UgNTphPWMuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMTphPWMuY2hpbGQuc3RhdGVOb2RlfUVnKGMsYixhKX1yZXR1cm47Y2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZmxhZ3MmNCYmbWYoYy50eXBlLGMubWVtb2l6ZWRQcm9wcykmJmEuZm9jdXMoKTtyZXR1cm47Y2FzZSA2OnJldHVybjtjYXNlIDQ6cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbD09PWMubWVtb2l6ZWRTdGF0ZSYmKGM9Yy5hbHRlcm5hdGUsbnVsbCE9PWMmJihjPWMubWVtb2l6ZWRTdGF0ZSxudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGwhPT1jJiZDYyhjKSkpKTtcbnJldHVybjtjYXNlIDE5OmNhc2UgMTc6Y2FzZSAyMDpjYXNlIDIxOmNhc2UgMjM6Y2FzZSAyNDpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBhaihhLGIpe2Zvcih2YXIgYz1hOzspe2lmKDU9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoYilkPWQuc3R5bGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuc2V0UHJvcGVydHk/ZC5zZXRQcm9wZXJ0eShcImRpc3BsYXlcIixcIm5vbmVcIixcImltcG9ydGFudFwiKTpkLmRpc3BsYXk9XCJub25lXCI7ZWxzZXtkPWMuc3RhdGVOb2RlO3ZhciBlPWMubWVtb2l6ZWRQcm9wcy5zdHlsZTtlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbDtkLnN0eWxlLmRpc3BsYXk9c2IoXCJkaXNwbGF5XCIsZSl9fWVsc2UgaWYoNj09PWMudGFnKWMuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iP1wiXCI6Yy5tZW1vaXplZFByb3BzO2Vsc2UgaWYoKDIzIT09Yy50YWcmJjI0IT09Yy50YWd8fG51bGw9PT1jLm1lbW9pemVkU3RhdGV8fGM9PT1hKSYmbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1cbmEpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWEpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBiaihhLGIpe2lmKE1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgTWYub25Db21taXRGaWJlclVubW91bnQpdHJ5e01mLm9uQ29tbWl0RmliZXJVbm1vdW50KExmLGIpfWNhdGNoKGYpe31zd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOmE9Yi51cGRhdGVRdWV1ZTtpZihudWxsIT09YSYmKGE9YS5sYXN0RWZmZWN0LG51bGwhPT1hKSl7dmFyIGM9YT1hLm5leHQ7ZG97dmFyIGQ9YyxlPWQuZGVzdHJveTtkPWQudGFnO2lmKHZvaWQgMCE9PWUpaWYoMCE9PShkJjQpKVppKGIsYyk7ZWxzZXtkPWI7dHJ5e2UoKX1jYXRjaChmKXtXaShkLGYpfX1jPWMubmV4dH13aGlsZShjIT09YSl9YnJlYWs7Y2FzZSAxOlZpKGIpO2E9Yi5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEuY29tcG9uZW50V2lsbFVubW91bnQpdHJ5e2EucHJvcHM9Yi5tZW1vaXplZFByb3BzLGEuc3RhdGU9Yi5tZW1vaXplZFN0YXRlLGEuY29tcG9uZW50V2lsbFVubW91bnQoKX1jYXRjaChmKXtXaShiLFxuZil9YnJlYWs7Y2FzZSA1OlZpKGIpO2JyZWFrO2Nhc2UgNDpjaihhLGIpfX1mdW5jdGlvbiBkaihhKXthLmFsdGVybmF0ZT1udWxsO2EuY2hpbGQ9bnVsbDthLmRlcGVuZGVuY2llcz1udWxsO2EuZmlyc3RFZmZlY3Q9bnVsbDthLmxhc3RFZmZlY3Q9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLm1lbW9pemVkU3RhdGU9bnVsbDthLnBlbmRpbmdQcm9wcz1udWxsO2EucmV0dXJuPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsfWZ1bmN0aW9uIGVqKGEpe3JldHVybiA1PT09YS50YWd8fDM9PT1hLnRhZ3x8ND09PWEudGFnfVxuZnVuY3Rpb24gZmooYSl7YTp7Zm9yKHZhciBiPWEucmV0dXJuO251bGwhPT1iOyl7aWYoZWooYikpYnJlYWsgYTtiPWIucmV0dXJufXRocm93IEVycm9yKHkoMTYwKSk7fXZhciBjPWI7Yj1jLnN0YXRlTm9kZTtzd2l0Y2goYy50YWcpe2Nhc2UgNTp2YXIgZD0hMTticmVhaztjYXNlIDM6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztjYXNlIDQ6Yj1iLmNvbnRhaW5lckluZm87ZD0hMDticmVhaztkZWZhdWx0OnRocm93IEVycm9yKHkoMTYxKSk7fWMuZmxhZ3MmMTYmJihwYihiLFwiXCIpLGMuZmxhZ3MmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxlaihjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWcmJjE4IT09Yy50YWc7KXtpZihjLmZsYWdzJjIpY29udGludWUgYjtpZihudWxsPT09XG5jLmNoaWxkfHw0PT09Yy50YWcpY29udGludWUgYjtlbHNlIGMuY2hpbGQucmV0dXJuPWMsYz1jLmNoaWxkfWlmKCEoYy5mbGFncyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP2dqKGEsYyxiKTpoaihhLGMsYil9XG5mdW5jdGlvbiBnaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9amYpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoZ2ooYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylnaihhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBoaihhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGhqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspaGooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gY2ooYSxiKXtmb3IodmFyIGM9YixkPSExLGUsZjs7KXtpZighZCl7ZD1jLnJldHVybjthOmZvcig7Oyl7aWYobnVsbD09PWQpdGhyb3cgRXJyb3IoeSgxNjApKTtlPWQuc3RhdGVOb2RlO3N3aXRjaChkLnRhZyl7Y2FzZSA1OmY9ITE7YnJlYWsgYTtjYXNlIDM6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhO2Nhc2UgNDplPWUuY29udGFpbmVySW5mbztmPSEwO2JyZWFrIGF9ZD1kLnJldHVybn1kPSEwfWlmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKXthOmZvcih2YXIgZz1hLGg9YyxrPWg7OylpZihiaihnLGspLG51bGwhPT1rLmNoaWxkJiY0IT09ay50YWcpay5jaGlsZC5yZXR1cm49ayxrPWsuY2hpbGQ7ZWxzZXtpZihrPT09aClicmVhayBhO2Zvcig7bnVsbD09PWsuc2libGluZzspe2lmKG51bGw9PT1rLnJldHVybnx8ay5yZXR1cm49PT1oKWJyZWFrIGE7az1rLnJldHVybn1rLnNpYmxpbmcucmV0dXJuPWsucmV0dXJuO2s9ay5zaWJsaW5nfWY/KGc9ZSxoPWMuc3RhdGVOb2RlLFxuOD09PWcubm9kZVR5cGU/Zy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGgpOmcucmVtb3ZlQ2hpbGQoaCkpOmUucmVtb3ZlQ2hpbGQoYy5zdGF0ZU5vZGUpfWVsc2UgaWYoND09PWMudGFnKXtpZihudWxsIT09Yy5jaGlsZCl7ZT1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Y9ITA7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9fWVsc2UgaWYoYmooYSxjKSxudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm47ND09PWMudGFnJiYoZD0hMSl9Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319XG5mdW5jdGlvbiBpaihhLGIpe3N3aXRjaChiLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNDpjYXNlIDE1OmNhc2UgMjI6dmFyIGM9Yi51cGRhdGVRdWV1ZTtjPW51bGwhPT1jP2MubGFzdEVmZmVjdDpudWxsO2lmKG51bGwhPT1jKXt2YXIgZD1jPWMubmV4dDtkbyAzPT09KGQudGFnJjMpJiYoYT1kLmRlc3Ryb3ksZC5kZXN0cm95PXZvaWQgMCx2b2lkIDAhPT1hJiZhKCkpLGQ9ZC5uZXh0O3doaWxlKGQhPT1jKX1yZXR1cm47Y2FzZSAxOnJldHVybjtjYXNlIDU6Yz1iLnN0YXRlTm9kZTtpZihudWxsIT1jKXtkPWIubWVtb2l6ZWRQcm9wczt2YXIgZT1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6ZDthPWIudHlwZTt2YXIgZj1iLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9bnVsbDtpZihudWxsIT09Zil7Y1t4Zl09ZDtcImlucHV0XCI9PT1hJiZcInJhZGlvXCI9PT1kLnR5cGUmJm51bGwhPWQubmFtZSYmJGEoYyxkKTt3YihhLGUpO2I9d2IoYSxkKTtmb3IoZT0wO2U8Zi5sZW5ndGg7ZSs9XG4yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/dGIoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP29iKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9wYihjLGgpOnFhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjphYihjLGQpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGMsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmE9Yy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWQubXVsdGlwbGUsZj1kLnZhbHVlLG51bGwhPWY/ZmIoYywhIWQubXVsdGlwbGUsZiwhMSk6YSE9PSEhZC5tdWx0aXBsZSYmKG51bGwhPWQuZGVmYXVsdFZhbHVlP2ZiKGMsISFkLm11bHRpcGxlLGQuZGVmYXVsdFZhbHVlLCEwKTpmYihjLCEhZC5tdWx0aXBsZSxkLm11bHRpcGxlP1tdOlwiXCIsITEpKX19fXJldHVybjtjYXNlIDY6aWYobnVsbD09PWIuc3RhdGVOb2RlKXRocm93IEVycm9yKHkoMTYyKSk7Yi5zdGF0ZU5vZGUubm9kZVZhbHVlPVxuYi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yz1iLnN0YXRlTm9kZTtjLmh5ZHJhdGUmJihjLmh5ZHJhdGU9ITEsQ2MoYy5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSYmKGpqPU8oKSxhaihiLmNoaWxkLCEwKSk7a2ooYik7cmV0dXJuO2Nhc2UgMTk6a2ooYik7cmV0dXJuO2Nhc2UgMTc6cmV0dXJuO2Nhc2UgMjM6Y2FzZSAyNDphaihiLG51bGwhPT1iLm1lbW9pemVkU3RhdGUpO3JldHVybn10aHJvdyBFcnJvcih5KDE2MykpO31mdW5jdGlvbiBraihhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBVaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPWxqLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxuZnVuY3Rpb24gbWooYSxiKXtyZXR1cm4gbnVsbCE9PWEmJihhPWEubWVtb2l6ZWRTdGF0ZSxudWxsPT09YXx8bnVsbCE9PWEuZGVoeWRyYXRlZCk/KGI9Yi5tZW1vaXplZFN0YXRlLG51bGwhPT1iJiZudWxsPT09Yi5kZWh5ZHJhdGVkKTohMX12YXIgbmo9TWF0aC5jZWlsLG9qPXJhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIscGo9cmEuUmVhY3RDdXJyZW50T3duZXIsWD0wLFU9bnVsbCxZPW51bGwsVz0wLHFqPTAscmo9QmYoMCksVj0wLHNqPW51bGwsdGo9MCxEZz0wLEhpPTAsdWo9MCx2aj1udWxsLGpqPTAsSmk9SW5maW5pdHk7ZnVuY3Rpb24gd2ooKXtKaT1PKCkrNTAwfXZhciBaPW51bGwsUWk9ITEsUmk9bnVsbCxUaT1udWxsLHhqPSExLHlqPW51bGwsemo9OTAsQWo9W10sQmo9W10sQ2o9bnVsbCxEaj0wLEVqPW51bGwsRmo9LTEsR2o9MCxIaj0wLElqPW51bGwsSmo9ITE7ZnVuY3Rpb24gSGcoKXtyZXR1cm4gMCE9PShYJjQ4KT9PKCk6LTEhPT1Gaj9GajpGaj1PKCl9XG5mdW5jdGlvbiBJZyhhKXthPWEubW9kZTtpZigwPT09KGEmMikpcmV0dXJuIDE7aWYoMD09PShhJjQpKXJldHVybiA5OT09PWVnKCk/MToyOzA9PT1HaiYmKEdqPXRqKTtpZigwIT09a2cudHJhbnNpdGlvbil7MCE9PUhqJiYoSGo9bnVsbCE9PXZqP3ZqLnBlbmRpbmdMYW5lczowKTthPUdqO3ZhciBiPTQxODYxMTImfkhqO2ImPS1iOzA9PT1iJiYoYT00MTg2MTEyJn5hLGI9YSYtYSwwPT09YiYmKGI9ODE5MikpO3JldHVybiBifWE9ZWcoKTswIT09KFgmNCkmJjk4PT09YT9hPVhjKDEyLEdqKTooYT1TYyhhKSxhPVhjKGEsR2opKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIEpnKGEsYixjKXtpZig1MDxEail0aHJvdyBEaj0wLEVqPW51bGwsRXJyb3IoeSgxODUpKTthPUtqKGEsYik7aWYobnVsbD09PWEpcmV0dXJuIG51bGw7JGMoYSxiLGMpO2E9PT1VJiYoSGl8PWIsND09PVYmJklpKGEsVykpO3ZhciBkPWVnKCk7MT09PWI/MCE9PShYJjgpJiYwPT09KFgmNDgpP0xqKGEpOihNaihhLGMpLDA9PT1YJiYod2ooKSxpZygpKSk6KDA9PT0oWCY0KXx8OTghPT1kJiY5OSE9PWR8fChudWxsPT09Q2o/Q2o9bmV3IFNldChbYV0pOkNqLmFkZChhKSksTWooYSxjKSk7dmo9YX1mdW5jdGlvbiBLaihhLGIpe2EubGFuZXN8PWI7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJihjLmxhbmVzfD1iKTtjPWE7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWE7KWEuY2hpbGRMYW5lc3w9YixjPWEuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYy5jaGlsZExhbmVzfD1iKSxjPWEsYT1hLnJldHVybjtyZXR1cm4gMz09PWMudGFnP2Muc3RhdGVOb2RlOm51bGx9XG5mdW5jdGlvbiBNaihhLGIpe2Zvcih2YXIgYz1hLmNhbGxiYWNrTm9kZSxkPWEuc3VzcGVuZGVkTGFuZXMsZT1hLnBpbmdlZExhbmVzLGY9YS5leHBpcmF0aW9uVGltZXMsZz1hLnBlbmRpbmdMYW5lczswPGc7KXt2YXIgaD0zMS1WYyhnKSxrPTE8PGgsbD1mW2hdO2lmKC0xPT09bCl7aWYoMD09PShrJmQpfHwwIT09KGsmZSkpe2w9YjtSYyhrKTt2YXIgbj1GO2ZbaF09MTA8PW4/bCsyNTA6Njw9bj9sKzVFMzotMX19ZWxzZSBsPD1iJiYoYS5leHBpcmVkTGFuZXN8PWspO2cmPX5rfWQ9VWMoYSxhPT09VT9XOjApO2I9RjtpZigwPT09ZCludWxsIT09YyYmKGMhPT1aZiYmUGYoYyksYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrUHJpb3JpdHk9MCk7ZWxzZXtpZihudWxsIT09Yyl7aWYoYS5jYWxsYmFja1ByaW9yaXR5PT09YilyZXR1cm47YyE9PVpmJiZQZihjKX0xNT09PWI/KGM9TGouYmluZChudWxsLGEpLG51bGw9PT1hZz8oYWc9W2NdLGJnPU9mKFVmLGpnKSk6YWcucHVzaChjKSxcbmM9WmYpOjE0PT09Yj9jPWhnKDk5LExqLmJpbmQobnVsbCxhKSk6KGM9VGMoYiksYz1oZyhjLE5qLmJpbmQobnVsbCxhKSkpO2EuY2FsbGJhY2tQcmlvcml0eT1iO2EuY2FsbGJhY2tOb2RlPWN9fVxuZnVuY3Rpb24gTmooYSl7Rmo9LTE7SGo9R2o9MDtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGI9YS5jYWxsYmFja05vZGU7aWYoT2ooKSYmYS5jYWxsYmFja05vZGUhPT1iKXJldHVybiBudWxsO3ZhciBjPVVjKGEsYT09PVU/VzowKTtpZigwPT09YylyZXR1cm4gbnVsbDt2YXIgZD1jO3ZhciBlPVg7WHw9MTY7dmFyIGY9UGooKTtpZihVIT09YXx8VyE9PWQpd2ooKSxRaihhLGQpO2RvIHRyeXtSaigpO2JyZWFrfWNhdGNoKGgpe1NqKGEsaCl9d2hpbGUoMSk7cWcoKTtvai5jdXJyZW50PWY7WD1lO251bGwhPT1ZP2Q9MDooVT1udWxsLFc9MCxkPVYpO2lmKDAhPT0odGomSGkpKVFqKGEsMCk7ZWxzZSBpZigwIT09ZCl7Mj09PWQmJihYfD02NCxhLmh5ZHJhdGUmJihhLmh5ZHJhdGU9ITEscWYoYS5jb250YWluZXJJbmZvKSksYz1XYyhhKSwwIT09YyYmKGQ9VGooYSxjKSkpO2lmKDE9PT1kKXRocm93IGI9c2osUWooYSwwKSxJaShhLGMpLE1qKGEsTygpKSxiO2EuZmluaXNoZWRXb3JrPVxuYS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9Yztzd2l0Y2goZCl7Y2FzZSAwOmNhc2UgMTp0aHJvdyBFcnJvcih5KDM0NSkpO2Nhc2UgMjpVaihhKTticmVhaztjYXNlIDM6SWkoYSxjKTtpZigoYyY2MjkxNDU2MCk9PT1jJiYoZD1qais1MDAtTygpLDEwPGQpKXtpZigwIT09VWMoYSwwKSlicmVhaztlPWEuc3VzcGVuZGVkTGFuZXM7aWYoKGUmYykhPT1jKXtIZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmZTticmVha31hLnRpbWVvdXRIYW5kbGU9b2YoVWouYmluZChudWxsLGEpLGQpO2JyZWFrfVVqKGEpO2JyZWFrO2Nhc2UgNDpJaShhLGMpO2lmKChjJjQxODYxMTIpPT09YylicmVhaztkPWEuZXZlbnRUaW1lcztmb3IoZT0tMTswPGM7KXt2YXIgZz0zMS1WYyhjKTtmPTE8PGc7Zz1kW2ddO2c+ZSYmKGU9Zyk7YyY9fmZ9Yz1lO2M9TygpLWM7Yz0oMTIwPmM/MTIwOjQ4MD5jPzQ4MDoxMDgwPmM/MTA4MDoxOTIwPmM/MTkyMDozRTM+Yz8zRTM6NDMyMD5cbmM/NDMyMDoxOTYwKm5qKGMvMTk2MCkpLWM7aWYoMTA8Yyl7YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxjKTticmVha31VaihhKTticmVhaztjYXNlIDU6VWooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDMyOSkpO319TWooYSxPKCkpO3JldHVybiBhLmNhbGxiYWNrTm9kZT09PWI/TmouYmluZChudWxsLGEpOm51bGx9ZnVuY3Rpb24gSWkoYSxiKXtiJj1+dWo7YiY9fkhpO2Euc3VzcGVuZGVkTGFuZXN8PWI7YS5waW5nZWRMYW5lcyY9fmI7Zm9yKGE9YS5leHBpcmF0aW9uVGltZXM7MDxiOyl7dmFyIGM9MzEtVmMoYiksZD0xPDxjO2FbY109LTE7YiY9fmR9fVxuZnVuY3Rpb24gTGooYSl7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO09qKCk7aWYoYT09PVUmJjAhPT0oYS5leHBpcmVkTGFuZXMmVykpe3ZhciBiPVc7dmFyIGM9VGooYSxiKTswIT09KHRqJkhpKSYmKGI9VWMoYSxiKSxjPVRqKGEsYikpfWVsc2UgYj1VYyhhLDApLGM9VGooYSxiKTswIT09YS50YWcmJjI9PT1jJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGI9V2MoYSksMCE9PWImJihjPVRqKGEsYikpKTtpZigxPT09Yyl0aHJvdyBjPXNqLFFqKGEsMCksSWkoYSxiKSxNaihhLE8oKSksYzthLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlO2EuZmluaXNoZWRMYW5lcz1iO1VqKGEpO01qKGEsTygpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFZqKCl7aWYobnVsbCE9PUNqKXt2YXIgYT1DajtDaj1udWxsO2EuZm9yRWFjaChmdW5jdGlvbihhKXthLmV4cGlyZWRMYW5lc3w9MjQmYS5wZW5kaW5nTGFuZXM7TWooYSxPKCkpfSl9aWcoKX1mdW5jdGlvbiBXaihhLGIpe3ZhciBjPVg7WHw9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBYaihhLGIpe3ZhciBjPVg7WCY9LTI7WHw9ODt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtYPWMsMD09PVgmJih3aigpLGlnKCkpfX1mdW5jdGlvbiBuaShhLGIpe0kocmoscWopO3FqfD1iO3RqfD1ifWZ1bmN0aW9uIEtpKCl7cWo9cmouY3VycmVudDtIKHJqKX1cbmZ1bmN0aW9uIFFqKGEsYil7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDt2YXIgYz1hLnRpbWVvdXRIYW5kbGU7LTEhPT1jJiYoYS50aW1lb3V0SGFuZGxlPS0xLHBmKGMpKTtpZihudWxsIT09WSlmb3IoYz1ZLnJldHVybjtudWxsIT09Yzspe3ZhciBkPWM7c3dpdGNoKGQudGFnKXtjYXNlIDE6ZD1kLnR5cGUuY2hpbGRDb250ZXh0VHlwZXM7bnVsbCE9PWQmJnZvaWQgMCE9PWQmJkdmKCk7YnJlYWs7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7YnJlYWs7Y2FzZSA1OmhoKGQpO2JyZWFrO2Nhc2UgNDpmaCgpO2JyZWFrO2Nhc2UgMTM6SChQKTticmVhaztjYXNlIDE5OkgoUCk7YnJlYWs7Y2FzZSAxMDpyZyhkKTticmVhaztjYXNlIDIzOmNhc2UgMjQ6S2koKX1jPWMucmV0dXJufVU9YTtZPVRnKGEuY3VycmVudCxudWxsKTtXPXFqPXRqPWI7Vj0wO3NqPW51bGw7dWo9SGk9RGc9MH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG97dmFyIGM9WTt0cnl7cWcoKTt2aC5jdXJyZW50PUdoO2lmKHloKXtmb3IodmFyIGQ9Ui5tZW1vaXplZFN0YXRlO251bGwhPT1kOyl7dmFyIGU9ZC5xdWV1ZTtudWxsIT09ZSYmKGUucGVuZGluZz1udWxsKTtkPWQubmV4dH15aD0hMX14aD0wO1Q9Uz1SPW51bGw7emg9ITE7cGouY3VycmVudD1udWxsO2lmKG51bGw9PT1jfHxudWxsPT09Yy5yZXR1cm4pe1Y9MTtzaj1iO1k9bnVsbDticmVha31hOnt2YXIgZj1hLGc9Yy5yZXR1cm4saD1jLGs9YjtiPVc7aC5mbGFnc3w9MjA0ODtoLmZpcnN0RWZmZWN0PWgubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1rJiZcIm9iamVjdFwiPT09dHlwZW9mIGsmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBrLnRoZW4pe3ZhciBsPWs7aWYoMD09PShoLm1vZGUmMikpe3ZhciBuPWguYWx0ZXJuYXRlO24/KGgudXBkYXRlUXVldWU9bi51cGRhdGVRdWV1ZSxoLm1lbW9pemVkU3RhdGU9bi5tZW1vaXplZFN0YXRlLGgubGFuZXM9bi5sYW5lcyk6XG4oaC51cGRhdGVRdWV1ZT1udWxsLGgubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgQT0wIT09KFAuY3VycmVudCYxKSxwPWc7ZG97dmFyIEM7aWYoQz0xMz09PXAudGFnKXt2YXIgeD1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXgpQz1udWxsIT09eC5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIHc9cC5tZW1vaXplZFByb3BzO0M9dm9pZCAwPT09dy5mYWxsYmFjaz8hMTohMCE9PXcudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6QT8hMTohMH19aWYoQyl7dmFyIHo9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09eil7dmFyIHU9bmV3IFNldDt1LmFkZChsKTtwLnVwZGF0ZVF1ZXVlPXV9ZWxzZSB6LmFkZChsKTtpZigwPT09KHAubW9kZSYyKSl7cC5mbGFnc3w9NjQ7aC5mbGFnc3w9MTYzODQ7aC5mbGFncyY9LTI5ODE7aWYoMT09PWgudGFnKWlmKG51bGw9PT1oLmFsdGVybmF0ZSloLnRhZz0xNztlbHNle3ZhciB0PXpnKC0xLDEpO3QudGFnPTI7QWcoaCx0KX1oLmxhbmVzfD0xO2JyZWFrIGF9az1cbnZvaWQgMDtoPWI7dmFyIHE9Zi5waW5nQ2FjaGU7bnVsbD09PXE/KHE9Zi5waW5nQ2FjaGU9bmV3IE9pLGs9bmV3IFNldCxxLnNldChsLGspKTooaz1xLmdldChsKSx2b2lkIDA9PT1rJiYoaz1uZXcgU2V0LHEuc2V0KGwsaykpKTtpZighay5oYXMoaCkpe2suYWRkKGgpO3ZhciB2PVlqLmJpbmQobnVsbCxmLGwsaCk7bC50aGVuKHYsdil9cC5mbGFnc3w9NDA5NjtwLmxhbmVzPWI7YnJlYWsgYX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKTtrPUVycm9yKChSYShoLnR5cGUpfHxcIkEgUmVhY3QgY29tcG9uZW50XCIpK1wiIHN1c3BlbmRlZCB3aGlsZSByZW5kZXJpbmcsIGJ1dCBubyBmYWxsYmFjayBVSSB3YXMgc3BlY2lmaWVkLlxcblxcbkFkZCBhIDxTdXNwZW5zZSBmYWxsYmFjaz0uLi4+IGNvbXBvbmVudCBoaWdoZXIgaW4gdGhlIHRyZWUgdG8gcHJvdmlkZSBhIGxvYWRpbmcgaW5kaWNhdG9yIG9yIHBsYWNlaG9sZGVyIHRvIGRpc3BsYXkuXCIpfTUhPT1WJiYoVj0yKTtrPU1pKGssaCk7cD1cbmc7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6Zj1rO3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgSj1QaShwLGYsYik7QmcocCxKKTticmVhayBhO2Nhc2UgMTpmPWs7dmFyIEs9cC50eXBlLFE9cC5zdGF0ZU5vZGU7aWYoMD09PShwLmZsYWdzJjY0KSYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBLLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcnx8bnVsbCE9PVEmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBRLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKFEpKSkpe3AuZmxhZ3N8PTQwOTY7YiY9LWI7cC5sYW5lc3w9Yjt2YXIgTD1TaShwLGYsYik7QmcocCxMKTticmVhayBhfX1wPXAucmV0dXJufXdoaWxlKG51bGwhPT1wKX1aaihjKX1jYXRjaCh2YSl7Yj12YTtZPT09YyYmbnVsbCE9PWMmJihZPWM9Yy5yZXR1cm4pO2NvbnRpbnVlfWJyZWFrfXdoaWxlKDEpfVxuZnVuY3Rpb24gUGooKXt2YXIgYT1vai5jdXJyZW50O29qLmN1cnJlbnQ9R2g7cmV0dXJuIG51bGw9PT1hP0doOmF9ZnVuY3Rpb24gVGooYSxiKXt2YXIgYz1YO1h8PTE2O3ZhciBkPVBqKCk7VT09PWEmJlc9PT1ifHxRaihhLGIpO2RvIHRyeXthaygpO2JyZWFrfWNhdGNoKGUpe1NqKGEsZSl9d2hpbGUoMSk7cWcoKTtYPWM7b2ouY3VycmVudD1kO2lmKG51bGwhPT1ZKXRocm93IEVycm9yKHkoMjYxKSk7VT1udWxsO1c9MDtyZXR1cm4gVn1mdW5jdGlvbiBhaygpe2Zvcig7bnVsbCE9PVk7KWJrKFkpfWZ1bmN0aW9uIFJqKCl7Zm9yKDtudWxsIT09WSYmIVFmKCk7KWJrKFkpfWZ1bmN0aW9uIGJrKGEpe3ZhciBiPWNrKGEuYWx0ZXJuYXRlLGEscWopO2EubWVtb2l6ZWRQcm9wcz1hLnBlbmRpbmdQcm9wcztudWxsPT09Yj9aaihhKTpZPWI7cGouY3VycmVudD1udWxsfVxuZnVuY3Rpb24gWmooYSl7dmFyIGI9YTtkb3t2YXIgYz1iLmFsdGVybmF0ZTthPWIucmV0dXJuO2lmKDA9PT0oYi5mbGFncyYyMDQ4KSl7Yz1HaShjLGIscWopO2lmKG51bGwhPT1jKXtZPWM7cmV0dXJufWM9YjtpZigyNCE9PWMudGFnJiYyMyE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHwwIT09KHFqJjEwNzM3NDE4MjQpfHwwPT09KGMubW9kZSY0KSl7Zm9yKHZhciBkPTAsZT1jLmNoaWxkO251bGwhPT1lOylkfD1lLmxhbmVzfGUuY2hpbGRMYW5lcyxlPWUuc2libGluZztjLmNoaWxkTGFuZXM9ZH1udWxsIT09YSYmMD09PShhLmZsYWdzJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLG51bGwhPT1iLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yi5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCksMTxiLmZsYWdzJiYobnVsbCE9PVxuYS5sYXN0RWZmZWN0P2EubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWI6YS5maXJzdEVmZmVjdD1iLGEubGFzdEVmZmVjdD1iKSl9ZWxzZXtjPUxpKGIpO2lmKG51bGwhPT1jKXtjLmZsYWdzJj0yMDQ3O1k9YztyZXR1cm59bnVsbCE9PWEmJihhLmZpcnN0RWZmZWN0PWEubGFzdEVmZmVjdD1udWxsLGEuZmxhZ3N8PTIwNDgpfWI9Yi5zaWJsaW5nO2lmKG51bGwhPT1iKXtZPWI7cmV0dXJufVk9Yj1hfXdoaWxlKG51bGwhPT1iKTswPT09ViYmKFY9NSl9ZnVuY3Rpb24gVWooYSl7dmFyIGI9ZWcoKTtnZyg5OSxkay5iaW5kKG51bGwsYSxiKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBkayhhLGIpe2RvIE9qKCk7d2hpbGUobnVsbCE9PXlqKTtpZigwIT09KFgmNDgpKXRocm93IEVycm9yKHkoMzI3KSk7dmFyIGM9YS5maW5pc2hlZFdvcms7aWYobnVsbD09PWMpcmV0dXJuIG51bGw7YS5maW5pc2hlZFdvcms9bnVsbDthLmZpbmlzaGVkTGFuZXM9MDtpZihjPT09YS5jdXJyZW50KXRocm93IEVycm9yKHkoMTc3KSk7YS5jYWxsYmFja05vZGU9bnVsbDt2YXIgZD1jLmxhbmVzfGMuY2hpbGRMYW5lcyxlPWQsZj1hLnBlbmRpbmdMYW5lcyZ+ZTthLnBlbmRpbmdMYW5lcz1lO2Euc3VzcGVuZGVkTGFuZXM9MDthLnBpbmdlZExhbmVzPTA7YS5leHBpcmVkTGFuZXMmPWU7YS5tdXRhYmxlUmVhZExhbmVzJj1lO2EuZW50YW5nbGVkTGFuZXMmPWU7ZT1hLmVudGFuZ2xlbWVudHM7Zm9yKHZhciBnPWEuZXZlbnRUaW1lcyxoPWEuZXhwaXJhdGlvblRpbWVzOzA8Zjspe3ZhciBrPTMxLVZjKGYpLGw9MTw8aztlW2tdPTA7Z1trXT0tMTtoW2tdPS0xO2YmPX5sfW51bGwhPT1cbkNqJiYwPT09KGQmMjQpJiZDai5oYXMoYSkmJkNqLmRlbGV0ZShhKTthPT09VSYmKFk9VT1udWxsLFc9MCk7MTxjLmZsYWdzP251bGwhPT1jLmxhc3RFZmZlY3Q/KGMubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsZD1jLmZpcnN0RWZmZWN0KTpkPWM6ZD1jLmZpcnN0RWZmZWN0O2lmKG51bGwhPT1kKXtlPVg7WHw9MzI7cGouY3VycmVudD1udWxsO2tmPWZkO2c9TmUoKTtpZihPZShnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyloPXtzdGFydDpnLnNlbGVjdGlvblN0YXJ0LGVuZDpnLnNlbGVjdGlvbkVuZH07ZWxzZSBhOmlmKGg9KGg9Zy5vd25lckRvY3VtZW50KSYmaC5kZWZhdWx0Vmlld3x8d2luZG93LChsPWguZ2V0U2VsZWN0aW9uJiZoLmdldFNlbGVjdGlvbigpKSYmMCE9PWwucmFuZ2VDb3VudCl7aD1sLmFuY2hvck5vZGU7Zj1sLmFuY2hvck9mZnNldDtrPWwuZm9jdXNOb2RlO2w9bC5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxrLm5vZGVUeXBlfWNhdGNoKHZhKXtoPW51bGw7XG5icmVhayBhfXZhciBuPTAsQT0tMSxwPS0xLEM9MCx4PTAsdz1nLHo9bnVsbDtiOmZvcig7Oyl7Zm9yKHZhciB1Ozspe3chPT1ofHwwIT09ZiYmMyE9PXcubm9kZVR5cGV8fChBPW4rZik7dyE9PWt8fDAhPT1sJiYzIT09dy5ub2RlVHlwZXx8KHA9bitsKTszPT09dy5ub2RlVHlwZSYmKG4rPXcubm9kZVZhbHVlLmxlbmd0aCk7aWYobnVsbD09PSh1PXcuZmlyc3RDaGlsZCkpYnJlYWs7ej13O3c9dX1mb3IoOzspe2lmKHc9PT1nKWJyZWFrIGI7ej09PWgmJisrQz09PWYmJihBPW4pO3o9PT1rJiYrK3g9PT1sJiYocD1uKTtpZihudWxsIT09KHU9dy5uZXh0U2libGluZykpYnJlYWs7dz16O3o9dy5wYXJlbnROb2RlfXc9dX1oPS0xPT09QXx8LTE9PT1wP251bGw6e3N0YXJ0OkEsZW5kOnB9fWVsc2UgaD1udWxsO2g9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1udWxsO2xmPXtmb2N1c2VkRWxlbTpnLHNlbGVjdGlvblJhbmdlOmh9O2ZkPSExO0lqPW51bGw7Smo9ITE7Wj1kO2RvIHRyeXtlaygpfWNhdGNoKHZhKXtpZihudWxsPT09XG5aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO0lqPW51bGw7Wj1kO2RvIHRyeXtmb3IoZz1hO251bGwhPT1aOyl7dmFyIHQ9Wi5mbGFnczt0JjE2JiZwYihaLnN0YXRlTm9kZSxcIlwiKTtpZih0JjEyOCl7dmFyIHE9Wi5hbHRlcm5hdGU7aWYobnVsbCE9PXEpe3ZhciB2PXEucmVmO251bGwhPT12JiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHY/dihudWxsKTp2LmN1cnJlbnQ9bnVsbCl9fXN3aXRjaCh0JjEwMzgpe2Nhc2UgMjpmaihaKTtaLmZsYWdzJj0tMzticmVhaztjYXNlIDY6ZmooWik7Wi5mbGFncyY9LTM7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSAxMDI0OlouZmxhZ3MmPS0xMDI1O2JyZWFrO2Nhc2UgMTAyODpaLmZsYWdzJj0tMTAyNTtpaihaLmFsdGVybmF0ZSxaKTticmVhaztjYXNlIDQ6aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA4Omg9WjtjaihnLGgpO3ZhciBKPWguYWx0ZXJuYXRlO2RqKGgpO251bGwhPT1cbkomJmRqKEopfVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7dj1sZjtxPU5lKCk7dD12LmZvY3VzZWRFbGVtO2c9di5zZWxlY3Rpb25SYW5nZTtpZihxIT09dCYmdCYmdC5vd25lckRvY3VtZW50JiZNZSh0Lm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHQpKXtudWxsIT09ZyYmT2UodCkmJihxPWcuc3RhcnQsdj1nLmVuZCx2b2lkIDA9PT12JiYodj1xKSxcInNlbGVjdGlvblN0YXJ0XCJpbiB0Pyh0LnNlbGVjdGlvblN0YXJ0PXEsdC5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odix0LnZhbHVlLmxlbmd0aCkpOih2PShxPXQub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZxLmRlZmF1bHRWaWV3fHx3aW5kb3csdi5nZXRTZWxlY3Rpb24mJih2PXYuZ2V0U2VsZWN0aW9uKCksaD10LnRleHRDb250ZW50Lmxlbmd0aCxKPU1hdGgubWluKGcuc3RhcnQsaCksZz12b2lkIDA9PT1cbmcuZW5kP0o6TWF0aC5taW4oZy5lbmQsaCksIXYuZXh0ZW5kJiZKPmcmJihoPWcsZz1KLEo9aCksaD1MZSh0LEopLGY9TGUodCxnKSxoJiZmJiYoMSE9PXYucmFuZ2VDb3VudHx8di5hbmNob3JOb2RlIT09aC5ub2RlfHx2LmFuY2hvck9mZnNldCE9PWgub2Zmc2V0fHx2LmZvY3VzTm9kZSE9PWYubm9kZXx8di5mb2N1c09mZnNldCE9PWYub2Zmc2V0KSYmKHE9cS5jcmVhdGVSYW5nZSgpLHEuc2V0U3RhcnQoaC5ub2RlLGgub2Zmc2V0KSx2LnJlbW92ZUFsbFJhbmdlcygpLEo+Zz8odi5hZGRSYW5nZShxKSx2LmV4dGVuZChmLm5vZGUsZi5vZmZzZXQpKToocS5zZXRFbmQoZi5ub2RlLGYub2Zmc2V0KSx2LmFkZFJhbmdlKHEpKSkpKSk7cT1bXTtmb3Iodj10O3Y9di5wYXJlbnROb2RlOykxPT09di5ub2RlVHlwZSYmcS5wdXNoKHtlbGVtZW50OnYsbGVmdDp2LnNjcm9sbExlZnQsdG9wOnYuc2Nyb2xsVG9wfSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIHQuZm9jdXMmJnQuZm9jdXMoKTtmb3IodD1cbjA7dDxxLmxlbmd0aDt0Kyspdj1xW3RdLHYuZWxlbWVudC5zY3JvbGxMZWZ0PXYubGVmdCx2LmVsZW1lbnQuc2Nyb2xsVG9wPXYudG9wfWZkPSEha2Y7bGY9a2Y9bnVsbDthLmN1cnJlbnQ9YztaPWQ7ZG8gdHJ5e2Zvcih0PWE7bnVsbCE9PVo7KXt2YXIgSz1aLmZsYWdzO0smMzYmJllpKHQsWi5hbHRlcm5hdGUsWik7aWYoSyYxMjgpe3E9dm9pZCAwO3ZhciBRPVoucmVmO2lmKG51bGwhPT1RKXt2YXIgTD1aLnN0YXRlTm9kZTtzd2l0Y2goWi50YWcpe2Nhc2UgNTpxPUw7YnJlYWs7ZGVmYXVsdDpxPUx9XCJmdW5jdGlvblwiPT09dHlwZW9mIFE/UShxKTpRLmN1cnJlbnQ9cX19Wj1aLm5leHRFZmZlY3R9fWNhdGNoKHZhKXtpZihudWxsPT09Wil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtaPW51bGw7JGYoKTtYPWV9ZWxzZSBhLmN1cnJlbnQ9YztpZih4ail4aj0hMSx5aj1hLHpqPWI7ZWxzZSBmb3IoWj1kO251bGwhPT1aOyliPVxuWi5uZXh0RWZmZWN0LFoubmV4dEVmZmVjdD1udWxsLFouZmxhZ3MmOCYmKEs9WixLLnNpYmxpbmc9bnVsbCxLLnN0YXRlTm9kZT1udWxsKSxaPWI7ZD1hLnBlbmRpbmdMYW5lczswPT09ZCYmKFRpPW51bGwpOzE9PT1kP2E9PT1Faj9EaisrOihEaj0wLEVqPWEpOkRqPTA7Yz1jLnN0YXRlTm9kZTtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJSb290KXRyeXtNZi5vbkNvbW1pdEZpYmVyUm9vdChMZixjLHZvaWQgMCw2ND09PShjLmN1cnJlbnQuZmxhZ3MmNjQpKX1jYXRjaCh2YSl7fU1qKGEsTygpKTtpZihRaSl0aHJvdyBRaT0hMSxhPVJpLFJpPW51bGwsYTtpZigwIT09KFgmOCkpcmV0dXJuIG51bGw7aWcoKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGVrKCl7Zm9yKDtudWxsIT09Wjspe3ZhciBhPVouYWx0ZXJuYXRlO0pqfHxudWxsPT09SWp8fCgwIT09KFouZmxhZ3MmOCk/ZGMoWixJaikmJihKaj0hMCk6MTM9PT1aLnRhZyYmbWooYSxaKSYmZGMoWixJaikmJihKaj0hMCkpO3ZhciBiPVouZmxhZ3M7MCE9PShiJjI1NikmJlhpKGEsWik7MD09PShiJjUxMil8fHhqfHwoeGo9ITAsaGcoOTcsZnVuY3Rpb24oKXtPaigpO3JldHVybiBudWxsfSkpO1o9Wi5uZXh0RWZmZWN0fX1mdW5jdGlvbiBPaigpe2lmKDkwIT09emope3ZhciBhPTk3PHpqPzk3OnpqO3pqPTkwO3JldHVybiBnZyhhLGZrKX1yZXR1cm4hMX1mdW5jdGlvbiAkaShhLGIpe0FqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1mdW5jdGlvbiBaaShhLGIpe0JqLnB1c2goYixhKTt4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKX1cbmZ1bmN0aW9uIGZrKCl7aWYobnVsbD09PXlqKXJldHVybiExO3ZhciBhPXlqO3lqPW51bGw7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMzMSkpO3ZhciBiPVg7WHw9MzI7dmFyIGM9Qmo7Qmo9W107Zm9yKHZhciBkPTA7ZDxjLmxlbmd0aDtkKz0yKXt2YXIgZT1jW2RdLGY9Y1tkKzFdLGc9ZS5kZXN0cm95O2UuZGVzdHJveT12b2lkIDA7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcpdHJ5e2coKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWM9QWo7QWo9W107Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrPTIpe2U9Y1tkXTtmPWNbZCsxXTt0cnl7dmFyIGg9ZS5jcmVhdGU7ZS5kZXN0cm95PWgoKX1jYXRjaChrKXtpZihudWxsPT09Zil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKGYsayl9fWZvcihoPWEuY3VycmVudC5maXJzdEVmZmVjdDtudWxsIT09aDspYT1oLm5leHRFZmZlY3QsaC5uZXh0RWZmZWN0PW51bGwsaC5mbGFncyY4JiYoaC5zaWJsaW5nPVxubnVsbCxoLnN0YXRlTm9kZT1udWxsKSxoPWE7WD1iO2lnKCk7cmV0dXJuITB9ZnVuY3Rpb24gZ2soYSxiLGMpe2I9TWkoYyxiKTtiPVBpKGEsYiwxKTtBZyhhLGIpO2I9SGcoKTthPUtqKGEsMSk7bnVsbCE9PWEmJigkYyhhLDEsYiksTWooYSxiKSl9XG5mdW5jdGlvbiBXaShhLGIpe2lmKDM9PT1hLnRhZylnayhhLGEsYik7ZWxzZSBmb3IodmFyIGM9YS5yZXR1cm47bnVsbCE9PWM7KXtpZigzPT09Yy50YWcpe2drKGMsYSxiKTticmVha31lbHNlIGlmKDE9PT1jLnRhZyl7dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PVRpfHwhVGkuaGFzKGQpKSl7YT1NaShiLGEpO3ZhciBlPVNpKGMsYSwxKTtBZyhjLGUpO2U9SGcoKTtjPUtqKGMsMSk7aWYobnVsbCE9PWMpJGMoYywxLGUpLE1qKGMsZSk7ZWxzZSBpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpdHJ5e2QuY29tcG9uZW50RGlkQ2F0Y2goYixhKX1jYXRjaChmKXt9YnJlYWt9fWM9Yy5yZXR1cm59fVxuZnVuY3Rpb24gWWooYSxiLGMpe3ZhciBkPWEucGluZ0NhY2hlO251bGwhPT1kJiZkLmRlbGV0ZShiKTtiPUhnKCk7YS5waW5nZWRMYW5lc3w9YS5zdXNwZW5kZWRMYW5lcyZjO1U9PT1hJiYoVyZjKT09PWMmJig0PT09Vnx8Mz09PVYmJihXJjYyOTE0NTYwKT09PVcmJjUwMD5PKCktamo/UWooYSwwKTp1anw9Yyk7TWooYSxiKX1mdW5jdGlvbiBsaihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPWEubW9kZSwwPT09KGImMik/Yj0xOjA9PT0oYiY0KT9iPTk5PT09ZWcoKT8xOjI6KDA9PT1HaiYmKEdqPXRqKSxiPVljKDYyOTE0NTYwJn5HaiksMD09PWImJihiPTQxOTQzMDQpKSk7Yz1IZygpO2E9S2ooYSxiKTtudWxsIT09YSYmKCRjKGEsYixjKSxNaihhLGMpKX12YXIgY2s7XG5jaz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5sYW5lcztpZihudWxsIT09YSlpZihhLm1lbW9pemVkUHJvcHMhPT1iLnBlbmRpbmdQcm9wc3x8Ti5jdXJyZW50KXVnPSEwO2Vsc2UgaWYoMCE9PShjJmQpKXVnPTAhPT0oYS5mbGFncyYxNjM4NCk/ITA6ITE7ZWxzZXt1Zz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpyaShiKTtzaCgpO2JyZWFrO2Nhc2UgNTpnaChiKTticmVhaztjYXNlIDE6RmYoYi50eXBlKSYmSmYoYik7YnJlYWs7Y2FzZSA0OmVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTt2YXIgZT1iLnR5cGUuX2NvbnRleHQ7SShtZyxlLl9jdXJyZW50VmFsdWUpO2UuX2N1cnJlbnRWYWx1ZT1kO2JyZWFrO2Nhc2UgMTM6aWYobnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSl7aWYoMCE9PShjJmIuY2hpbGQuY2hpbGRMYW5lcykpcmV0dXJuIHRpKGEsYixjKTtJKFAsUC5jdXJyZW50JjEpO2I9aGkoYSxiLGMpO3JldHVybiBudWxsIT09XG5iP2Iuc2libGluZzpudWxsfUkoUCxQLmN1cnJlbnQmMSk7YnJlYWs7Y2FzZSAxOTpkPTAhPT0oYyZiLmNoaWxkTGFuZXMpO2lmKDAhPT0oYS5mbGFncyY2NCkpe2lmKGQpcmV0dXJuIEFpKGEsYixjKTtiLmZsYWdzfD02NH1lPWIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZSYmKGUucmVuZGVyaW5nPW51bGwsZS50YWlsPW51bGwsZS5sYXN0RWZmZWN0PW51bGwpO0koUCxQLmN1cnJlbnQpO2lmKGQpYnJlYWs7ZWxzZSByZXR1cm4gbnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIGIubGFuZXM9MCxtaShhLGIsYyl9cmV0dXJuIGhpKGEsYixjKX1lbHNlIHVnPSExO2IubGFuZXM9MDtzd2l0Y2goYi50YWcpe2Nhc2UgMjpkPWIudHlwZTtudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTthPWIucGVuZGluZ1Byb3BzO2U9RWYoYixNLmN1cnJlbnQpO3RnKGIsYyk7ZT1DaChudWxsLGIsZCxhLGUsYyk7Yi5mbGFnc3w9MTtpZihcIm9iamVjdFwiPT09XG50eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoRmYoZCkpe3ZhciBmPSEwO0pmKGIpfWVsc2UgZj0hMTtiLm1lbW9pemVkU3RhdGU9bnVsbCE9PWUuc3RhdGUmJnZvaWQgMCE9PWUuc3RhdGU/ZS5zdGF0ZTpudWxsO3hnKGIpO3ZhciBnPWQuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiZHZyhiLGQsZyxhKTtlLnVwZGF0ZXI9S2c7Yi5zdGF0ZU5vZGU9ZTtlLl9yZWFjdEludGVybmFscz1iO09nKGIsZCxhLGMpO2I9cWkobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsZmkobnVsbCxiLGUsYyksYj1iLmNoaWxkO3JldHVybiBiO2Nhc2UgMTY6ZT1iLmVsZW1lbnRUeXBlO2E6e251bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpO1xuYT1iLnBlbmRpbmdQcm9wcztmPWUuX2luaXQ7ZT1mKGUuX3BheWxvYWQpO2IudHlwZT1lO2Y9Yi50YWc9aGsoZSk7YT1sZyhlLGEpO3N3aXRjaChmKXtjYXNlIDA6Yj1saShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxOmI9cGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTE6Yj1naShudWxsLGIsZSxhLGMpO2JyZWFrIGE7Y2FzZSAxNDpiPWlpKG51bGwsYixlLGxnKGUudHlwZSxhKSxkLGMpO2JyZWFrIGF9dGhyb3cgRXJyb3IoeSgzMDYsZSxcIlwiKSk7fXJldHVybiBiO2Nhc2UgMDpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxsaShhLGIsZCxlLGMpO2Nhc2UgMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxwaShhLGIsZCxlLGMpO2Nhc2UgMzpyaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHkoMjgyKSk7XG5kPWIucGVuZGluZ1Byb3BzO2U9Yi5tZW1vaXplZFN0YXRlO2U9bnVsbCE9PWU/ZS5lbGVtZW50Om51bGw7eWcoYSxiKTtDZyhiLGQsbnVsbCxjKTtkPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50O2lmKGQ9PT1lKXNoKCksYj1oaShhLGIsYyk7ZWxzZXtlPWIuc3RhdGVOb2RlO2lmKGY9ZS5oeWRyYXRlKWtoPXJmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksamg9YixmPWxoPSEwO2lmKGYpe2E9ZS5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhO2lmKG51bGwhPWEpZm9yKGU9MDtlPGEubGVuZ3RoO2UrPTIpZj1hW2VdLGYuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9YVtlKzFdLHRoLnB1c2goZik7Yz1aZyhiLG51bGwsZCxjKTtmb3IoYi5jaGlsZD1jO2M7KWMuZmxhZ3M9Yy5mbGFncyYtM3wxMDI0LGM9Yy5zaWJsaW5nfWVsc2UgZmkoYSxiLGQsYyksc2goKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA1OnJldHVybiBnaChiKSxudWxsPT09YSYmXG5waChiKSxkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGY9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGwsZz1lLmNoaWxkcmVuLG5mKGQsZSk/Zz1udWxsOm51bGwhPT1mJiZuZihkLGYpJiYoYi5mbGFnc3w9MTYpLG9pKGEsYiksZmkoYSxiLGcsYyksYi5jaGlsZDtjYXNlIDY6cmV0dXJuIG51bGw9PT1hJiZwaChiKSxudWxsO2Nhc2UgMTM6cmV0dXJuIHRpKGEsYixjKTtjYXNlIDQ6cmV0dXJuIGVoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyksZD1iLnBlbmRpbmdQcm9wcyxudWxsPT09YT9iLmNoaWxkPVlnKGIsbnVsbCxkLGMpOmZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxMTpyZXR1cm4gZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxlPWIuZWxlbWVudFR5cGU9PT1kP2U6bGcoZCxlKSxnaShhLGIsZCxlLGMpO2Nhc2UgNzpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sXG5jKSxiLmNoaWxkO2Nhc2UgMTI6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixjKSxiLmNoaWxkO2Nhc2UgMTA6YTp7ZD1iLnR5cGUuX2NvbnRleHQ7ZT1iLnBlbmRpbmdQcm9wcztnPWIubWVtb2l6ZWRQcm9wcztmPWUudmFsdWU7dmFyIGg9Yi50eXBlLl9jb250ZXh0O0kobWcsaC5fY3VycmVudFZhbHVlKTtoLl9jdXJyZW50VmFsdWU9ZjtpZihudWxsIT09ZylpZihoPWcudmFsdWUsZj1IZShoLGYpPzA6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhoLGYpOjEwNzM3NDE4MjMpfDAsMD09PWYpe2lmKGcuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiYhTi5jdXJyZW50KXtiPWhpKGEsYixjKTticmVhayBhfX1lbHNlIGZvcihoPWIuY2hpbGQsbnVsbCE9PWgmJihoLnJldHVybj1iKTtudWxsIT09aDspe3ZhciBrPWguZGVwZW5kZW5jaWVzO2lmKG51bGwhPT1rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPVxuay5maXJzdENvbnRleHQ7bnVsbCE9PWw7KXtpZihsLmNvbnRleHQ9PT1kJiYwIT09KGwub2JzZXJ2ZWRCaXRzJmYpKXsxPT09aC50YWcmJihsPXpnKC0xLGMmLWMpLGwudGFnPTIsQWcoaCxsKSk7aC5sYW5lc3w9YztsPWguYWx0ZXJuYXRlO251bGwhPT1sJiYobC5sYW5lc3w9Yyk7c2coaC5yZXR1cm4sYyk7ay5sYW5lc3w9YzticmVha31sPWwubmV4dH19ZWxzZSBnPTEwPT09aC50YWc/aC50eXBlPT09Yi50eXBlP251bGw6aC5jaGlsZDpoLmNoaWxkO2lmKG51bGwhPT1nKWcucmV0dXJuPWg7ZWxzZSBmb3IoZz1oO251bGwhPT1nOyl7aWYoZz09PWIpe2c9bnVsbDticmVha31oPWcuc2libGluZztpZihudWxsIT09aCl7aC5yZXR1cm49Zy5yZXR1cm47Zz1oO2JyZWFrfWc9Zy5yZXR1cm59aD1nfWZpKGEsYixlLmNoaWxkcmVuLGMpO2I9Yi5jaGlsZH1yZXR1cm4gYjtjYXNlIDk6cmV0dXJuIGU9Yi50eXBlLGY9Yi5wZW5kaW5nUHJvcHMsZD1mLmNoaWxkcmVuLHRnKGIsYyksZT12ZyhlLFxuZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmZsYWdzfD0xLGZpKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1sZyhlLGIucGVuZGluZ1Byb3BzKSxmPWxnKGUudHlwZSxmKSxpaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4ga2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksYi50YWc9MSxGZihkKT8oYT0hMCxKZihiKSk6YT0hMSx0ZyhiLGMpLE1nKGIsZCxlKSxPZyhiLGQsZSxjKSxxaShudWxsLGIsZCwhMCxhLGMpO2Nhc2UgMTk6cmV0dXJuIEFpKGEsYixjKTtjYXNlIDIzOnJldHVybiBtaShhLGIsYyk7Y2FzZSAyNDpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHkoMTU2LGIudGFnKSk7XG59O2Z1bmN0aW9uIGlrKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9dGhpcy5lbGVtZW50VHlwZT1udWxsO3RoaXMuaW5kZXg9MDt0aGlzLnJlZj1udWxsO3RoaXMucGVuZGluZ1Byb3BzPWI7dGhpcy5kZXBlbmRlbmNpZXM9dGhpcy5tZW1vaXplZFN0YXRlPXRoaXMudXBkYXRlUXVldWU9dGhpcy5tZW1vaXplZFByb3BzPW51bGw7dGhpcy5tb2RlPWQ7dGhpcy5mbGFncz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRMYW5lcz10aGlzLmxhbmVzPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBuaChhLGIsYyxkKXtyZXR1cm4gbmV3IGlrKGEsYixjLGQpfWZ1bmN0aW9uIGppKGEpe2E9YS5wcm90b3R5cGU7cmV0dXJuISghYXx8IWEuaXNSZWFjdENvbXBvbmVudCl9XG5mdW5jdGlvbiBoayhhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gamkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PUFhKXJldHVybiAxMTtpZihhPT09RGEpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gVGcoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1uaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLnR5cGU9YS50eXBlLGMuZmxhZ3M9MCxjLm5leHRFZmZlY3Q9bnVsbCxjLmZpcnN0RWZmZWN0PW51bGwsYy5sYXN0RWZmZWN0PW51bGwpO2MuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXM7Yy5sYW5lcz1hLmxhbmVzO2MuY2hpbGQ9YS5jaGlsZDtjLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzO2MubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGU7Yy51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlO2I9YS5kZXBlbmRlbmNpZXM7Yy5kZXBlbmRlbmNpZXM9bnVsbD09PWI/bnVsbDp7bGFuZXM6Yi5sYW5lcyxmaXJzdENvbnRleHQ6Yi5maXJzdENvbnRleHR9O1xuYy5zaWJsaW5nPWEuc2libGluZztjLmluZGV4PWEuaW5kZXg7Yy5yZWY9YS5yZWY7cmV0dXJuIGN9XG5mdW5jdGlvbiBWZyhhLGIsYyxkLGUsZil7dmFyIGc9MjtkPWE7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpamkoYSkmJihnPTEpO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBhKWc9NTtlbHNlIGE6c3dpdGNoKGEpe2Nhc2UgdWE6cmV0dXJuIFhnKGMuY2hpbGRyZW4sZSxmLGIpO2Nhc2UgSGE6Zz04O2V8PTE2O2JyZWFrO2Nhc2Ugd2E6Zz04O2V8PTE7YnJlYWs7Y2FzZSB4YTpyZXR1cm4gYT1uaCgxMixjLGIsZXw4KSxhLmVsZW1lbnRUeXBlPXhhLGEudHlwZT14YSxhLmxhbmVzPWYsYTtjYXNlIEJhOnJldHVybiBhPW5oKDEzLGMsYixlKSxhLnR5cGU9QmEsYS5lbGVtZW50VHlwZT1CYSxhLmxhbmVzPWYsYTtjYXNlIENhOnJldHVybiBhPW5oKDE5LGMsYixlKSxhLmVsZW1lbnRUeXBlPUNhLGEubGFuZXM9ZixhO2Nhc2UgSWE6cmV0dXJuIHZpKGMsZSxmLGIpO2Nhc2UgSmE6cmV0dXJuIGE9bmgoMjQsYyxiLGUpLGEuZWxlbWVudFR5cGU9SmEsYS5sYW5lcz1mLGE7ZGVmYXVsdDppZihcIm9iamVjdFwiPT09XG50eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgeWE6Zz0xMDticmVhayBhO2Nhc2UgemE6Zz05O2JyZWFrIGE7Y2FzZSBBYTpnPTExO2JyZWFrIGE7Y2FzZSBEYTpnPTE0O2JyZWFrIGE7Y2FzZSBFYTpnPTE2O2Q9bnVsbDticmVhayBhO2Nhc2UgRmE6Zz0yMjticmVhayBhfXRocm93IEVycm9yKHkoMTMwLG51bGw9PWE/YTp0eXBlb2YgYSxcIlwiKSk7fWI9bmgoZyxjLGIsZSk7Yi5lbGVtZW50VHlwZT1hO2IudHlwZT1kO2IubGFuZXM9ZjtyZXR1cm4gYn1mdW5jdGlvbiBYZyhhLGIsYyxkKXthPW5oKDcsYSxkLGIpO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiB2aShhLGIsYyxkKXthPW5oKDIzLGEsZCxiKTthLmVsZW1lbnRUeXBlPUlhO2EubGFuZXM9YztyZXR1cm4gYX1mdW5jdGlvbiBVZyhhLGIsYyl7YT1uaCg2LGEsbnVsbCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9XG5mdW5jdGlvbiBXZyhhLGIsYyl7Yj1uaCg0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5sYW5lcz1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIGprKGEsYixjKXt0aGlzLnRhZz1iO3RoaXMuY29udGFpbmVySW5mbz1hO3RoaXMuZmluaXNoZWRXb3JrPXRoaXMucGluZ0NhY2hlPXRoaXMuY3VycmVudD10aGlzLnBlbmRpbmdDaGlsZHJlbj1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTA7dGhpcy5ldmVudFRpbWVzPVpjKDApO3RoaXMuZXhwaXJhdGlvblRpbWVzPVpjKC0xKTt0aGlzLmVudGFuZ2xlZExhbmVzPXRoaXMuZmluaXNoZWRMYW5lcz10aGlzLm11dGFibGVSZWFkTGFuZXM9dGhpcy5leHBpcmVkTGFuZXM9dGhpcy5waW5nZWRMYW5lcz10aGlzLnN1c3BlbmRlZExhbmVzPXRoaXMucGVuZGluZ0xhbmVzPTA7dGhpcy5lbnRhbmdsZW1lbnRzPVpjKDApO3RoaXMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1udWxsfVxuZnVuY3Rpb24ga2soYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjp0YSxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1cbmZ1bmN0aW9uIGxrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUhnKCksZz1JZyhlKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbHM7Yjp7aWYoWmIoYykhPT1jfHwxIT09Yy50YWcpdGhyb3cgRXJyb3IoeSgxNzApKTt2YXIgaD1jO2Rve3N3aXRjaChoLnRhZyl7Y2FzZSAzOmg9aC5zdGF0ZU5vZGUuY29udGV4dDticmVhayBiO2Nhc2UgMTppZihGZihoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHkoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEZmKGspKXtjPUlmKGMsayxoKTticmVhayBhfX1jPWh9ZWxzZSBjPUNmO251bGw9PT1iLmNvbnRleHQ/Yi5jb250ZXh0PWM6Yi5wZW5kaW5nQ29udGV4dD1jO2I9emcoZixnKTtiLnBheWxvYWQ9e2VsZW1lbnQ6YX07ZD12b2lkIDA9PT1kP251bGw6ZDtudWxsIT09XG5kJiYoYi5jYWxsYmFjaz1kKTtBZyhlLGIpO0pnKGUsZyxmKTtyZXR1cm4gZ31mdW5jdGlvbiBtayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIG5rKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQpe3ZhciBjPWEucmV0cnlMYW5lO2EucmV0cnlMYW5lPTAhPT1jJiZjPGI/YzpifX1mdW5jdGlvbiBvayhhLGIpe25rKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZuayhhLGIpfWZ1bmN0aW9uIHBrKCl7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBxayhhLGIsYyl7dmFyIGQ9bnVsbCE9YyYmbnVsbCE9Yy5oeWRyYXRpb25PcHRpb25zJiZjLmh5ZHJhdGlvbk9wdGlvbnMubXV0YWJsZVNvdXJjZXN8fG51bGw7Yz1uZXcgamsoYSxiLG51bGwhPWMmJiEwPT09Yy5oeWRyYXRlKTtiPW5oKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtjLmN1cnJlbnQ9YjtiLnN0YXRlTm9kZT1jO3hnKGIpO2FbZmZdPWMuY3VycmVudDtjZig4PT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YSk7aWYoZClmb3IoYT0wO2E8ZC5sZW5ndGg7YSsrKXtiPWRbYV07dmFyIGU9Yi5fZ2V0VmVyc2lvbjtlPWUoYi5fc291cmNlKTtudWxsPT1jLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE/Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhPVtiLGVdOmMubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YS5wdXNoKGIsZSl9dGhpcy5faW50ZXJuYWxSb290PWN9XG5xay5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe2xrKGEsdGhpcy5faW50ZXJuYWxSb290LG51bGwsbnVsbCl9O3FrLnByb3RvdHlwZS51bm1vdW50PWZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5faW50ZXJuYWxSb290LGI9YS5jb250YWluZXJJbmZvO2xrKG51bGwsYSxudWxsLGZ1bmN0aW9uKCl7YltmZl09bnVsbH0pfTtmdW5jdGlvbiByayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9XG5mdW5jdGlvbiBzayhhLGIpe2J8fChiPWE/OT09PWEubm9kZVR5cGU/YS5kb2N1bWVudEVsZW1lbnQ6YS5maXJzdENoaWxkOm51bGwsYj0hKCFifHwxIT09Yi5ub2RlVHlwZXx8IWIuaGFzQXR0cmlidXRlKFwiZGF0YS1yZWFjdHJvb3RcIikpKTtpZighYilmb3IodmFyIGM7Yz1hLmxhc3RDaGlsZDspYS5yZW1vdmVDaGlsZChjKTtyZXR1cm4gbmV3IHFrKGEsMCxiP3toeWRyYXRlOiEwfTp2b2lkIDApfVxuZnVuY3Rpb24gdGsoYSxiLGMsZCxlKXt2YXIgZj1jLl9yZWFjdFJvb3RDb250YWluZXI7aWYoZil7dmFyIGc9Zi5faW50ZXJuYWxSb290O2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgaD1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1tayhnKTtoLmNhbGwoYSl9fWxrKGIsZyxhLGUpfWVsc2V7Zj1jLl9yZWFjdFJvb3RDb250YWluZXI9c2soYyxkKTtnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGs9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7ay5jYWxsKGEpfX1YaihmdW5jdGlvbigpe2xrKGIsZyxhLGUpfSl9cmV0dXJuIG1rKGcpfWVjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCk7SmcoYSw0LGIpO29rKGEsNCl9fTtmYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNjcxMDg4NjQsYik7b2soYSw2NzEwODg2NCl9fTtcbmdjPWZ1bmN0aW9uKGEpe2lmKDEzPT09YS50YWcpe3ZhciBiPUhnKCksYz1JZyhhKTtKZyhhLGMsYik7b2soYSxjKX19O2hjPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGIoKX07XG55Yj1mdW5jdGlvbihhLGIsYyl7c3dpdGNoKGIpe2Nhc2UgXCJpbnB1dFwiOmFiKGEsYyk7Yj1jLm5hbWU7aWYoXCJyYWRpb1wiPT09Yy50eXBlJiZudWxsIT1iKXtmb3IoYz1hO2MucGFyZW50Tm9kZTspYz1jLnBhcmVudE5vZGU7Yz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1EYihkKTtpZighZSl0aHJvdyBFcnJvcih5KDkwKSk7V2EoZCk7YWIoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmliKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZmYihhLCEhYy5tdWx0aXBsZSxiLCExKX19O0diPVdqO1xuSGI9ZnVuY3Rpb24oYSxiLGMsZCxlKXt2YXIgZj1YO1h8PTQ7dHJ5e3JldHVybiBnZyg5OCxhLmJpbmQobnVsbCxiLGMsZCxlKSl9ZmluYWxseXtYPWYsMD09PVgmJih3aigpLGlnKCkpfX07SWI9ZnVuY3Rpb24oKXswPT09KFgmNDkpJiYoVmooKSxPaigpKX07SmI9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO1h8PTI7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19O2Z1bmN0aW9uIHVrKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIGtrKGEsYixudWxsLGMpfXZhciB2az17RXZlbnRzOltDYix1ZSxEYixFYixGYixPaix7Y3VycmVudDohMX1dfSx3az17ZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6d2MsYnVuZGxlVHlwZTowLHZlcnNpb246XCIxNy4wLjFcIixyZW5kZXJlclBhY2thZ2VOYW1lOlwicmVhY3QtZG9tXCJ9O1xudmFyIHhrPXtidW5kbGVUeXBlOndrLmJ1bmRsZVR5cGUsdmVyc2lvbjp3ay52ZXJzaW9uLHJlbmRlcmVyUGFja2FnZU5hbWU6d2sucmVuZGVyZXJQYWNrYWdlTmFtZSxyZW5kZXJlckNvbmZpZzp3ay5yZW5kZXJlckNvbmZpZyxvdmVycmlkZUhvb2tTdGF0ZTpudWxsLG92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aDpudWxsLG92ZXJyaWRlUHJvcHM6bnVsbCxvdmVycmlkZVByb3BzRGVsZXRlUGF0aDpudWxsLG92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpyYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9Y2MoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndrLmZpbmRGaWJlckJ5SG9zdEluc3RhbmNlfHxcbnBrLGZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaDpudWxsLHNjaGVkdWxlUmVmcmVzaDpudWxsLHNjaGVkdWxlUm9vdDpudWxsLHNldFJlZnJlc2hIYW5kbGVyOm51bGwsZ2V0Q3VycmVudEZpYmVyOm51bGx9O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXt2YXIgeWs9X19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fO2lmKCF5ay5pc0Rpc2FibGVkJiZ5ay5zdXBwb3J0c0ZpYmVyKXRyeXtMZj15ay5pbmplY3QoeGspLE1mPXlrfWNhdGNoKGEpe319ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD12aztleHBvcnRzLmNyZWF0ZVBvcnRhbD11aztcbmV4cG9ydHMuZmluZERPTU5vZGU9ZnVuY3Rpb24oYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZigxPT09YS5ub2RlVHlwZSlyZXR1cm4gYTt2YXIgYj1hLl9yZWFjdEludGVybmFscztpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IoeSgxODgpKTt0aHJvdyBFcnJvcih5KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWNjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07ZXhwb3J0cy5mbHVzaFN5bmM9ZnVuY3Rpb24oYSxiKXt2YXIgYz1YO2lmKDAhPT0oYyY0OCkpcmV0dXJuIGEoYik7WHw9MTt0cnl7aWYoYSlyZXR1cm4gZ2coOTksYS5iaW5kKG51bGwsYikpfWZpbmFsbHl7WD1jLGlnKCl9fTtleHBvcnRzLmh5ZHJhdGU9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMCxjKX07XG5leHBvcnRzLnJlbmRlcj1mdW5jdGlvbihhLGIsYyl7aWYoIXJrKGIpKXRocm93IEVycm9yKHkoMjAwKSk7cmV0dXJuIHRrKG51bGwsYSxiLCExLGMpfTtleHBvcnRzLnVubW91bnRDb21wb25lbnRBdE5vZGU9ZnVuY3Rpb24oYSl7aWYoIXJrKGEpKXRocm93IEVycm9yKHkoNDApKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhYaihmdW5jdGlvbigpe3RrKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGw7YVtmZl09bnVsbH0pfSksITApOiExfTtleHBvcnRzLnVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzPVdqO2V4cG9ydHMudW5zdGFibGVfY3JlYXRlUG9ydGFsPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHVrKGEsYiwyPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1syXT9hcmd1bWVudHNbMl06bnVsbCl9O1xuZXhwb3J0cy51bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyxkKXtpZighcmsoYykpdGhyb3cgRXJyb3IoeSgyMDApKTtpZihudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFscyl0aHJvdyBFcnJvcih5KDM4KSk7cmV0dXJuIHRrKGEsYixjLCExLGQpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjFcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKiBAbGljZW5zZSBSZWFjdCB2MTcuMC4xXG4gKiByZWFjdC5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGw9cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIiksbj02MDEwMyxwPTYwMTA2O2V4cG9ydHMuRnJhZ21lbnQ9NjAxMDc7ZXhwb3J0cy5TdHJpY3RNb2RlPTYwMTA4O2V4cG9ydHMuUHJvZmlsZXI9NjAxMTQ7dmFyIHE9NjAxMDkscj02MDExMCx0PTYwMTEyO2V4cG9ydHMuU3VzcGVuc2U9NjAxMTM7dmFyIHU9NjAxMTUsdj02MDExNjtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciB3PVN5bWJvbC5mb3I7bj13KFwicmVhY3QuZWxlbWVudFwiKTtwPXcoXCJyZWFjdC5wb3J0YWxcIik7ZXhwb3J0cy5GcmFnbWVudD13KFwicmVhY3QuZnJhZ21lbnRcIik7ZXhwb3J0cy5TdHJpY3RNb2RlPXcoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTtleHBvcnRzLlByb2ZpbGVyPXcoXCJyZWFjdC5wcm9maWxlclwiKTtxPXcoXCJyZWFjdC5wcm92aWRlclwiKTtyPXcoXCJyZWFjdC5jb250ZXh0XCIpO3Q9dyhcInJlYWN0LmZvcndhcmRfcmVmXCIpO2V4cG9ydHMuU3VzcGVuc2U9dyhcInJlYWN0LnN1c3BlbnNlXCIpO3U9dyhcInJlYWN0Lm1lbW9cIik7dj13KFwicmVhY3QubGF6eVwiKX12YXIgeD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7XG5mdW5jdGlvbiB5KGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT14JiZhW3hdfHxhW1wiQEBpdGVyYXRvclwiXTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hOm51bGx9ZnVuY3Rpb24geihhKXtmb3IodmFyIGI9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MTtjPGFyZ3VtZW50cy5sZW5ndGg7YysrKWIrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2NdKTtyZXR1cm5cIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCBcIitiK1wiIGZvciB0aGUgZnVsbCBtZXNzYWdlIG9yIHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCBmb3IgZnVsbCBlcnJvcnMgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy5cIn1cbnZhciBBPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fSxCPXt9O2Z1bmN0aW9uIEMoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX1DLnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50PXt9O0MucHJvdG90eXBlLnNldFN0YXRlPWZ1bmN0aW9uKGEsYil7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYSYmbnVsbCE9YSl0aHJvdyBFcnJvcih6KDg1KSk7dGhpcy51cGRhdGVyLmVucXVldWVTZXRTdGF0ZSh0aGlzLGEsYixcInNldFN0YXRlXCIpfTtDLnByb3RvdHlwZS5mb3JjZVVwZGF0ZT1mdW5jdGlvbihhKXt0aGlzLnVwZGF0ZXIuZW5xdWV1ZUZvcmNlVXBkYXRlKHRoaXMsYSxcImZvcmNlVXBkYXRlXCIpfTtcbmZ1bmN0aW9uIEQoKXt9RC5wcm90b3R5cGU9Qy5wcm90b3R5cGU7ZnVuY3Rpb24gRShhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1CO3RoaXMudXBkYXRlcj1jfHxBfXZhciBGPUUucHJvdG90eXBlPW5ldyBEO0YuY29uc3RydWN0b3I9RTtsKEYsQy5wcm90b3R5cGUpO0YuaXNQdXJlUmVhY3RDb21wb25lbnQ9ITA7dmFyIEc9e2N1cnJlbnQ6bnVsbH0sSD1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LEk9e2tleTohMCxyZWY6ITAsX19zZWxmOiEwLF9fc291cmNlOiEwfTtcbmZ1bmN0aW9uIEooYSxiLGMpe3ZhciBlLGQ9e30saz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihlIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihrPVwiXCIrYi5rZXkpLGIpSC5jYWxsKGIsZSkmJiFJLmhhc093blByb3BlcnR5KGUpJiYoZFtlXT1iW2VdKTt2YXIgZz1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWcpZC5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxnKXtmb3IodmFyIGY9QXJyYXkoZyksbT0wO208ZzttKyspZlttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWZ9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGUgaW4gZz1hLmRlZmF1bHRQcm9wcyxnKXZvaWQgMD09PWRbZV0mJihkW2VdPWdbZV0pO3JldHVybnskJHR5cGVvZjpuLHR5cGU6YSxrZXk6ayxyZWY6aCxwcm9wczpkLF9vd25lcjpHLmN1cnJlbnR9fVxuZnVuY3Rpb24gSyhhLGIpe3JldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLGtleTpiLHJlZjphLnJlZixwcm9wczphLnByb3BzLF9vd25lcjphLl9vd25lcn19ZnVuY3Rpb24gTChhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09bn1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiK2EucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIE09L1xcLysvZztmdW5jdGlvbiBOKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKFwiXCIrYS5rZXkpOmIudG9TdHJpbmcoMzYpfVxuZnVuY3Rpb24gTyhhLGIsYyxlLGQpe3ZhciBrPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1rfHxcImJvb2xlYW5cIj09PWspYT1udWxsO3ZhciBoPSExO2lmKG51bGw9PT1hKWg9ITA7ZWxzZSBzd2l0Y2goayl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpoPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSBuOmNhc2UgcDpoPSEwfX1pZihoKXJldHVybiBoPWEsZD1kKGgpLGE9XCJcIj09PWU/XCIuXCIrTihoLDApOmUsQXJyYXkuaXNBcnJheShkKT8oYz1cIlwiLG51bGwhPWEmJihjPWEucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSxPKGQsYixjLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KSk6bnVsbCE9ZCYmKEwoZCkmJihkPUsoZCxjKyghZC5rZXl8fGgmJmgua2V5PT09ZC5rZXk/XCJcIjooXCJcIitkLmtleSkucmVwbGFjZShNLFwiJCYvXCIpK1wiL1wiKSthKSksYi5wdXNoKGQpKSwxO2g9MDtlPVwiXCI9PT1lP1wiLlwiOmUrXCI6XCI7aWYoQXJyYXkuaXNBcnJheShhKSlmb3IodmFyIGc9XG4wO2c8YS5sZW5ndGg7ZysrKXtrPWFbZ107dmFyIGY9ZStOKGssZyk7aCs9TyhrLGIsYyxmLGQpfWVsc2UgaWYoZj15KGEpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxnPTA7IShrPWEubmV4dCgpKS5kb25lOylrPWsudmFsdWUsZj1lK04oayxnKyspLGgrPU8oayxiLGMsZixkKTtlbHNlIGlmKFwib2JqZWN0XCI9PT1rKXRocm93IGI9XCJcIithLEVycm9yKHooMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PWI/XCJvYmplY3Qgd2l0aCBrZXlzIHtcIitPYmplY3Qua2V5cyhhKS5qb2luKFwiLCBcIikrXCJ9XCI6YikpO3JldHVybiBofWZ1bmN0aW9uIFAoYSxiLGMpe2lmKG51bGw9PWEpcmV0dXJuIGE7dmFyIGU9W10sZD0wO08oYSxlLFwiXCIsXCJcIixmdW5jdGlvbihhKXtyZXR1cm4gYi5jYWxsKGMsYSxkKyspfSk7cmV0dXJuIGV9XG5mdW5jdGlvbiBRKGEpe2lmKC0xPT09YS5fc3RhdHVzKXt2YXIgYj1hLl9yZXN1bHQ7Yj1iKCk7YS5fc3RhdHVzPTA7YS5fcmVzdWx0PWI7Yi50aGVuKGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihiPWIuZGVmYXVsdCxhLl9zdGF0dXM9MSxhLl9yZXN1bHQ9Yil9LGZ1bmN0aW9uKGIpezA9PT1hLl9zdGF0dXMmJihhLl9zdGF0dXM9MixhLl9yZXN1bHQ9Yil9KX1pZigxPT09YS5fc3RhdHVzKXJldHVybiBhLl9yZXN1bHQ7dGhyb3cgYS5fcmVzdWx0O312YXIgUj17Y3VycmVudDpudWxsfTtmdW5jdGlvbiBTKCl7dmFyIGE9Ui5jdXJyZW50O2lmKG51bGw9PT1hKXRocm93IEVycm9yKHooMzIxKSk7cmV0dXJuIGF9dmFyIFQ9e1JlYWN0Q3VycmVudERpc3BhdGNoZXI6UixSZWFjdEN1cnJlbnRCYXRjaENvbmZpZzp7dHJhbnNpdGlvbjowfSxSZWFjdEN1cnJlbnRPd25lcjpHLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07XG5leHBvcnRzLkNoaWxkcmVuPXttYXA6UCxmb3JFYWNoOmZ1bmN0aW9uKGEsYixjKXtQKGEsZnVuY3Rpb24oKXtiLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sYyl9LGNvdW50OmZ1bmN0aW9uKGEpe3ZhciBiPTA7UChhLGZ1bmN0aW9uKCl7YisrfSk7cmV0dXJuIGJ9LHRvQXJyYXk6ZnVuY3Rpb24oYSl7cmV0dXJuIFAoYSxmdW5jdGlvbihhKXtyZXR1cm4gYX0pfHxbXX0sb25seTpmdW5jdGlvbihhKXtpZighTChhKSl0aHJvdyBFcnJvcih6KDE0MykpO3JldHVybiBhfX07ZXhwb3J0cy5Db21wb25lbnQ9QztleHBvcnRzLlB1cmVDb21wb25lbnQ9RTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPVQ7XG5leHBvcnRzLmNsb25lRWxlbWVudD1mdW5jdGlvbihhLGIsYyl7aWYobnVsbD09PWF8fHZvaWQgMD09PWEpdGhyb3cgRXJyb3IoeigyNjcsYSkpO3ZhciBlPWwoe30sYS5wcm9wcyksZD1hLmtleSxrPWEucmVmLGg9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihrPWIucmVmLGg9Ry5jdXJyZW50KTt2b2lkIDAhPT1iLmtleSYmKGQ9XCJcIitiLmtleSk7aWYoYS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzKXZhciBnPWEudHlwZS5kZWZhdWx0UHJvcHM7Zm9yKGYgaW4gYilILmNhbGwoYixmKSYmIUkuaGFzT3duUHJvcGVydHkoZikmJihlW2ZdPXZvaWQgMD09PWJbZl0mJnZvaWQgMCE9PWc/Z1tmXTpiW2ZdKX12YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZS5jaGlsZHJlbj1jO2Vsc2UgaWYoMTxmKXtnPUFycmF5KGYpO2Zvcih2YXIgbT0wO208ZjttKyspZ1ttXT1hcmd1bWVudHNbbSsyXTtlLmNoaWxkcmVuPWd9cmV0dXJueyQkdHlwZW9mOm4sdHlwZTphLnR5cGUsXG5rZXk6ZCxyZWY6ayxwcm9wczplLF9vd25lcjpofX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGEsYil7dm9pZCAwPT09YiYmKGI9bnVsbCk7YT17JCR0eXBlb2Y6cixfY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfY3VycmVudFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTI6YSxfdGhyZWFkQ291bnQ6MCxQcm92aWRlcjpudWxsLENvbnN1bWVyOm51bGx9O2EuUHJvdmlkZXI9eyQkdHlwZW9mOnEsX2NvbnRleHQ6YX07cmV0dXJuIGEuQ29uc3VtZXI9YX07ZXhwb3J0cy5jcmVhdGVFbGVtZW50PUo7ZXhwb3J0cy5jcmVhdGVGYWN0b3J5PWZ1bmN0aW9uKGEpe3ZhciBiPUouYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifTtleHBvcnRzLmNyZWF0ZVJlZj1mdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fTtleHBvcnRzLmZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnQscmVuZGVyOmF9fTtleHBvcnRzLmlzVmFsaWRFbGVtZW50PUw7XG5leHBvcnRzLmxhenk9ZnVuY3Rpb24oYSl7cmV0dXJueyQkdHlwZW9mOnYsX3BheWxvYWQ6e19zdGF0dXM6LTEsX3Jlc3VsdDphfSxfaW5pdDpRfX07ZXhwb3J0cy5tZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJueyQkdHlwZW9mOnUsdHlwZTphLGNvbXBhcmU6dm9pZCAwPT09Yj9udWxsOmJ9fTtleHBvcnRzLnVzZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDYWxsYmFjayhhLGIpfTtleHBvcnRzLnVzZUNvbnRleHQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUNvbnRleHQoYSxiKX07ZXhwb3J0cy51c2VEZWJ1Z1ZhbHVlPWZ1bmN0aW9uKCl7fTtleHBvcnRzLnVzZUVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlRWZmZWN0KGEsYil9O2V4cG9ydHMudXNlSW1wZXJhdGl2ZUhhbmRsZT1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFMoKS51c2VJbXBlcmF0aXZlSGFuZGxlKGEsYixjKX07XG5leHBvcnRzLnVzZUxheW91dEVmZmVjdD1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTGF5b3V0RWZmZWN0KGEsYil9O2V4cG9ydHMudXNlTWVtbz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlTWVtbyhhLGIpfTtleHBvcnRzLnVzZVJlZHVjZXI9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlUmVkdWNlcihhLGIsYyl9O2V4cG9ydHMudXNlUmVmPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlUmVmKGEpfTtleHBvcnRzLnVzZVN0YXRlPWZ1bmN0aW9uKGEpe3JldHVybiBTKCkudXNlU3RhdGUoYSl9O2V4cG9ydHMudmVyc2lvbj1cIjE3LjAuMVwiO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMjAuMVxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgZixnLGgsaztpZihcIm9iamVjdFwiPT09dHlwZW9mIHBlcmZvcm1hbmNlJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgcGVyZm9ybWFuY2Uubm93KXt2YXIgbD1wZXJmb3JtYW5jZTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBsLm5vdygpfX1lbHNle3ZhciBwPURhdGUscT1wLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHAubm93KCktcX19XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgdD1udWxsLHU9bnVsbCx3PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXQpdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7dCghMCxhKTt0PW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh3LDApLGI7fX07Zj1mdW5jdGlvbihhKXtudWxsIT09dD9zZXRUaW1lb3V0KGYsMCxhKToodD1hLHNldFRpbWVvdXQodywwKSl9O2c9ZnVuY3Rpb24oYSxiKXt1PXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dCh1KX07ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiExfTtrPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHg9d2luZG93LnNldFRpbWVvdXQseT13aW5kb3cuY2xlYXJUaW1lb3V0O2lmKFwidW5kZWZpbmVkXCIhPT10eXBlb2YgY29uc29sZSl7dmFyIHo9XG53aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWU7XCJmdW5jdGlvblwiIT09dHlwZW9mIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUmJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IHJlcXVlc3RBbmltYXRpb25GcmFtZS4gTWFrZSBzdXJlIHRoYXQgeW91IGxvYWQgYSBwb2x5ZmlsbCBpbiBvbGRlciBicm93c2Vycy4gaHR0cHM6Ly9yZWFjdGpzLm9yZy9saW5rL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgeiYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIil9dmFyIEE9ITEsQj1udWxsLEM9LTEsRD01LEU9MDtleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PVxuRX07az1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZT1mdW5jdGlvbihhKXswPmF8fDEyNTxhP2NvbnNvbGUuZXJyb3IoXCJmb3JjZUZyYW1lUmF0ZSB0YWtlcyBhIHBvc2l0aXZlIGludCBiZXR3ZWVuIDAgYW5kIDEyNSwgZm9yY2luZyBmcmFtZSByYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCBzdXBwb3J0ZWRcIik6RD0wPGE/TWF0aC5mbG9vcigxRTMvYSk6NX07dmFyIEY9bmV3IE1lc3NhZ2VDaGFubmVsLEc9Ri5wb3J0MjtGLnBvcnQxLm9ubWVzc2FnZT1mdW5jdGlvbigpe2lmKG51bGwhPT1CKXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO0U9YStEO3RyeXtCKCEwLGEpP0cucG9zdE1lc3NhZ2UobnVsbCk6KEE9ITEsQj1udWxsKX1jYXRjaChiKXt0aHJvdyBHLnBvc3RNZXNzYWdlKG51bGwpLGI7fX1lbHNlIEE9ITF9O2Y9ZnVuY3Rpb24oYSl7Qj1hO0F8fChBPSEwLEcucG9zdE1lc3NhZ2UobnVsbCkpfTtnPWZ1bmN0aW9uKGEsYil7Qz1cbngoZnVuY3Rpb24oKXthKGV4cG9ydHMudW5zdGFibGVfbm93KCkpfSxiKX07aD1mdW5jdGlvbigpe3koQyk7Qz0tMX19ZnVuY3Rpb24gSChhLGIpe3ZhciBjPWEubGVuZ3RoO2EucHVzaChiKTthOmZvcig7Oyl7dmFyIGQ9Yy0xPj4+MSxlPWFbZF07aWYodm9pZCAwIT09ZSYmMDxJKGUsYikpYVtkXT1iLGFbY109ZSxjPWQ7ZWxzZSBicmVhayBhfX1mdW5jdGlvbiBKKGEpe2E9YVswXTtyZXR1cm4gdm9pZCAwPT09YT9udWxsOmF9XG5mdW5jdGlvbiBLKGEpe3ZhciBiPWFbMF07aWYodm9pZCAwIT09Yil7dmFyIGM9YS5wb3AoKTtpZihjIT09Yil7YVswXT1jO2E6Zm9yKHZhciBkPTAsZT1hLmxlbmd0aDtkPGU7KXt2YXIgbT0yKihkKzEpLTEsbj1hW21dLHY9bSsxLHI9YVt2XTtpZih2b2lkIDAhPT1uJiYwPkkobixjKSl2b2lkIDAhPT1yJiYwPkkocixuKT8oYVtkXT1yLGFbdl09YyxkPXYpOihhW2RdPW4sYVttXT1jLGQ9bSk7ZWxzZSBpZih2b2lkIDAhPT1yJiYwPkkocixjKSlhW2RdPXIsYVt2XT1jLGQ9djtlbHNlIGJyZWFrIGF9fXJldHVybiBifXJldHVybiBudWxsfWZ1bmN0aW9uIEkoYSxiKXt2YXIgYz1hLnNvcnRJbmRleC1iLnNvcnRJbmRleDtyZXR1cm4gMCE9PWM/YzphLmlkLWIuaWR9dmFyIEw9W10sTT1bXSxOPTEsTz1udWxsLFA9MyxRPSExLFI9ITEsUz0hMTtcbmZ1bmN0aW9uIFQoYSl7Zm9yKHZhciBiPUooTSk7bnVsbCE9PWI7KXtpZihudWxsPT09Yi5jYWxsYmFjaylLKE0pO2Vsc2UgaWYoYi5zdGFydFRpbWU8PWEpSyhNKSxiLnNvcnRJbmRleD1iLmV4cGlyYXRpb25UaW1lLEgoTCxiKTtlbHNlIGJyZWFrO2I9SihNKX19ZnVuY3Rpb24gVShhKXtTPSExO1QoYSk7aWYoIVIpaWYobnVsbCE9PUooTCkpUj0hMCxmKFYpO2Vsc2V7dmFyIGI9SihNKTtudWxsIT09YiYmZyhVLGIuc3RhcnRUaW1lLWEpfX1cbmZ1bmN0aW9uIFYoYSxiKXtSPSExO1MmJihTPSExLGgoKSk7UT0hMDt2YXIgYz1QO3RyeXtUKGIpO2ZvcihPPUooTCk7bnVsbCE9PU8mJighKE8uZXhwaXJhdGlvblRpbWU+Yil8fGEmJiFleHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkKCkpOyl7dmFyIGQ9Ty5jYWxsYmFjaztpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZCl7Ty5jYWxsYmFjaz1udWxsO1A9Ty5wcmlvcml0eUxldmVsO3ZhciBlPWQoTy5leHBpcmF0aW9uVGltZTw9Yik7Yj1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlP08uY2FsbGJhY2s9ZTpPPT09SihMKSYmSyhMKTtUKGIpfWVsc2UgSyhMKTtPPUooTCl9aWYobnVsbCE9PU8pdmFyIG09ITA7ZWxzZXt2YXIgbj1KKE0pO251bGwhPT1uJiZnKFUsbi5zdGFydFRpbWUtYik7bT0hMX1yZXR1cm4gbX1maW5hbGx5e089bnVsbCxQPWMsUT0hMX19dmFyIFc9aztleHBvcnRzLnVuc3RhYmxlX0lkbGVQcmlvcml0eT01O1xuZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtSfHxRfHwoUj0hMCxmKFYpKX07ZXhwb3J0cy51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbD1mdW5jdGlvbigpe3JldHVybiBQfTtleHBvcnRzLnVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlPWZ1bmN0aW9uKCl7cmV0dXJuIEooTCl9O1xuZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChQKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1QfXZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7UD1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9VztleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVA7UD1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7UD1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yz8oYz1jLmRlbGF5LGM9XCJudW1iZXJcIj09PXR5cGVvZiBjJiYwPGM/ZCtjOmQpOmM9ZDtzd2l0Y2goYSl7Y2FzZSAxOnZhciBlPS0xO2JyZWFrO2Nhc2UgMjplPTI1MDticmVhaztjYXNlIDU6ZT0xMDczNzQxODIzO2JyZWFrO2Nhc2UgNDplPTFFNDticmVhaztkZWZhdWx0OmU9NUUzfWU9YytlO2E9e2lkOk4rKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6YyxleHBpcmF0aW9uVGltZTplLHNvcnRJbmRleDotMX07Yz5kPyhhLnNvcnRJbmRleD1jLEgoTSxhKSxudWxsPT09SihMKSYmYT09PUooTSkmJihTP2goKTpTPSEwLGcoVSxjLWQpKSk6KGEuc29ydEluZGV4PWUsSChMLGEpLFJ8fFF8fChSPSEwLGYoVikpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3dyYXBDYWxsYmFjaz1mdW5jdGlvbihhKXt2YXIgYj1QO3JldHVybiBmdW5jdGlvbigpe3ZhciBjPVA7UD1iO3RyeXtyZXR1cm4gYS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZmluYWxseXtQPWN9fX07XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIGhhc2goc3RyKSB7XG4gIHZhciBoYXNoID0gNTM4MSxcbiAgICAgIGkgICAgPSBzdHIubGVuZ3RoO1xuXG4gIHdoaWxlKGkpIHtcbiAgICBoYXNoID0gKGhhc2ggKiAzMykgXiBzdHIuY2hhckNvZGVBdCgtLWkpO1xuICB9XG5cbiAgLyogSmF2YVNjcmlwdCBkb2VzIGJpdHdpc2Ugb3BlcmF0aW9ucyAobGlrZSBYT1IsIGFib3ZlKSBvbiAzMi1iaXQgc2lnbmVkXG4gICAqIGludGVnZXJzLiBTaW5jZSB3ZSB3YW50IHRoZSByZXN1bHRzIHRvIGJlIGFsd2F5cyBwb3NpdGl2ZSwgY29udmVydCB0aGVcbiAgICogc2lnbmVkIGludCB0byBhbiB1bnNpZ25lZCBieSBkb2luZyBhbiB1bnNpZ25lZCBiaXRzaGlmdC4gKi9cbiAgcmV0dXJuIGhhc2ggPj4+IDA7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaGFzaDtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdGlmKF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0pIHtcblx0XHRyZXR1cm4gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmNcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIyNGJhYjVkNjMzZTM2Y2E4ZDE3ZWRjNjMxNjRjZjkzNC5qcGdcIjsiLCJpbXBvcnQgc3RyaW5nSGFzaCBmcm9tICdzdHJpbmctaGFzaCc7XG5pbXBvcnQgYXNhcCBmcm9tICdhc2FwJztcblxuZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgIHJldHVybiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICAgIHJldHVybiBvYmogJiYgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9iai5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG9iaiAhPT0gU3ltYm9sLnByb3RvdHlwZSA/IFwic3ltYm9sXCIgOiB0eXBlb2Ygb2JqO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gX3R5cGVvZihvYmopO1xufVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTtcbiAgICB2YXIgb3duS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG5cbiAgICBpZiAodHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIG93bktleXMgPSBvd25LZXlzLmNvbmNhdChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHNvdXJjZSkuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlLCBzeW0pLmVudW1lcmFibGU7XG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgb3duS2V5cy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikge1xuICByZXR1cm4gX2FycmF5V2l0aG91dEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheShhcnIpIHx8IF9ub25JdGVyYWJsZVNwcmVhZCgpO1xufVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRob3V0SG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykgYXJyMltpXSA9IGFycltpXTtcblxuICAgIHJldHVybiBhcnIyO1xuICB9XG59XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xuICBpZiAoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChpdGVyKSB8fCBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoaXRlcikgPT09IFwiW29iamVjdCBBcmd1bWVudHNdXCIpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xufVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7XG4gIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTtcbn1cblxuLyogQGZsb3cgKi9cbi8qIDo6XG50eXBlIE9iamVjdE1hcCA9IHsgW2lkOnN0cmluZ106IGFueSB9O1xuKi9cblxudmFyIFVQUEVSQ0FTRV9SRSA9IC8oW0EtWl0pL2c7XG5cbnZhciBVUFBFUkNBU0VfUkVfVE9fS0VCQUIgPSBmdW5jdGlvbiBVUFBFUkNBU0VfUkVfVE9fS0VCQUIobWF0Y2hcbi8qIDogc3RyaW5nICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIFwiLVwiLmNvbmNhdChtYXRjaC50b0xvd2VyQ2FzZSgpKVxuICApO1xufTtcblxudmFyIGtlYmFiaWZ5U3R5bGVOYW1lID0gZnVuY3Rpb24ga2ViYWJpZnlTdHlsZU5hbWUoc3RyaW5nXG4vKiA6IHN0cmluZyAqL1xuKVxuLyogOiBzdHJpbmcgKi9cbntcbiAgdmFyIHJlc3VsdCA9IHN0cmluZy5yZXBsYWNlKFVQUEVSQ0FTRV9SRSwgVVBQRVJDQVNFX1JFX1RPX0tFQkFCKTtcblxuICBpZiAocmVzdWx0WzBdID09PSAnbScgJiYgcmVzdWx0WzFdID09PSAncycgJiYgcmVzdWx0WzJdID09PSAnLScpIHtcbiAgICByZXR1cm4gXCItXCIuY29uY2F0KHJlc3VsdCk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTtcbi8qKlxuICogQ1NTIHByb3BlcnRpZXMgd2hpY2ggYWNjZXB0IG51bWJlcnMgYnV0IGFyZSBub3QgaW4gdW5pdHMgb2YgXCJweFwiLlxuICogVGFrZW4gZnJvbSBSZWFjdCdzIENTU1Byb3BlcnR5LmpzXG4gKi9cblxudmFyIGlzVW5pdGxlc3NOdW1iZXIgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiB0cnVlLFxuICBib3JkZXJJbWFnZU91dHNldDogdHJ1ZSxcbiAgYm9yZGVySW1hZ2VTbGljZTogdHJ1ZSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogdHJ1ZSxcbiAgYm94RmxleDogdHJ1ZSxcbiAgYm94RmxleEdyb3VwOiB0cnVlLFxuICBib3hPcmRpbmFsR3JvdXA6IHRydWUsXG4gIGNvbHVtbkNvdW50OiB0cnVlLFxuICBmbGV4OiB0cnVlLFxuICBmbGV4R3JvdzogdHJ1ZSxcbiAgZmxleFBvc2l0aXZlOiB0cnVlLFxuICBmbGV4U2hyaW5rOiB0cnVlLFxuICBmbGV4TmVnYXRpdmU6IHRydWUsXG4gIGZsZXhPcmRlcjogdHJ1ZSxcbiAgZ3JpZFJvdzogdHJ1ZSxcbiAgZ3JpZENvbHVtbjogdHJ1ZSxcbiAgZm9udFdlaWdodDogdHJ1ZSxcbiAgbGluZUNsYW1wOiB0cnVlLFxuICBsaW5lSGVpZ2h0OiB0cnVlLFxuICBvcGFjaXR5OiB0cnVlLFxuICBvcmRlcjogdHJ1ZSxcbiAgb3JwaGFuczogdHJ1ZSxcbiAgdGFiU2l6ZTogdHJ1ZSxcbiAgd2lkb3dzOiB0cnVlLFxuICB6SW5kZXg6IHRydWUsXG4gIHpvb206IHRydWUsXG4gIC8vIFNWRy1yZWxhdGVkIHByb3BlcnRpZXNcbiAgZmlsbE9wYWNpdHk6IHRydWUsXG4gIGZsb29kT3BhY2l0eTogdHJ1ZSxcbiAgc3RvcE9wYWNpdHk6IHRydWUsXG4gIHN0cm9rZURhc2hhcnJheTogdHJ1ZSxcbiAgc3Ryb2tlRGFzaG9mZnNldDogdHJ1ZSxcbiAgc3Ryb2tlTWl0ZXJsaW1pdDogdHJ1ZSxcbiAgc3Ryb2tlT3BhY2l0eTogdHJ1ZSxcbiAgc3Ryb2tlV2lkdGg6IHRydWVcbn07XG4vKipcbiAqIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBwcmVmaXggdmVuZG9yLXNwZWNpZmljIHByZWZpeCwgZWc6IFdlYmtpdFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBzdHlsZSBuYW1lLCBlZzogdHJhbnNpdGlvbkR1cmF0aW9uXG4gKiBAcmV0dXJuIHtzdHJpbmd9IHN0eWxlIG5hbWUgcHJlZml4ZWQgd2l0aCBgcHJlZml4YCwgcHJvcGVybHkgY2FtZWxDYXNlZCwgZWc6XG4gKiBXZWJraXRUcmFuc2l0aW9uRHVyYXRpb25cbiAqL1xuXG5mdW5jdGlvbiBwcmVmaXhLZXkocHJlZml4LCBrZXkpIHtcbiAgcmV0dXJuIHByZWZpeCArIGtleS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIGtleS5zdWJzdHJpbmcoMSk7XG59XG4vKipcbiAqIFN1cHBvcnQgc3R5bGUgbmFtZXMgdGhhdCBtYXkgY29tZSBwYXNzZWQgaW4gcHJlZml4ZWQgYnkgYWRkaW5nIHBlcm11dGF0aW9uc1xuICogb2YgdmVuZG9yIHByZWZpeGVzLlxuICogVGFrZW4gZnJvbSBSZWFjdCdzIENTU1Byb3BlcnR5LmpzXG4gKi9cblxuXG52YXIgcHJlZml4ZXMgPSBbJ1dlYmtpdCcsICdtcycsICdNb3onLCAnTyddOyAvLyBVc2luZyBPYmplY3Qua2V5cyBoZXJlLCBvciBlbHNlIHRoZSB2YW5pbGxhIGZvci1pbiBsb29wIG1ha2VzIElFOCBnbyBpbnRvIGFuXG4vLyBpbmZpbml0ZSBsb29wLCBiZWNhdXNlIGl0IGl0ZXJhdGVzIG92ZXIgdGhlIG5ld2x5IGFkZGVkIHByb3BzIHRvby5cbi8vIFRha2VuIGZyb20gUmVhY3QncyBDU1NQcm9wZXJ0eS5qc1xuXG5PYmplY3Qua2V5cyhpc1VuaXRsZXNzTnVtYmVyKS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wKSB7XG4gIHByZWZpeGVzLmZvckVhY2goZnVuY3Rpb24gKHByZWZpeCkge1xuICAgIGlzVW5pdGxlc3NOdW1iZXJbcHJlZml4S2V5KHByZWZpeCwgcHJvcCldID0gaXNVbml0bGVzc051bWJlcltwcm9wXTtcbiAgfSk7XG59KTtcbnZhciBzdHJpbmdpZnlWYWx1ZSA9IGZ1bmN0aW9uIHN0cmluZ2lmeVZhbHVlKGtleVxuLyogOiBzdHJpbmcgKi9cbiwgcHJvcFxuLyogOiBhbnkgKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIGlmICh0eXBlb2YgcHJvcCA9PT0gXCJudW1iZXJcIikge1xuICAgIGlmIChpc1VuaXRsZXNzTnVtYmVyW2tleV0pIHtcbiAgICAgIHJldHVybiBcIlwiICsgcHJvcDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHByb3AgKyBcInB4XCI7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiAnJyArIHByb3A7XG4gIH1cbn07XG52YXIgc3RyaW5naWZ5QW5kSW1wb3J0YW50aWZ5VmFsdWUgPSBmdW5jdGlvbiBzdHJpbmdpZnlBbmRJbXBvcnRhbnRpZnlWYWx1ZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHByb3Bcbi8qIDogYW55ICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIGltcG9ydGFudGlmeShzdHJpbmdpZnlWYWx1ZShrZXksIHByb3ApKVxuICApO1xufTsgLy8gVHVybiBhIHN0cmluZyBpbnRvIGEgaGFzaCBzdHJpbmcgb2YgYmFzZS0zNiB2YWx1ZXMgKHVzaW5nIGxldHRlcnMgYW5kIG51bWJlcnMpXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcblxudmFyIGhhc2hTdHJpbmcgPSBmdW5jdGlvbiBoYXNoU3RyaW5nKHN0cmluZ1xuLyogOiBzdHJpbmcgKi9cbiwga2V5XG4vKiA6ID9zdHJpbmcgKi9cbikge1xuICByZXR1cm4gKFxuICAgIC8qIHN0cmluZyAqL1xuICAgIHN0cmluZ0hhc2goc3RyaW5nKS50b1N0cmluZygzNilcbiAgKTtcbn07IC8vIEhhc2ggYSBqYXZhc2NyaXB0IG9iamVjdCB1c2luZyBKU09OLnN0cmluZ2lmeS4gVGhpcyBpcyB2ZXJ5IGZhc3QsIGFib3V0IDNcbi8vIG1pY3Jvc2Vjb25kcyBvbiBteSBjb21wdXRlciBmb3IgYSBzYW1wbGUgb2JqZWN0OlxuLy8gaHR0cDovL2pzcGVyZi5jb20vdGVzdC1oYXNoZm52MzJhLWhhc2gvNVxuLy9cbi8vIE5vdGUgdGhhdCB0aGlzIHVzZXMgSlNPTi5zdHJpbmdpZnkgdG8gc3RyaW5naWZ5IHRoZSBvYmplY3RzIHNvIGluIG9yZGVyIGZvclxuLy8gdGhpcyB0byBwcm9kdWNlIGNvbnNpc3RlbnQgaGFzaGVzIGJyb3dzZXJzIG5lZWQgdG8gaGF2ZSBhIGNvbnNpc3RlbnRcbi8vIG9yZGVyaW5nIG9mIG9iamVjdHMuIEJlbiBBbHBlcnQgc2F5cyB0aGF0IEZhY2Vib29rIGRlcGVuZHMgb24gdGhpcywgc28gd2Vcbi8vIGNhbiBwcm9iYWJseSBkZXBlbmQgb24gdGhpcyB0b28uXG5cbnZhciBoYXNoT2JqZWN0ID0gZnVuY3Rpb24gaGFzaE9iamVjdChvYmplY3Rcbi8qIDogT2JqZWN0TWFwICovXG4pIHtcbiAgcmV0dXJuIChcbiAgICAvKiA6IHN0cmluZyAqL1xuICAgIGhhc2hTdHJpbmcoSlNPTi5zdHJpbmdpZnkob2JqZWN0KSlcbiAgKTtcbn07IC8vIEdpdmVuIGEgc2luZ2xlIHN0eWxlIHZhbHVlIHN0cmluZyBsaWtlIHRoZSBcImJcIiBmcm9tIFwiYTogYjtcIiwgYWRkcyAhaW1wb3J0YW50XG4vLyB0byBnZW5lcmF0ZSBcImIgIWltcG9ydGFudFwiLlxuXG52YXIgaW1wb3J0YW50aWZ5ID0gZnVuY3Rpb24gaW1wb3J0YW50aWZ5KHN0cmluZ1xuLyogOiBzdHJpbmcgKi9cbikge1xuICByZXR1cm4gKFxuICAgIC8qIDogc3RyaW5nICovXG4gICAgLy8gQnJhY2tldCBzdHJpbmcgY2hhcmFjdGVyIGFjY2VzcyBpcyB2ZXJ5IGZhc3QsIGFuZCBpbiB0aGUgZGVmYXVsdCBjYXNlIHdlXG4gICAgLy8gbm9ybWFsbHkgZG9uJ3QgZXhwZWN0IHRoZXJlIHRvIGJlIFwiIWltcG9ydGFudFwiIGF0IHRoZSBlbmQgb2YgdGhlIHN0cmluZ1xuICAgIC8vIHNvIHdlIGNhbiB1c2UgdGhpcyBzaW1wbGUgY2hlY2sgdG8gdGFrZSBhbiBvcHRpbWl6ZWQgcGF0aC4gSWYgdGhlcmVcbiAgICAvLyBoYXBwZW5zIHRvIGJlIGEgXCIhXCIgaW4gdGhpcyBwb3NpdGlvbiwgd2UgZm9sbG93IHVwIHdpdGggYSBtb3JlIHRob3JvdWdoXG4gICAgLy8gY2hlY2suXG4gICAgc3RyaW5nW3N0cmluZy5sZW5ndGggLSAxMF0gPT09ICchJyAmJiBzdHJpbmcuc2xpY2UoLTExKSA9PT0gJyAhaW1wb3J0YW50JyA/IHN0cmluZyA6IFwiXCIuY29uY2F0KHN0cmluZywgXCIgIWltcG9ydGFudFwiKVxuICApO1xufTtcblxuLyogQGZsb3cgKi9cbnZhciBNQVBfRVhJU1RTID0gdHlwZW9mIE1hcCAhPT0gJ3VuZGVmaW5lZCc7XG5cbnZhciBPcmRlcmVkRWxlbWVudHMgPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICAvKiA6OlxuICBlbGVtZW50czoge1tzdHJpbmddOiBhbnl9O1xuICBrZXlPcmRlcjogc3RyaW5nW107XG4gICovXG4gIGZ1bmN0aW9uIE9yZGVyZWRFbGVtZW50cygpIHtcbiAgICB0aGlzLmVsZW1lbnRzID0ge307XG4gICAgdGhpcy5rZXlPcmRlciA9IFtdO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IE9yZGVyZWRFbGVtZW50cy5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrXG4gIC8qIDogKHN0cmluZywgYW55KSA9PiB2b2lkICovXG4gICkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5rZXlPcmRlci5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gKHZhbHVlLCBrZXkpIHRvIG1hdGNoIE1hcCdzIEFQSVxuICAgICAgY2FsbGJhY2sodGhpcy5lbGVtZW50c1t0aGlzLmtleU9yZGVyW2ldXSwgdGhpcy5rZXlPcmRlcltpXSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5zZXQgPSBmdW5jdGlvbiBzZXQoa2V5XG4gIC8qIDogc3RyaW5nICovXG4gICwgdmFsdWVcbiAgLyogOiBhbnkgKi9cbiAgLCBzaG91bGRSZW9yZGVyXG4gIC8qIDogP2Jvb2xlYW4gKi9cbiAgKSB7XG4gICAgaWYgKCF0aGlzLmVsZW1lbnRzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgIHRoaXMua2V5T3JkZXIucHVzaChrZXkpO1xuICAgIH0gZWxzZSBpZiAoc2hvdWxkUmVvcmRlcikge1xuICAgICAgdmFyIGluZGV4ID0gdGhpcy5rZXlPcmRlci5pbmRleE9mKGtleSk7XG4gICAgICB0aGlzLmtleU9yZGVyLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB0aGlzLmtleU9yZGVyLnB1c2goa2V5KTtcbiAgICB9XG5cbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gdmFsdWU7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKE1BUF9FWElTVFMgJiYgdmFsdWUgaW5zdGFuY2VvZiBNYXAgfHwgdmFsdWUgaW5zdGFuY2VvZiBPcmRlcmVkRWxlbWVudHMpIHtcbiAgICAgIC8vIFdlIGhhdmUgZm91bmQgYSBuZXN0ZWQgTWFwLCBzbyB3ZSBuZWVkIHRvIHJlY3Vyc2Ugc28gdGhhdCBhbGxcbiAgICAgIC8vIG9mIHRoZSBuZXN0ZWQgb2JqZWN0cyBhbmQgTWFwcyBhcmUgbWVyZ2VkIHByb3Blcmx5LlxuICAgICAgdmFyIG5lc3RlZCA9IHRoaXMuZWxlbWVudHMuaGFzT3duUHJvcGVydHkoa2V5KSA/IHRoaXMuZWxlbWVudHNba2V5XSA6IG5ldyBPcmRlcmVkRWxlbWVudHMoKTtcbiAgICAgIHZhbHVlLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgbmVzdGVkLnNldChrZXksIHZhbHVlLCBzaG91bGRSZW9yZGVyKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gbmVzdGVkO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgX3R5cGVvZih2YWx1ZSkgPT09ICdvYmplY3QnKSB7XG4gICAgICAvLyBXZSBoYXZlIGZvdW5kIGEgbmVzdGVkIG9iamVjdCwgc28gd2UgbmVlZCB0byByZWN1cnNlIHNvIHRoYXQgYWxsXG4gICAgICAvLyBvZiB0aGUgbmVzdGVkIG9iamVjdHMgYW5kIE1hcHMgYXJlIG1lcmdlZCBwcm9wZXJseS5cbiAgICAgIHZhciBfbmVzdGVkID0gdGhpcy5lbGVtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpID8gdGhpcy5lbGVtZW50c1trZXldIDogbmV3IE9yZGVyZWRFbGVtZW50cygpO1xuXG4gICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHZhbHVlKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIF9uZXN0ZWQuc2V0KGtleXNbaV0sIHZhbHVlW2tleXNbaV1dLCBzaG91bGRSZW9yZGVyKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gX25lc3RlZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLmVsZW1lbnRzW2tleV0gPSB2YWx1ZTtcbiAgfTtcblxuICBfcHJvdG8uZ2V0ID0gZnVuY3Rpb24gZ2V0KGtleVxuICAvKiA6IHN0cmluZyAqL1xuICApXG4gIC8qIDogYW55ICovXG4gIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50c1trZXldO1xuICB9O1xuXG4gIF9wcm90by5oYXMgPSBmdW5jdGlvbiBoYXMoa2V5XG4gIC8qIDogc3RyaW5nICovXG4gIClcbiAgLyogOiBib29sZWFuICovXG4gIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50cy5oYXNPd25Qcm9wZXJ0eShrZXkpO1xuICB9O1xuXG4gIF9wcm90by5hZGRTdHlsZVR5cGUgPSBmdW5jdGlvbiBhZGRTdHlsZVR5cGUoc3R5bGVUeXBlXG4gIC8qIDogYW55ICovXG4gIClcbiAgLyogOiB2b2lkICovXG4gIHtcbiAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgaWYgKE1BUF9FWElTVFMgJiYgc3R5bGVUeXBlIGluc3RhbmNlb2YgTWFwIHx8IHN0eWxlVHlwZSBpbnN0YW5jZW9mIE9yZGVyZWRFbGVtZW50cykge1xuICAgICAgc3R5bGVUeXBlLmZvckVhY2goZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgX3RoaXMuc2V0KGtleSwgdmFsdWUsIHRydWUpO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoc3R5bGVUeXBlKTtcblxuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRoaXMuc2V0KGtleXNbaV0sIHN0eWxlVHlwZVtrZXlzW2ldXSwgdHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBPcmRlcmVkRWxlbWVudHM7XG59KCk7XG5cbmZ1bmN0aW9uIHVud3JhcEV4cG9ydHMgKHgpIHtcblx0cmV0dXJuIHggJiYgeC5fX2VzTW9kdWxlICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh4LCAnZGVmYXVsdCcpID8geC5kZWZhdWx0IDogeDtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ29tbW9uanNNb2R1bGUoZm4sIG1vZHVsZSkge1xuXHRyZXR1cm4gbW9kdWxlID0geyBleHBvcnRzOiB7fSB9LCBmbihtb2R1bGUsIG1vZHVsZS5leHBvcnRzKSwgbW9kdWxlLmV4cG9ydHM7XG59XG5cbmZ1bmN0aW9uIGdldENqc0V4cG9ydEZyb21OYW1lc3BhY2UgKG4pIHtcblx0cmV0dXJuIG4gJiYgbi5kZWZhdWx0IHx8IG47XG59XG5cbnZhciBjYXBpdGFsaXplU3RyaW5nXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjYXBpdGFsaXplU3RyaW5nO1xuZnVuY3Rpb24gY2FwaXRhbGl6ZVN0cmluZyhzdHIpIHtcbiAgcmV0dXJuIHN0ci5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHN0ci5zbGljZSgxKTtcbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKGNhcGl0YWxpemVTdHJpbmdfMSk7XG5cbnZhciBwcmVmaXhQcm9wZXJ0eV8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcHJlZml4UHJvcGVydHk7XG5cblxuXG52YXIgX2NhcGl0YWxpemVTdHJpbmcyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChjYXBpdGFsaXplU3RyaW5nXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG5mdW5jdGlvbiBwcmVmaXhQcm9wZXJ0eShwcmVmaXhQcm9wZXJ0aWVzLCBwcm9wZXJ0eSwgc3R5bGUpIHtcbiAgaWYgKHByZWZpeFByb3BlcnRpZXMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpKSB7XG4gICAgdmFyIG5ld1N0eWxlID0ge307XG4gICAgdmFyIHJlcXVpcmVkUHJlZml4ZXMgPSBwcmVmaXhQcm9wZXJ0aWVzW3Byb3BlcnR5XTtcbiAgICB2YXIgY2FwaXRhbGl6ZWRQcm9wZXJ0eSA9ICgwLCBfY2FwaXRhbGl6ZVN0cmluZzIuZGVmYXVsdCkocHJvcGVydHkpO1xuICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoc3R5bGUpO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHN0eWxlUHJvcGVydHkgPSBrZXlzW2ldO1xuICAgICAgaWYgKHN0eWxlUHJvcGVydHkgPT09IHByb3BlcnR5KSB7XG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgcmVxdWlyZWRQcmVmaXhlcy5sZW5ndGg7IGorKykge1xuICAgICAgICAgIG5ld1N0eWxlW3JlcXVpcmVkUHJlZml4ZXNbal0gKyBjYXBpdGFsaXplZFByb3BlcnR5XSA9IHN0eWxlW3Byb3BlcnR5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbmV3U3R5bGVbc3R5bGVQcm9wZXJ0eV0gPSBzdHlsZVtzdHlsZVByb3BlcnR5XTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld1N0eWxlO1xuICB9XG4gIHJldHVybiBzdHlsZTtcbn1cbn0pO1xuXG51bndyYXBFeHBvcnRzKHByZWZpeFByb3BlcnR5XzEpO1xuXG52YXIgcHJlZml4VmFsdWVfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHByZWZpeFZhbHVlO1xuZnVuY3Rpb24gcHJlZml4VmFsdWUocGx1Z2lucywgcHJvcGVydHksIHZhbHVlLCBzdHlsZSwgbWV0YURhdGEpIHtcbiAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHBsdWdpbnMubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICB2YXIgcHJvY2Vzc2VkVmFsdWUgPSBwbHVnaW5zW2ldKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUsIG1ldGFEYXRhKTtcblxuICAgIC8vIHdlIGNhbiBzdG9wIHByb2Nlc3NpbmcgaWYgYSB2YWx1ZSBpcyByZXR1cm5lZFxuICAgIC8vIGFzIGFsbCBwbHVnaW4gY3JpdGVyaWEgYXJlIHVuaXF1ZVxuICAgIGlmIChwcm9jZXNzZWRWYWx1ZSkge1xuICAgICAgcmV0dXJuIHByb2Nlc3NlZFZhbHVlO1xuICAgIH1cbiAgfVxufVxufSk7XG5cbnVud3JhcEV4cG9ydHMocHJlZml4VmFsdWVfMSk7XG5cbnZhciBhZGROZXdWYWx1ZXNPbmx5XzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBhZGROZXdWYWx1ZXNPbmx5O1xuZnVuY3Rpb24gYWRkSWZOZXcobGlzdCwgdmFsdWUpIHtcbiAgaWYgKGxpc3QuaW5kZXhPZih2YWx1ZSkgPT09IC0xKSB7XG4gICAgbGlzdC5wdXNoKHZhbHVlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhZGROZXdWYWx1ZXNPbmx5KGxpc3QsIHZhbHVlcykge1xuICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZXMpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHZhbHVlcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgICAgYWRkSWZOZXcobGlzdCwgdmFsdWVzW2ldKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgYWRkSWZOZXcobGlzdCwgdmFsdWVzKTtcbiAgfVxufVxufSk7XG5cbnVud3JhcEV4cG9ydHMoYWRkTmV3VmFsdWVzT25seV8xKTtcblxudmFyIGlzT2JqZWN0XzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpc09iamVjdDtcbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIE9iamVjdCAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSk7XG59XG59KTtcblxudW53cmFwRXhwb3J0cyhpc09iamVjdF8xKTtcblxudmFyIGNyZWF0ZVByZWZpeGVyXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjcmVhdGVQcmVmaXhlcjtcblxuXG5cbnZhciBfcHJlZml4UHJvcGVydHkyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChwcmVmaXhQcm9wZXJ0eV8xKTtcblxuXG5cbnZhciBfcHJlZml4VmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChwcmVmaXhWYWx1ZV8xKTtcblxuXG5cbnZhciBfYWRkTmV3VmFsdWVzT25seTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGFkZE5ld1ZhbHVlc09ubHlfMSk7XG5cblxuXG52YXIgX2lzT2JqZWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNPYmplY3RfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIGNyZWF0ZVByZWZpeGVyKF9yZWYpIHtcbiAgdmFyIHByZWZpeE1hcCA9IF9yZWYucHJlZml4TWFwLFxuICAgICAgcGx1Z2lucyA9IF9yZWYucGx1Z2lucztcblxuICByZXR1cm4gZnVuY3Rpb24gcHJlZml4KHN0eWxlKSB7XG4gICAgZm9yICh2YXIgcHJvcGVydHkgaW4gc3R5bGUpIHtcbiAgICAgIHZhciB2YWx1ZSA9IHN0eWxlW3Byb3BlcnR5XTtcblxuICAgICAgLy8gaGFuZGxlIG5lc3RlZCBvYmplY3RzXG4gICAgICBpZiAoKDAsIF9pc09iamVjdDIuZGVmYXVsdCkodmFsdWUpKSB7XG4gICAgICAgIHN0eWxlW3Byb3BlcnR5XSA9IHByZWZpeCh2YWx1ZSk7XG4gICAgICAgIC8vIGhhbmRsZSBhcnJheSB2YWx1ZXNcbiAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgdmFyIGNvbWJpbmVkVmFsdWUgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdmFsdWUubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgICAgICB2YXIgcHJvY2Vzc2VkVmFsdWUgPSAoMCwgX3ByZWZpeFZhbHVlMi5kZWZhdWx0KShwbHVnaW5zLCBwcm9wZXJ0eSwgdmFsdWVbaV0sIHN0eWxlLCBwcmVmaXhNYXApO1xuICAgICAgICAgICgwLCBfYWRkTmV3VmFsdWVzT25seTIuZGVmYXVsdCkoY29tYmluZWRWYWx1ZSwgcHJvY2Vzc2VkVmFsdWUgfHwgdmFsdWVbaV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gb25seSBtb2RpZnkgdGhlIHZhbHVlIGlmIGl0IHdhcyB0b3VjaGVkXG4gICAgICAgIC8vIGJ5IGFueSBwbHVnaW4gdG8gcHJldmVudCB1bm5lY2Vzc2FyeSBtdXRhdGlvbnNcbiAgICAgICAgaWYgKGNvbWJpbmVkVmFsdWUubGVuZ3RoID4gMCkge1xuICAgICAgICAgIHN0eWxlW3Byb3BlcnR5XSA9IGNvbWJpbmVkVmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBfcHJvY2Vzc2VkVmFsdWUgPSAoMCwgX3ByZWZpeFZhbHVlMi5kZWZhdWx0KShwbHVnaW5zLCBwcm9wZXJ0eSwgdmFsdWUsIHN0eWxlLCBwcmVmaXhNYXApO1xuXG4gICAgICAgIC8vIG9ubHkgbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCB3YXMgdG91Y2hlZFxuICAgICAgICAvLyBieSBhbnkgcGx1Z2luIHRvIHByZXZlbnQgdW5uZWNlc3NhcnkgbXV0YXRpb25zXG4gICAgICAgIGlmIChfcHJvY2Vzc2VkVmFsdWUpIHtcbiAgICAgICAgICBzdHlsZVtwcm9wZXJ0eV0gPSBfcHJvY2Vzc2VkVmFsdWU7XG4gICAgICAgIH1cblxuICAgICAgICBzdHlsZSA9ICgwLCBfcHJlZml4UHJvcGVydHkyLmRlZmF1bHQpKHByZWZpeE1hcCwgcHJvcGVydHksIHN0eWxlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc3R5bGU7XG4gIH07XG59XG59KTtcblxudmFyIGNyZWF0ZVByZWZpeGVyID0gdW53cmFwRXhwb3J0cyhjcmVhdGVQcmVmaXhlcl8xKTtcblxudmFyIGJhY2tncm91bmRDbGlwXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBiYWNrZ3JvdW5kQ2xpcDtcblxuLy8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQ1NTL2JhY2tncm91bmQtY2xpcCNCcm93c2VyX2NvbXBhdGliaWxpdHlcbmZ1bmN0aW9uIGJhY2tncm91bmRDbGlwKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiB2YWx1ZSA9PT0gJ3RleHQnKSB7XG4gICAgcmV0dXJuIFsnLXdlYmtpdC10ZXh0JywgJ3RleHQnXTtcbiAgfVxufVxufSk7XG5cbnZhciBiYWNrZ3JvdW5kQ2xpcCA9IHVud3JhcEV4cG9ydHMoYmFja2dyb3VuZENsaXBfMSk7XG5cbnZhciBpc1ByZWZpeGVkVmFsdWVfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGlzUHJlZml4ZWRWYWx1ZTtcbnZhciByZWdleCA9IC8td2Via2l0LXwtbW96LXwtbXMtLztcblxuZnVuY3Rpb24gaXNQcmVmaXhlZFZhbHVlKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmIHJlZ2V4LnRlc3QodmFsdWUpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG59KTtcblxudW53cmFwRXhwb3J0cyhpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbnZhciBjYWxjXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjYWxjO1xuXG5cblxudmFyIF9pc1ByZWZpeGVkVmFsdWUyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChpc1ByZWZpeGVkVmFsdWVfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnLW1vei0nLCAnJ107XG5mdW5jdGlvbiBjYWxjKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdjYWxjKCcpID4gLTEpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9jYWxjXFwoL2csIHByZWZpeCArICdjYWxjKCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGNhbGMgPSB1bndyYXBFeHBvcnRzKGNhbGNfMSk7XG5cbnZhciBjcm9zc0ZhZGVfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGNyb3NzRmFkZTtcblxuXG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBodHRwOi8vY2FuaXVzZS5jb20vI3NlYXJjaD1jcm9zcy1mYWRlXG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJyddO1xuZnVuY3Rpb24gY3Jvc3NGYWRlKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdjcm9zcy1mYWRlKCcpID4gLTEpIHtcbiAgICByZXR1cm4gcHJlZml4ZXMubWFwKGZ1bmN0aW9uIChwcmVmaXgpIHtcbiAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9jcm9zcy1mYWRlXFwoL2csIHByZWZpeCArICdjcm9zcy1mYWRlKCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGNyb3NzRmFkZSA9IHVud3JhcEV4cG9ydHMoY3Jvc3NGYWRlXzEpO1xuXG52YXIgY3Vyc29yXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBjdXJzb3I7XG52YXIgcHJlZml4ZXMgPSBbJy13ZWJraXQtJywgJy1tb3otJywgJyddO1xuXG52YXIgdmFsdWVzID0ge1xuICAnem9vbS1pbic6IHRydWUsXG4gICd6b29tLW91dCc6IHRydWUsXG4gIGdyYWI6IHRydWUsXG4gIGdyYWJiaW5nOiB0cnVlXG59O1xuXG5mdW5jdGlvbiBjdXJzb3IocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmIChwcm9wZXJ0eSA9PT0gJ2N1cnNvcicgJiYgdmFsdWVzLmhhc093blByb3BlcnR5KHZhbHVlKSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHByZWZpeCArIHZhbHVlO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGN1cnNvciA9IHVud3JhcEV4cG9ydHMoY3Vyc29yXzEpO1xuXG52YXIgZmlsdGVyXzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmaWx0ZXI7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuLy8gaHR0cDovL2Nhbml1c2UuY29tLyNmZWF0PWNzcy1maWx0ZXItZnVuY3Rpb25cbnZhciBwcmVmaXhlcyA9IFsnLXdlYmtpdC0nLCAnJ107XG5mdW5jdGlvbiBmaWx0ZXIocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICEoMCwgX2lzUHJlZml4ZWRWYWx1ZTIuZGVmYXVsdCkodmFsdWUpICYmIHZhbHVlLmluZGV4T2YoJ2ZpbHRlcignKSA+IC0xKSB7XG4gICAgcmV0dXJuIHByZWZpeGVzLm1hcChmdW5jdGlvbiAocHJlZml4KSB7XG4gICAgICByZXR1cm4gdmFsdWUucmVwbGFjZSgvZmlsdGVyXFwoL2csIHByZWZpeCArICdmaWx0ZXIoJyk7XG4gICAgfSk7XG4gIH1cbn1cbn0pO1xuXG52YXIgZmlsdGVyID0gdW53cmFwRXhwb3J0cyhmaWx0ZXJfMSk7XG5cbnZhciBmbGV4XzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBmbGV4O1xudmFyIHZhbHVlcyA9IHtcbiAgZmxleDogWyctd2Via2l0LWJveCcsICctbW96LWJveCcsICctbXMtZmxleGJveCcsICctd2Via2l0LWZsZXgnLCAnZmxleCddLFxuICAnaW5saW5lLWZsZXgnOiBbJy13ZWJraXQtaW5saW5lLWJveCcsICctbW96LWlubGluZS1ib3gnLCAnLW1zLWlubGluZS1mbGV4Ym94JywgJy13ZWJraXQtaW5saW5lLWZsZXgnLCAnaW5saW5lLWZsZXgnXVxufTtcblxuZnVuY3Rpb24gZmxleChwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnR5ID09PSAnZGlzcGxheScgJiYgdmFsdWVzLmhhc093blByb3BlcnR5KHZhbHVlKSkge1xuICAgIHJldHVybiB2YWx1ZXNbdmFsdWVdO1xuICB9XG59XG59KTtcblxudmFyIGZsZXggPSB1bndyYXBFeHBvcnRzKGZsZXhfMSk7XG5cbnZhciBmbGV4Ym94SUVfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZsZXhib3hJRTtcbnZhciBhbHRlcm5hdGl2ZVZhbHVlcyA9IHtcbiAgJ3NwYWNlLWFyb3VuZCc6ICdkaXN0cmlidXRlJyxcbiAgJ3NwYWNlLWJldHdlZW4nOiAnanVzdGlmeScsXG4gICdmbGV4LXN0YXJ0JzogJ3N0YXJ0JyxcbiAgJ2ZsZXgtZW5kJzogJ2VuZCdcbn07XG52YXIgYWx0ZXJuYXRpdmVQcm9wcyA9IHtcbiAgYWxpZ25Db250ZW50OiAnbXNGbGV4TGluZVBhY2snLFxuICBhbGlnblNlbGY6ICdtc0ZsZXhJdGVtQWxpZ24nLFxuICBhbGlnbkl0ZW1zOiAnbXNGbGV4QWxpZ24nLFxuICBqdXN0aWZ5Q29udGVudDogJ21zRmxleFBhY2snLFxuICBvcmRlcjogJ21zRmxleE9yZGVyJyxcbiAgZmxleEdyb3c6ICdtc0ZsZXhQb3NpdGl2ZScsXG4gIGZsZXhTaHJpbms6ICdtc0ZsZXhOZWdhdGl2ZScsXG4gIGZsZXhCYXNpczogJ21zRmxleFByZWZlcnJlZFNpemUnXG4gIC8vIEZ1bGwgZXhwYW5kZWQgc3ludGF4IGlzIGZsZXgtZ3JvdyB8IGZsZXgtc2hyaW5rIHwgZmxleC1iYXNpcy5cbn07dmFyIGZsZXhTaG9ydGhhbmRNYXBwaW5ncyA9IHtcbiAgYXV0bzogJzEgMSBhdXRvJyxcbiAgaW5oZXJpdDogJ2luaGVyaXQnLFxuICBpbml0aWFsOiAnMCAxIGF1dG8nLFxuICBub25lOiAnMCAwIGF1dG8nLFxuICB1bnNldDogJ3Vuc2V0J1xufTtcbnZhciBpc1VuaXRsZXNzTnVtYmVyID0gL15cXGQrKFxcLlxcZCspPyQvO1xuXG5mdW5jdGlvbiBmbGV4Ym94SUUocHJvcGVydHksIHZhbHVlLCBzdHlsZSkge1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGFsdGVybmF0aXZlUHJvcHMsIHByb3BlcnR5KSkge1xuICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcHNbcHJvcGVydHldXSA9IGFsdGVybmF0aXZlVmFsdWVzW3ZhbHVlXSB8fCB2YWx1ZTtcbiAgfVxuICBpZiAocHJvcGVydHkgPT09ICdmbGV4Jykge1xuICAgIC8vIEZvciBjZXJ0YWluIHZhbHVlcyB3ZSBjYW4gZG8gc3RyYWlnaHQgbWFwcGluZ3MgYmFzZWQgb24gdGhlIHNwZWNcbiAgICAvLyBmb3IgdGhlIGV4cGFuc2lvbnMuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChmbGV4U2hvcnRoYW5kTWFwcGluZ3MsIHZhbHVlKSkge1xuICAgICAgc3R5bGUubXNGbGV4ID0gZmxleFNob3J0aGFuZE1hcHBpbmdzW3ZhbHVlXTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgLy8gSGVyZSB3ZSBoYXZlIG5vIGRpcmVjdCBtYXBwaW5nLCBzbyB3ZSBmYXZvciBsb29raW5nIGZvciBhXG4gICAgLy8gdW5pdGxlc3MgcG9zaXRpdmUgbnVtYmVyIGFzIHRoYXQgd2lsbCBiZSB0aGUgbW9zdCBjb21tb24gdXNlLWNhc2UuXG4gICAgaWYgKGlzVW5pdGxlc3NOdW1iZXIudGVzdCh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zRmxleCA9IHZhbHVlICsgJyAxIDAlJztcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBUaGUgbmV4dCB0aGluZyB3ZSBjYW4gbG9vayBmb3IgaXMgaWYgdGhlcmUgYXJlIG11bHRpcGxlIHZhbHVlcy5cbiAgICB2YXIgZmxleFZhbHVlcyA9IHZhbHVlLnNwbGl0KC9cXHMvKTtcbiAgICAvLyBJZiB3ZSBvbmx5IGhhdmUgYSBzaW5nbGUgdmFsdWUgdGhhdCB3YXNuJ3QgYSBwb3NpdGl2ZSB1bml0bGVzc1xuICAgIC8vIG9yIGEgcHJlLW1hcHBlZCB2YWx1ZSwgdGhlbiB3ZSBjYW4gYXNzdW1lIGl0IGlzIGEgdW5pdCB2YWx1ZS5cbiAgICBzd2l0Y2ggKGZsZXhWYWx1ZXMubGVuZ3RoKSB7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHN0eWxlLm1zRmxleCA9ICcxIDEgJyArIHZhbHVlO1xuICAgICAgICByZXR1cm47XG4gICAgICBjYXNlIDI6XG4gICAgICAgIC8vIElmIHdlIGhhdmUgMiB1bml0cywgdGhlbiB3ZSBleHBlY3QgdGhhdCB0aGUgZmlyc3Qgd2lsbFxuICAgICAgICAvLyBhbHdheXMgYmUgYSB1bml0bGVzcyBudW1iZXIgYW5kIHJlcHJlc2VudHMgZmxleC1ncm93LlxuICAgICAgICAvLyBUaGUgc2Vjb25kIHVuaXQgd2lsbCByZXByZXNlbnQgZmxleC1zaHJpbmsgZm9yIGEgdW5pdGxlc3NcbiAgICAgICAgLy8gdmFsdWUsIG9yIGZsZXgtYmFzaXMgb3RoZXJ3aXNlLlxuICAgICAgICBpZiAoaXNVbml0bGVzc051bWJlci50ZXN0KGZsZXhWYWx1ZXNbMV0pKSB7XG4gICAgICAgICAgc3R5bGUubXNGbGV4ID0gZmxleFZhbHVlc1swXSArICcgJyArIGZsZXhWYWx1ZXNbMV0gKyAnIDAlJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzdHlsZS5tc0ZsZXggPSBmbGV4VmFsdWVzWzBdICsgJyAxICcgKyBmbGV4VmFsdWVzWzFdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHN0eWxlLm1zRmxleCA9IHZhbHVlO1xuICAgIH1cbiAgfVxufVxufSk7XG5cbnZhciBmbGV4Ym94SUUgPSB1bndyYXBFeHBvcnRzKGZsZXhib3hJRV8xKTtcblxudmFyIGZsZXhib3hPbGRfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGZsZXhib3hPbGQ7XG52YXIgYWx0ZXJuYXRpdmVWYWx1ZXMgPSB7XG4gICdzcGFjZS1hcm91bmQnOiAnanVzdGlmeScsXG4gICdzcGFjZS1iZXR3ZWVuJzogJ2p1c3RpZnknLFxuICAnZmxleC1zdGFydCc6ICdzdGFydCcsXG4gICdmbGV4LWVuZCc6ICdlbmQnLFxuICAnd3JhcC1yZXZlcnNlJzogJ211bHRpcGxlJyxcbiAgd3JhcDogJ211bHRpcGxlJ1xufTtcblxudmFyIGFsdGVybmF0aXZlUHJvcHMgPSB7XG4gIGFsaWduSXRlbXM6ICdXZWJraXRCb3hBbGlnbicsXG4gIGp1c3RpZnlDb250ZW50OiAnV2Via2l0Qm94UGFjaycsXG4gIGZsZXhXcmFwOiAnV2Via2l0Qm94TGluZXMnLFxuICBmbGV4R3JvdzogJ1dlYmtpdEJveEZsZXgnXG59O1xuXG5mdW5jdGlvbiBmbGV4Ym94T2xkKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKHByb3BlcnR5ID09PSAnZmxleERpcmVjdGlvbicgJiYgdHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIGlmICh2YWx1ZS5pbmRleE9mKCdjb2x1bW4nKSA+IC0xKSB7XG4gICAgICBzdHlsZS5XZWJraXRCb3hPcmllbnQgPSAndmVydGljYWwnO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5XZWJraXRCb3hPcmllbnQgPSAnaG9yaXpvbnRhbCc7XG4gICAgfVxuICAgIGlmICh2YWx1ZS5pbmRleE9mKCdyZXZlcnNlJykgPiAtMSkge1xuICAgICAgc3R5bGUuV2Via2l0Qm94RGlyZWN0aW9uID0gJ3JldmVyc2UnO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5XZWJraXRCb3hEaXJlY3Rpb24gPSAnbm9ybWFsJztcbiAgICB9XG4gIH1cbiAgaWYgKGFsdGVybmF0aXZlUHJvcHMuaGFzT3duUHJvcGVydHkocHJvcGVydHkpKSB7XG4gICAgc3R5bGVbYWx0ZXJuYXRpdmVQcm9wc1twcm9wZXJ0eV1dID0gYWx0ZXJuYXRpdmVWYWx1ZXNbdmFsdWVdIHx8IHZhbHVlO1xuICB9XG59XG59KTtcblxudmFyIGZsZXhib3hPbGQgPSB1bndyYXBFeHBvcnRzKGZsZXhib3hPbGRfMSk7XG5cbnZhciBncmFkaWVudF8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gZ3JhZGllbnQ7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHZhbHVlcyA9IC9saW5lYXItZ3JhZGllbnR8cmFkaWFsLWdyYWRpZW50fHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnR8cmVwZWF0aW5nLXJhZGlhbC1ncmFkaWVudC9naTtcblxuZnVuY3Rpb24gZ3JhZGllbnQocHJvcGVydHksIHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmICEoMCwgX2lzUHJlZml4ZWRWYWx1ZTIuZGVmYXVsdCkodmFsdWUpICYmIHZhbHVlcy50ZXN0KHZhbHVlKSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UodmFsdWVzLCBmdW5jdGlvbiAoZ3JhZCkge1xuICAgICAgICByZXR1cm4gcHJlZml4ICsgZ3JhZDtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGdyYWRpZW50ID0gdW53cmFwRXhwb3J0cyhncmFkaWVudF8xKTtcblxudmFyIGdyaWRfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkgeyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSkgX2lbXCJyZXR1cm5cIl0oKTsgfSBmaW5hbGx5IHsgaWYgKF9kKSB0aHJvdyBfZTsgfSB9IHJldHVybiBfYXJyOyB9IHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHsgcmV0dXJuIGFycjsgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHsgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTsgfSBlbHNlIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7IH0gfTsgfSgpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBncmlkO1xuZnVuY3Rpb24gaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmICFpc05hTih2YWx1ZSk7XG59XG5cbnZhciBhbGlnbm1lbnRWYWx1ZXMgPSBbJ2NlbnRlcicsICdlbmQnLCAnc3RhcnQnLCAnc3RyZXRjaCddO1xuXG52YXIgZGlzcGxheVZhbHVlcyA9IHtcbiAgJ2lubGluZS1ncmlkJzogWyctbXMtaW5saW5lLWdyaWQnLCAnaW5saW5lLWdyaWQnXSxcbiAgZ3JpZDogWyctbXMtZ3JpZCcsICdncmlkJ11cbn07XG5cbnZhciBwcm9wZXJ0eUNvbnZlcnRlcnMgPSB7XG4gIGFsaWduU2VsZjogZnVuY3Rpb24gYWxpZ25TZWxmKHZhbHVlLCBzdHlsZSkge1xuICAgIGlmIChhbGlnbm1lbnRWYWx1ZXMuaW5kZXhPZih2YWx1ZSkgPiAtMSkge1xuICAgICAgc3R5bGUubXNHcmlkUm93QWxpZ24gPSB2YWx1ZTtcbiAgICB9XG4gIH0sXG5cbiAgZ3JpZENvbHVtbjogZnVuY3Rpb24gZ3JpZENvbHVtbih2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSkge1xuICAgICAgc3R5bGUubXNHcmlkQ29sdW1uID0gdmFsdWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBfdmFsdWUkc3BsaXQkbWFwID0gdmFsdWUuc3BsaXQoJy8nKS5tYXAoZnVuY3Rpb24gKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiArcG9zaXRpb247XG4gICAgICB9KSxcbiAgICAgICAgICBfdmFsdWUkc3BsaXQkbWFwMiA9IF9zbGljZWRUb0FycmF5KF92YWx1ZSRzcGxpdCRtYXAsIDIpLFxuICAgICAgICAgIHN0YXJ0ID0gX3ZhbHVlJHNwbGl0JG1hcDJbMF0sXG4gICAgICAgICAgZW5kID0gX3ZhbHVlJHNwbGl0JG1hcDJbMV07XG5cbiAgICAgIHByb3BlcnR5Q29udmVydGVycy5ncmlkQ29sdW1uU3RhcnQoc3RhcnQsIHN0eWxlKTtcbiAgICAgIHByb3BlcnR5Q29udmVydGVycy5ncmlkQ29sdW1uRW5kKGVuZCwgc3R5bGUpO1xuICAgIH1cbiAgfSxcblxuICBncmlkQ29sdW1uRW5kOiBmdW5jdGlvbiBncmlkQ29sdW1uRW5kKHZhbHVlLCBzdHlsZSkge1xuICAgIHZhciBtc0dyaWRDb2x1bW4gPSBzdHlsZS5tc0dyaWRDb2x1bW47XG5cbiAgICBpZiAoaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSAmJiBpc1NpbXBsZVBvc2l0aW9uVmFsdWUobXNHcmlkQ29sdW1uKSkge1xuICAgICAgc3R5bGUubXNHcmlkQ29sdW1uU3BhbiA9IHZhbHVlIC0gbXNHcmlkQ29sdW1uO1xuICAgIH1cbiAgfSxcblxuICBncmlkQ29sdW1uU3RhcnQ6IGZ1bmN0aW9uIGdyaWRDb2x1bW5TdGFydCh2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSkge1xuICAgICAgc3R5bGUubXNHcmlkQ29sdW1uID0gdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIGdyaWRSb3c6IGZ1bmN0aW9uIGdyaWRSb3codmFsdWUsIHN0eWxlKSB7XG4gICAgaWYgKGlzU2ltcGxlUG9zaXRpb25WYWx1ZSh2YWx1ZSkpIHtcbiAgICAgIHN0eWxlLm1zR3JpZFJvdyA9IHZhbHVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgX3ZhbHVlJHNwbGl0JG1hcDMgPSB2YWx1ZS5zcGxpdCgnLycpLm1hcChmdW5jdGlvbiAocG9zaXRpb24pIHtcbiAgICAgICAgcmV0dXJuICtwb3NpdGlvbjtcbiAgICAgIH0pLFxuICAgICAgICAgIF92YWx1ZSRzcGxpdCRtYXA0ID0gX3NsaWNlZFRvQXJyYXkoX3ZhbHVlJHNwbGl0JG1hcDMsIDIpLFxuICAgICAgICAgIHN0YXJ0ID0gX3ZhbHVlJHNwbGl0JG1hcDRbMF0sXG4gICAgICAgICAgZW5kID0gX3ZhbHVlJHNwbGl0JG1hcDRbMV07XG5cbiAgICAgIHByb3BlcnR5Q29udmVydGVycy5ncmlkUm93U3RhcnQoc3RhcnQsIHN0eWxlKTtcbiAgICAgIHByb3BlcnR5Q29udmVydGVycy5ncmlkUm93RW5kKGVuZCwgc3R5bGUpO1xuICAgIH1cbiAgfSxcblxuICBncmlkUm93RW5kOiBmdW5jdGlvbiBncmlkUm93RW5kKHZhbHVlLCBzdHlsZSkge1xuICAgIHZhciBtc0dyaWRSb3cgPSBzdHlsZS5tc0dyaWRSb3c7XG5cbiAgICBpZiAoaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSAmJiBpc1NpbXBsZVBvc2l0aW9uVmFsdWUobXNHcmlkUm93KSkge1xuICAgICAgc3R5bGUubXNHcmlkUm93U3BhbiA9IHZhbHVlIC0gbXNHcmlkUm93O1xuICAgIH1cbiAgfSxcblxuICBncmlkUm93U3RhcnQ6IGZ1bmN0aW9uIGdyaWRSb3dTdGFydCh2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoaXNTaW1wbGVQb3NpdGlvblZhbHVlKHZhbHVlKSkge1xuICAgICAgc3R5bGUubXNHcmlkUm93ID0gdmFsdWU7XG4gICAgfVxuICB9LFxuXG4gIGdyaWRUZW1wbGF0ZUNvbHVtbnM6IGZ1bmN0aW9uIGdyaWRUZW1wbGF0ZUNvbHVtbnModmFsdWUsIHN0eWxlKSB7XG4gICAgc3R5bGUubXNHcmlkQ29sdW1ucyA9IHZhbHVlO1xuICB9LFxuXG4gIGdyaWRUZW1wbGF0ZVJvd3M6IGZ1bmN0aW9uIGdyaWRUZW1wbGF0ZVJvd3ModmFsdWUsIHN0eWxlKSB7XG4gICAgc3R5bGUubXNHcmlkUm93cyA9IHZhbHVlO1xuICB9LFxuXG4gIGp1c3RpZnlTZWxmOiBmdW5jdGlvbiBqdXN0aWZ5U2VsZih2YWx1ZSwgc3R5bGUpIHtcbiAgICBpZiAoYWxpZ25tZW50VmFsdWVzLmluZGV4T2YodmFsdWUpID4gLTEpIHtcbiAgICAgIHN0eWxlLm1zR3JpZENvbHVtbkFsaWduID0gdmFsdWU7XG4gICAgfVxuICB9XG59O1xuXG5mdW5jdGlvbiBncmlkKHByb3BlcnR5LCB2YWx1ZSwgc3R5bGUpIHtcbiAgaWYgKHByb3BlcnR5ID09PSAnZGlzcGxheScgJiYgdmFsdWUgaW4gZGlzcGxheVZhbHVlcykge1xuICAgIHJldHVybiBkaXNwbGF5VmFsdWVzW3ZhbHVlXTtcbiAgfVxuXG4gIGlmIChwcm9wZXJ0eSBpbiBwcm9wZXJ0eUNvbnZlcnRlcnMpIHtcbiAgICB2YXIgcHJvcGVydHlDb252ZXJ0ZXIgPSBwcm9wZXJ0eUNvbnZlcnRlcnNbcHJvcGVydHldO1xuICAgIHByb3BlcnR5Q29udmVydGVyKHZhbHVlLCBzdHlsZSk7XG4gIH1cbn1cbn0pO1xuXG52YXIgZ3JpZCA9IHVud3JhcEV4cG9ydHMoZ3JpZF8xKTtcblxudmFyIGltYWdlU2V0XzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBpbWFnZVNldDtcblxuXG5cbnZhciBfaXNQcmVmaXhlZFZhbHVlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaXNQcmVmaXhlZFZhbHVlXzEpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vLyBodHRwOi8vY2FuaXVzZS5jb20vI2ZlYXQ9Y3NzLWltYWdlLXNldFxudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICcnXTtcbmZ1bmN0aW9uIGltYWdlU2V0KHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiAhKDAsIF9pc1ByZWZpeGVkVmFsdWUyLmRlZmF1bHQpKHZhbHVlKSAmJiB2YWx1ZS5pbmRleE9mKCdpbWFnZS1zZXQoJykgPiAtMSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHZhbHVlLnJlcGxhY2UoL2ltYWdlLXNldFxcKC9nLCBwcmVmaXggKyAnaW1hZ2Utc2V0KCcpO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIGltYWdlU2V0ID0gdW53cmFwRXhwb3J0cyhpbWFnZVNldF8xKTtcblxudmFyIGxvZ2ljYWxfMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IGxvZ2ljYWw7XG52YXIgYWx0ZXJuYXRpdmVQcm9wcyA9IHtcbiAgbWFyZ2luQmxvY2tTdGFydDogWydXZWJraXRNYXJnaW5CZWZvcmUnXSxcbiAgbWFyZ2luQmxvY2tFbmQ6IFsnV2Via2l0TWFyZ2luQWZ0ZXInXSxcbiAgbWFyZ2luSW5saW5lU3RhcnQ6IFsnV2Via2l0TWFyZ2luU3RhcnQnLCAnTW96TWFyZ2luU3RhcnQnXSxcbiAgbWFyZ2luSW5saW5lRW5kOiBbJ1dlYmtpdE1hcmdpbkVuZCcsICdNb3pNYXJnaW5FbmQnXSxcbiAgcGFkZGluZ0Jsb2NrU3RhcnQ6IFsnV2Via2l0UGFkZGluZ0JlZm9yZSddLFxuICBwYWRkaW5nQmxvY2tFbmQ6IFsnV2Via2l0UGFkZGluZ0FmdGVyJ10sXG4gIHBhZGRpbmdJbmxpbmVTdGFydDogWydXZWJraXRQYWRkaW5nU3RhcnQnLCAnTW96UGFkZGluZ1N0YXJ0J10sXG4gIHBhZGRpbmdJbmxpbmVFbmQ6IFsnV2Via2l0UGFkZGluZ0VuZCcsICdNb3pQYWRkaW5nRW5kJ10sXG4gIGJvcmRlckJsb2NrU3RhcnQ6IFsnV2Via2l0Qm9yZGVyQmVmb3JlJ10sXG4gIGJvcmRlckJsb2NrU3RhcnRDb2xvcjogWydXZWJraXRCb3JkZXJCZWZvcmVDb2xvciddLFxuICBib3JkZXJCbG9ja1N0YXJ0U3R5bGU6IFsnV2Via2l0Qm9yZGVyQmVmb3JlU3R5bGUnXSxcbiAgYm9yZGVyQmxvY2tTdGFydFdpZHRoOiBbJ1dlYmtpdEJvcmRlckJlZm9yZVdpZHRoJ10sXG4gIGJvcmRlckJsb2NrRW5kOiBbJ1dlYmtpdEJvcmRlckFmdGVyJ10sXG4gIGJvcmRlckJsb2NrRW5kQ29sb3I6IFsnV2Via2l0Qm9yZGVyQWZ0ZXJDb2xvciddLFxuICBib3JkZXJCbG9ja0VuZFN0eWxlOiBbJ1dlYmtpdEJvcmRlckFmdGVyU3R5bGUnXSxcbiAgYm9yZGVyQmxvY2tFbmRXaWR0aDogWydXZWJraXRCb3JkZXJBZnRlcldpZHRoJ10sXG4gIGJvcmRlcklubGluZVN0YXJ0OiBbJ1dlYmtpdEJvcmRlclN0YXJ0JywgJ01vekJvcmRlclN0YXJ0J10sXG4gIGJvcmRlcklubGluZVN0YXJ0Q29sb3I6IFsnV2Via2l0Qm9yZGVyU3RhcnRDb2xvcicsICdNb3pCb3JkZXJTdGFydENvbG9yJ10sXG4gIGJvcmRlcklubGluZVN0YXJ0U3R5bGU6IFsnV2Via2l0Qm9yZGVyU3RhcnRTdHlsZScsICdNb3pCb3JkZXJTdGFydFN0eWxlJ10sXG4gIGJvcmRlcklubGluZVN0YXJ0V2lkdGg6IFsnV2Via2l0Qm9yZGVyU3RhcnRXaWR0aCcsICdNb3pCb3JkZXJTdGFydFdpZHRoJ10sXG4gIGJvcmRlcklubGluZUVuZDogWydXZWJraXRCb3JkZXJFbmQnLCAnTW96Qm9yZGVyRW5kJ10sXG4gIGJvcmRlcklubGluZUVuZENvbG9yOiBbJ1dlYmtpdEJvcmRlckVuZENvbG9yJywgJ01vekJvcmRlckVuZENvbG9yJ10sXG4gIGJvcmRlcklubGluZUVuZFN0eWxlOiBbJ1dlYmtpdEJvcmRlckVuZFN0eWxlJywgJ01vekJvcmRlckVuZFN0eWxlJ10sXG4gIGJvcmRlcklubGluZUVuZFdpZHRoOiBbJ1dlYmtpdEJvcmRlckVuZFdpZHRoJywgJ01vekJvcmRlckVuZFdpZHRoJ11cbn07XG5cbmZ1bmN0aW9uIGxvZ2ljYWwocHJvcGVydHksIHZhbHVlLCBzdHlsZSkge1xuICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGFsdGVybmF0aXZlUHJvcHMsIHByb3BlcnR5KSkge1xuICAgIHZhciBhbHRlcm5hdGl2ZVByb3BMaXN0ID0gYWx0ZXJuYXRpdmVQcm9wc1twcm9wZXJ0eV07XG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGFsdGVybmF0aXZlUHJvcExpc3QubGVuZ3RoOyBpIDwgbGVuOyArK2kpIHtcbiAgICAgIHN0eWxlW2FsdGVybmF0aXZlUHJvcExpc3RbaV1dID0gdmFsdWU7XG4gICAgfVxuICB9XG59XG59KTtcblxudmFyIGxvZ2ljYWwgPSB1bndyYXBFeHBvcnRzKGxvZ2ljYWxfMSk7XG5cbnZhciBwb3NpdGlvbl8xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gcG9zaXRpb247XG5mdW5jdGlvbiBwb3NpdGlvbihwcm9wZXJ0eSwgdmFsdWUpIHtcbiAgaWYgKHByb3BlcnR5ID09PSAncG9zaXRpb24nICYmIHZhbHVlID09PSAnc3RpY2t5Jykge1xuICAgIHJldHVybiBbJy13ZWJraXQtc3RpY2t5JywgJ3N0aWNreSddO1xuICB9XG59XG59KTtcblxudmFyIHBvc2l0aW9uID0gdW53cmFwRXhwb3J0cyhwb3NpdGlvbl8xKTtcblxudmFyIHNpemluZ18xID0gY3JlYXRlQ29tbW9uanNNb2R1bGUoZnVuY3Rpb24gKG1vZHVsZSwgZXhwb3J0cykge1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gc2l6aW5nO1xudmFyIHByZWZpeGVzID0gWyctd2Via2l0LScsICctbW96LScsICcnXTtcblxudmFyIHByb3BlcnRpZXMgPSB7XG4gIG1heEhlaWdodDogdHJ1ZSxcbiAgbWF4V2lkdGg6IHRydWUsXG4gIHdpZHRoOiB0cnVlLFxuICBoZWlnaHQ6IHRydWUsXG4gIGNvbHVtbldpZHRoOiB0cnVlLFxuICBtaW5XaWR0aDogdHJ1ZSxcbiAgbWluSGVpZ2h0OiB0cnVlXG59O1xudmFyIHZhbHVlcyA9IHtcbiAgJ21pbi1jb250ZW50JzogdHJ1ZSxcbiAgJ21heC1jb250ZW50JzogdHJ1ZSxcbiAgJ2ZpbGwtYXZhaWxhYmxlJzogdHJ1ZSxcbiAgJ2ZpdC1jb250ZW50JzogdHJ1ZSxcbiAgJ2NvbnRhaW4tZmxvYXRzJzogdHJ1ZVxufTtcblxuZnVuY3Rpb24gc2l6aW5nKHByb3BlcnR5LCB2YWx1ZSkge1xuICBpZiAocHJvcGVydGllcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eSkgJiYgdmFsdWVzLmhhc093blByb3BlcnR5KHZhbHVlKSkge1xuICAgIHJldHVybiBwcmVmaXhlcy5tYXAoZnVuY3Rpb24gKHByZWZpeCkge1xuICAgICAgcmV0dXJuIHByZWZpeCArIHZhbHVlO1xuICAgIH0pO1xuICB9XG59XG59KTtcblxudmFyIHNpemluZyA9IHVud3JhcEV4cG9ydHMoc2l6aW5nXzEpO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby12YXIsIHByZWZlci10ZW1wbGF0ZSAqL1xudmFyIHVwcGVyY2FzZVBhdHRlcm4gPSAvW0EtWl0vZztcbnZhciBtc1BhdHRlcm4gPSAvXm1zLS87XG52YXIgY2FjaGUgPSB7fTtcblxuZnVuY3Rpb24gdG9IeXBoZW5Mb3dlcihtYXRjaCkge1xuICByZXR1cm4gJy0nICsgbWF0Y2gudG9Mb3dlckNhc2UoKVxufVxuXG5mdW5jdGlvbiBoeXBoZW5hdGVTdHlsZU5hbWUobmFtZSkge1xuICBpZiAoY2FjaGUuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICByZXR1cm4gY2FjaGVbbmFtZV1cbiAgfVxuXG4gIHZhciBoTmFtZSA9IG5hbWUucmVwbGFjZSh1cHBlcmNhc2VQYXR0ZXJuLCB0b0h5cGhlbkxvd2VyKTtcbiAgcmV0dXJuIChjYWNoZVtuYW1lXSA9IG1zUGF0dGVybi50ZXN0KGhOYW1lKSA/ICctJyArIGhOYW1lIDogaE5hbWUpXG59XG5cbnZhciBoeXBoZW5hdGVTdHlsZU5hbWUkMSA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgZGVmYXVsdDogaHlwaGVuYXRlU3R5bGVOYW1lXG59KTtcblxudmFyIF9oeXBoZW5hdGVTdHlsZU5hbWUgPSBnZXRDanNFeHBvcnRGcm9tTmFtZXNwYWNlKGh5cGhlbmF0ZVN0eWxlTmFtZSQxKTtcblxudmFyIGh5cGhlbmF0ZVByb3BlcnR5XzEgPSBjcmVhdGVDb21tb25qc01vZHVsZShmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzKSB7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmRlZmF1bHQgPSBoeXBoZW5hdGVQcm9wZXJ0eTtcblxuXG5cbnZhciBfaHlwaGVuYXRlU3R5bGVOYW1lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2h5cGhlbmF0ZVN0eWxlTmFtZSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIGh5cGhlbmF0ZVByb3BlcnR5KHByb3BlcnR5KSB7XG4gIHJldHVybiAoMCwgX2h5cGhlbmF0ZVN0eWxlTmFtZTIuZGVmYXVsdCkocHJvcGVydHkpO1xufVxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG59KTtcblxudW53cmFwRXhwb3J0cyhoeXBoZW5hdGVQcm9wZXJ0eV8xKTtcblxudmFyIHRyYW5zaXRpb25fMSA9IGNyZWF0ZUNvbW1vbmpzTW9kdWxlKGZ1bmN0aW9uIChtb2R1bGUsIGV4cG9ydHMpIHtcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdCA9IHRyYW5zaXRpb247XG5cblxuXG52YXIgX2h5cGhlbmF0ZVByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoaHlwaGVuYXRlUHJvcGVydHlfMSk7XG5cblxuXG52YXIgX2lzUHJlZml4ZWRWYWx1ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGlzUHJlZml4ZWRWYWx1ZV8xKTtcblxuXG5cbnZhciBfY2FwaXRhbGl6ZVN0cmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KGNhcGl0YWxpemVTdHJpbmdfMSk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBwcm9wZXJ0aWVzID0ge1xuICB0cmFuc2l0aW9uOiB0cnVlLFxuICB0cmFuc2l0aW9uUHJvcGVydHk6IHRydWUsXG4gIFdlYmtpdFRyYW5zaXRpb246IHRydWUsXG4gIFdlYmtpdFRyYW5zaXRpb25Qcm9wZXJ0eTogdHJ1ZSxcbiAgTW96VHJhbnNpdGlvbjogdHJ1ZSxcbiAgTW96VHJhbnNpdGlvblByb3BlcnR5OiB0cnVlXG59O1xuXG5cbnZhciBwcmVmaXhNYXBwaW5nID0ge1xuICBXZWJraXQ6ICctd2Via2l0LScsXG4gIE1vejogJy1tb3otJyxcbiAgbXM6ICctbXMtJ1xufTtcblxuZnVuY3Rpb24gcHJlZml4VmFsdWUodmFsdWUsIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gIGlmICgoMCwgX2lzUHJlZml4ZWRWYWx1ZTIuZGVmYXVsdCkodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG5cbiAgLy8gb25seSBzcGxpdCBtdWx0aSB2YWx1ZXMsIG5vdCBjdWJpYyBiZXppZXJzXG4gIHZhciBtdWx0aXBsZVZhbHVlcyA9IHZhbHVlLnNwbGl0KC8sKD8hW14oKV0qKD86XFwoW14oKV0qXFwpKT9cXCkpL2cpO1xuXG4gIGZvciAodmFyIGkgPSAwLCBsZW4gPSBtdWx0aXBsZVZhbHVlcy5sZW5ndGg7IGkgPCBsZW47ICsraSkge1xuICAgIHZhciBzaW5nbGVWYWx1ZSA9IG11bHRpcGxlVmFsdWVzW2ldO1xuICAgIHZhciB2YWx1ZXMgPSBbc2luZ2xlVmFsdWVdO1xuICAgIGZvciAodmFyIHByb3BlcnR5IGluIHByb3BlcnR5UHJlZml4TWFwKSB7XG4gICAgICB2YXIgZGFzaENhc2VQcm9wZXJ0eSA9ICgwLCBfaHlwaGVuYXRlUHJvcGVydHkyLmRlZmF1bHQpKHByb3BlcnR5KTtcblxuICAgICAgaWYgKHNpbmdsZVZhbHVlLmluZGV4T2YoZGFzaENhc2VQcm9wZXJ0eSkgPiAtMSAmJiBkYXNoQ2FzZVByb3BlcnR5ICE9PSAnb3JkZXInKSB7XG4gICAgICAgIHZhciBwcmVmaXhlcyA9IHByb3BlcnR5UHJlZml4TWFwW3Byb3BlcnR5XTtcbiAgICAgICAgZm9yICh2YXIgaiA9IDAsIHBMZW4gPSBwcmVmaXhlcy5sZW5ndGg7IGogPCBwTGVuOyArK2opIHtcbiAgICAgICAgICAvLyBqb2luIGFsbCBwcmVmaXhlcyBhbmQgY3JlYXRlIGEgbmV3IHZhbHVlXG4gICAgICAgICAgdmFsdWVzLnVuc2hpZnQoc2luZ2xlVmFsdWUucmVwbGFjZShkYXNoQ2FzZVByb3BlcnR5LCBwcmVmaXhNYXBwaW5nW3ByZWZpeGVzW2pdXSArIGRhc2hDYXNlUHJvcGVydHkpKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIG11bHRpcGxlVmFsdWVzW2ldID0gdmFsdWVzLmpvaW4oJywnKTtcbiAgfVxuXG4gIHJldHVybiBtdWx0aXBsZVZhbHVlcy5qb2luKCcsJyk7XG59XG5cbmZ1bmN0aW9uIHRyYW5zaXRpb24ocHJvcGVydHksIHZhbHVlLCBzdHlsZSwgcHJvcGVydHlQcmVmaXhNYXApIHtcbiAgLy8gYWxzbyBjaGVjayBmb3IgYWxyZWFkeSBwcmVmaXhlZCB0cmFuc2l0aW9uc1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJyAmJiBwcm9wZXJ0aWVzLmhhc093blByb3BlcnR5KHByb3BlcnR5KSkge1xuICAgIHZhciBvdXRwdXRWYWx1ZSA9IHByZWZpeFZhbHVlKHZhbHVlLCBwcm9wZXJ0eVByZWZpeE1hcCk7XG4gICAgLy8gaWYgdGhlIHByb3BlcnR5IGlzIGFscmVhZHkgcHJlZml4ZWRcbiAgICB2YXIgd2Via2l0T3V0cHV0ID0gb3V0cHV0VmFsdWUuc3BsaXQoLywoPyFbXigpXSooPzpcXChbXigpXSpcXCkpP1xcKSkvZykuZmlsdGVyKGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHJldHVybiAhLy1tb3otfC1tcy0vLnRlc3QodmFsKTtcbiAgICB9KS5qb2luKCcsJyk7XG5cbiAgICBpZiAocHJvcGVydHkuaW5kZXhPZignV2Via2l0JykgPiAtMSkge1xuICAgICAgcmV0dXJuIHdlYmtpdE91dHB1dDtcbiAgICB9XG5cbiAgICB2YXIgbW96T3V0cHV0ID0gb3V0cHV0VmFsdWUuc3BsaXQoLywoPyFbXigpXSooPzpcXChbXigpXSpcXCkpP1xcKSkvZykuZmlsdGVyKGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHJldHVybiAhLy13ZWJraXQtfC1tcy0vLnRlc3QodmFsKTtcbiAgICB9KS5qb2luKCcsJyk7XG5cbiAgICBpZiAocHJvcGVydHkuaW5kZXhPZignTW96JykgPiAtMSkge1xuICAgICAgcmV0dXJuIG1vek91dHB1dDtcbiAgICB9XG5cbiAgICBzdHlsZVsnV2Via2l0JyArICgwLCBfY2FwaXRhbGl6ZVN0cmluZzIuZGVmYXVsdCkocHJvcGVydHkpXSA9IHdlYmtpdE91dHB1dDtcbiAgICBzdHlsZVsnTW96JyArICgwLCBfY2FwaXRhbGl6ZVN0cmluZzIuZGVmYXVsdCkocHJvcGVydHkpXSA9IG1vek91dHB1dDtcbiAgICByZXR1cm4gb3V0cHV0VmFsdWU7XG4gIH1cbn1cbn0pO1xuXG52YXIgdHJhbnNpdGlvbiA9IHVud3JhcEV4cG9ydHModHJhbnNpdGlvbl8xKTtcblxudmFyIHcgPSBbXCJXZWJraXRcIl07XG52YXIgbSA9IFtcIk1velwiXTtcbnZhciBtcyA9IFtcIm1zXCJdO1xudmFyIHdtID0gW1wiV2Via2l0XCIsIFwiTW96XCJdO1xudmFyIHdtcyA9IFtcIldlYmtpdFwiLCBcIm1zXCJdO1xudmFyIHdtbXMgPSBbXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiXTtcbnZhciBzdGF0aWNEYXRhID0ge1xuICBwbHVnaW5zOiBbYmFja2dyb3VuZENsaXAsIGNhbGMsIGNyb3NzRmFkZSwgY3Vyc29yLCBmaWx0ZXIsIGZsZXgsIGZsZXhib3hJRSwgZmxleGJveE9sZCwgZ3JhZGllbnQsIGdyaWQsIGltYWdlU2V0LCBsb2dpY2FsLCBwb3NpdGlvbiwgc2l6aW5nLCB0cmFuc2l0aW9uXSxcbiAgcHJlZml4TWFwOiB7XG4gICAgXCJ0cmFuc2Zvcm1cIjogd21zLFxuICAgIFwidHJhbnNmb3JtT3JpZ2luXCI6IHdtcyxcbiAgICBcInRyYW5zZm9ybU9yaWdpblhcIjogd21zLFxuICAgIFwidHJhbnNmb3JtT3JpZ2luWVwiOiB3bXMsXG4gICAgXCJiYWNrZmFjZVZpc2liaWxpdHlcIjogdyxcbiAgICBcInBlcnNwZWN0aXZlXCI6IHcsXG4gICAgXCJwZXJzcGVjdGl2ZU9yaWdpblwiOiB3LFxuICAgIFwidHJhbnNmb3JtU3R5bGVcIjogdyxcbiAgICBcInRyYW5zZm9ybU9yaWdpblpcIjogdyxcbiAgICBcImFuaW1hdGlvblwiOiB3LFxuICAgIFwiYW5pbWF0aW9uRGVsYXlcIjogdyxcbiAgICBcImFuaW1hdGlvbkRpcmVjdGlvblwiOiB3LFxuICAgIFwiYW5pbWF0aW9uRmlsbE1vZGVcIjogdyxcbiAgICBcImFuaW1hdGlvbkR1cmF0aW9uXCI6IHcsXG4gICAgXCJhbmltYXRpb25JdGVyYXRpb25Db3VudFwiOiB3LFxuICAgIFwiYW5pbWF0aW9uTmFtZVwiOiB3LFxuICAgIFwiYW5pbWF0aW9uUGxheVN0YXRlXCI6IHcsXG4gICAgXCJhbmltYXRpb25UaW1pbmdGdW5jdGlvblwiOiB3LFxuICAgIFwiYXBwZWFyYW5jZVwiOiB3bSxcbiAgICBcInVzZXJTZWxlY3RcIjogd21tcyxcbiAgICBcImZvbnRLZXJuaW5nXCI6IHcsXG4gICAgXCJ0ZXh0RW1waGFzaXNQb3NpdGlvblwiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzXCI6IHcsXG4gICAgXCJ0ZXh0RW1waGFzaXNTdHlsZVwiOiB3LFxuICAgIFwidGV4dEVtcGhhc2lzQ29sb3JcIjogdyxcbiAgICBcImJveERlY29yYXRpb25CcmVha1wiOiB3LFxuICAgIFwiY2xpcFBhdGhcIjogdyxcbiAgICBcIm1hc2tJbWFnZVwiOiB3LFxuICAgIFwibWFza01vZGVcIjogdyxcbiAgICBcIm1hc2tSZXBlYXRcIjogdyxcbiAgICBcIm1hc2tQb3NpdGlvblwiOiB3LFxuICAgIFwibWFza0NsaXBcIjogdyxcbiAgICBcIm1hc2tPcmlnaW5cIjogdyxcbiAgICBcIm1hc2tTaXplXCI6IHcsXG4gICAgXCJtYXNrQ29tcG9zaXRlXCI6IHcsXG4gICAgXCJtYXNrXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyU291cmNlXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyTW9kZVwiOiB3LFxuICAgIFwibWFza0JvcmRlclNsaWNlXCI6IHcsXG4gICAgXCJtYXNrQm9yZGVyV2lkdGhcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJPdXRzZXRcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJSZXBlYXRcIjogdyxcbiAgICBcIm1hc2tCb3JkZXJcIjogdyxcbiAgICBcIm1hc2tUeXBlXCI6IHcsXG4gICAgXCJ0ZXh0RGVjb3JhdGlvblN0eWxlXCI6IHdtLFxuICAgIFwidGV4dERlY29yYXRpb25Ta2lwXCI6IHdtLFxuICAgIFwidGV4dERlY29yYXRpb25MaW5lXCI6IHdtLFxuICAgIFwidGV4dERlY29yYXRpb25Db2xvclwiOiB3bSxcbiAgICBcImZpbHRlclwiOiB3LFxuICAgIFwiZm9udEZlYXR1cmVTZXR0aW5nc1wiOiB3bSxcbiAgICBcImJyZWFrQWZ0ZXJcIjogd21tcyxcbiAgICBcImJyZWFrQmVmb3JlXCI6IHdtbXMsXG4gICAgXCJicmVha0luc2lkZVwiOiB3bW1zLFxuICAgIFwiY29sdW1uQ291bnRcIjogd20sXG4gICAgXCJjb2x1bW5GaWxsXCI6IHdtLFxuICAgIFwiY29sdW1uR2FwXCI6IHdtLFxuICAgIFwiY29sdW1uUnVsZVwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVDb2xvclwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVTdHlsZVwiOiB3bSxcbiAgICBcImNvbHVtblJ1bGVXaWR0aFwiOiB3bSxcbiAgICBcImNvbHVtbnNcIjogd20sXG4gICAgXCJjb2x1bW5TcGFuXCI6IHdtLFxuICAgIFwiY29sdW1uV2lkdGhcIjogd20sXG4gICAgXCJ3cml0aW5nTW9kZVwiOiB3bXMsXG4gICAgXCJmbGV4XCI6IHdtcyxcbiAgICBcImZsZXhCYXNpc1wiOiB3LFxuICAgIFwiZmxleERpcmVjdGlvblwiOiB3bXMsXG4gICAgXCJmbGV4R3Jvd1wiOiB3LFxuICAgIFwiZmxleEZsb3dcIjogd21zLFxuICAgIFwiZmxleFNocmlua1wiOiB3LFxuICAgIFwiZmxleFdyYXBcIjogd21zLFxuICAgIFwiYWxpZ25Db250ZW50XCI6IHcsXG4gICAgXCJhbGlnbkl0ZW1zXCI6IHcsXG4gICAgXCJhbGlnblNlbGZcIjogdyxcbiAgICBcImp1c3RpZnlDb250ZW50XCI6IHcsXG4gICAgXCJvcmRlclwiOiB3LFxuICAgIFwidHJhbnNpdGlvbkRlbGF5XCI6IHcsXG4gICAgXCJ0cmFuc2l0aW9uRHVyYXRpb25cIjogdyxcbiAgICBcInRyYW5zaXRpb25Qcm9wZXJ0eVwiOiB3LFxuICAgIFwidHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uXCI6IHcsXG4gICAgXCJiYWNrZHJvcEZpbHRlclwiOiB3LFxuICAgIFwic2Nyb2xsU25hcFR5cGVcIjogd21zLFxuICAgIFwic2Nyb2xsU25hcFBvaW50c1hcIjogd21zLFxuICAgIFwic2Nyb2xsU25hcFBvaW50c1lcIjogd21zLFxuICAgIFwic2Nyb2xsU25hcERlc3RpbmF0aW9uXCI6IHdtcyxcbiAgICBcInNjcm9sbFNuYXBDb29yZGluYXRlXCI6IHdtcyxcbiAgICBcInNoYXBlSW1hZ2VUaHJlc2hvbGRcIjogdyxcbiAgICBcInNoYXBlSW1hZ2VNYXJnaW5cIjogdyxcbiAgICBcInNoYXBlSW1hZ2VPdXRzaWRlXCI6IHcsXG4gICAgXCJoeXBoZW5zXCI6IHdtbXMsXG4gICAgXCJmbG93SW50b1wiOiB3bXMsXG4gICAgXCJmbG93RnJvbVwiOiB3bXMsXG4gICAgXCJyZWdpb25GcmFnbWVudFwiOiB3bXMsXG4gICAgXCJ0ZXh0T3JpZW50YXRpb25cIjogdyxcbiAgICBcImJveFNpemluZ1wiOiBtLFxuICAgIFwidGV4dEFsaWduTGFzdFwiOiBtLFxuICAgIFwidGFiU2l6ZVwiOiBtLFxuICAgIFwid3JhcEZsb3dcIjogbXMsXG4gICAgXCJ3cmFwVGhyb3VnaFwiOiBtcyxcbiAgICBcIndyYXBNYXJnaW5cIjogbXMsXG4gICAgXCJ0b3VjaEFjdGlvblwiOiBtcyxcbiAgICBcInRleHRTaXplQWRqdXN0XCI6IHdtcyxcbiAgICBcImJvcmRlckltYWdlXCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZU91dHNldFwiOiB3LFxuICAgIFwiYm9yZGVySW1hZ2VSZXBlYXRcIjogdyxcbiAgICBcImJvcmRlckltYWdlU2xpY2VcIjogdyxcbiAgICBcImJvcmRlckltYWdlU291cmNlXCI6IHcsXG4gICAgXCJib3JkZXJJbWFnZVdpZHRoXCI6IHdcbiAgfVxufTtcblxudmFyIHByZWZpeEFsbCA9IGNyZWF0ZVByZWZpeGVyKHN0YXRpY0RhdGEpO1xuLyogOjpcbmltcG9ydCB0eXBlIHsgU2hlZXREZWZpbml0aW9uIH0gZnJvbSAnLi9pbmRleC5qcyc7XG50eXBlIFN0cmluZ0hhbmRsZXJzID0geyBbaWQ6c3RyaW5nXTogRnVuY3Rpb24gfTtcbnR5cGUgU2VsZWN0b3JDYWxsYmFjayA9IChzZWxlY3Rvcjogc3RyaW5nKSA9PiBzdHJpbmdbXTtcbmV4cG9ydCB0eXBlIFNlbGVjdG9ySGFuZGxlciA9IChcbiAgICBzZWxlY3Rvcjogc3RyaW5nLFxuICAgIGJhc2VTZWxlY3Rvcjogc3RyaW5nLFxuICAgIGNhbGxiYWNrOiBTZWxlY3RvckNhbGxiYWNrXG4pID0+IHN0cmluZ1tdIHwgc3RyaW5nIHwgbnVsbDtcbiovXG5cbi8qKlxuICogYHNlbGVjdG9ySGFuZGxlcnNgIGFyZSBmdW5jdGlvbnMgd2hpY2ggaGFuZGxlIHNwZWNpYWwgc2VsZWN0b3JzIHdoaWNoIGFjdFxuICogZGlmZmVyZW50bHkgdGhhbiBub3JtYWwgc3R5bGUgZGVmaW5pdGlvbnMuIFRoZXNlIGZ1bmN0aW9ucyBsb29rIGF0IHRoZVxuICogY3VycmVudCBzZWxlY3RvciBhbmQgY2FuIGdlbmVyYXRlIENTUyBmb3IgdGhlIHN0eWxlcyBpbiB0aGVpciBzdWJ0cmVlIGJ5XG4gKiBjYWxsaW5nIHRoZSBjYWxsYmFjayB3aXRoIGEgbmV3IHNlbGVjdG9yLlxuICpcbiAqIEZvciBleGFtcGxlLCB3aGVuIGdlbmVyYXRpbmcgc3R5bGVzIHdpdGggYSBiYXNlIHNlbGVjdG9yIG9mICcuZm9vJyBhbmQgdGhlXG4gKiBmb2xsb3dpbmcgc3R5bGVzIG9iamVjdDpcbiAqXG4gKiAgIHtcbiAqICAgICAnOm50aC1jaGlsZCgybiknOiB7XG4gKiAgICAgICAnOmhvdmVyJzoge1xuICogICAgICAgICBjb2xvcjogJ3JlZCdcbiAqICAgICAgIH1cbiAqICAgICB9XG4gKiAgIH1cbiAqXG4gKiB3aGVuIHdlIHJlYWNoIHRoZSAnOmhvdmVyJyBzdHlsZSwgd2Ugd291bGQgY2FsbCBvdXIgc2VsZWN0b3IgaGFuZGxlcnMgbGlrZVxuICpcbiAqICAgaGFuZGxlcignOmhvdmVyJywgJy5mb286bnRoLWNoaWxkKDJuKScsIGNhbGxiYWNrKVxuICpcbiAqIFNpbmNlIG91ciBgcHNldWRvU2VsZWN0b3JzYCBoYW5kbGVzICc6aG92ZXInIHN0eWxlcywgdGhhdCBoYW5kbGVyIHdvdWxkIGNhbGxcbiAqIHRoZSBjYWxsYmFjayBsaWtlXG4gKlxuICogICBjYWxsYmFjaygnLmZvbzpudGgtY2hpbGQoMm4pOmhvdmVyJylcbiAqXG4gKiB0byBnZW5lcmF0ZSBpdHMgc3VidHJlZSBgeyBjb2xvcjogJ3JlZCcgfWAgc3R5bGVzIHdpdGggYVxuICogJy5mb286bnRoLWNoaWxkKDJuKTpob3Zlcicgc2VsZWN0b3IuIFRoZSBjYWxsYmFjayB3b3VsZCByZXR1cm4gYW4gYXJyYXkgb2YgQ1NTXG4gKiBydWxlcyBsaWtlXG4gKlxuICogICBbJy5mb286bnRoLWNoaWxkKDJuKTpob3Zlcntjb2xvcjpyZWQgIWltcG9ydGFudDt9J11cbiAqXG4gKiBhbmQgdGhlIGhhbmRsZXIgd291bGQgdGhlbiByZXR1cm4gdGhhdCByZXN1bHRpbmcgQ1NTLlxuICpcbiAqIGBkZWZhdWx0U2VsZWN0b3JIYW5kbGVyc2AgaXMgdGhlIGxpc3Qgb2YgZGVmYXVsdCBoYW5kbGVycyB1c2VkIGluIGEgY2FsbCB0b1xuICogYGdlbmVyYXRlQ1NTYC5cbiAqXG4gKiBAbmFtZSBTZWxlY3RvckhhbmRsZXJcbiAqIEBmdW5jdGlvblxuICogQHBhcmFtIHtzdHJpbmd9IHNlbGVjdG9yOiBUaGUgY3VycmVudGx5IGluc3BlY3RlZCBzZWxlY3Rvci4gJzpob3ZlcicgaW4gdGhlXG4gKiAgICAgZXhhbXBsZSBhYm92ZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlU2VsZWN0b3I6IFRoZSBzZWxlY3RvciBvZiB0aGUgcGFyZW50IHN0eWxlcy5cbiAqICAgICAnLmZvbzpudGgtY2hpbGQoMm4pJyBpbiB0aGUgZXhhbXBsZSBhYm92ZS5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IGdlbmVyYXRlU3VidHJlZVN0eWxlczogQSBmdW5jdGlvbiB3aGljaCBjYW4gYmUgY2FsbGVkIHRvXG4gKiAgICAgZ2VuZXJhdGUgQ1NTIGZvciB0aGUgc3VidHJlZSBvZiBzdHlsZXMgY29ycmVzcG9uZGluZyB0byB0aGUgc2VsZWN0b3IuXG4gKiAgICAgQWNjZXB0cyBhIG5ldyBiYXNlU2VsZWN0b3IgdG8gdXNlIGZvciBnZW5lcmF0aW5nIHRob3NlIHN0eWxlcy5cbiAqIEByZXR1cm5zIHtzdHJpbmdbXSB8IHN0cmluZyB8IG51bGx9IFRoZSBnZW5lcmF0ZWQgQ1NTIGZvciB0aGlzIHNlbGVjdG9yLCBvclxuICogICAgIG51bGwgaWYgd2UgZG9uJ3QgaGFuZGxlIHRoaXMgc2VsZWN0b3IuXG4gKi9cblxudmFyIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzXG4vKiA6IFNlbGVjdG9ySGFuZGxlcltdICovXG49IFsvLyBIYW5kbGUgcHNldWRvLXNlbGVjdG9ycywgbGlrZSA6aG92ZXIgYW5kIDpudGgtY2hpbGQoM24pXG5mdW5jdGlvbiBwc2V1ZG9TZWxlY3RvcnMoc2VsZWN0b3IsIGJhc2VTZWxlY3RvciwgZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzKSB7XG4gIGlmIChzZWxlY3RvclswXSAhPT0gXCI6XCIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHJldHVybiBnZW5lcmF0ZVN1YnRyZWVTdHlsZXMoYmFzZVNlbGVjdG9yICsgc2VsZWN0b3IpO1xufSwgLy8gSGFuZGxlIG1lZGlhIHF1ZXJpZXMgKG9yIGZvbnQtZmFjZXMpXG5mdW5jdGlvbiBtZWRpYVF1ZXJpZXMoc2VsZWN0b3IsIGJhc2VTZWxlY3RvciwgZ2VuZXJhdGVTdWJ0cmVlU3R5bGVzKSB7XG4gIGlmIChzZWxlY3RvclswXSAhPT0gXCJAXCIpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfSAvLyBHZW5lcmF0ZSB0aGUgc3R5bGVzIG5vcm1hbGx5LCBhbmQgdGhlbiB3cmFwIHRoZW0gaW4gdGhlIG1lZGlhIHF1ZXJ5LlxuXG5cbiAgdmFyIGdlbmVyYXRlZCA9IGdlbmVyYXRlU3VidHJlZVN0eWxlcyhiYXNlU2VsZWN0b3IpO1xuICByZXR1cm4gW1wiXCIuY29uY2F0KHNlbGVjdG9yLCBcIntcIikuY29uY2F0KGdlbmVyYXRlZC5qb2luKCcnKSwgXCJ9XCIpXTtcbn1dO1xuLyoqXG4gKiBHZW5lcmF0ZSBDU1MgZm9yIGEgc2VsZWN0b3IgYW5kIHNvbWUgc3R5bGVzLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gaGFuZGxlcyB0aGUgbWVkaWEgcXVlcmllcyBhbmQgcHNldWRvIHNlbGVjdG9ycyB0aGF0IGNhbiBiZSB1c2VkXG4gKiBpbiBhcGhyb2RpdGUgc3R5bGVzLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvcjogQSBiYXNlIENTUyBzZWxlY3RvciBmb3IgdGhlIHN0eWxlcyB0byBiZSBnZW5lcmF0ZWRcbiAqICAgICB3aXRoLlxuICogQHBhcmFtIHtPYmplY3R9IHN0eWxlVHlwZXM6IEEgbGlzdCBvZiBwcm9wZXJ0aWVzIG9mIHRoZSByZXR1cm4gdHlwZSBvZlxuICogICAgIFN0eWxlU2hlZXQuY3JlYXRlLCBlLmcuIFtzdHlsZXMucmVkLCBzdHlsZXMuYmx1ZV0uXG4gKiBAcGFyYW0ge0FycmF5LjxTZWxlY3RvckhhbmRsZXI+fSBzZWxlY3RvckhhbmRsZXJzOiBBIGxpc3Qgb2Ygc2VsZWN0b3JcbiAqICAgICBoYW5kbGVycyB0byB1c2UgZm9yIGhhbmRsaW5nIHNwZWNpYWwgc2VsZWN0b3JzLiBTZWVcbiAqICAgICBgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnNgLlxuICogQHBhcmFtIHN0cmluZ0hhbmRsZXJzOiBTZWUgYGdlbmVyYXRlQ1NTUnVsZXNldGBcbiAqIEBwYXJhbSB1c2VJbXBvcnRhbnQ6IFNlZSBgZ2VuZXJhdGVDU1NSdWxlc2V0YFxuICpcbiAqIFRvIGFjdHVhbGx5IGdlbmVyYXRlIHRoZSBDU1Mgc3BlY2lhbC1jb25zdHJ1Y3QtbGVzcyBzdHlsZXMgYXJlIHBhc3NlZCB0b1xuICogYGdlbmVyYXRlQ1NTUnVsZXNldGAuXG4gKlxuICogRm9yIGluc3RhbmNlLCBhIGNhbGwgdG9cbiAqXG4gKiAgICAgZ2VuZXJhdGVDU1MoXCIuZm9vXCIsIFt7XG4gKiAgICAgICBjb2xvcjogXCJyZWRcIixcbiAqICAgICAgIFwiQG1lZGlhIHNjcmVlblwiOiB7XG4gKiAgICAgICAgIGhlaWdodDogMjAsXG4gKiAgICAgICAgIFwiOmhvdmVyXCI6IHtcbiAqICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiYmxhY2tcIlxuICogICAgICAgICB9XG4gKiAgICAgICB9LFxuICogICAgICAgXCI6YWN0aXZlXCI6IHtcbiAqICAgICAgICAgZm9udFdlaWdodDogXCJib2xkXCJcbiAqICAgICAgIH1cbiAqICAgICB9XSwgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMpO1xuICpcbiAqIHdpdGggdGhlIGRlZmF1bHQgYHNlbGVjdG9ySGFuZGxlcnNgIHdpbGwgbWFrZSA1IGNhbGxzIHRvXG4gKiBgZ2VuZXJhdGVDU1NSdWxlc2V0YDpcbiAqXG4gKiAgICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmZvb1wiLCB7IGNvbG9yOiBcInJlZFwiIH0sIC4uLilcbiAqICAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuZm9vOmFjdGl2ZVwiLCB7IGZvbnRXZWlnaHQ6IFwiYm9sZFwiIH0sIC4uLilcbiAqICAgICAvLyBUaGVzZSAyIHdpbGwgYmUgd3JhcHBlZCBpbiBAbWVkaWEgc2NyZWVuIHt9XG4gKiAgICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmZvb1wiLCB7IGhlaWdodDogMjAgfSwgLi4uKVxuICogICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5mb286aG92ZXJcIiwgeyBiYWNrZ3JvdW5kQ29sb3I6IFwiYmxhY2tcIiB9LCAuLi4pXG4gKi9cblxudmFyIGdlbmVyYXRlQ1NTID0gZnVuY3Rpb24gZ2VuZXJhdGVDU1Moc2VsZWN0b3Jcbi8qIDogc3RyaW5nICovXG4sIHN0eWxlVHlwZXNcbi8qIDogU2hlZXREZWZpbml0aW9uW10gKi9cbiwgc2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuLCBzdHJpbmdIYW5kbGVyc1xuLyogOiBTdHJpbmdIYW5kbGVycyAqL1xuLCB1c2VJbXBvcnRhbnRcbi8qIDogYm9vbGVhbiAqL1xuKVxuLyogOiBzdHJpbmdbXSAqL1xue1xuICB2YXIgbWVyZ2VkID0gbmV3IE9yZGVyZWRFbGVtZW50cygpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVUeXBlcy5sZW5ndGg7IGkrKykge1xuICAgIG1lcmdlZC5hZGRTdHlsZVR5cGUoc3R5bGVUeXBlc1tpXSk7XG4gIH1cblxuICB2YXIgcGxhaW5EZWNsYXJhdGlvbnMgPSBuZXcgT3JkZXJlZEVsZW1lbnRzKCk7XG4gIHZhciBnZW5lcmF0ZWRTdHlsZXMgPSBbXTsgLy8gVE9ETyhlbWlseSk6IGJlbmNobWFyayB0aGlzIHRvIHNlZSBpZiBhIHBsYWluIGZvciBsb29wIHdvdWxkIGJlIGZhc3Rlci5cblxuICBtZXJnZWQuZm9yRWFjaChmdW5jdGlvbiAodmFsLCBrZXkpIHtcbiAgICAvLyBGb3IgZWFjaCBrZXksIHNlZSBpZiBvbmUgb2YgdGhlIHNlbGVjdG9yIGhhbmRsZXJzIHdpbGwgaGFuZGxlIHRoZXNlXG4gICAgLy8gc3R5bGVzLlxuICAgIHZhciBmb3VuZEhhbmRsZXIgPSBzZWxlY3RvckhhbmRsZXJzLnNvbWUoZnVuY3Rpb24gKGhhbmRsZXIpIHtcbiAgICAgIHZhciByZXN1bHQgPSBoYW5kbGVyKGtleSwgc2VsZWN0b3IsIGZ1bmN0aW9uIChuZXdTZWxlY3Rvcikge1xuICAgICAgICByZXR1cm4gZ2VuZXJhdGVDU1MobmV3U2VsZWN0b3IsIFt2YWxdLCBzZWxlY3RvckhhbmRsZXJzLCBzdHJpbmdIYW5kbGVycywgdXNlSW1wb3J0YW50KTtcbiAgICAgIH0pO1xuXG4gICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcbiAgICAgICAgLy8gSWYgdGhlIGhhbmRsZXIgcmV0dXJuZWQgc29tZXRoaW5nLCBhZGQgaXQgdG8gdGhlIGdlbmVyYXRlZFxuICAgICAgICAvLyBDU1MgYW5kIHN0b3AgbG9va2luZyBmb3IgYW5vdGhlciBoYW5kbGVyLlxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShyZXN1bHQpKSB7XG4gICAgICAgICAgZ2VuZXJhdGVkU3R5bGVzLnB1c2guYXBwbHkoZ2VuZXJhdGVkU3R5bGVzLCBfdG9Db25zdW1hYmxlQXJyYXkocmVzdWx0KSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICAgICAgY29uc29sZS53YXJuKCdXQVJOSU5HOiBTZWxlY3RvciBoYW5kbGVycyBzaG91bGQgcmV0dXJuIGFuIGFycmF5IG9mIHJ1bGVzLicgKyAnUmV0dXJuaW5nIGEgc3RyaW5nIGNvbnRhaW5pbmcgbXVsdGlwbGUgcnVsZXMgaXMgZGVwcmVjYXRlZC4nLCBoYW5kbGVyKTtcbiAgICAgICAgICBnZW5lcmF0ZWRTdHlsZXMucHVzaChcIkBtZWRpYSBhbGwge1wiLmNvbmNhdChyZXN1bHQsIFwifVwiKSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9KTsgLy8gSWYgbm9uZSBvZiB0aGUgaGFuZGxlcnMgaGFuZGxlZCBpdCwgYWRkIGl0IHRvIHRoZSBsaXN0IG9mIHBsYWluXG4gICAgLy8gc3R5bGUgZGVjbGFyYXRpb25zLlxuXG4gICAgaWYgKCFmb3VuZEhhbmRsZXIpIHtcbiAgICAgIHBsYWluRGVjbGFyYXRpb25zLnNldChrZXksIHZhbCwgdHJ1ZSk7XG4gICAgfVxuICB9KTtcbiAgdmFyIGdlbmVyYXRlZFJ1bGVzZXQgPSBnZW5lcmF0ZUNTU1J1bGVzZXQoc2VsZWN0b3IsIHBsYWluRGVjbGFyYXRpb25zLCBzdHJpbmdIYW5kbGVycywgdXNlSW1wb3J0YW50LCBzZWxlY3RvckhhbmRsZXJzKTtcblxuICBpZiAoZ2VuZXJhdGVkUnVsZXNldCkge1xuICAgIGdlbmVyYXRlZFN0eWxlcy51bnNoaWZ0KGdlbmVyYXRlZFJ1bGVzZXQpO1xuICB9XG5cbiAgcmV0dXJuIGdlbmVyYXRlZFN0eWxlcztcbn07XG4vKipcbiAqIEhlbHBlciBtZXRob2Qgb2YgZ2VuZXJhdGVDU1NSdWxlc2V0IHRvIGZhY2lsaXRhdGUgY3VzdG9tIGhhbmRsaW5nIG9mIGNlcnRhaW5cbiAqIENTUyBwcm9wZXJ0aWVzLiBVc2VkIGZvciBlLmcuIGZvbnQgZmFtaWxpZXMuXG4gKlxuICogU2VlIGdlbmVyYXRlQ1NTUnVsZXNldCBmb3IgdXNhZ2UgYW5kIGRvY3VtZW50YXRpb24gb2YgcGFyYW1hdGVyIHR5cGVzLlxuICovXG5cbnZhciBydW5TdHJpbmdIYW5kbGVycyA9IGZ1bmN0aW9uIHJ1blN0cmluZ0hhbmRsZXJzKGRlY2xhcmF0aW9uc1xuLyogOiBPcmRlcmVkRWxlbWVudHMgKi9cbiwgc3RyaW5nSGFuZGxlcnNcbi8qIDogU3RyaW5nSGFuZGxlcnMgKi9cbiwgc2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuKVxuLyogOiB2b2lkICovXG57XG4gIGlmICghc3RyaW5nSGFuZGxlcnMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgc3RyaW5nSGFuZGxlcktleXMgPSBPYmplY3Qua2V5cyhzdHJpbmdIYW5kbGVycyk7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHJpbmdIYW5kbGVyS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBzdHJpbmdIYW5kbGVyS2V5c1tpXTtcblxuICAgIGlmIChkZWNsYXJhdGlvbnMuaGFzKGtleSkpIHtcbiAgICAgIC8vIEEgZGVjbGFyYXRpb24gZXhpc3RzIGZvciB0aGlzIHBhcnRpY3VsYXIgc3RyaW5nIGhhbmRsZXIsIHNvIHdlXG4gICAgICAvLyBuZWVkIHRvIGxldCB0aGUgc3RyaW5nIGhhbmRsZXIgaW50ZXJwcmV0IHRoZSBkZWNsYXJhdGlvbiBmaXJzdFxuICAgICAgLy8gYmVmb3JlIHByb2NlZWRpbmcuXG4gICAgICAvL1xuICAgICAgLy8gVE9ETyhlbWlseSk6IFBhc3MgaW4gYSBjYWxsYmFjayB3aGljaCBnZW5lcmF0ZXMgQ1NTLCBzaW1pbGFyIHRvXG4gICAgICAvLyBob3cgb3VyIHNlbGVjdG9yIGhhbmRsZXJzIHdvcmssIGluc3RlYWQgb2YgcGFzc2luZyBpblxuICAgICAgLy8gYHNlbGVjdG9ySGFuZGxlcnNgIGFuZCBoYXZlIHRoZW0gbWFrZSBjYWxscyB0byBgZ2VuZXJhdGVDU1NgXG4gICAgICAvLyB0aGVtc2VsdmVzLiBSaWdodCBub3csIHRoaXMgaXMgaW1wcmFjdGljYWwgYmVjYXVzZSBvdXIgc3RyaW5nXG4gICAgICAvLyBoYW5kbGVycyBhcmUgdmVyeSBzcGVjaWFsaXplZCBhbmQgZG8gY29tcGxleCB0aGluZ3MuXG4gICAgICBkZWNsYXJhdGlvbnMuc2V0KGtleSwgc3RyaW5nSGFuZGxlcnNba2V5XShkZWNsYXJhdGlvbnMuZ2V0KGtleSksIHNlbGVjdG9ySGFuZGxlcnMpLCAvLyBQcmVzZXJ2ZSBvcmRlciBoZXJlLCBzaW5jZSB3ZSBhcmUgcmVhbGx5IHJlcGxhY2luZyBhblxuICAgICAgLy8gdW5wcm9jZXNzZWQgc3R5bGUgd2l0aCBhIHByb2Nlc3NlZCBzdHlsZSwgbm90IG92ZXJyaWRpbmcgYW5cbiAgICAgIC8vIGVhcmxpZXIgc3R5bGVcbiAgICAgIGZhbHNlKTtcbiAgICB9XG4gIH1cbn07XG5cbnZhciB0cmFuc2Zvcm1SdWxlID0gZnVuY3Rpb24gdHJhbnNmb3JtUnVsZShrZXlcbi8qIDogc3RyaW5nICovXG4sIHZhbHVlXG4vKiA6IHN0cmluZyAqL1xuLCB0cmFuc2Zvcm1WYWx1ZVxuLyogOiBmdW5jdGlvbiAqL1xuKSB7XG4gIHJldHVybiAoXG4gICAgLyogOiBzdHJpbmcgKi9cbiAgICBcIlwiLmNvbmNhdChrZWJhYmlmeVN0eWxlTmFtZShrZXkpLCBcIjpcIikuY29uY2F0KHRyYW5zZm9ybVZhbHVlKGtleSwgdmFsdWUpLCBcIjtcIilcbiAgKTtcbn07XG5cbnZhciBhcnJheVRvT2JqZWN0S2V5c1JlZHVjZXIgPSBmdW5jdGlvbiBhcnJheVRvT2JqZWN0S2V5c1JlZHVjZXIoYWNjLCB2YWwpIHtcbiAgYWNjW3ZhbF0gPSB0cnVlO1xuICByZXR1cm4gYWNjO1xufTtcbi8qKlxuICogR2VuZXJhdGUgYSBDU1MgcnVsZXNldCB3aXRoIHRoZSBzZWxlY3RvciBhbmQgY29udGFpbmluZyB0aGUgZGVjbGFyYXRpb25zLlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gYXNzdW1lcyB0aGF0IHRoZSBnaXZlbiBkZWNsYXJhdGlvbnMgZG9uJ3QgY29udGFpbiBhbnkgc3BlY2lhbFxuICogY2hpbGRyZW4gKHN1Y2ggYXMgbWVkaWEgcXVlcmllcywgcHNldWRvLXNlbGVjdG9ycywgb3IgZGVzY2VuZGFudCBzdHlsZXMpLlxuICpcbiAqIE5vdGUgdGhhdCB0aGlzIG1ldGhvZCBkb2VzIG5vdCBkZWFsIHdpdGggbmVzdGluZyB1c2VkIGZvciBlLmcuXG4gKiBwc3VlZG8tc2VsZWN0b3JzIG9yIG1lZGlhIHF1ZXJpZXMuIFRoYXQgcmVzcG9uc2liaWxpdHkgaXMgbGVmdCB0byAgdGhlXG4gKiBgZ2VuZXJhdGVDU1NgIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBzZWxlY3RvcjogdGhlIHNlbGVjdG9yIGFzc29jaWF0ZWQgd2l0aCB0aGUgcnVsZXNldFxuICogQHBhcmFtIHtPYmplY3R9IGRlY2xhcmF0aW9uczogYSBtYXAgZnJvbSBjYW1lbENhc2VkIENTUyBwcm9wZXJ0eSBuYW1lIHRvIENTU1xuICogICAgIHByb3BlcnR5IHZhbHVlLlxuICogQHBhcmFtIHtPYmplY3QuPHN0cmluZywgZnVuY3Rpb24+fSBzdHJpbmdIYW5kbGVyczogYSBtYXAgZnJvbSBjYW1lbENhc2VkIENTU1xuICogICAgIHByb3BlcnR5IG5hbWUgdG8gYSBmdW5jdGlvbiB3aGljaCB3aWxsIG1hcCB0aGUgZ2l2ZW4gdmFsdWUgdG8gdGhlIHZhbHVlXG4gKiAgICAgdGhhdCBpcyBvdXRwdXQuXG4gKiBAcGFyYW0ge2Jvb2x9IHVzZUltcG9ydGFudDogQSBib29sZWFuIHNheWluZyB3aGV0aGVyIHRvIGFwcGVuZCBcIiFpbXBvcnRhbnRcIlxuICogICAgIHRvIGVhY2ggb2YgdGhlIENTUyBkZWNsYXJhdGlvbnMuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBBIHN0cmluZyBvZiByYXcgQ1NTLlxuICpcbiAqIEV4YW1wbGVzOlxuICpcbiAqICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5ibGFoXCIsIHsgY29sb3I6IFwicmVkXCIgfSlcbiAqICAgIC0+IFwiLmJsYWh7Y29sb3I6IHJlZCAhaW1wb3J0YW50O31cIlxuICogICAgZ2VuZXJhdGVDU1NSdWxlc2V0KFwiLmJsYWhcIiwgeyBjb2xvcjogXCJyZWRcIiB9LCB7fSwgZmFsc2UpXG4gKiAgICAtPiBcIi5ibGFoe2NvbG9yOiByZWR9XCJcbiAqICAgIGdlbmVyYXRlQ1NTUnVsZXNldChcIi5ibGFoXCIsIHsgY29sb3I6IFwicmVkXCIgfSwge2NvbG9yOiBjID0+IGMudG9VcHBlckNhc2V9KVxuICogICAgLT4gXCIuYmxhaHtjb2xvcjogUkVEfVwiXG4gKiAgICBnZW5lcmF0ZUNTU1J1bGVzZXQoXCIuYmxhaDpob3ZlclwiLCB7IGNvbG9yOiBcInJlZFwiIH0pXG4gKiAgICAtPiBcIi5ibGFoOmhvdmVye2NvbG9yOiByZWR9XCJcbiAqL1xuXG5cbnZhciBnZW5lcmF0ZUNTU1J1bGVzZXQgPSBmdW5jdGlvbiBnZW5lcmF0ZUNTU1J1bGVzZXQoc2VsZWN0b3Jcbi8qIDogc3RyaW5nICovXG4sIGRlY2xhcmF0aW9uc1xuLyogOiBPcmRlcmVkRWxlbWVudHMgKi9cbiwgc3RyaW5nSGFuZGxlcnNcbi8qIDogU3RyaW5nSGFuZGxlcnMgKi9cbiwgdXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbiwgc2VsZWN0b3JIYW5kbGVyc1xuLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuKVxuLyogOiBzdHJpbmcgKi9cbntcbiAgLy8gTXV0YXRlcyBkZWNsYXJhdGlvbnNcbiAgcnVuU3RyaW5nSGFuZGxlcnMoZGVjbGFyYXRpb25zLCBzdHJpbmdIYW5kbGVycywgc2VsZWN0b3JIYW5kbGVycyk7XG4gIHZhciBvcmlnaW5hbEVsZW1lbnRzID0gT2JqZWN0LmtleXMoZGVjbGFyYXRpb25zLmVsZW1lbnRzKS5yZWR1Y2UoYXJyYXlUb09iamVjdEtleXNSZWR1Y2VyLCBPYmplY3QuY3JlYXRlKG51bGwpKTsgLy8gTk9URShlbWlseSk6IFRoaXMgbXV0YXRlcyBoYW5kbGVkRGVjbGFyYXRpb25zLmVsZW1lbnRzLlxuXG4gIHZhciBwcmVmaXhlZEVsZW1lbnRzID0gcHJlZml4QWxsKGRlY2xhcmF0aW9ucy5lbGVtZW50cyk7XG4gIHZhciBlbGVtZW50TmFtZXMgPSBPYmplY3Qua2V5cyhwcmVmaXhlZEVsZW1lbnRzKTtcblxuICBpZiAoZWxlbWVudE5hbWVzLmxlbmd0aCAhPT0gZGVjbGFyYXRpb25zLmtleU9yZGVyLmxlbmd0aCkge1xuICAgIC8vIFRoZXJlIGFyZSBzb21lIHByZWZpeGVkIHZhbHVlcywgc28gd2UgbmVlZCB0byBmaWd1cmUgb3V0IGhvdyB0byBzb3J0XG4gICAgLy8gdGhlbS5cbiAgICAvL1xuICAgIC8vIExvb3AgdGhyb3VnaCBwcmVmaXhlZEVsZW1lbnRzLCBsb29raW5nIGZvciBhbnl0aGluZyB0aGF0IGlzIG5vdCBpblxuICAgIC8vIHNvcnRPcmRlciwgd2hpY2ggbWVhbnMgaXQgd2FzIGFkZGVkIGJ5IHByZWZpeEFsbC4gVGhpcyBtZWFucyB0aGF0IHdlXG4gICAgLy8gbmVlZCB0byBmaWd1cmUgb3V0IHdoZXJlIGl0IHNob3VsZCBhcHBlYXIgaW4gdGhlIHNvcnRPcmRlci5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGVsZW1lbnROYW1lcy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKCFvcmlnaW5hbEVsZW1lbnRzW2VsZW1lbnROYW1lc1tpXV0pIHtcbiAgICAgICAgLy8gVGhpcyBlbGVtZW50IGlzIG5vdCBpbiB0aGUgc29ydE9yZGVyLCB3aGljaCBtZWFucyBpdCBpcyBhIHByZWZpeGVkXG4gICAgICAgIC8vIHZhbHVlIHRoYXQgd2FzIGFkZGVkIGJ5IHByZWZpeEFsbC4gTGV0J3MgdHJ5IHRvIGZpZ3VyZSBvdXQgd2hlcmUgaXRcbiAgICAgICAgLy8gZ29lcy5cbiAgICAgICAgdmFyIG9yaWdpbmFsU3R5bGUgPSB2b2lkIDA7XG5cbiAgICAgICAgaWYgKGVsZW1lbnROYW1lc1tpXVswXSA9PT0gJ1cnKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIFdlYmtpdC1wcmVmaXhlZCBzdHlsZSwgbGlrZSBcIldlYmtpdFRyYW5zaXRpb25cIi4gTGV0J3NcbiAgICAgICAgICAvLyBmaW5kIGl0cyBvcmlnaW5hbCBzdHlsZSdzIHNvcnQgb3JkZXIuXG4gICAgICAgICAgb3JpZ2luYWxTdHlsZSA9IGVsZW1lbnROYW1lc1tpXVs2XS50b0xvd2VyQ2FzZSgpICsgZWxlbWVudE5hbWVzW2ldLnNsaWNlKDcpO1xuICAgICAgICB9IGVsc2UgaWYgKGVsZW1lbnROYW1lc1tpXVsxXSA9PT0gJ28nKSB7XG4gICAgICAgICAgLy8gVGhpcyBpcyBhIE1vei1wcmVmaXhlZCBzdHlsZSwgbGlrZSBcIk1velRyYW5zaXRpb25cIi4gV2UgY2hlY2tcbiAgICAgICAgICAvLyB0aGUgc2Vjb25kIGNoYXJhY3RlciB0byBhdm9pZCBjb2xsaWRpbmcgd2l0aCBNcy1wcmVmaXhlZFxuICAgICAgICAgIC8vIHN0eWxlcy4gTGV0J3MgZmluZCBpdHMgb3JpZ2luYWwgc3R5bGUncyBzb3J0IG9yZGVyLlxuICAgICAgICAgIG9yaWdpbmFsU3R5bGUgPSBlbGVtZW50TmFtZXNbaV1bM10udG9Mb3dlckNhc2UoKSArIGVsZW1lbnROYW1lc1tpXS5zbGljZSg0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBpZiAoZWxlbWVudE5hbWVzW2ldWzFdID09PSAncycpIHtcbiAgICAgICAgICAvLyBUaGlzIGlzIGEgTXMtcHJlZml4ZWQgc3R5bGUsIGxpa2UgXCJNc1RyYW5zaXRpb25cIi5cbiAgICAgICAgICBvcmlnaW5hbFN0eWxlID0gZWxlbWVudE5hbWVzW2ldWzJdLnRvTG93ZXJDYXNlKCkgKyBlbGVtZW50TmFtZXNbaV0uc2xpY2UoMyk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob3JpZ2luYWxTdHlsZSAmJiBvcmlnaW5hbEVsZW1lbnRzW29yaWdpbmFsU3R5bGVdKSB7XG4gICAgICAgICAgdmFyIG9yaWdpbmFsSW5kZXggPSBkZWNsYXJhdGlvbnMua2V5T3JkZXIuaW5kZXhPZihvcmlnaW5hbFN0eWxlKTtcbiAgICAgICAgICBkZWNsYXJhdGlvbnMua2V5T3JkZXIuc3BsaWNlKG9yaWdpbmFsSW5kZXgsIDAsIGVsZW1lbnROYW1lc1tpXSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gV2UgZG9uJ3Qga25vdyB3aGF0IHRoZSBvcmlnaW5hbCBzdHlsZSB3YXMsIHNvIHNvcnQgaXQgdG9cbiAgICAgICAgICAvLyB0b3AuIFRoaXMgY2FuIGhhcHBlbiBmb3Igc3R5bGVzIHRoYXQgYXJlIGFkZGVkIHRoYXQgZG9uJ3RcbiAgICAgICAgICAvLyBoYXZlIHRoZSBzYW1lIGJhc2UgbmFtZSBhcyB0aGUgb3JpZ2luYWwgc3R5bGUuXG4gICAgICAgICAgZGVjbGFyYXRpb25zLmtleU9yZGVyLnVuc2hpZnQoZWxlbWVudE5hbWVzW2ldKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHZhciB0cmFuc2Zvcm1WYWx1ZSA9IHVzZUltcG9ydGFudCA9PT0gZmFsc2UgPyBzdHJpbmdpZnlWYWx1ZSA6IHN0cmluZ2lmeUFuZEltcG9ydGFudGlmeVZhbHVlO1xuICB2YXIgcnVsZXMgPSBbXTtcblxuICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgZGVjbGFyYXRpb25zLmtleU9yZGVyLmxlbmd0aDsgX2krKykge1xuICAgIHZhciBrZXkgPSBkZWNsYXJhdGlvbnMua2V5T3JkZXJbX2ldO1xuICAgIHZhciB2YWx1ZSA9IHByZWZpeGVkRWxlbWVudHNba2V5XTtcblxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgLy8gaW5saW5lLXN0eWxlLXByZWZpeGVyIHJldHVybnMgYW4gYXJyYXkgd2hlbiB0aGVyZSBzaG91bGQgYmVcbiAgICAgIC8vIG11bHRpcGxlIHJ1bGVzIGZvciB0aGUgc2FtZSBrZXkuIEhlcmUgd2UgZmxhdHRlbiB0byBtdWx0aXBsZVxuICAgICAgLy8gcGFpcnMgd2l0aCB0aGUgc2FtZSBrZXkuXG4gICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHZhbHVlLmxlbmd0aDsgaisrKSB7XG4gICAgICAgIHJ1bGVzLnB1c2godHJhbnNmb3JtUnVsZShrZXksIHZhbHVlW2pdLCB0cmFuc2Zvcm1WYWx1ZSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBydWxlcy5wdXNoKHRyYW5zZm9ybVJ1bGUoa2V5LCB2YWx1ZSwgdHJhbnNmb3JtVmFsdWUpKTtcbiAgICB9XG4gIH1cblxuICBpZiAocnVsZXMubGVuZ3RoKSB7XG4gICAgcmV0dXJuIFwiXCIuY29uY2F0KHNlbGVjdG9yLCBcIntcIikuY29uY2F0KHJ1bGVzLmpvaW4oXCJcIiksIFwifVwiKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gXCJcIjtcbiAgfVxufTtcblxuLyogOjpcbmltcG9ydCB0eXBlIHsgU2hlZXREZWZpbml0aW9uLCBTaGVldERlZmluaXRpb25zIH0gZnJvbSAnLi9pbmRleC5qcyc7XG5pbXBvcnQgdHlwZSB7IE1heWJlU2hlZXREZWZpbml0aW9uIH0gZnJvbSAnLi9leHBvcnRzLmpzJztcbmltcG9ydCB0eXBlIHsgU2VsZWN0b3JIYW5kbGVyIH0gZnJvbSAnLi9nZW5lcmF0ZS5qcyc7XG4qL1xuLy8gVGhlIGN1cnJlbnQgPHN0eWxlPiB0YWcgd2UgYXJlIGluc2VydGluZyBpbnRvLCBvciBudWxsIGlmIHdlIGhhdmVuJ3Rcbi8vIGluc2VydGVkIGFueXRoaW5nIHlldC4gV2UgY291bGQgZmluZCB0aGlzIGVhY2ggdGltZSB1c2luZ1xuLy8gYGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJzdHlsZVtkYXRhLWFwaHJvZGl0ZVwiXSlgLCBidXQgaG9sZGluZyBvbnRvIGl0IGlzXG4vLyBmYXN0ZXIuXG5cbnZhciBzdHlsZVRhZ1xuLyogOiA/SFRNTFN0eWxlRWxlbWVudCAqL1xuPSBudWxsOyAvLyBJbmplY3QgYSBzZXQgb2YgcnVsZXMgaW50byBhIDxzdHlsZT4gdGFnIGluIHRoZSBoZWFkIG9mIHRoZSBkb2N1bWVudC4gVGhpc1xuLy8gd2lsbCBhdXRvbWF0aWNhbGx5IGNyZWF0ZSBhIHN0eWxlIHRhZyBhbmQgdGhlbiBjb250aW51ZSB0byB1c2UgaXQgZm9yXG4vLyBtdWx0aXBsZSBpbmplY3Rpb25zLiBJdCB3aWxsIGFsc28gdXNlIGEgc3R5bGUgdGFnIHdpdGggdGhlIGBkYXRhLWFwaHJvZGl0ZWBcbi8vIHRhZyBvbiBpdCBpZiB0aGF0IGV4aXN0cyBpbiB0aGUgRE9NLiBUaGlzIGNvdWxkIGJlIHVzZWQgZm9yIGUuZy4gcmV1c2luZyB0aGVcbi8vIHNhbWUgc3R5bGUgdGFnIHRoYXQgc2VydmVyLXNpZGUgcmVuZGVyaW5nIGluc2VydHMuXG5cbnZhciBpbmplY3RTdHlsZVRhZyA9IGZ1bmN0aW9uIGluamVjdFN0eWxlVGFnKGNzc1J1bGVzXG4vKiA6IHN0cmluZ1tdICovXG4pIHtcbiAgaWYgKHN0eWxlVGFnID09IG51bGwpIHtcbiAgICAvLyBUcnkgdG8gZmluZCBhIHN0eWxlIHRhZyB3aXRoIHRoZSBgZGF0YS1hcGhyb2RpdGVgIGF0dHJpYnV0ZSBmaXJzdC5cbiAgICBzdHlsZVRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJzdHlsZVtkYXRhLWFwaHJvZGl0ZV1cIilcbiAgICAvKiA6IGFueSAqL1xuICAgIDsgLy8gSWYgdGhhdCBkb2Vzbid0IHdvcmssIGdlbmVyYXRlIGEgbmV3IHN0eWxlIHRhZy5cblxuICAgIGlmIChzdHlsZVRhZyA9PSBudWxsKSB7XG4gICAgICAvLyBUYWtlbiBmcm9tXG4gICAgICAvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzUyNDY5Ni9ob3ctdG8tY3JlYXRlLWEtc3R5bGUtdGFnLXdpdGgtamF2YXNjcmlwdFxuICAgICAgdmFyIGhlYWQgPSBkb2N1bWVudC5oZWFkIHx8IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07XG4gICAgICBzdHlsZVRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gICAgICBzdHlsZVRhZy50eXBlID0gJ3RleHQvY3NzJztcbiAgICAgIHN0eWxlVGFnLnNldEF0dHJpYnV0ZShcImRhdGEtYXBocm9kaXRlXCIsIFwiXCIpO1xuICAgICAgaGVhZC5hcHBlbmRDaGlsZChzdHlsZVRhZyk7XG4gICAgfVxuICB9IC8vICRGbG93Rml4TWVcblxuXG4gIHZhciBzaGVldCA9IHN0eWxlVGFnLnN0eWxlU2hlZXQgfHwgc3R5bGVUYWcuc2hlZXRcbiAgLyogOiBhbnkgKi9cbiAgO1xuXG4gIGlmIChzaGVldC5pbnNlcnRSdWxlKSB7XG4gICAgdmFyIG51bVJ1bGVzID0gc2hlZXQuY3NzUnVsZXMubGVuZ3RoO1xuICAgIGNzc1J1bGVzLmZvckVhY2goZnVuY3Rpb24gKHJ1bGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHNoZWV0Lmluc2VydFJ1bGUocnVsZSwgbnVtUnVsZXMpO1xuICAgICAgICBudW1SdWxlcyArPSAxO1xuICAgICAgfSBjYXRjaCAoZSkgey8vIFRoZSBzZWxlY3RvciBmb3IgdGhpcyBydWxlIHdhc24ndCBjb21wYXRpYmxlIHdpdGggdGhlIGJyb3dzZXJcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZVRhZy5pbm5lclRleHQgPSAoc3R5bGVUYWcuaW5uZXJUZXh0IHx8ICcnKSArIGNzc1J1bGVzLmpvaW4oJycpO1xuICB9XG59OyAvLyBDdXN0b20gaGFuZGxlcnMgZm9yIHN0cmluZ2lmeWluZyBDU1MgdmFsdWVzIHRoYXQgaGF2ZSBzaWRlIGVmZmVjdHNcbi8vIChzdWNoIGFzIGZvbnRGYW1pbHksIHdoaWNoIGNhbiBjYXVzZSBAZm9udC1mYWNlIHJ1bGVzIHRvIGJlIGluamVjdGVkKVxuXG5cbnZhciBzdHJpbmdIYW5kbGVycyA9IHtcbiAgLy8gV2l0aCBmb250RmFtaWx5IHdlIGxvb2sgZm9yIG9iamVjdHMgdGhhdCBhcmUgcGFzc2VkIGluIGFuZCBpbnRlcnByZXRcbiAgLy8gdGhlbSBhcyBAZm9udC1mYWNlIHJ1bGVzIHRoYXQgd2UgbmVlZCB0byBpbmplY3QuIFRoZSB2YWx1ZSBvZiBmb250RmFtaWx5XG4gIC8vIGNhbiBlaXRoZXIgYmUgYSBzdHJpbmcgKGFzIG5vcm1hbCksIGFuIG9iamVjdCAoYSBzaW5nbGUgZm9udCBmYWNlKSwgb3JcbiAgLy8gYW4gYXJyYXkgb2Ygb2JqZWN0cyBhbmQgc3RyaW5ncy5cbiAgZm9udEZhbWlseTogZnVuY3Rpb24gZm9udEZhbWlseSh2YWwpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWwpKSB7XG4gICAgICB2YXIgbmFtZU1hcCA9IHt9O1xuICAgICAgdmFsLmZvckVhY2goZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgbmFtZU1hcFtmb250RmFtaWx5KHYpXSA9IHRydWU7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhuYW1lTWFwKS5qb2luKFwiLFwiKTtcbiAgICB9IGVsc2UgaWYgKF90eXBlb2YodmFsKSA9PT0gXCJvYmplY3RcIikge1xuICAgICAgaW5qZWN0U3R5bGVPbmNlKHZhbC5zcmMsIFwiQGZvbnQtZmFjZVwiLCBbdmFsXSwgZmFsc2UpO1xuICAgICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh2YWwuZm9udEZhbWlseSwgXCJcXFwiXCIpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdmFsO1xuICAgIH1cbiAgfSxcbiAgLy8gV2l0aCBhbmltYXRpb25OYW1lIHdlIGxvb2sgZm9yIGFuIG9iamVjdCB0aGF0IGNvbnRhaW5zIGtleWZyYW1lcyBhbmRcbiAgLy8gaW5qZWN0IHRoZW0gYXMgYW4gYEBrZXlmcmFtZXNgIGJsb2NrLCByZXR1cm5pbmcgYSB1bmlxdWVseSBnZW5lcmF0ZWRcbiAgLy8gbmFtZS4gVGhlIGtleWZyYW1lcyBvYmplY3Qgc2hvdWxkIGxvb2sgbGlrZVxuICAvLyAgYW5pbWF0aW9uTmFtZToge1xuICAvLyAgICBmcm9tOiB7XG4gIC8vICAgICAgbGVmdDogMCxcbiAgLy8gICAgICB0b3A6IDAsXG4gIC8vICAgIH0sXG4gIC8vICAgICc1MCUnOiB7XG4gIC8vICAgICAgbGVmdDogMTUsXG4gIC8vICAgICAgdG9wOiA1LFxuICAvLyAgICB9LFxuICAvLyAgICB0bzoge1xuICAvLyAgICAgIGxlZnQ6IDIwLFxuICAvLyAgICAgIHRvcDogMjAsXG4gIC8vICAgIH1cbiAgLy8gIH1cbiAgLy8gVE9ETyhlbWlseSk6IGBzdHJpbmdIYW5kbGVyc2AgZG9lc24ndCBsZXQgdXMgcmVuYW1lIHRoZSBrZXksIHNvIEkgaGF2ZVxuICAvLyB0byB1c2UgYGFuaW1hdGlvbk5hbWVgIGhlcmUuIEltcHJvdmUgdGhhdCBzbyB3ZSBjYW4gY2FsbCB0aGlzXG4gIC8vIGBhbmltYXRpb25gIGluc3RlYWQgb2YgYGFuaW1hdGlvbk5hbWVgLlxuICBhbmltYXRpb25OYW1lOiBmdW5jdGlvbiBhbmltYXRpb25OYW1lKHZhbCwgc2VsZWN0b3JIYW5kbGVycykge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICAgIHJldHVybiB2YWwubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgIHJldHVybiBhbmltYXRpb25OYW1lKHYsIHNlbGVjdG9ySGFuZGxlcnMpO1xuICAgICAgfSkuam9pbihcIixcIik7XG4gICAgfSBlbHNlIGlmIChfdHlwZW9mKHZhbCkgPT09IFwib2JqZWN0XCIpIHtcbiAgICAgIC8vIEdlbmVyYXRlIGEgdW5pcXVlIG5hbWUgYmFzZWQgb24gdGhlIGhhc2ggb2YgdGhlIG9iamVjdC4gV2UgY2FuJ3RcbiAgICAgIC8vIGp1c3QgdXNlIHRoZSBoYXNoIGJlY2F1c2UgdGhlIG5hbWUgY2FuJ3Qgc3RhcnQgd2l0aCBhIG51bWJlci5cbiAgICAgIC8vIFRPRE8oZW1pbHkpOiB0aGlzIHByb2JhYmx5IG1ha2VzIGRlYnVnZ2luZyBoYXJkLCBhbGxvdyBhIGN1c3RvbVxuICAgICAgLy8gbmFtZT9cbiAgICAgIHZhciBuYW1lID0gXCJrZXlmcmFtZV9cIi5jb25jYXQoaGFzaE9iamVjdCh2YWwpKTsgLy8gU2luY2Uga2V5ZnJhbWVzIG5lZWQgMyBsYXllcnMgb2YgbmVzdGluZywgd2UgdXNlIGBnZW5lcmF0ZUNTU2AgdG9cbiAgICAgIC8vIGJ1aWxkIHRoZSBpbm5lciBsYXllcnMgYW5kIHdyYXAgaXQgaW4gYEBrZXlmcmFtZXNgIG91cnNlbHZlcy5cblxuICAgICAgdmFyIGZpbmFsVmFsID0gXCJAa2V5ZnJhbWVzIFwiLmNvbmNhdChuYW1lLCBcIntcIik7IC8vIFRPRE8gc2VlIGlmIHdlIGNhbiBmaW5kIGEgd2F5IHdoZXJlIGNoZWNraW5nIGZvciBPcmRlcmVkRWxlbWVudHNcbiAgICAgIC8vIGhlcmUgaXMgbm90IG5lY2Vzc2FyeS4gQWx0ZXJuYXRpdmVseSwgcGVyaGFwcyB3ZSBzaG91bGQgaGF2ZSBhXG4gICAgICAvLyB1dGlsaXR5IG1ldGhvZCB0aGF0IGNhbiBpdGVyYXRlIG92ZXIgZWl0aGVyIGEgcGxhaW4gb2JqZWN0LCBhblxuICAgICAgLy8gaW5zdGFuY2Ugb2YgT3JkZXJlZEVsZW1lbnRzLCBvciBhIE1hcCwgYW5kIHRoZW4gdXNlIHRoYXQgaGVyZSBhbmRcbiAgICAgIC8vIGVsc2V3aGVyZS5cblxuICAgICAgaWYgKHZhbCBpbnN0YW5jZW9mIE9yZGVyZWRFbGVtZW50cykge1xuICAgICAgICB2YWwuZm9yRWFjaChmdW5jdGlvbiAodmFsVmFsLCB2YWxLZXkpIHtcbiAgICAgICAgICBmaW5hbFZhbCArPSBnZW5lcmF0ZUNTUyh2YWxLZXksIFt2YWxWYWxdLCBzZWxlY3RvckhhbmRsZXJzLCBzdHJpbmdIYW5kbGVycywgZmFsc2UpLmpvaW4oJycpO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIE9iamVjdC5rZXlzKHZhbCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgZmluYWxWYWwgKz0gZ2VuZXJhdGVDU1Moa2V5LCBbdmFsW2tleV1dLCBzZWxlY3RvckhhbmRsZXJzLCBzdHJpbmdIYW5kbGVycywgZmFsc2UpLmpvaW4oJycpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgZmluYWxWYWwgKz0gJ30nO1xuICAgICAgaW5qZWN0R2VuZXJhdGVkQ1NTT25jZShuYW1lLCBbZmluYWxWYWxdKTtcbiAgICAgIHJldHVybiBuYW1lO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdmFsO1xuICAgIH1cbiAgfVxufTsgLy8gVGhpcyBpcyBhIG1hcCBmcm9tIEFwaHJvZGl0ZSdzIGdlbmVyYXRlZCBjbGFzcyBuYW1lcyB0byBgdHJ1ZWAgKGFjdGluZyBhcyBhXG4vLyBzZXQgb2YgY2xhc3MgbmFtZXMpXG5cbnZhciBhbHJlYWR5SW5qZWN0ZWQgPSB7fTsgLy8gVGhpcyBpcyB0aGUgYnVmZmVyIG9mIHN0eWxlcyB3aGljaCBoYXZlIG5vdCB5ZXQgYmVlbiBmbHVzaGVkLlxuXG52YXIgaW5qZWN0aW9uQnVmZmVyXG4vKiA6IHN0cmluZ1tdICovXG49IFtdOyAvLyBBIGZsYWcgdG8gdGVsbCBpZiB3ZSBhcmUgYWxyZWFkeSBidWZmZXJpbmcgc3R5bGVzLiBUaGlzIGNvdWxkIGhhcHBlbiBlaXRoZXJcbi8vIGJlY2F1c2Ugd2Ugc2NoZWR1bGVkIGEgZmx1c2ggY2FsbCBhbHJlYWR5LCBzbyBuZXdseSBhZGRlZCBzdHlsZXMgd2lsbFxuLy8gYWxyZWFkeSBiZSBmbHVzaGVkLCBvciBiZWNhdXNlIHdlIGFyZSBzdGF0aWNhbGx5IGJ1ZmZlcmluZyBvbiB0aGUgc2VydmVyLlxuXG52YXIgaXNCdWZmZXJpbmcgPSBmYWxzZTtcblxudmFyIGluamVjdEdlbmVyYXRlZENTU09uY2UgPSBmdW5jdGlvbiBpbmplY3RHZW5lcmF0ZWRDU1NPbmNlKGtleSwgZ2VuZXJhdGVkQ1NTKSB7XG4gIHZhciBfaW5qZWN0aW9uQnVmZmVyO1xuXG4gIGlmIChhbHJlYWR5SW5qZWN0ZWRba2V5XSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlmICghaXNCdWZmZXJpbmcpIHtcbiAgICAvLyBXZSBzaG91bGQgbmV2ZXIgYmUgYXV0b21hdGljYWxseSBidWZmZXJpbmcgb24gdGhlIHNlcnZlciAob3IgYW55XG4gICAgLy8gcGxhY2Ugd2l0aG91dCBhIGRvY3VtZW50KSwgc28gZ3VhcmQgYWdhaW5zdCB0aGF0LlxuICAgIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBhdXRvbWF0aWNhbGx5IGJ1ZmZlciB3aXRob3V0IGEgZG9jdW1lbnRcIik7XG4gICAgfSAvLyBJZiB3ZSdyZSBub3QgYWxyZWFkeSBidWZmZXJpbmcsIHNjaGVkdWxlIGEgY2FsbCB0byBmbHVzaCB0aGVcbiAgICAvLyBjdXJyZW50IHN0eWxlcy5cblxuXG4gICAgaXNCdWZmZXJpbmcgPSB0cnVlO1xuICAgIGFzYXAoZmx1c2hUb1N0eWxlVGFnKTtcbiAgfVxuXG4gIChfaW5qZWN0aW9uQnVmZmVyID0gaW5qZWN0aW9uQnVmZmVyKS5wdXNoLmFwcGx5KF9pbmplY3Rpb25CdWZmZXIsIF90b0NvbnN1bWFibGVBcnJheShnZW5lcmF0ZWRDU1MpKTtcblxuICBhbHJlYWR5SW5qZWN0ZWRba2V5XSA9IHRydWU7XG59O1xuXG52YXIgaW5qZWN0U3R5bGVPbmNlID0gZnVuY3Rpb24gaW5qZWN0U3R5bGVPbmNlKGtleVxuLyogOiBzdHJpbmcgKi9cbiwgc2VsZWN0b3Jcbi8qIDogc3RyaW5nICovXG4sIGRlZmluaXRpb25zXG4vKiA6IFNoZWV0RGVmaW5pdGlvbltdICovXG4sIHVzZUltcG9ydGFudFxuLyogOiBib29sZWFuICovXG4pIHtcbiAgdmFyIHNlbGVjdG9ySGFuZGxlcnNcbiAgLyogOiBTZWxlY3RvckhhbmRsZXJbXSAqL1xuICA9IGFyZ3VtZW50cy5sZW5ndGggPiA0ICYmIGFyZ3VtZW50c1s0XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzRdIDogW107XG5cbiAgaWYgKGFscmVhZHlJbmplY3RlZFtrZXldKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgdmFyIGdlbmVyYXRlZCA9IGdlbmVyYXRlQ1NTKHNlbGVjdG9yLCBkZWZpbml0aW9ucywgc2VsZWN0b3JIYW5kbGVycywgc3RyaW5nSGFuZGxlcnMsIHVzZUltcG9ydGFudCk7XG4gIGluamVjdEdlbmVyYXRlZENTU09uY2Uoa2V5LCBnZW5lcmF0ZWQpO1xufTtcbnZhciByZXNldCA9IGZ1bmN0aW9uIHJlc2V0KCkge1xuICBpbmplY3Rpb25CdWZmZXIgPSBbXTtcbiAgYWxyZWFkeUluamVjdGVkID0ge307XG4gIGlzQnVmZmVyaW5nID0gZmFsc2U7XG4gIHN0eWxlVGFnID0gbnVsbDtcbn07XG52YXIgcmVzZXRJbmplY3RlZFN0eWxlID0gZnVuY3Rpb24gcmVzZXRJbmplY3RlZFN0eWxlKGtleVxuLyogOiBzdHJpbmcgKi9cbikge1xuICBkZWxldGUgYWxyZWFkeUluamVjdGVkW2tleV07XG59O1xudmFyIGdldEJ1ZmZlcmVkU3R5bGVzID0gZnVuY3Rpb24gZ2V0QnVmZmVyZWRTdHlsZXMoKSB7XG4gIHJldHVybiBpbmplY3Rpb25CdWZmZXI7XG59O1xudmFyIHN0YXJ0QnVmZmVyaW5nID0gZnVuY3Rpb24gc3RhcnRCdWZmZXJpbmcoKSB7XG4gIGlmIChpc0J1ZmZlcmluZykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBidWZmZXIgd2hpbGUgYWxyZWFkeSBidWZmZXJpbmdcIik7XG4gIH1cblxuICBpc0J1ZmZlcmluZyA9IHRydWU7XG59O1xuXG52YXIgZmx1c2hUb0FycmF5ID0gZnVuY3Rpb24gZmx1c2hUb0FycmF5KCkge1xuICBpc0J1ZmZlcmluZyA9IGZhbHNlO1xuICB2YXIgcmV0ID0gaW5qZWN0aW9uQnVmZmVyO1xuICBpbmplY3Rpb25CdWZmZXIgPSBbXTtcbiAgcmV0dXJuIHJldDtcbn07XG5cbnZhciBmbHVzaFRvU3RyaW5nID0gZnVuY3Rpb24gZmx1c2hUb1N0cmluZygpIHtcbiAgcmV0dXJuIGZsdXNoVG9BcnJheSgpLmpvaW4oJycpO1xufTtcbnZhciBmbHVzaFRvU3R5bGVUYWcgPSBmdW5jdGlvbiBmbHVzaFRvU3R5bGVUYWcoKSB7XG4gIHZhciBjc3NSdWxlcyA9IGZsdXNoVG9BcnJheSgpO1xuXG4gIGlmIChjc3NSdWxlcy5sZW5ndGggPiAwKSB7XG4gICAgaW5qZWN0U3R5bGVUYWcoY3NzUnVsZXMpO1xuICB9XG59O1xudmFyIGdldFJlbmRlcmVkQ2xhc3NOYW1lcyA9IGZ1bmN0aW9uIGdldFJlbmRlcmVkQ2xhc3NOYW1lcygpXG4vKiA6IHN0cmluZ1tdICovXG57XG4gIHJldHVybiBPYmplY3Qua2V5cyhhbHJlYWR5SW5qZWN0ZWQpO1xufTtcbnZhciBhZGRSZW5kZXJlZENsYXNzTmFtZXMgPSBmdW5jdGlvbiBhZGRSZW5kZXJlZENsYXNzTmFtZXMoY2xhc3NOYW1lc1xuLyogOiBzdHJpbmdbXSAqL1xuKSB7XG4gIGNsYXNzTmFtZXMuZm9yRWFjaChmdW5jdGlvbiAoY2xhc3NOYW1lKSB7XG4gICAgYWxyZWFkeUluamVjdGVkW2NsYXNzTmFtZV0gPSB0cnVlO1xuICB9KTtcbn07XG5cbnZhciBpc1ZhbGlkU3R5bGVEZWZpbml0aW9uID0gZnVuY3Rpb24gaXNWYWxpZFN0eWxlRGVmaW5pdGlvbihkZWZcbi8qIDogT2JqZWN0ICovXG4pIHtcbiAgcmV0dXJuIFwiX2RlZmluaXRpb25cIiBpbiBkZWYgJiYgXCJfbmFtZVwiIGluIGRlZiAmJiBcIl9sZW5cIiBpbiBkZWY7XG59O1xuXG52YXIgcHJvY2Vzc1N0eWxlRGVmaW5pdGlvbnMgPSBmdW5jdGlvbiBwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyhzdHlsZURlZmluaXRpb25zXG4vKiA6IGFueVtdICovXG4sIGNsYXNzTmFtZUJpdHNcbi8qIDogc3RyaW5nW10gKi9cbiwgZGVmaW5pdGlvbkJpdHNcbi8qIDogT2JqZWN0W10gKi9cbiwgbGVuZ3RoXG4vKiA6IG51bWJlciAqL1xuKVxuLyogOiBudW1iZXIgKi9cbntcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZURlZmluaXRpb25zLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgLy8gRmlsdGVyIG91dCBmYWxzeSB2YWx1ZXMgZnJvbSB0aGUgaW5wdXQsIHRvIGFsbG93IGZvclxuICAgIC8vIGBjc3MoYSwgdGVzdCAmJiBjKWBcbiAgICBpZiAoc3R5bGVEZWZpbml0aW9uc1tpXSkge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc3R5bGVEZWZpbml0aW9uc1tpXSkpIHtcbiAgICAgICAgLy8gV2UndmUgZW5jb3VudGVyZWQgYW4gYXJyYXksIHNvIGxldCdzIHJlY3Vyc2VcbiAgICAgICAgbGVuZ3RoICs9IHByb2Nlc3NTdHlsZURlZmluaXRpb25zKHN0eWxlRGVmaW5pdGlvbnNbaV0sIGNsYXNzTmFtZUJpdHMsIGRlZmluaXRpb25CaXRzLCBsZW5ndGgpO1xuICAgICAgfSBlbHNlIGlmIChpc1ZhbGlkU3R5bGVEZWZpbml0aW9uKHN0eWxlRGVmaW5pdGlvbnNbaV0pKSB7XG4gICAgICAgIGNsYXNzTmFtZUJpdHMucHVzaChzdHlsZURlZmluaXRpb25zW2ldLl9uYW1lKTtcbiAgICAgICAgZGVmaW5pdGlvbkJpdHMucHVzaChzdHlsZURlZmluaXRpb25zW2ldLl9kZWZpbml0aW9uKTtcbiAgICAgICAgbGVuZ3RoICs9IHN0eWxlRGVmaW5pdGlvbnNbaV0uX2xlbjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgU3R5bGUgRGVmaW5pdGlvbjogU3R5bGVzIHNob3VsZCBiZSBkZWZpbmVkIHVzaW5nIHRoZSBTdHlsZVNoZWV0LmNyZWF0ZSBtZXRob2QuXCIpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBsZW5ndGg7XG59O1xuLyoqXG4gKiBJbmplY3Qgc3R5bGVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgcGFzc2VkIHN0eWxlIGRlZmluaXRpb24gb2JqZWN0cywgYW5kIHJldHVyblxuICogYW4gYXNzb2NpYXRlZCBDU1MgY2xhc3MgbmFtZS5cbiAqXG4gKiBAcGFyYW0ge2Jvb2xlYW59IHVzZUltcG9ydGFudCBJZiB0cnVlLCB3aWxsIGFwcGVuZCAhaW1wb3J0YW50IHRvIGdlbmVyYXRlZFxuICogICAgIENTUyBvdXRwdXQuIGUuZy4ge2NvbG9yOiByZWR9IC0+IFwiY29sb3I6IHJlZCAhaW1wb3J0YW50XCIuXG4gKiBAcGFyYW0geyhPYmplY3R8T2JqZWN0W10pW119IHN0eWxlRGVmaW5pdGlvbnMgc3R5bGUgZGVmaW5pdGlvbiBvYmplY3RzLCBvclxuICogICAgIGFyYml0cmFyaWx5IG5lc3RlZCBhcnJheXMgb2YgdGhlbSwgYXMgcmV0dXJuZWQgYXMgcHJvcGVydGllcyBvZiB0aGVcbiAqICAgICByZXR1cm4gdmFsdWUgb2YgU3R5bGVTaGVldC5jcmVhdGUoKS5cbiAqL1xuXG5cbnZhciBpbmplY3RBbmRHZXRDbGFzc05hbWUgPSBmdW5jdGlvbiBpbmplY3RBbmRHZXRDbGFzc05hbWUodXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbiwgc3R5bGVEZWZpbml0aW9uc1xuLyogOiBNYXliZVNoZWV0RGVmaW5pdGlvbltdICovXG4sIHNlbGVjdG9ySGFuZGxlcnNcbi8qIDogU2VsZWN0b3JIYW5kbGVyW10gKi9cbilcbi8qIDogc3RyaW5nICovXG57XG4gIHZhciBjbGFzc05hbWVCaXRzID0gW107XG4gIHZhciBkZWZpbml0aW9uQml0cyA9IFtdOyAvLyBNdXRhdGVzIGNsYXNzTmFtZUJpdHMgYW5kIGRlZmluaXRpb25CaXRzIGFuZCByZXR1cm5zIGEgbGVuZ3RoIHdoaWNoIHdlXG4gIC8vIHdpbGwgYXBwZW5kIHRvIHRoZSBoYXNoIHRvIGRlY3JlYXNlIHRoZSBjaGFuY2Ugb2YgaGFzaCBjb2xsaXNpb25zLlxuXG4gIHZhciBsZW5ndGggPSBwcm9jZXNzU3R5bGVEZWZpbml0aW9ucyhzdHlsZURlZmluaXRpb25zLCBjbGFzc05hbWVCaXRzLCBkZWZpbml0aW9uQml0cywgMCk7IC8vIEJyZWFrIGlmIHRoZXJlIGFyZW4ndCBhbnkgdmFsaWQgc3R5bGVzLlxuXG4gIGlmIChjbGFzc05hbWVCaXRzLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiBcIlwiO1xuICB9XG5cbiAgdmFyIGNsYXNzTmFtZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgIGNsYXNzTmFtZSA9IGNsYXNzTmFtZUJpdHMubGVuZ3RoID09PSAxID8gXCJfXCIuY29uY2F0KGNsYXNzTmFtZUJpdHNbMF0pIDogXCJfXCIuY29uY2F0KGhhc2hTdHJpbmcoY2xhc3NOYW1lQml0cy5qb2luKCkpKS5jb25jYXQoKGxlbmd0aCAlIDM2KS50b1N0cmluZygzNikpO1xuICB9IGVsc2Uge1xuICAgIGNsYXNzTmFtZSA9IGNsYXNzTmFtZUJpdHMuam9pbihcIi1vX08tXCIpO1xuICB9XG5cbiAgaW5qZWN0U3R5bGVPbmNlKGNsYXNzTmFtZSwgXCIuXCIuY29uY2F0KGNsYXNzTmFtZSksIGRlZmluaXRpb25CaXRzLCB1c2VJbXBvcnRhbnQsIHNlbGVjdG9ySGFuZGxlcnMpO1xuICByZXR1cm4gY2xhc3NOYW1lO1xufTtcblxuLyogOjpcbmltcG9ydCB0eXBlIHsgU2VsZWN0b3JIYW5kbGVyIH0gZnJvbSAnLi9nZW5lcmF0ZS5qcyc7XG5leHBvcnQgdHlwZSBTaGVldERlZmluaXRpb24gPSB7IFtpZDpzdHJpbmddOiBhbnkgfTtcbmV4cG9ydCB0eXBlIFNoZWV0RGVmaW5pdGlvbnMgPSBTaGVldERlZmluaXRpb24gfCBTaGVldERlZmluaXRpb25bXTtcbnR5cGUgUmVuZGVyRnVuY3Rpb24gPSAoKSA9PiBzdHJpbmc7XG50eXBlIEV4dGVuc2lvbiA9IHtcbiAgICBzZWxlY3RvckhhbmRsZXI6IFNlbGVjdG9ySGFuZGxlclxufTtcbmV4cG9ydCB0eXBlIE1heWJlU2hlZXREZWZpbml0aW9uID0gU2hlZXREZWZpbml0aW9uIHwgZmFsc2UgfCBudWxsIHwgdm9pZFxuKi9cblxudmFyIHVubWluaWZpZWRIYXNoRm4gPSBmdW5jdGlvbiB1bm1pbmlmaWVkSGFzaEZuKHN0clxuLyogOiBzdHJpbmcgKi9cbiwga2V5XG4vKiA6IHN0cmluZyAqL1xuKSB7XG4gIHJldHVybiBcIlwiLmNvbmNhdChrZXksIFwiX1wiKS5jb25jYXQoaGFzaFN0cmluZyhzdHIpKTtcbn07IC8vIFN0eWxlU2hlZXQuY3JlYXRlIGlzIGluIGEgaG90IHBhdGggc28gd2Ugd2FudCB0byBrZWVwIGFzIG11Y2ggbG9naWMgb3V0IG9mIGl0XG4vLyBhcyBwb3NzaWJsZS4gU28sIHdlIGZpZ3VyZSBvdXQgd2hpY2ggaGFzaCBmdW5jdGlvbiB0byB1c2Ugb25jZSwgYW5kIG9ubHlcbi8vIHN3aXRjaCBpdCBvdXQgdmlhIG1pbmlmeSgpIGFzIG5lY2Vzc2FyeS5cbi8vXG4vLyBUaGlzIGlzIGluIGFuIGV4cG9ydGVkIGZ1bmN0aW9uIHRvIG1ha2UgaXQgZWFzaWVyIHRvIHRlc3QuXG5cblxudmFyIGluaXRpYWxIYXNoRm4gPSBmdW5jdGlvbiBpbml0aWFsSGFzaEZuKCkge1xuICByZXR1cm4gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyA/IGhhc2hTdHJpbmcgOiB1bm1pbmlmaWVkSGFzaEZuO1xufTtcbnZhciBoYXNoRm4gPSBpbml0aWFsSGFzaEZuKCk7XG52YXIgU3R5bGVTaGVldCA9IHtcbiAgY3JlYXRlOiBmdW5jdGlvbiBjcmVhdGUoc2hlZXREZWZpbml0aW9uXG4gIC8qIDogU2hlZXREZWZpbml0aW9uICovXG4gIClcbiAgLyogOiBPYmplY3QgKi9cbiAge1xuICAgIHZhciBtYXBwZWRTaGVldERlZmluaXRpb24gPSB7fTtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHNoZWV0RGVmaW5pdGlvbik7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuICAgICAgdmFyIHZhbCA9IHNoZWV0RGVmaW5pdGlvbltrZXldO1xuICAgICAgdmFyIHN0cmluZ1ZhbCA9IEpTT04uc3RyaW5naWZ5KHZhbCk7XG4gICAgICBtYXBwZWRTaGVldERlZmluaXRpb25ba2V5XSA9IHtcbiAgICAgICAgX2xlbjogc3RyaW5nVmFsLmxlbmd0aCxcbiAgICAgICAgX25hbWU6IGhhc2hGbihzdHJpbmdWYWwsIGtleSksXG4gICAgICAgIF9kZWZpbml0aW9uOiB2YWxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hcHBlZFNoZWV0RGVmaW5pdGlvbjtcbiAgfSxcbiAgcmVoeWRyYXRlOiBmdW5jdGlvbiByZWh5ZHJhdGUoKSB7XG4gICAgdmFyIHJlbmRlcmVkQ2xhc3NOYW1lc1xuICAgIC8qIDogc3RyaW5nW10gKi9cbiAgICA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107XG4gICAgYWRkUmVuZGVyZWRDbGFzc05hbWVzKHJlbmRlcmVkQ2xhc3NOYW1lcyk7XG4gIH1cbn07XG4vKipcbiAqIFV0aWxpdGllcyBmb3IgdXNpbmcgQXBocm9kaXRlIHNlcnZlci1zaWRlLlxuICpcbiAqIFRoaXMgY2FuIGJlIG1pbmlmaWVkIG91dCBpbiBjbGllbnQtb25seSBidW5kbGVzIGJ5IHJlcGxhY2luZyBgdHlwZW9mIHdpbmRvd2BcbiAqIHdpdGggYFwib2JqZWN0XCJgLCBlLmcuIHZpYSBXZWJwYWNrJ3MgRGVmaW5lUGx1Z2luOlxuICpcbiAqICAgbmV3IHdlYnBhY2suRGVmaW5lUGx1Z2luKHtcbiAqICAgICBcInR5cGVvZiB3aW5kb3dcIjogSlNPTi5zdHJpbmdpZnkoXCJvYmplY3RcIilcbiAqICAgfSlcbiAqL1xuXG52YXIgU3R5bGVTaGVldFNlcnZlciA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gbnVsbCA6IHtcbiAgcmVuZGVyU3RhdGljOiBmdW5jdGlvbiByZW5kZXJTdGF0aWMocmVuZGVyRnVuY1xuICAvKiA6IFJlbmRlckZ1bmN0aW9uICovXG4gICkge1xuICAgIHJlc2V0KCk7XG4gICAgc3RhcnRCdWZmZXJpbmcoKTtcbiAgICB2YXIgaHRtbCA9IHJlbmRlckZ1bmMoKTtcbiAgICB2YXIgY3NzQ29udGVudCA9IGZsdXNoVG9TdHJpbmcoKTtcbiAgICByZXR1cm4ge1xuICAgICAgaHRtbDogaHRtbCxcbiAgICAgIGNzczoge1xuICAgICAgICBjb250ZW50OiBjc3NDb250ZW50LFxuICAgICAgICByZW5kZXJlZENsYXNzTmFtZXM6IGdldFJlbmRlcmVkQ2xhc3NOYW1lcygpXG4gICAgICB9XG4gICAgfTtcbiAgfVxufTtcbi8qKlxuICogVXRpbGl0aWVzIGZvciB1c2luZyBBcGhyb2RpdGUgaW4gdGVzdHMuXG4gKlxuICogTm90IG1lYW50IHRvIGJlIHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgU3R5bGVTaGVldFRlc3RVdGlscyA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgPyBudWxsIDoge1xuICAvKipcbiAgKiBQcmV2ZW50IHN0eWxlcyBmcm9tIGJlaW5nIGluamVjdGVkIGludG8gdGhlIERPTS5cbiAgKlxuICAqIFRoaXMgaXMgdXNlZnVsIGluIHNpdHVhdGlvbnMgd2hlcmUgeW91J2QgbGlrZSB0byB0ZXN0IHJlbmRlcmluZyBVSVxuICAqIGNvbXBvbmVudHMgd2hpY2ggdXNlIEFwaHJvZGl0ZSB3aXRob3V0IGFueSBvZiB0aGUgc2lkZS1lZmZlY3RzIG9mXG4gICogQXBocm9kaXRlIGhhcHBlbmluZy4gUGFydGljdWxhcmx5IHVzZWZ1bCBmb3IgdGVzdGluZyB0aGUgb3V0cHV0IG9mXG4gICogY29tcG9uZW50cyB3aGVuIHlvdSBoYXZlIG5vIERPTSwgZS5nLiB0ZXN0aW5nIGluIE5vZGUgd2l0aG91dCBhIGZha2UgRE9NLlxuICAqXG4gICogU2hvdWxkIGJlIHBhaXJlZCB3aXRoIGEgc3Vic2VxdWVudCBjYWxsIHRvXG4gICogY2xlYXJCdWZmZXJBbmRSZXN1bWVTdHlsZUluamVjdGlvbi5cbiAgKi9cbiAgc3VwcHJlc3NTdHlsZUluamVjdGlvbjogZnVuY3Rpb24gc3VwcHJlc3NTdHlsZUluamVjdGlvbigpIHtcbiAgICByZXNldCgpO1xuICAgIHN0YXJ0QnVmZmVyaW5nKCk7XG4gIH0sXG5cbiAgLyoqXG4gICogT3Bwb3NpdGUgbWV0aG9kIG9mIHByZXZlbnRTdHlsZUluamVjdC5cbiAgKi9cbiAgY2xlYXJCdWZmZXJBbmRSZXN1bWVTdHlsZUluamVjdGlvbjogZnVuY3Rpb24gY2xlYXJCdWZmZXJBbmRSZXN1bWVTdHlsZUluamVjdGlvbigpIHtcbiAgICByZXNldCgpO1xuICB9LFxuXG4gIC8qKlxuICAqIFJldHVybnMgYSBzdHJpbmcgb2YgYnVmZmVyZWQgc3R5bGVzIHdoaWNoIGhhdmUgbm90IGJlZW4gZmx1c2hlZFxuICAqXG4gICogQHJldHVybnMge3N0cmluZ30gIEJ1ZmZlciBvZiBzdHlsZXMgd2hpY2ggaGF2ZSBub3QgeWV0IGJlZW4gZmx1c2hlZC5cbiAgKi9cbiAgZ2V0QnVmZmVyZWRTdHlsZXM6IGZ1bmN0aW9uIGdldEJ1ZmZlcmVkU3R5bGVzJDEoKSB7XG4gICAgcmV0dXJuIGdldEJ1ZmZlcmVkU3R5bGVzKCk7XG4gIH1cbn07XG4vKipcbiAqIEdlbmVyYXRlIHRoZSBBcGhyb2RpdGUgQVBJIGV4cG9ydHMsIHdpdGggZ2l2ZW4gYHNlbGVjdG9ySGFuZGxlcnNgIGFuZFxuICogYHVzZUltcG9ydGFudGAgc3RhdGUuXG4gKi9cblxuZnVuY3Rpb24gbWFrZUV4cG9ydHModXNlSW1wb3J0YW50XG4vKiA6IGJvb2xlYW4gKi9cbikge1xuICB2YXIgc2VsZWN0b3JIYW5kbGVyc1xuICAvKiA6IFNlbGVjdG9ySGFuZGxlcltdICovXG4gID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBkZWZhdWx0U2VsZWN0b3JIYW5kbGVycztcbiAgcmV0dXJuIHtcbiAgICBTdHlsZVNoZWV0OiBfb2JqZWN0U3ByZWFkKHt9LCBTdHlsZVNoZWV0LCB7XG4gICAgICAvKipcbiAgICAgICAqIFJldHVybnMgYSB2ZXJzaW9uIG9mIHRoZSBleHBvcnRzIG9mIEFwaHJvZGl0ZSAoaS5lLiBhbiBvYmplY3RcbiAgICAgICAqIHdpdGggYGNzc2AgYW5kIGBTdHlsZVNoZWV0YCBwcm9wZXJ0aWVzKSB3aGljaCBoYXZlIHNvbWVcbiAgICAgICAqIGV4dGVuc2lvbnMgaW5jbHVkZWQuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtBcnJheS48T2JqZWN0Pn0gZXh0ZW5zaW9uczogQW4gYXJyYXkgb2YgZXh0ZW5zaW9ucyB0b1xuICAgICAgICogICAgIGFkZCB0byB0aGlzIGluc3RhbmNlIG9mIEFwaHJvZGl0ZS4gRWFjaCBvYmplY3Qgc2hvdWxkIGhhdmUgYVxuICAgICAgICogICAgIHNpbmdsZSBwcm9wZXJ0eSBvbiBpdCwgZGVmaW5pbmcgd2hpY2gga2luZCBvZiBleHRlbnNpb24gdG9cbiAgICAgICAqICAgICBhZGQuXG4gICAgICAgKiBAcGFyYW0ge1NlbGVjdG9ySGFuZGxlcn0gW2V4dGVuc2lvbnNbXS5zZWxlY3RvckhhbmRsZXJdOiBBXG4gICAgICAgKiAgICAgc2VsZWN0b3IgaGFuZGxlciBleHRlbnNpb24uIFNlZSBgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnNgIGluXG4gICAgICAgKiAgICAgZ2VuZXJhdGUuanMuXG4gICAgICAgKlxuICAgICAgICogQHJldHVybnMge09iamVjdH0gQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGV4cG9ydHMgb2YgdGhlIG5ld1xuICAgICAgICogICAgIGluc3RhbmNlIG9mIEFwaHJvZGl0ZS5cbiAgICAgICAqL1xuICAgICAgZXh0ZW5kOiBmdW5jdGlvbiBleHRlbmQoZXh0ZW5zaW9uc1xuICAgICAgLyogOiBFeHRlbnNpb25bXSAqL1xuICAgICAgKSB7XG4gICAgICAgIHZhciBleHRlbnNpb25TZWxlY3RvckhhbmRsZXJzID0gZXh0ZW5zaW9ucyAvLyBQdWxsIG91dCBleHRlbnNpb25zIHdpdGggYSBzZWxlY3RvckhhbmRsZXIgcHJvcGVydHlcbiAgICAgICAgLm1hcChmdW5jdGlvbiAoZXh0ZW5zaW9uKSB7XG4gICAgICAgICAgcmV0dXJuIGV4dGVuc2lvbi5zZWxlY3RvckhhbmRsZXI7XG4gICAgICAgIH0pIC8vIFJlbW92ZSBudWxscyAoaS5lLiBleHRlbnNpb25zIHdpdGhvdXQgYSBzZWxlY3RvckhhbmRsZXIgcHJvcGVydHkpLlxuICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgICAgcmV0dXJuIGhhbmRsZXI7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gbWFrZUV4cG9ydHModXNlSW1wb3J0YW50LCBzZWxlY3RvckhhbmRsZXJzLmNvbmNhdChleHRlbnNpb25TZWxlY3RvckhhbmRsZXJzKSk7XG4gICAgICB9XG4gICAgfSksXG4gICAgU3R5bGVTaGVldFNlcnZlcjogU3R5bGVTaGVldFNlcnZlcixcbiAgICBTdHlsZVNoZWV0VGVzdFV0aWxzOiBTdHlsZVNoZWV0VGVzdFV0aWxzLFxuICAgIG1pbmlmeTogZnVuY3Rpb24gbWluaWZ5KHNob3VsZE1pbmlmeVxuICAgIC8qIDogYm9vbGVhbiAqL1xuICAgICkge1xuICAgICAgaGFzaEZuID0gc2hvdWxkTWluaWZ5ID8gaGFzaFN0cmluZyA6IHVubWluaWZpZWRIYXNoRm47XG4gICAgfSxcbiAgICBjc3M6IGZ1bmN0aW9uIGNzcygpXG4gICAgLyogOiBNYXliZVNoZWV0RGVmaW5pdGlvbltdICovXG4gICAge1xuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHN0eWxlRGVmaW5pdGlvbnMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIHN0eWxlRGVmaW5pdGlvbnNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBpbmplY3RBbmRHZXRDbGFzc05hbWUodXNlSW1wb3J0YW50LCBzdHlsZURlZmluaXRpb25zLCBzZWxlY3RvckhhbmRsZXJzKTtcbiAgICB9LFxuICAgIGZsdXNoVG9TdHlsZVRhZzogZmx1c2hUb1N0eWxlVGFnLFxuICAgIGluamVjdEFuZEdldENsYXNzTmFtZTogaW5qZWN0QW5kR2V0Q2xhc3NOYW1lLFxuICAgIGRlZmF1bHRTZWxlY3RvckhhbmRsZXJzOiBkZWZhdWx0U2VsZWN0b3JIYW5kbGVycyxcbiAgICByZXNldDogcmVzZXQsXG4gICAgcmVzZXRJbmplY3RlZFN0eWxlOiByZXNldEluamVjdGVkU3R5bGVcbiAgfTtcbn1cblxuZXhwb3J0IHsgbWFrZUV4cG9ydHMgYXMgYSB9O1xuIiwiaW1wb3J0IHsgYSBhcyBtYWtlRXhwb3J0cyB9IGZyb20gJy4vY2h1bmstZmViY2U0NmIuanMnO1xuaW1wb3J0ICdzdHJpbmctaGFzaCc7XG5pbXBvcnQgJ2FzYXAnO1xuXG52YXIgdXNlSW1wb3J0YW50ID0gdHJ1ZTsgLy8gQWRkICFpbXBvcnRhbnQgdG8gYWxsIHN0eWxlIGRlZmluaXRpb25zXG5cbnZhciBBcGhyb2RpdGUgPSBtYWtlRXhwb3J0cyh1c2VJbXBvcnRhbnQpO1xudmFyIFN0eWxlU2hlZXQgPSBBcGhyb2RpdGUuU3R5bGVTaGVldCxcbiAgICBTdHlsZVNoZWV0U2VydmVyID0gQXBocm9kaXRlLlN0eWxlU2hlZXRTZXJ2ZXIsXG4gICAgU3R5bGVTaGVldFRlc3RVdGlscyA9IEFwaHJvZGl0ZS5TdHlsZVNoZWV0VGVzdFV0aWxzLFxuICAgIGNzcyA9IEFwaHJvZGl0ZS5jc3MsXG4gICAgbWluaWZ5ID0gQXBocm9kaXRlLm1pbmlmeSxcbiAgICBmbHVzaFRvU3R5bGVUYWcgPSBBcGhyb2RpdGUuZmx1c2hUb1N0eWxlVGFnLFxuICAgIGluamVjdEFuZEdldENsYXNzTmFtZSA9IEFwaHJvZGl0ZS5pbmplY3RBbmRHZXRDbGFzc05hbWUsXG4gICAgZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMgPSBBcGhyb2RpdGUuZGVmYXVsdFNlbGVjdG9ySGFuZGxlcnMsXG4gICAgcmVzZXQgPSBBcGhyb2RpdGUucmVzZXQsXG4gICAgcmVzZXRJbmplY3RlZFN0eWxlID0gQXBocm9kaXRlLnJlc2V0SW5qZWN0ZWRTdHlsZTtcblxuZXhwb3J0IHsgU3R5bGVTaGVldCwgU3R5bGVTaGVldFNlcnZlciwgU3R5bGVTaGVldFRlc3RVdGlscywgY3NzLCBtaW5pZnksIGZsdXNoVG9TdHlsZVRhZywgaW5qZWN0QW5kR2V0Q2xhc3NOYW1lLCBkZWZhdWx0U2VsZWN0b3JIYW5kbGVycywgcmVzZXQsIHJlc2V0SW5qZWN0ZWRTdHlsZSB9O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuXHJcbmV4cG9ydCBjb25zdCB1c2VyID0ge1xyXG4gIGVtYWlsOiAnJyxcclxuICBwYXNzd29yZDogJycsXHJcbiAgaXNMb2dnZWRJbjogZmFsc2UsXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgbG9nT3V0ID0gKCkgPT4ge307XHJcblxyXG5leHBvcnQgY29uc3QgQXBwQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoeyB1c2VyLCBsb2dPdXQgfSk7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBsb2dvIGZyb20gJy4uL2Fzc2V0cy9ob2xiZXJ0b24tbG9nby5qcGcnO1xyXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xyXG5pbXBvcnQgeyBBcHBDb250ZXh0IH0gZnJvbSAnLi4vQXBwL0FwcENvbnRleHQnO1xyXG5cclxuY2xhc3MgSGVhZGVyIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyB1c2VyLCBsb2dPdXQgfSA9IHRoaXMuY29udGV4dDtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8aGVhZGVyIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5oZWFkZXIpfT5cclxuICAgICAgICA8aW1nIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5sb2dvKX0gc3JjPXtsb2dvfSBhbHQ9J2xvZ28nIC8+XHJcbiAgICAgICAgPGgxIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy50aXRsZSl9PlNjaG9vbCBkYXNoYm9hcmQ8L2gxPlxyXG4gICAgICAgIHt1c2VyLmlzTG9nZ2VkSW4gJiYgKFxyXG4gICAgICAgICAgPHAgaWQ9J2xvZ291dFNlY3Rpb24nIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5sb2dvdXRTZWN0aW9uKX0+XHJcbiAgICAgICAgICAgIFdlbGNvbWUgPGI+e2Ake3VzZXIuZW1haWx9IGB9PC9iPlxyXG4gICAgICAgICAgICA8c3BhbiBvbkNsaWNrPXtsb2dPdXR9IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5sb2dvdXRTZWN0aW9uU3Bhbil9PlxyXG4gICAgICAgICAgICAgIChsb2dvdXQpXHJcbiAgICAgICAgICAgIDwvc3Bhbj5cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICApfVxyXG4gICAgICA8L2hlYWRlcj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5jb25zdCBzY3JlZW5TaXplID0ge1xyXG4gIHNtYWxsOiAnQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpJyxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBoZWFkZXI6IHtcclxuICAgIGRpc3BsYXk6ICdmbGV4JyxcclxuICAgIGNvbG9yOiAnI2UwMzQ0YScsXHJcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcclxuICAgIGJvcmRlckJvdHRvbTogJ3RoaWNrIHNvbGlkICNlMDM0NGEnLFxyXG4gICAgd2lkdGg6ICcxMDAlJyxcclxuICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxyXG4gIH0sXHJcbiAgbG9nbzoge1xyXG4gICAgd2lkdGg6ICcxNDRweCcsXHJcbiAgICBbc2NyZWVuU2l6ZS5zbWFsbF06IHtcclxuICAgICAgd2lkdGg6ICcyNDBweCcsXHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgdGl0bGU6IHtcclxuICAgIG1hcmdpbjogMCxcclxuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge1xyXG4gICAgICBmb250U2l6ZTogJzQwcHgnLFxyXG4gICAgfSxcclxuICB9LFxyXG4gIGxvZ291dFNlY3Rpb246IHtcclxuICAgIGNvbG9yOiAnYmxhY2snLFxyXG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXHJcbiAgICByaWdodDogMCxcclxuICAgIHBhZGRpbmdSaWdodDogJzIwcHgnLFxyXG4gICAgYWxpZ25TZWxmOiAnZmxleC1lbmQnLFxyXG4gIH0sXHJcbiAgbG9nb3V0U2VjdGlvblNwYW46IHtcclxuICAgIGZvbnRTdHlsZTogJ2l0YWxpYycsXHJcbiAgICBjdXJzb3I6ICdwb2ludGVyJyxcclxuICB9LFxyXG59KTtcclxuXHJcbkhlYWRlci5jb250ZXh0VHlwZSA9IEFwcENvbnRleHQ7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XHJcblxyXG5jbGFzcyBMb2dpbiBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgIHN1cGVyKHByb3BzKTtcclxuICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgIGVtYWlsOiAnJyxcclxuICAgICAgcGFzc3dvcmQ6ICcnLFxyXG4gICAgICBlbmFibGVTdWJtaXQ6IGZhbHNlLFxyXG4gICAgfTtcclxuICAgIHRoaXMuaGFuZGxlTG9naW5TdWJtaXQgPSB0aGlzLmhhbmRsZUxvZ2luU3VibWl0LmJpbmQodGhpcyk7XHJcbiAgICB0aGlzLmhhbmRsZUNoYW5nZUVtYWlsID0gdGhpcy5oYW5kbGVDaGFuZ2VFbWFpbC5iaW5kKHRoaXMpO1xyXG4gICAgdGhpcy5oYW5kbGVDaGFuZ2VQYXNzd29yZCA9IHRoaXMuaGFuZGxlQ2hhbmdlUGFzc3dvcmQuYmluZCh0aGlzKTtcclxuICB9XHJcblxyXG4gIGhhbmRsZUxvZ2luU3VibWl0KGUpIHtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgIGNvbnN0IHsgZW1haWwsIHBhc3N3b3JkIH0gPSB0aGlzLnN0YXRlO1xyXG4gICAgdGhpcy5wcm9wcy5sb2dJbihlbWFpbCwgcGFzc3dvcmQpO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlQ2hhbmdlRW1haWwoZSkge1xyXG4gICAgY29uc3QgeyB2YWx1ZSB9ID0gZS50YXJnZXQ7XHJcbiAgICBjb25zdCB7IHBhc3N3b3JkIH0gPSB0aGlzLnN0YXRlO1xyXG5cclxuICAgIGlmICh2YWx1ZSAhPT0gJycgJiYgcGFzc3dvcmQgIT09ICcnKSB0aGlzLnNldFN0YXRlKHsgZW5hYmxlU3VibWl0OiB0cnVlIH0pO1xyXG4gICAgZWxzZSB0aGlzLnNldFN0YXRlKHsgZW5hYmxlU3VibWl0OiBmYWxzZSB9KTtcclxuXHJcbiAgICB0aGlzLnNldFN0YXRlKHsgZW1haWw6IGUudGFyZ2V0LnZhbHVlIH0pO1xyXG4gIH1cclxuXHJcbiAgaGFuZGxlQ2hhbmdlUGFzc3dvcmQoZSkge1xyXG4gICAgY29uc3QgeyB2YWx1ZSB9ID0gZS50YXJnZXQ7XHJcbiAgICBjb25zdCB7IGVtYWlsIH0gPSB0aGlzLnN0YXRlO1xyXG5cclxuICAgIGlmIChlbWFpbCAhPT0gJycgJiYgdmFsdWUgIT09ICcnKSB0aGlzLnNldFN0YXRlKHsgZW5hYmxlU3VibWl0OiB0cnVlIH0pO1xyXG4gICAgZWxzZSB0aGlzLnNldFN0YXRlKHsgZW5hYmxlU3VibWl0OiBmYWxzZSB9KTtcclxuXHJcbiAgICB0aGlzLnNldFN0YXRlKHsgcGFzc3dvcmQ6IGUudGFyZ2V0LnZhbHVlIH0pO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPG1haW4gcm9sZT0nbWFpbicgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmxvZ2luKX0+XHJcbiAgICAgICAgPHA+TG9naW4gdG8gYWNjZXNzIHRoZSBmdWxsIGRhc2hib2FyZDwvcD5cclxuICAgICAgICA8Zm9ybSBhY3Rpb249Jycgb25TdWJtaXQ9e3RoaXMuaGFuZGxlTG9naW5TdWJtaXR9PlxyXG4gICAgICAgICAgPGxhYmVsIGh0bWxGb3I9J2VtYWlsJz5FbWFpbDo8L2xhYmVsPlxyXG4gICAgICAgICAgPGlucHV0XHJcbiAgICAgICAgICAgIHR5cGU9J2VtYWlsJ1xyXG4gICAgICAgICAgICBpZD0nZW1haWwnXHJcbiAgICAgICAgICAgIG5hbWU9J2VtYWlsJ1xyXG4gICAgICAgICAgICBjbGFzc05hbWU9e2NzcyhzdHlsZXMuaW5wKX1cclxuICAgICAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUuZW1haWx9XHJcbiAgICAgICAgICAgIG9uQ2hhbmdlPXt0aGlzLmhhbmRsZUNoYW5nZUVtYWlsfVxyXG4gICAgICAgICAgLz5cclxuICAgICAgICAgIDxsYWJlbCBodG1sRm9yPSdwYXNzd29yZCc+UGFzc3dvcmQ6PC9sYWJlbD5cclxuICAgICAgICAgIDxpbnB1dFxyXG4gICAgICAgICAgICB0eXBlPSdwYXNzd29yZCdcclxuICAgICAgICAgICAgaWQ9J3Bhc3N3b3JkJ1xyXG4gICAgICAgICAgICBuYW1lPSdwYXNzd29yZCdcclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmlucCl9XHJcbiAgICAgICAgICAgIHZhbHVlPXt0aGlzLnN0YXRlLnBhc3N3b3JkfVxyXG4gICAgICAgICAgICBvbkNoYW5nZT17dGhpcy5oYW5kbGVDaGFuZ2VQYXNzd29yZH1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAgIHR5cGU9J3N1Ym1pdCdcclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmJ0bil9XHJcbiAgICAgICAgICAgIGRpc2FibGVkPXshdGhpcy5zdGF0ZS5lbmFibGVTdWJtaXR9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIE9LXHJcbiAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICA8L2Zvcm0+XHJcbiAgICAgIDwvbWFpbj5cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbi8qXHJcbjxsYWJlbCBodG1sRm9yPSdlbWFpbCc+RW1haWw6PC9sYWJlbD5cclxuICAgICAgICA8aW5wdXRcclxuICAgICAgICAgIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5pbnApfVxyXG4gICAgICAgICAgdHlwZT0nZW1haWwnXHJcbiAgICAgICAgICBuYW1lPSdlbWFpbCdcclxuICAgICAgICAgIGlkPSdlbWFpbCdcclxuICAgICAgICAvPlxyXG4gICAgICAgIDxsYWJlbCBodG1sRm9yPSdwYXNzd29yZCc+UGFzc3dvcmQ6PC9sYWJlbD5cclxuICAgICAgICA8aW5wdXRcclxuICAgICAgICAgIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5pbnApfVxyXG4gICAgICAgICAgdHlwZT0ncGFzc3dvcmQnXHJcbiAgICAgICAgICBuYW1lPSdwYXNzd29yZCdcclxuICAgICAgICAgIGlkPSdwYXNzd29yZCdcclxuICAgICAgICAvPlxyXG4gICAgICAgIDxidXR0b24gY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmJ0bil9IHR5cGU9J2J1dHRvbic+XHJcbiAgICAgICAgICBPS1xyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4qL1xyXG5jb25zdCBzY3JlZW5TaXplID0ge1xyXG4gIHNtYWxsOiAnQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpJyxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBsb2dpbjoge1xyXG4gICAgcGFkZGluZzogJzE2cHggMjRweCcsXHJcbiAgICBbc2NyZWVuU2l6ZS5zbWFsbF06IHtcclxuICAgICAgd2lkdGg6ICc5MCUnLFxyXG4gICAgICBwYWRkaW5nOiAwLFxyXG4gICAgfSxcclxuICB9LFxyXG4gIGlucDoge1xyXG4gICAgbWFyZ2luOiAnNHB4JyxcclxuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge1xyXG4gICAgICBkaXNwbGF5OiAnYmxvY2snLFxyXG4gICAgICBib3JkZXI6ICdub25lJyxcclxuICAgICAgbWFyZ2luOiAwLFxyXG4gICAgfSxcclxuICB9LFxyXG4gIGJ0bjoge1xyXG4gICAgbWFyZ2luOiAnNHB4JyxcclxuICAgIGN1cnNvcjogJ3BvaW50ZXInLFxyXG4gICAgW3NjcmVlblNpemUuc21hbGxdOiB7XHJcbiAgICAgIHdpZHRoOiAnMzJweCcsXHJcbiAgICAgIGRpc3BsYXk6ICdibG9jaycsXHJcbiAgICAgIG1hcmdpbjogMCxcclxuICAgIH0sXHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBMb2dpbjtcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHsgZ2V0RnVsbFllYXIsIGdldEZvb3RlckNvcHkgfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5mdW5jdGlvbiBGb290ZXIoKSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxmb290ZXI+XHJcbiAgICAgIDxwPlxyXG4gICAgICAgIENvcHlyaWdodCB7Z2V0RnVsbFllYXIoKX0gLSB7Z2V0Rm9vdGVyQ29weSh0cnVlKX1cclxuICAgICAgPC9wPlxyXG4gICAgPC9mb290ZXI+XHJcbiAgKTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgRm9vdGVyO1xyXG4iLCJleHBvcnQgY29uc3QgZ2V0RnVsbFllYXIgPSAoKSA9PiB7XHJcbiAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRGb290ZXJDb3B5ID0gKGlzSW5kZXgpID0+IHtcclxuICBsZXQgcmVzID0gdW5kZWZpbmVkO1xyXG4gIGlzSW5kZXhcclxuICAgID8gKHJlcyA9ICdIb2xiZXJ0b24gU2Nob29sJylcclxuICAgIDogKHJlcyA9ICdIb2xiZXJ0b24gU2Nob29sIG1haW4gZGFzaGJvYXJkJyk7XHJcbiAgcmV0dXJuIHJlcztcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXRMYXRlc3ROb3RpZmljYXRpb24gPSAoKSA9PlxyXG4gICc8c3Ryb25nPlVyZ2VudCByZXF1aXJlbWVudDwvc3Ryb25nPiAtIGNvbXBsZXRlIGJ5IEVPRCc7XHJcbiIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI3Y2E3MjdkY2IwYjQxODFlZGEyNThiZDViMTg2OTc4YS5wbmdcIjsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xyXG5cclxuY2xhc3MgTm90aWZpY2F0aW9uSXRlbSBleHRlbmRzIFJlYWN0LlB1cmVDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgfVxyXG4gIHJlbmRlcigpIHtcclxuICAgIGNvbnN0IHsgdHlwZSwgaHRtbCwgdmFsdWUsIG1hcmtBc1JlYWQsIGlkIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgY29uc3QgY29sb3IgPSBjc3ModHlwZSA9PT0gJ3VyZ2VudCcgPyBzdHlsZXMudXJnZW50IDogc3R5bGVzLmRlZmF1bHQpO1xyXG4gICAgbGV0IGxpO1xyXG5cclxuICAgIHZhbHVlXHJcbiAgICAgID8gKGxpID0gKFxyXG4gICAgICAgICAgPGxpXHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y29sb3J9XHJcbiAgICAgICAgICAgIGRhdGEtbm90aWZpY2F0aW9uLXR5cGU9e3R5cGV9XHJcbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IG1hcmtBc1JlYWQoaWQpfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICB7dmFsdWV9XHJcbiAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICkpXHJcbiAgICAgIDogKGxpID0gKFxyXG4gICAgICAgICAgPGxpXHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT17Y29sb3J9XHJcbiAgICAgICAgICAgIGRhdGEtbm90aWZpY2F0aW9uLXR5cGU9e3R5cGV9XHJcbiAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXtodG1sfVxyXG4gICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBtYXJrQXNSZWFkKGlkKX1cclxuICAgICAgICAgID48L2xpPlxyXG4gICAgICAgICkpO1xyXG5cclxuICAgIHJldHVybiBsaTtcclxuICB9XHJcbn1cclxuXHJcbk5vdGlmaWNhdGlvbkl0ZW0uZGVmYXVsdFByb3BzID0ge1xyXG4gIHR5cGU6ICdkZWZhdWx0JyxcclxuICBodG1sOiB7fSxcclxuICB2YWx1ZTogJycsXHJcbiAgbWFya0FzUmVhZDogKCkgPT4ge30sXHJcbiAgaWQ6IE5hTixcclxufTtcclxuXHJcbk5vdGlmaWNhdGlvbkl0ZW0ucHJvcFR5cGVzID0ge1xyXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgaHRtbDogUHJvcFR5cGVzLnNoYXBlKHtcclxuICAgIF9faHRtbDogUHJvcFR5cGVzLnN0cmluZyxcclxuICB9KSxcclxuICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcclxuICBtYXJrQXNSZWFkOiBQcm9wVHlwZXMuZnVuYyxcclxuICBpZDogUHJvcFR5cGVzLm51bWJlcixcclxufTtcclxuXHJcbmNvbnN0IHNjcmVlblNpemUgPSB7XHJcbiAgc21hbGw6ICdAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweCknLFxyXG59O1xyXG5cclxuY29uc3Qgb25TbWFsbCA9IHtcclxuICBmb250U2l6ZTogJzIwcHgnLFxyXG4gIHBhZGRpbmc6ICcxMHB4IDhweCcsXHJcbiAgYm9yZGVyQm90dG9tOiAnMXB4IHNvbGlkIGJsYWNrJyxcclxuICBsaXN0U3R5bGU6ICdub25lJyxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBkZWZhdWx0OiB7XHJcbiAgICBjb2xvcjogJ2JsdWUnLFxyXG4gICAgW3NjcmVlblNpemUuc21hbGxdOiBvblNtYWxsLFxyXG4gIH0sXHJcblxyXG4gIHVyZ2VudDoge1xyXG4gICAgY29sb3I6ICdyZWQnLFxyXG4gICAgW3NjcmVlblNpemUuc21hbGxdOiBvblNtYWxsLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTm90aWZpY2F0aW9uSXRlbTtcclxuIiwiaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuXHJcbmNvbnN0IE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSA9IFByb3BUeXBlcy5zaGFwZSh7XHJcbiAgaWQ6IFByb3BUeXBlcy5udW1iZXIuaXNSZXF1aXJlZCxcclxuICBodG1sOiBQcm9wVHlwZXMuc2hhcGUoe1xyXG4gICAgX19odG1sOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIH0pLFxyXG4gIHR5cGU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcclxuICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBOb3RpZmljYXRpb25JdGVtU2hhcGU7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQsIEZyYWdtZW50IH0gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgY2xvc2VfaWNvbiBmcm9tICcuLi9hc3NldHMvY2xvc2UtaWNvbi5wbmcnO1xyXG5pbXBvcnQgTm90aWZpY2F0aW9uSXRlbSBmcm9tICcuL05vdGlmaWNhdGlvbkl0ZW0nO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgTm90aWZpY2F0aW9uSXRlbVNoYXBlIGZyb20gJy4vTm90aWZpY2F0aW9uSXRlbVNoYXBlJztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcbmNsYXNzIE5vdGlmaWNhdGlvbnMgZXh0ZW5kcyBDb21wb25lbnQge1xyXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgICB0aGlzLm1hcmtBc1JlYWQgPSB0aGlzLm1hcmtBc1JlYWQuYmluZCh0aGlzKTtcclxuICB9XHJcbiAgbWFya0FzUmVhZChpZCkge1xyXG4gICAgY29uc29sZS5sb2coYE5vdGlmaWNhdGlvbiAke2lkfSBoYXMgYmVlbiBtYXJrZWQgYXMgcmVhZGApO1xyXG4gIH1cclxuICBzaG91bGRDb21wb25lbnRVcGRhdGUobmV4dFByb3BzKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICBuZXh0UHJvcHMubGlzdE5vdGlmaWNhdGlvbnMubGVuZ3RoID5cclxuICAgICAgICB0aGlzLnByb3BzLmxpc3ROb3RpZmljYXRpb25zLmxlbmd0aCB8fFxyXG4gICAgICBuZXh0UHJvcHMuZGlzcGxheURyYXdlciAhPT0gdGhpcy5wcm9wcy5kaXNwbGF5RHJhd2VyXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3Qge1xyXG4gICAgICBkaXNwbGF5RHJhd2VyLFxyXG4gICAgICBsaXN0Tm90aWZpY2F0aW9ucyxcclxuICAgICAgaGFuZGxlRGlzcGxheURyYXdlcixcclxuICAgICAgaGFuZGxlSGlkZURyYXdlcixcclxuICAgIH0gPSB0aGlzLnByb3BzO1xyXG4gICAgY29uc3Qgc2hvdyA9IGNzcyhkaXNwbGF5RHJhd2VyID8gc3R5bGVzLnNob3dPZmYgOiBzdHlsZXMuc2hvd09uKTtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxGcmFnbWVudD5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjbGFzc05hbWU9e2NzcyhzdHlsZXMubWVudUl0ZW0pfVxyXG4gICAgICAgICAgb25DbGljaz17aGFuZGxlRGlzcGxheURyYXdlcn1cclxuICAgICAgICAgIGlkPSdtZW51SXRlbSdcclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cCBjbGFzc05hbWU9e3Nob3d9PllvdXIgbm90aWZpY2F0aW9uczwvcD5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgICB7ZGlzcGxheURyYXdlciAmJiAoXHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5ub3RpZmljYXRpb25zKX0+XHJcbiAgICAgICAgICAgIDxwPkhlcmUgaXMgdGhlIGxpc3Qgb2Ygbm90aWZpY2F0aW9uczwvcD5cclxuICAgICAgICAgICAgPHVsPlxyXG4gICAgICAgICAgICAgIHtsaXN0Tm90aWZpY2F0aW9ucy5sZW5ndGggPT09IDAgJiYgKFxyXG4gICAgICAgICAgICAgICAgPE5vdGlmaWNhdGlvbkl0ZW0gdmFsdWU9J05vIG5ldyBub3RpZmljYXRpb24gZm9yIG5vdycgLz5cclxuICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgIHtsaXN0Tm90aWZpY2F0aW9ucy5tYXAoKG5vdGlmaWNhdGlvbikgPT4gKFxyXG4gICAgICAgICAgICAgICAgPE5vdGlmaWNhdGlvbkl0ZW1cclxuICAgICAgICAgICAgICAgICAga2V5PXtub3RpZmljYXRpb24uaWR9XHJcbiAgICAgICAgICAgICAgICAgIHR5cGU9e25vdGlmaWNhdGlvbi50eXBlfVxyXG4gICAgICAgICAgICAgICAgICB2YWx1ZT17bm90aWZpY2F0aW9uLnZhbHVlfVxyXG4gICAgICAgICAgICAgICAgICBodG1sPXtub3RpZmljYXRpb24uaHRtbH1cclxuICAgICAgICAgICAgICAgICAgbWFya0FzUmVhZD17dGhpcy5tYXJrQXNSZWFkfVxyXG4gICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICApKX1cclxuICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICAgIHR5cGU9J2J1dHRvbidcclxuICAgICAgICAgICAgICBhcmlhLWxhYmVsPSdDbG9zZSdcclxuICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVIaWRlRHJhd2VyfVxyXG4gICAgICAgICAgICAgIGlkPSdjbG9zZSdcclxuICAgICAgICAgICAgICBzdHlsZT17e1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcclxuICAgICAgICAgICAgICAgIHRvcDogJzU2cHgnLFxyXG4gICAgICAgICAgICAgICAgcmlnaHQ6ICcxNnB4JyxcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IDAsXHJcbiAgICAgICAgICAgICAgICBib3JkZXI6IDAsXHJcbiAgICAgICAgICAgICAgICBvdXRsaW5lOiAnbm9uZScsXHJcbiAgICAgICAgICAgICAgICBjdXJzb3I6ICdwb2ludGVyJyxcclxuICAgICAgICAgICAgICAgIHpJbmRleDogMSxcclxuICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgICAgc3JjPXtjbG9zZV9pY29ufVxyXG4gICAgICAgICAgICAgICAgYWx0PScnXHJcbiAgICAgICAgICAgICAgICBzdHlsZT17eyB3aWR0aDogJzhweCcsIGhlaWdodDogJzhweCcgfX1cclxuICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICl9XHJcbiAgICAgIDwvRnJhZ21lbnQ+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuTm90aWZpY2F0aW9ucy5kZWZhdWx0UHJvcHMgPSB7XHJcbiAgZGlzcGxheURyYXdlcjogZmFsc2UsXHJcbiAgbGlzdE5vdGlmaWNhdGlvbnM6IFtdLFxyXG4gIGhhbmRsZURpc3BsYXlEcmF3ZXI6ICgpID0+IHt9LFxyXG4gIGhhbmRsZUhpZGVEcmF3ZXI6ICgpID0+IHt9LFxyXG59O1xyXG5cclxuTm90aWZpY2F0aW9ucy5wcm9wVHlwZXMgPSB7XHJcbiAgZGlzcGxheURyYXdlcjogUHJvcFR5cGVzLmJvb2wsXHJcbiAgbGlzdE5vdGlmaWNhdGlvbnM6IFByb3BUeXBlcy5hcnJheU9mKE5vdGlmaWNhdGlvbkl0ZW1TaGFwZSksXHJcbiAgaGFuZGxlRGlzcGxheURyYXdlcjogUHJvcFR5cGVzLmZ1bmMsXHJcbiAgaGFuZGxlSGlkZURyYXdlcjogUHJvcFR5cGVzLmZ1bmMsXHJcbn07XHJcblxyXG5jb25zdCBzY3JlZW5TaXplID0ge1xyXG4gIHNtYWxsOiAnQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogOTAwcHgpJyxcclxufTtcclxuXHJcbmNvbnN0IG9wYWNpdHlLZiA9IHtcclxuICBmcm9tOiB7XHJcbiAgICBvcGFjaXR5OiAwLjUsXHJcbiAgfSxcclxuXHJcbiAgdG86IHtcclxuICAgIG9wYWNpdHk6IDEsXHJcbiAgfSxcclxufTtcclxuXHJcbmNvbnN0IHRyYW5zbGF0ZVlrZiA9IHtcclxuICAnMCUnOiB7XHJcbiAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDApJyxcclxuICB9LFxyXG5cclxuICAnNTAlJzoge1xyXG4gICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlWSgtNXB4KScsXHJcbiAgfSxcclxuXHJcbiAgJzc1JSc6IHtcclxuICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZVkoNXB4KScsXHJcbiAgfSxcclxuXHJcbiAgJzEwMCUnOiB7XHJcbiAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGVZKDApJyxcclxuICB9LFxyXG59O1xyXG5cclxuY29uc3QgYm9yZGVyS2YgPSB7XHJcbiAgJzAlJzoge1xyXG4gICAgYm9yZGVyOiBgM3B4IGRhc2hlZCBjeWFuYCxcclxuICB9LFxyXG5cclxuICAnMTAwJSc6IHtcclxuICAgIGJvcmRlcjogYDNweCBkYXNoZWQgI2UwMzQ0YWAsXHJcbiAgfSxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBub3RpZmljYXRpb25zOiB7XHJcbiAgICBmb250U2l6ZTogJzIwcHgnLFxyXG4gICAgYm9yZGVyOiAndGhpbiBkb3R0ZWQgI2UwMzQ0YScsXHJcbiAgICBwYWRkaW5nOiAnNHB4IDE2cHgnLFxyXG4gICAgZmxvYXQ6ICdyaWdodCcsXHJcbiAgICBhbmltYXRpb25OYW1lOiBbYm9yZGVyS2ZdLFxyXG4gICAgYW5pbWF0aW9uRHVyYXRpb246ICcwLjhzJyxcclxuICAgIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxyXG4gICAgYW5pbWF0aW9uRmlsbE1vZGU6ICdmb3J3YXJkcycsXHJcbiAgICBbc2NyZWVuU2l6ZS5zbWFsbF06IHtcclxuICAgICAgd2lkdGg6ICc5MCUnLFxyXG4gICAgICBib3JkZXI6ICdub25lJyxcclxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxyXG4gICAgfSxcclxuICB9LFxyXG4gIG1lbnVJdGVtOiB7XHJcbiAgICB0ZXh0QWxpZ246ICdyaWdodCcsXHJcbiAgICBtYXJnaW5SaWdodDogJzE2cHgnLFxyXG4gICAgJzpob3Zlcic6IHtcclxuICAgICAgY3Vyc29yOiAncG9pbnRlcicsXHJcbiAgICAgIGFuaW1hdGlvbk5hbWU6IFtvcGFjaXR5S2YsIHRyYW5zbGF0ZVlrZl0sXHJcbiAgICAgIGFuaW1hdGlvbkR1cmF0aW9uOiAnMXMsIDAuNXMnLFxyXG4gICAgICBhbmltYXRpb25JdGVyYXRpb25Db3VudDogMyxcclxuICAgIH0sXHJcbiAgfSxcclxuICBzaG93T2ZmOiB7XHJcbiAgICBtYXJnaW5SaWdodDogJzhweCcsXHJcbiAgICBbc2NyZWVuU2l6ZS5zbWFsbF06IHtcclxuICAgICAgZGlzcGxheTogJ25vbmUnLFxyXG4gICAgfSxcclxuICB9LFxyXG5cclxuICBzaG93T246IHtcclxuICAgIG1hcmdpblJpZ2h0OiAnOHB4JyxcclxuICB9LFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IE5vdGlmaWNhdGlvbnM7XHJcbiIsImltcG9ydCBSZWFjdCwgeyBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcbmNvbnN0IENvdXJzZUxpc3RSb3cgPSAoeyBpc0hlYWRlciwgdGV4dEZpcnN0Q2VsbCwgdGV4dFNlY29uZENlbGwgfSkgPT4ge1xyXG4gIGNvbnN0IGJnQ29sb3IxID0geyBiYWNrZ3JvdW5kQ29sb3I6ICcjZjVmNWY1YWInIH07XHJcbiAgY29uc3QgYmdDb2xvcjIgPSB7IGJhY2tncm91bmRDb2xvcjogJyNkZWI1YjU0NScgfTtcclxuICBsZXQgYmdDb2xvciA9IHVuZGVmaW5lZDtcclxuICBsZXQgY29udGVudCA9IHVuZGVmaW5lZDtcclxuXHJcbiAgaWYgKGlzSGVhZGVyID09PSB0cnVlKSB7XHJcbiAgICBiZ0NvbG9yID0gYmdDb2xvcjI7XHJcbiAgICBpZiAodGV4dFNlY29uZENlbGwgPT09IG51bGwpIHtcclxuICAgICAgY29udGVudCA9IDx0aCBjb2xTcGFuPScyJz57dGV4dEZpcnN0Q2VsbH08L3RoPjtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnRlbnQgPSAoXHJcbiAgICAgICAgPEZyYWdtZW50PlxyXG4gICAgICAgICAgPHRoIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy50aCl9Pnt0ZXh0Rmlyc3RDZWxsfTwvdGg+XHJcbiAgICAgICAgICA8dGggY2xhc3NOYW1lPXtjc3Moc3R5bGVzLnRoKX0+e3RleHRTZWNvbmRDZWxsfTwvdGg+XHJcbiAgICAgICAgPC9GcmFnbWVudD5cclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcbiAgaWYgKGlzSGVhZGVyID09PSBmYWxzZSkge1xyXG4gICAgYmdDb2xvciA9IGJnQ29sb3IxO1xyXG4gICAgY29udGVudCA9IChcclxuICAgICAgPEZyYWdtZW50PlxyXG4gICAgICAgIDx0ZD57dGV4dEZpcnN0Q2VsbH08L3RkPlxyXG4gICAgICAgIDx0ZD57dGV4dFNlY29uZENlbGx9PC90ZD5cclxuICAgICAgPC9GcmFnbWVudD5cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gPHRyIHN0eWxlPXtiZ0NvbG9yfT57Y29udGVudH08L3RyPjtcclxufTtcclxuXHJcbkNvdXJzZUxpc3RSb3cuZGVmYXVsdFByb3BzID0ge1xyXG4gIGlzSGVhZGVyOiBmYWxzZSxcclxuICB0ZXh0U2Vjb25kQ2VsbDogbnVsbCxcclxufTtcclxuXHJcbkNvdXJzZUxpc3RSb3cucHJvcFR5cGVzID0ge1xyXG4gIGlzSGVhZGVyOiBQcm9wVHlwZXMuYm9vbCxcclxuICB0ZXh0Rmlyc3RDZWxsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXHJcbiAgdGV4dFNlY29uZENlbGw6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKSxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICB0aDoge1xyXG4gICAgdGV4dEFsaWduOiAnbGVmdCcsXHJcbiAgICBib3JkZXJUb3A6ICcxcHggc29saWQgZ3JheScsXHJcbiAgICBib3JkZXJCb3R0b206ICcxcHggc29saWQgZ3JheScsXHJcbiAgfSxcclxufSk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBDb3Vyc2VMaXN0Um93O1xyXG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5cclxuY29uc3QgQ291cnNlU2hhcGUgPSBQcm9wVHlwZXMuc2hhcGUoe1xyXG4gIGlkOiBQcm9wVHlwZXMubnVtYmVyLFxyXG4gIG5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgY3JlZGl0OiBQcm9wVHlwZXMubnVtYmVyLFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENvdXJzZVNoYXBlO1xyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgQ291cnNlTGlzdFJvdyBmcm9tICcuL0NvdXJzZUxpc3RSb3cnO1xyXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xyXG5pbXBvcnQgQ291cnNlU2hhcGUgZnJvbSAnLi9Db3Vyc2VTaGFwZSc7XHJcbmltcG9ydCB7IFN0eWxlU2hlZXQsIGNzcyB9IGZyb20gJ2FwaHJvZGl0ZSc7XHJcblxyXG5jb25zdCBDb3Vyc2VMaXN0ID0gKHsgbGlzdENvdXJzZXMgfSkgPT4ge1xyXG4gIHJldHVybiAoXHJcbiAgICA8dGFibGUgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmNvdXJzZUxpc3QpfT5cclxuICAgICAgPHRoZWFkPlxyXG4gICAgICAgIDxDb3Vyc2VMaXN0Um93IHRleHRGaXJzdENlbGw9J0F2YWlsYWJsZSBjb3Vyc2VzJyBpc0hlYWRlcj17dHJ1ZX0gLz5cclxuICAgICAgICA8Q291cnNlTGlzdFJvd1xyXG4gICAgICAgICAgdGV4dEZpcnN0Q2VsbD0nQ291cnNlIG5hbWUnXHJcbiAgICAgICAgICB0ZXh0U2Vjb25kQ2VsbD0nQ3JlZGl0J1xyXG4gICAgICAgICAgaXNIZWFkZXI9e3RydWV9XHJcbiAgICAgICAgLz5cclxuICAgICAgPC90aGVhZD5cclxuICAgICAgPHRib2R5PlxyXG4gICAgICAgIHtsaXN0Q291cnNlcy5sZW5ndGggPT09IDAgJiYgKFxyXG4gICAgICAgICAgPENvdXJzZUxpc3RSb3dcclxuICAgICAgICAgICAgdGV4dEZpcnN0Q2VsbD0nTm8gY291cnNlIGF2YWlsYWJsZSB5ZXQnXHJcbiAgICAgICAgICAgIGlzSGVhZGVyPXtmYWxzZX1cclxuICAgICAgICAgIC8+XHJcbiAgICAgICAgKX1cclxuXHJcbiAgICAgICAge2xpc3RDb3Vyc2VzLm1hcCgoY291cnNlKSA9PiAoXHJcbiAgICAgICAgICA8Q291cnNlTGlzdFJvd1xyXG4gICAgICAgICAgICBrZXk9e2NvdXJzZS5pZH1cclxuICAgICAgICAgICAgdGV4dEZpcnN0Q2VsbD17Y291cnNlLm5hbWV9XHJcbiAgICAgICAgICAgIHRleHRTZWNvbmRDZWxsPXtjb3Vyc2UuY3JlZGl0fVxyXG4gICAgICAgICAgICBpc0hlYWRlcj17ZmFsc2V9XHJcbiAgICAgICAgICAvPlxyXG4gICAgICAgICkpfVxyXG4gICAgICA8L3Rib2R5PlxyXG4gICAgPC90YWJsZT5cclxuICApO1xyXG59O1xyXG5cclxuQ291cnNlTGlzdC5kZWZhdWx0UHJvcHMgPSB7XHJcbiAgbGlzdENvdXJzZXM6IFtdLFxyXG59O1xyXG5cclxuQ291cnNlTGlzdC5wcm9wVHlwZXMgPSB7XHJcbiAgbGlzdENvdXJzZXM6IFByb3BUeXBlcy5hcnJheU9mKENvdXJzZVNoYXBlKSxcclxufTtcclxuXHJcbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcclxuICBjb3Vyc2VMaXN0OiB7XHJcbiAgICB3aWR0aDogJzk1JScsXHJcbiAgICBtYXJnaW46ICdhdXRvJyxcclxuICAgIGJvcmRlcjogJzFweCBzb2xpZCBncmF5JyxcclxuICAgIGJvcmRlckNvbGxhcHNlOiAnY29sbGFwc2UnLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQ291cnNlTGlzdDtcclxuIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcbmNsYXNzIEJvZHlTZWN0aW9uIGV4dGVuZHMgQ29tcG9uZW50IHtcclxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgc3VwZXIocHJvcHMpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCkge1xyXG4gICAgY29uc3QgeyBjaGlsZHJlbiwgdGl0bGUgfSA9IHRoaXMucHJvcHM7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5ib2R5U2VjdGlvbil9PlxyXG4gICAgICAgIDxoMiBjbGFzc05hbWU9e2NzcyhzdHlsZXMuaGVhZGluZyl9Pnt0aXRsZX08L2gyPlxyXG4gICAgICAgIHtjaGlsZHJlbn1cclxuICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuQm9keVNlY3Rpb24uZGVmYXVsdFByb3BzID0ge1xyXG4gIHRpdGxlOiAnJyxcclxufTtcclxuXHJcbkJvZHlTZWN0aW9uLnByb3BUeXBlcyA9IHtcclxuICB0aXRsZTogUHJvcFR5cGVzLnN0cmluZyxcclxufTtcclxuXHJcbmNvbnN0IHNjcmVlblNpemUgPSB7XHJcbiAgc21hbGw6ICdAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA5MDBweCknLFxyXG59O1xyXG5cclxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gIGJvZHlTZWN0aW9uOiB7XHJcbiAgICB3aWR0aDogJzEwMCUnLFxyXG4gICAgbWFyZ2luVG9wOiAnMTYwcHgnLFxyXG4gICAgZGlzcGxheTogJ2ZsZXgnLFxyXG4gICAgZmxleFdyYXA6ICd3cmFwJyxcclxuICAgIHBhZGRpbmc6ICczMnB4JyxcclxuICAgIFtzY3JlZW5TaXplLnNtYWxsXToge1xyXG4gICAgICBtYXJnaW46ICcyNDBweCAwIC0yNDBweCcsXHJcbiAgICAgIHBhZGRpbmc6ICcxNnB4JyxcclxuICAgIH0sXHJcbiAgfSxcclxuICBoZWFkaW5nOiB7XHJcbiAgICB3aWR0aDogJzEwMCUnLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm9keVNlY3Rpb247XHJcbiIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XHJcbmltcG9ydCBCb2R5U2VjdGlvbiBmcm9tICcuL0JvZHlTZWN0aW9uJztcclxuaW1wb3J0IHsgU3R5bGVTaGVldCwgY3NzIH0gZnJvbSAnYXBocm9kaXRlJztcclxuXHJcbmNsYXNzIEJvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbSBleHRlbmRzIENvbXBvbmVudCB7XHJcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgIHN1cGVyKHByb3BzKTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxkaXYgY2xhc3NOYW1lPXtjc3Moc3R5bGVzLmJvZHlTZWN0aW9uV2l0aE1hcmdpbil9PlxyXG4gICAgICAgIDxCb2R5U2VjdGlvbiB7Li4udGhpcy5wcm9wc30gLz5cclxuICAgICAgPC9kaXY+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tLmRlZmF1bHRQcm9wcyA9IHtcclxuICB0aXRsZTogJycsXHJcbn07XHJcblxyXG5Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20ucHJvcFR5cGVzID0ge1xyXG4gIHRpdGxlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG59O1xyXG5cclxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xyXG4gIGJveVNlY3Rpb25XaXRoTWFyZ2luOiB7XHJcbiAgICB3aWR0aDogJzEwMCUnLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tO1xyXG4iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBGcmFnbWVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBIZWFkZXIgZnJvbSAnLi4vSGVhZGVyL0hlYWRlcic7XG5pbXBvcnQgTG9naW4gZnJvbSAnLi4vTG9naW4vTG9naW4nO1xuaW1wb3J0IEZvb3RlciBmcm9tICcuLi9Gb290ZXIvRm9vdGVyJztcbmltcG9ydCBOb3RpZmljYXRpb25zIGZyb20gJy4uL05vdGlmaWNhdGlvbnMvTm90aWZpY2F0aW9ucyc7XG5pbXBvcnQgQ291cnNlTGlzdCBmcm9tICcuLi9Db3Vyc2VMaXN0L0NvdXJzZUxpc3QnO1xuaW1wb3J0IEJvZHlTZWN0aW9uIGZyb20gJy4uL0JvZHlTZWN0aW9uL0JvZHlTZWN0aW9uJztcbmltcG9ydCBCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gZnJvbSAnLi4vQm9keVNlY3Rpb24vQm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tJztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBnZXRMYXRlc3ROb3RpZmljYXRpb24gfSBmcm9tICcuLi91dGlscy91dGlscyc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBjc3MgfSBmcm9tICdhcGhyb2RpdGUnO1xuaW1wb3J0IHsgdXNlciwgbG9nT3V0LCBBcHBDb250ZXh0IH0gZnJvbSAnLi9BcHBDb250ZXh0JztcblxuY2xhc3MgQXBwIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5oYW5kbGVMb2dvdXQgPSB0aGlzLmhhbmRsZUxvZ291dC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlRGlzcGxheURyYXdlciA9IHRoaXMuaGFuZGxlRGlzcGxheURyYXdlci5iaW5kKHRoaXMpO1xuICAgIHRoaXMuaGFuZGxlSGlkZURyYXdlciA9IHRoaXMuaGFuZGxlSGlkZURyYXdlci5iaW5kKHRoaXMpO1xuICAgIHRoaXMubG9nSW4gPSB0aGlzLmxvZ0luLmJpbmQodGhpcyk7XG4gICAgdGhpcy5sb2dPdXQgPSB0aGlzLmxvZ091dC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuc3RhdGUgPSB7IGRpc3BsYXlEcmF3ZXI6IGZhbHNlLCB1c2VyLCBsb2dPdXQ6IHRoaXMubG9nT3V0IH07XG4gIH1cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLmhhbmRsZUxvZ291dCk7XG4gIH1cbiAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLmhhbmRsZUxvZ291dCk7XG4gIH1cbiAgaGFuZGxlTG9nb3V0KGUpIHtcbiAgICBpZiAoZS5jdHJsS2V5ICYmIGUua2V5ID09PSAnaCcpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGFsZXJ0KCdMb2dnaW5nIHlvdSBvdXQnKTtcbiAgICAgIHRoaXMucHJvcHMubG9nT3V0KCk7XG4gICAgfVxuICB9XG4gIGhhbmRsZURpc3BsYXlEcmF3ZXIoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGRpc3BsYXlEcmF3ZXI6IHRydWUgfSk7XG4gIH1cblxuICBoYW5kbGVIaWRlRHJhd2VyKCkge1xuICAgIHRoaXMuc2V0U3RhdGUoeyBkaXNwbGF5RHJhd2VyOiBmYWxzZSB9KTtcbiAgfVxuICBsb2dJbihlbWFpbCwgcGFzc3dvcmQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgIHVzZXI6IHtcbiAgICAgICAgZW1haWwsXG4gICAgICAgIHBhc3N3b3JkLFxuICAgICAgICBpc0xvZ2dlZEluOiB0cnVlLFxuICAgICAgfSxcbiAgICB9KTtcbiAgfVxuICBsb2dPdXQoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IHVzZXIgfSk7XG4gIH1cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IGxpc3RDb3Vyc2VzID0gW1xuICAgICAgeyBpZDogMSwgbmFtZTogJ0VTNicsIGNyZWRpdDogNjAgfSxcbiAgICAgIHsgaWQ6IDIsIG5hbWU6ICdXZWJwYWNrJywgY3JlZGl0OiAyMCB9LFxuICAgICAgeyBpZDogMywgbmFtZTogJ1JlYWN0JywgY3JlZGl0OiA0MCB9LFxuICAgIF07XG4gICAgY29uc3QgbGlzdE5vdGlmaWNhdGlvbnMgPSBbXG4gICAgICB7IGlkOiAxLCB0eXBlOiAnZGVmYXVsdCcsIHZhbHVlOiAnTmV3IGNvdXJzZSBhdmFpbGFibGUnIH0sXG4gICAgICB7IGlkOiAyLCB0eXBlOiAndXJnZW50JywgdmFsdWU6ICdOZXcgcmVzdW1lIGF2YWlsYWJsZScgfSxcbiAgICAgIHsgaWQ6IDMsIHR5cGU6ICd1cmdlbnQnLCBodG1sOiB7IF9faHRtbDogZ2V0TGF0ZXN0Tm90aWZpY2F0aW9uKCkgfSB9LFxuICAgIF07XG4gICAgY29uc3Qge1xuICAgICAgdXNlcixcbiAgICAgIHVzZXI6IHsgaXNMb2dnZWRJbiB9LFxuICAgICAgbG9nT3V0LFxuICAgICAgZGlzcGxheURyYXdlcixcbiAgICB9ID0gdGhpcy5zdGF0ZTtcbiAgICBjb25zdCB2YWx1ZSA9IHsgdXNlciwgbG9nT3V0IH07XG4gICAgcmV0dXJuIChcbiAgICAgIDxGcmFnbWVudD5cbiAgICAgICAgPE5vdGlmaWNhdGlvbnNcbiAgICAgICAgICBsaXN0Tm90aWZpY2F0aW9ucz17bGlzdE5vdGlmaWNhdGlvbnN9XG4gICAgICAgICAgZGlzcGxheURyYXdlcj17ZGlzcGxheURyYXdlcn1cbiAgICAgICAgICBoYW5kbGVEaXNwbGF5RHJhd2VyPXt0aGlzLmhhbmRsZURpc3BsYXlEcmF3ZXJ9XG4gICAgICAgICAgaGFuZGxlSGlkZURyYXdlcj17dGhpcy5oYW5kbGVIaWRlRHJhd2VyfVxuICAgICAgICAvPlxuICAgICAgICA8SGVhZGVyIC8+XG4gICAgICAgIHtpc0xvZ2dlZEluID8gKFxuICAgICAgICAgIDxCb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20gdGl0bGU9J0NvdXJzZSBsaXN0Jz5cbiAgICAgICAgICAgIDxDb3Vyc2VMaXN0IGxpc3RDb3Vyc2VzPXtsaXN0Q291cnNlc30gLz5cbiAgICAgICAgICA8L0JvZHlTZWN0aW9uV2l0aE1hcmdpbkJvdHRvbT5cbiAgICAgICAgKSA6IChcbiAgICAgICAgICA8Qm9keVNlY3Rpb25XaXRoTWFyZ2luQm90dG9tIHRpdGxlPSdMb2cgaW4gdG8gY29udGludWUnPlxuICAgICAgICAgICAgPExvZ2luIC8+XG4gICAgICAgICAgPC9Cb2R5U2VjdGlvbldpdGhNYXJnaW5Cb3R0b20+XG4gICAgICAgICl9XG4gICAgICAgIDxCb2R5U2VjdGlvbiB0aXRsZT0nTmV3cyBmcm9tIHRoZSBTY2hvb2wnPlxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5wKX0+XG4gICAgICAgICAgICBMb3JlbSBpcHN1bSBkb2xvciBzaXQgYW1ldCBjb25zZWN0ZXR1ciBhZGlwaXNpY2luZyBlbGl0LiBJdXN0byxcbiAgICAgICAgICAgIHVsbGFtPyBRdWlzcXVhbSBlb3MgdGVtcG9yaWJ1cywgdm9sdXB0YXRlIGVycm9yLCBzdW50IGNvbnNlY3RldHVyXG4gICAgICAgICAgICBkdWNpbXVzIGVhcXVlIGRvbG9ydW0gc2l0IGV4Y2VwdHVyaSBkb2xvcmlidXMgb2ZmaWNpaXMgcmVwcmVoZW5kZXJpdFxuICAgICAgICAgICAgZGlzdGluY3RpbyBkaWduaXNzaW1vcyBhZGlwaXNjaSBhIGFzcGVybmF0dXIuXG4gICAgICAgICAgPC9wPlxuICAgICAgICA8L0JvZHlTZWN0aW9uPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y3NzKHN0eWxlcy5mb290ZXIpfT5cbiAgICAgICAgICA8Rm9vdGVyIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9GcmFnbWVudD5cbiAgICApO1xuICB9XG59XG5cbkFwcC5kZWZhdWx0UHJvcHMgPSB7fTtcblxuQXBwLnByb3BUeXBlcyA9IHt9O1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGZvb3Rlcjoge1xuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgcG9zaXRpb246ICdmaXhlZCcsXG4gICAgYm90dG9tOiAwLFxuICAgIHRleHRBbGlnbjogJ2NlbnRlcicsXG4gICAgZm9udFN0eWxlOiAnaXRhbGljJyxcbiAgICBib3JkZXJUb3A6ICd0aGljayBzb2xpZCAjZTAzNDRhJyxcbiAgfSxcbiAgcDoge1xuICAgIG1hcmdpblRvcDogMCxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgQXBwIGZyb20gJy4vQXBwL0FwcCc7XG5cblJlYWN0RE9NLnJlbmRlcihcbiAgPFJlYWN0LlN0cmljdE1vZGU+XG4gICAgPEFwcCAvPlxuICA8L1JlYWN0LlN0cmljdE1vZGU+LFxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpXG4pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==